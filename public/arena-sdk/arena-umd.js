(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ArenaAppStoreSdk = {}));
})(this, (function (exports) { 'use strict';

  var Vp$1 = Object.defineProperty;
  var Kp$1 = (t, e, r) => e in t ? Vp$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r;
  var Si$2 = (t, e, r) => Kp$1(t, typeof e != "symbol" ? e + "" : e, r);
  var Tt$4 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
  function Aa$1(t) {
    return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
  }
  function El$1(t) {
    if (t.__esModule) return t;
    var e = t.default;
    if (typeof e == "function") {
      var r = function i() {
        return this instanceof i ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
      };
      r.prototype = e.prototype;
    } else r = {};
    return Object.defineProperty(r, "__esModule", { value: true }), Object.keys(t).forEach(function(i) {
      var s = Object.getOwnPropertyDescriptor(t, i);
      Object.defineProperty(r, i, s.get ? s : {
        enumerable: true,
        get: function() {
          return t[i];
        }
      });
    }), r;
  }
  var Oa$1 = { exports: {} }, pi$2 = typeof Reflect == "object" ? Reflect : null, vc$1 = pi$2 && typeof pi$2.apply == "function" ? pi$2.apply : function(e, r, i) {
    return Function.prototype.apply.call(e, r, i);
  }, Ys$1;
  pi$2 && typeof pi$2.ownKeys == "function" ? Ys$1 = pi$2.ownKeys : Object.getOwnPropertySymbols ? Ys$1 = function(e) {
    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
  } : Ys$1 = function(e) {
    return Object.getOwnPropertyNames(e);
  };
  function Wp$1(t) {
    console && console.warn && console.warn(t);
  }
  var _l$1 = Number.isNaN || function(e) {
    return e !== e;
  };
  function ne$5() {
    ne$5.init.call(this);
  }
  Oa$1.exports = ne$5;
  Oa$1.exports.once = Zp$1;
  ne$5.EventEmitter = ne$5;
  ne$5.prototype._events = void 0;
  ne$5.prototype._eventsCount = 0;
  ne$5.prototype._maxListeners = void 0;
  var Ec$1 = 10;
  function En$2(t) {
    if (typeof t != "function")
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
  }
  Object.defineProperty(ne$5, "defaultMaxListeners", {
    enumerable: true,
    get: function() {
      return Ec$1;
    },
    set: function(t) {
      if (typeof t != "number" || t < 0 || _l$1(t))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
      Ec$1 = t;
    }
  });
  ne$5.init = function() {
    (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
  };
  ne$5.prototype.setMaxListeners = function(e) {
    if (typeof e != "number" || e < 0 || _l$1(e))
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
    return this._maxListeners = e, this;
  };
  function Il$1(t) {
    return t._maxListeners === void 0 ? ne$5.defaultMaxListeners : t._maxListeners;
  }
  ne$5.prototype.getMaxListeners = function() {
    return Il$1(this);
  };
  ne$5.prototype.emit = function(e) {
    for (var r = [], i = 1; i < arguments.length; i++) r.push(arguments[i]);
    var s = e === "error", n = this._events;
    if (n !== void 0)
      s = s && n.error === void 0;
    else if (!s)
      return false;
    if (s) {
      var o;
      if (r.length > 0 && (o = r[0]), o instanceof Error)
        throw o;
      var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
      throw a.context = o, a;
    }
    var c = n[e];
    if (c === void 0)
      return false;
    if (typeof c == "function")
      vc$1(c, this, r);
    else
      for (var h = c.length, u = Al$1(c, h), i = 0; i < h; ++i)
        vc$1(u[i], this, r);
    return true;
  };
  function xl$1(t, e, r, i) {
    var s, n, o;
    if (En$2(r), n = t._events, n === void 0 ? (n = t._events = /* @__PURE__ */ Object.create(null), t._eventsCount = 0) : (n.newListener !== void 0 && (t.emit(
      "newListener",
      e,
      r.listener ? r.listener : r
    ), n = t._events), o = n[e]), o === void 0)
      o = n[e] = r, ++t._eventsCount;
    else if (typeof o == "function" ? o = n[e] = i ? [r, o] : [o, r] : i ? o.unshift(r) : o.push(r), s = Il$1(t), s > 0 && o.length > s && !o.warned) {
      o.warned = true;
      var a = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
      a.name = "MaxListenersExceededWarning", a.emitter = t, a.type = e, a.count = o.length, Wp$1(a);
    }
    return t;
  }
  ne$5.prototype.addListener = function(e, r) {
    return xl$1(this, e, r, false);
  };
  ne$5.prototype.on = ne$5.prototype.addListener;
  ne$5.prototype.prependListener = function(e, r) {
    return xl$1(this, e, r, true);
  };
  function Gp$1() {
    if (!this.fired)
      return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
  }
  function $l$1(t, e, r) {
    var i = { fired: false, wrapFn: void 0, target: t, type: e, listener: r }, s = Gp$1.bind(i);
    return s.listener = r, i.wrapFn = s, s;
  }
  ne$5.prototype.once = function(e, r) {
    return En$2(r), this.on(e, $l$1(this, e, r)), this;
  };
  ne$5.prototype.prependOnceListener = function(e, r) {
    return En$2(r), this.prependListener(e, $l$1(this, e, r)), this;
  };
  ne$5.prototype.removeListener = function(e, r) {
    var i, s, n, o, a;
    if (En$2(r), s = this._events, s === void 0)
      return this;
    if (i = s[e], i === void 0)
      return this;
    if (i === r || i.listener === r)
      --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete s[e], s.removeListener && this.emit("removeListener", e, i.listener || r));
    else if (typeof i != "function") {
      for (n = -1, o = i.length - 1; o >= 0; o--)
        if (i[o] === r || i[o].listener === r) {
          a = i[o].listener, n = o;
          break;
        }
      if (n < 0)
        return this;
      n === 0 ? i.shift() : Yp$1(i, n), i.length === 1 && (s[e] = i[0]), s.removeListener !== void 0 && this.emit("removeListener", e, a || r);
    }
    return this;
  };
  ne$5.prototype.off = ne$5.prototype.removeListener;
  ne$5.prototype.removeAllListeners = function(e) {
    var r, i, s;
    if (i = this._events, i === void 0)
      return this;
    if (i.removeListener === void 0)
      return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : i[e] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete i[e]), this;
    if (arguments.length === 0) {
      var n = Object.keys(i), o;
      for (s = 0; s < n.length; ++s)
        o = n[s], o !== "removeListener" && this.removeAllListeners(o);
      return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
    }
    if (r = i[e], typeof r == "function")
      this.removeListener(e, r);
    else if (r !== void 0)
      for (s = r.length - 1; s >= 0; s--)
        this.removeListener(e, r[s]);
    return this;
  };
  function Sl$1(t, e, r) {
    var i = t._events;
    if (i === void 0)
      return [];
    var s = i[e];
    return s === void 0 ? [] : typeof s == "function" ? r ? [s.listener || s] : [s] : r ? Jp$1(s) : Al$1(s, s.length);
  }
  ne$5.prototype.listeners = function(e) {
    return Sl$1(this, e, true);
  };
  ne$5.prototype.rawListeners = function(e) {
    return Sl$1(this, e, false);
  };
  ne$5.listenerCount = function(t, e) {
    return typeof t.listenerCount == "function" ? t.listenerCount(e) : Dl$1.call(t, e);
  };
  ne$5.prototype.listenerCount = Dl$1;
  function Dl$1(t) {
    var e = this._events;
    if (e !== void 0) {
      var r = e[t];
      if (typeof r == "function")
        return 1;
      if (r !== void 0)
        return r.length;
    }
    return 0;
  }
  ne$5.prototype.eventNames = function() {
    return this._eventsCount > 0 ? Ys$1(this._events) : [];
  };
  function Al$1(t, e) {
    for (var r = new Array(e), i = 0; i < e; ++i)
      r[i] = t[i];
    return r;
  }
  function Yp$1(t, e) {
    for (; e + 1 < t.length; e++)
      t[e] = t[e + 1];
    t.pop();
  }
  function Jp$1(t) {
    for (var e = new Array(t.length), r = 0; r < e.length; ++r)
      e[r] = t[r].listener || t[r];
    return e;
  }
  function Zp$1(t, e) {
    return new Promise(function(r, i) {
      function s(o) {
        t.removeListener(e, n), i(o);
      }
      function n() {
        typeof t.removeListener == "function" && t.removeListener("error", s), r([].slice.call(arguments));
      }
      Ol$1(t, e, n, { once: true }), e !== "error" && Qp(t, s, { once: true });
    });
  }
  function Qp(t, e, r) {
    typeof t.on == "function" && Ol$1(t, "error", e, r);
  }
  function Ol$1(t, e, r, i) {
    if (typeof t.on == "function")
      i.once ? t.once(e, r) : t.on(e, r);
    else if (typeof t.addEventListener == "function")
      t.addEventListener(e, function s(n) {
        i.once && t.removeEventListener(e, s), r(n);
      });
    else
      throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t);
  }
  var st$3 = Oa$1.exports;
  const Pa$1 = /* @__PURE__ */ Aa$1(st$3);
  var _c$1 = function(t, e, r) {
    for (var i = 0, s = e.length, n; i < s; i++)
      (n || !(i in e)) && (n || (n = Array.prototype.slice.call(e, 0, i)), n[i] = e[i]);
    return t.concat(n || Array.prototype.slice.call(e));
  }, Xp$1 = (
    /** @class */
    /* @__PURE__ */ function() {
      function t(e, r, i) {
        this.name = e, this.version = r, this.os = i, this.type = "browser";
      }
      return t;
    }()
  ), eg$1 = (
    /** @class */
    /* @__PURE__ */ function() {
      function t(e) {
        this.version = e, this.type = "node", this.name = "node", this.os = process.platform;
      }
      return t;
    }()
  ), tg$1 = (
    /** @class */
    /* @__PURE__ */ function() {
      function t(e, r, i, s) {
        this.name = e, this.version = r, this.os = i, this.bot = s, this.type = "bot-device";
      }
      return t;
    }()
  ), rg$1 = (
    /** @class */
    /* @__PURE__ */ function() {
      function t() {
        this.type = "bot", this.bot = true, this.name = "bot", this.version = null, this.os = null;
      }
      return t;
    }()
  ), ig$1 = (
    /** @class */
    /* @__PURE__ */ function() {
      function t() {
        this.type = "react-native", this.name = "react-native", this.version = null, this.os = null;
      }
      return t;
    }()
  ), sg$1 = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/, ng$1 = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/, Ic$1 = 3, og$1 = [
    ["aol", /AOLShield\/([0-9\._]+)/],
    ["edge", /Edge\/([0-9\._]+)/],
    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
    ["silk", /\bSilk\/([0-9._-]+)\b/],
    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
    [
      "chromium-webview",
      /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
    ],
    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
    ["fxios", /FxiOS\/([0-9\.]+)/],
    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ["ie", /MSIE\s(7\.0)/],
    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ["android", /Android\s([0-9\.]+)/],
    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ["safari", /Version\/([0-9\._]+).*Safari/],
    ["facebook", /FB[AS]V\/([0-9\.]+)/],
    ["instagram", /Instagram\s([0-9\.]+)/],
    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ["curl", /^curl\/([0-9\.]+)$/],
    ["searchbot", sg$1]
  ], xc$1 = [
    ["iOS", /iP(hone|od|ad)/],
    ["Android OS", /Android/],
    ["BlackBerry OS", /BlackBerry|BB10/],
    ["Windows Mobile", /IEMobile/],
    ["Amazon OS", /Kindle/],
    ["Windows 3.11", /Win16/],
    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
    ["Windows 98", /(Windows 98)|(Win98)/],
    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
    ["Windows Server 2003", /(Windows NT 5.2)/],
    ["Windows Vista", /(Windows NT 6.0)/],
    ["Windows 7", /(Windows NT 6.1)/],
    ["Windows 8", /(Windows NT 6.2)/],
    ["Windows 8.1", /(Windows NT 6.3)/],
    ["Windows 10", /(Windows NT 10.0)/],
    ["Windows ME", /Windows ME/],
    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
    ["Open BSD", /OpenBSD/],
    ["Sun OS", /SunOS/],
    ["Chrome OS", /CrOS/],
    ["Linux", /(Linux)|(X11)/],
    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
    ["QNX", /QNX/],
    ["BeOS", /BeOS/],
    ["OS/2", /OS\/2/]
  ];
  function ag$1(t) {
    return typeof document > "u" && typeof navigator < "u" && navigator.product === "ReactNative" ? new ig$1() : typeof navigator < "u" ? hg$1(navigator.userAgent) : lg$1();
  }
  function cg$1(t) {
    return t !== "" && og$1.reduce(function(e, r) {
      var i = r[0], s = r[1];
      if (e)
        return e;
      var n = s.exec(t);
      return !!n && [i, n];
    }, false);
  }
  function hg$1(t) {
    var e = cg$1(t);
    if (!e)
      return null;
    var r = e[0], i = e[1];
    if (r === "searchbot")
      return new rg$1();
    var s = i[1] && i[1].split(".").join("_").split("_").slice(0, 3);
    s ? s.length < Ic$1 && (s = _c$1(_c$1([], s, true), fg$1(Ic$1 - s.length))) : s = [];
    var n = s.join("."), o = ug$1(t), a = ng$1.exec(t);
    return a && a[1] ? new tg$1(r, n, o, a[1]) : new Xp$1(r, n, o);
  }
  function ug$1(t) {
    for (var e = 0, r = xc$1.length; e < r; e++) {
      var i = xc$1[e], s = i[0], n = i[1], o = n.exec(t);
      if (o)
        return s;
    }
    return null;
  }
  function lg$1() {
    var t = typeof process < "u" && process.version;
    return t ? new eg$1(process.version.slice(1)) : null;
  }
  function fg$1(t) {
    for (var e = [], r = 0; r < t; r++)
      e.push("0");
    return e;
  }
  var L$3 = {};
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var Po$1 = function(t, e) {
    return Po$1 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var s in i) i.hasOwnProperty(s) && (r[s] = i[s]);
    }, Po$1(t, e);
  };
  function dg$1(t, e) {
    Po$1(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  }
  var Co$2 = function() {
    return Co$2 = Object.assign || function(e) {
      for (var r, i = 1, s = arguments.length; i < s; i++) {
        r = arguments[i];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
      return e;
    }, Co$2.apply(this, arguments);
  };
  function pg$1(t, e) {
    var r = {};
    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
      for (var s = 0, i = Object.getOwnPropertySymbols(t); s < i.length; s++)
        e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[s]) && (r[i[s]] = t[i[s]]);
    return r;
  }
  function gg$1(t, e, r, i) {
    var s = arguments.length, n = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, r) : i, o;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") n = Reflect.decorate(t, e, r, i);
    else for (var a = t.length - 1; a >= 0; a--) (o = t[a]) && (n = (s < 3 ? o(n) : s > 3 ? o(e, r, n) : o(e, r)) || n);
    return s > 3 && n && Object.defineProperty(e, r, n), n;
  }
  function yg$1(t, e) {
    return function(r, i) {
      e(r, i, t);
    };
  }
  function wg$1(t, e) {
    if (typeof Reflect == "object" && typeof Reflect.metadata == "function") return Reflect.metadata(t, e);
  }
  function mg$1(t, e, r, i) {
    function s(n) {
      return n instanceof r ? n : new r(function(o) {
        o(n);
      });
    }
    return new (r || (r = Promise))(function(n, o) {
      function a(u) {
        try {
          h(i.next(u));
        } catch (l) {
          o(l);
        }
      }
      function c(u) {
        try {
          h(i.throw(u));
        } catch (l) {
          o(l);
        }
      }
      function h(u) {
        u.done ? n(u.value) : s(u.value).then(a, c);
      }
      h((i = i.apply(t, e || [])).next());
    });
  }
  function bg$1(t, e) {
    var r = { label: 0, sent: function() {
      if (n[0] & 1) throw n[1];
      return n[1];
    }, trys: [], ops: [] }, i, s, n, o;
    return o = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
      return this;
    }), o;
    function a(h) {
      return function(u) {
        return c([h, u]);
      };
    }
    function c(h) {
      if (i) throw new TypeError("Generator is already executing.");
      for (; r; ) try {
        if (i = 1, s && (n = h[0] & 2 ? s.return : h[0] ? s.throw || ((n = s.return) && n.call(s), 0) : s.next) && !(n = n.call(s, h[1])).done) return n;
        switch (s = 0, n && (h = [h[0] & 2, n.value]), h[0]) {
          case 0:
          case 1:
            n = h;
            break;
          case 4:
            return r.label++, { value: h[1], done: !1 };
          case 5:
            r.label++, s = h[1], h = [0];
            continue;
          case 7:
            h = r.ops.pop(), r.trys.pop();
            continue;
          default:
            if (n = r.trys, !(n = n.length > 0 && n[n.length - 1]) && (h[0] === 6 || h[0] === 2)) {
              r = 0;
              continue;
            }
            if (h[0] === 3 && (!n || h[1] > n[0] && h[1] < n[3])) {
              r.label = h[1];
              break;
            }
            if (h[0] === 6 && r.label < n[1]) {
              r.label = n[1], n = h;
              break;
            }
            if (n && r.label < n[2]) {
              r.label = n[2], r.ops.push(h);
              break;
            }
            n[2] && r.ops.pop(), r.trys.pop();
            continue;
        }
        h = e.call(t, r);
      } catch (u) {
        h = [6, u], s = 0;
      } finally {
        i = n = 0;
      }
      if (h[0] & 5) throw h[1];
      return { value: h[0] ? h[1] : void 0, done: true };
    }
  }
  function vg$1(t, e, r, i) {
    i === void 0 && (i = r), t[i] = e[r];
  }
  function Eg$1(t, e) {
    for (var r in t) r !== "default" && !e.hasOwnProperty(r) && (e[r] = t[r]);
  }
  function To$2(t) {
    var e = typeof Symbol == "function" && Symbol.iterator, r = e && t[e], i = 0;
    if (r) return r.call(t);
    if (t && typeof t.length == "number") return {
      next: function() {
        return t && i >= t.length && (t = void 0), { value: t && t[i++], done: !t };
      }
    };
    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function Pl$1(t, e) {
    var r = typeof Symbol == "function" && t[Symbol.iterator];
    if (!r) return t;
    var i = r.call(t), s, n = [], o;
    try {
      for (; (e === void 0 || e-- > 0) && !(s = i.next()).done; ) n.push(s.value);
    } catch (a) {
      o = { error: a };
    } finally {
      try {
        s && !s.done && (r = i.return) && r.call(i);
      } finally {
        if (o) throw o.error;
      }
    }
    return n;
  }
  function _g$1() {
    for (var t = [], e = 0; e < arguments.length; e++)
      t = t.concat(Pl$1(arguments[e]));
    return t;
  }
  function Ig$1() {
    for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
    for (var i = Array(t), s = 0, e = 0; e < r; e++)
      for (var n = arguments[e], o = 0, a = n.length; o < a; o++, s++)
        i[s] = n[o];
    return i;
  }
  function ss$1(t) {
    return this instanceof ss$1 ? (this.v = t, this) : new ss$1(t);
  }
  function xg$1(t, e, r) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var i = r.apply(t, e || []), s, n = [];
    return s = {}, o("next"), o("throw"), o("return"), s[Symbol.asyncIterator] = function() {
      return this;
    }, s;
    function o(f) {
      i[f] && (s[f] = function(p) {
        return new Promise(function(d, g) {
          n.push([f, p, d, g]) > 1 || a(f, p);
        });
      });
    }
    function a(f, p) {
      try {
        c(i[f](p));
      } catch (d) {
        l(n[0][3], d);
      }
    }
    function c(f) {
      f.value instanceof ss$1 ? Promise.resolve(f.value.v).then(h, u) : l(n[0][2], f);
    }
    function h(f) {
      a("next", f);
    }
    function u(f) {
      a("throw", f);
    }
    function l(f, p) {
      f(p), n.shift(), n.length && a(n[0][0], n[0][1]);
    }
  }
  function $g$1(t) {
    var e, r;
    return e = {}, i("next"), i("throw", function(s) {
      throw s;
    }), i("return"), e[Symbol.iterator] = function() {
      return this;
    }, e;
    function i(s, n) {
      e[s] = t[s] ? function(o) {
        return (r = !r) ? { value: ss$1(t[s](o)), done: s === "return" } : n ? n(o) : o;
      } : n;
    }
  }
  function Sg$1(t) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var e = t[Symbol.asyncIterator], r;
    return e ? e.call(t) : (t = typeof To$2 == "function" ? To$2(t) : t[Symbol.iterator](), r = {}, i("next"), i("throw"), i("return"), r[Symbol.asyncIterator] = function() {
      return this;
    }, r);
    function i(n) {
      r[n] = t[n] && function(o) {
        return new Promise(function(a, c) {
          o = t[n](o), s(a, c, o.done, o.value);
        });
      };
    }
    function s(n, o, a, c) {
      Promise.resolve(c).then(function(h) {
        n({ value: h, done: a });
      }, o);
    }
  }
  function Dg$1(t, e) {
    return Object.defineProperty ? Object.defineProperty(t, "raw", { value: e }) : t.raw = e, t;
  }
  function Ag$1(t) {
    if (t && t.__esModule) return t;
    var e = {};
    if (t != null) for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    return e.default = t, e;
  }
  function Og$1(t) {
    return t && t.__esModule ? t : { default: t };
  }
  function Pg$1(t, e) {
    if (!e.has(t))
      throw new TypeError("attempted to get private field on non-instance");
    return e.get(t);
  }
  function Cg$1(t, e, r) {
    if (!e.has(t))
      throw new TypeError("attempted to set private field on non-instance");
    return e.set(t, r), r;
  }
  const Tg$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    get __assign() {
      return Co$2;
    },
    __asyncDelegator: $g$1,
    __asyncGenerator: xg$1,
    __asyncValues: Sg$1,
    __await: ss$1,
    __awaiter: mg$1,
    __classPrivateFieldGet: Pg$1,
    __classPrivateFieldSet: Cg$1,
    __createBinding: vg$1,
    __decorate: gg$1,
    __exportStar: Eg$1,
    __extends: dg$1,
    __generator: bg$1,
    __importDefault: Og$1,
    __importStar: Ag$1,
    __makeTemplateObject: Dg$1,
    __metadata: wg$1,
    __param: yg$1,
    __read: Pl$1,
    __rest: pg$1,
    __spread: _g$1,
    __spreadArrays: Ig$1,
    __values: To$2
  }, Symbol.toStringTag, { value: "Module" })), _n$1 = /* @__PURE__ */ El$1(Tg$1);
  var Hn$2 = {}, Di$2 = {}, $c$1;
  function Rg$1() {
    if ($c$1) return Di$2;
    $c$1 = 1, Object.defineProperty(Di$2, "__esModule", { value: true }), Di$2.delay = void 0;
    function t(e) {
      return new Promise((r) => {
        setTimeout(() => {
          r(true);
        }, e);
      });
    }
    return Di$2.delay = t, Di$2;
  }
  var mr$1 = {}, Vn$2 = {}, br$1 = {}, Sc$1;
  function Bg$1() {
    return Sc$1 || (Sc$1 = 1, Object.defineProperty(br$1, "__esModule", { value: true }), br$1.ONE_THOUSAND = br$1.ONE_HUNDRED = void 0, br$1.ONE_HUNDRED = 100, br$1.ONE_THOUSAND = 1e3), br$1;
  }
  var Kn$2 = {}, Dc$1;
  function Fg$1() {
    return Dc$1 || (Dc$1 = 1, function(t) {
      Object.defineProperty(t, "__esModule", { value: true }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = t.ONE_MINUTE * 5, t.TEN_MINUTES = t.ONE_MINUTE * 10, t.THIRTY_MINUTES = t.ONE_MINUTE * 30, t.SIXTY_MINUTES = t.ONE_MINUTE * 60, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = t.ONE_HOUR * 3, t.SIX_HOURS = t.ONE_HOUR * 6, t.TWELVE_HOURS = t.ONE_HOUR * 12, t.TWENTY_FOUR_HOURS = t.ONE_HOUR * 24, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = t.ONE_DAY * 3, t.FIVE_DAYS = t.ONE_DAY * 5, t.SEVEN_DAYS = t.ONE_DAY * 7, t.THIRTY_DAYS = t.ONE_DAY * 30, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = t.ONE_WEEK * 2, t.THREE_WEEKS = t.ONE_WEEK * 3, t.FOUR_WEEKS = t.ONE_WEEK * 4, t.ONE_YEAR = t.ONE_DAY * 365;
    }(Kn$2)), Kn$2;
  }
  var Ac$1;
  function Cl$1() {
    return Ac$1 || (Ac$1 = 1, function(t) {
      Object.defineProperty(t, "__esModule", { value: true });
      const e = _n$1;
      e.__exportStar(Bg$1(), t), e.__exportStar(Fg$1(), t);
    }(Vn$2)), Vn$2;
  }
  var Oc$1;
  function Ng$1() {
    if (Oc$1) return mr$1;
    Oc$1 = 1, Object.defineProperty(mr$1, "__esModule", { value: true }), mr$1.fromMiliseconds = mr$1.toMiliseconds = void 0;
    const t = Cl$1();
    function e(i) {
      return i * t.ONE_THOUSAND;
    }
    mr$1.toMiliseconds = e;
    function r(i) {
      return Math.floor(i / t.ONE_THOUSAND);
    }
    return mr$1.fromMiliseconds = r, mr$1;
  }
  var Pc$1;
  function Ug$1() {
    return Pc$1 || (Pc$1 = 1, function(t) {
      Object.defineProperty(t, "__esModule", { value: true });
      const e = _n$1;
      e.__exportStar(Rg$1(), t), e.__exportStar(Ng$1(), t);
    }(Hn$2)), Hn$2;
  }
  var Hr$1 = {}, Cc$1;
  function kg$1() {
    if (Cc$1) return Hr$1;
    Cc$1 = 1, Object.defineProperty(Hr$1, "__esModule", { value: true }), Hr$1.Watch = void 0;
    class t {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(r) {
        if (this.timestamps.has(r))
          throw new Error(`Watch already started for label: ${r}`);
        this.timestamps.set(r, { started: Date.now() });
      }
      stop(r) {
        const i = this.get(r);
        if (typeof i.elapsed < "u")
          throw new Error(`Watch already stopped for label: ${r}`);
        const s = Date.now() - i.started;
        this.timestamps.set(r, { started: i.started, elapsed: s });
      }
      get(r) {
        const i = this.timestamps.get(r);
        if (typeof i > "u")
          throw new Error(`No timestamp found for label: ${r}`);
        return i;
      }
      elapsed(r) {
        const i = this.get(r);
        return i.elapsed || Date.now() - i.started;
      }
    }
    return Hr$1.Watch = t, Hr$1.default = t, Hr$1;
  }
  var Wn$2 = {}, Ai$2 = {}, Tc$1;
  function Lg$1() {
    if (Tc$1) return Ai$2;
    Tc$1 = 1, Object.defineProperty(Ai$2, "__esModule", { value: true }), Ai$2.IWatch = void 0;
    class t {
    }
    return Ai$2.IWatch = t, Ai$2;
  }
  var Rc$1;
  function jg$1() {
    return Rc$1 || (Rc$1 = 1, function(t) {
      Object.defineProperty(t, "__esModule", { value: true }), _n$1.__exportStar(Lg$1(), t);
    }(Wn$2)), Wn$2;
  }
  (function(t) {
    Object.defineProperty(t, "__esModule", { value: true });
    const e = _n$1;
    e.__exportStar(Ug$1(), t), e.__exportStar(kg$1(), t), e.__exportStar(jg$1(), t), e.__exportStar(Cl$1(), t);
  })(L$3);
  var ce$4 = {};
  Object.defineProperty(ce$4, "__esModule", { value: true });
  ce$4.getLocalStorage = ce$4.getLocalStorageOrThrow = ce$4.getCrypto = ce$4.getCryptoOrThrow = Tl$1 = ce$4.getLocation = ce$4.getLocationOrThrow = Ca$1 = ce$4.getNavigator = ce$4.getNavigatorOrThrow = Tr$1 = ce$4.getDocument = ce$4.getDocumentOrThrow = ce$4.getFromWindowOrThrow = ce$4.getFromWindow = void 0;
  function Ur$1(t) {
    let e;
    return typeof window < "u" && typeof window[t] < "u" && (e = window[t]), e;
  }
  ce$4.getFromWindow = Ur$1;
  function mi$2(t) {
    const e = Ur$1(t);
    if (!e)
      throw new Error(`${t} is not defined in Window`);
    return e;
  }
  ce$4.getFromWindowOrThrow = mi$2;
  function Mg$1() {
    return mi$2("document");
  }
  ce$4.getDocumentOrThrow = Mg$1;
  function qg$1() {
    return Ur$1("document");
  }
  var Tr$1 = ce$4.getDocument = qg$1;
  function zg$1() {
    return mi$2("navigator");
  }
  ce$4.getNavigatorOrThrow = zg$1;
  function Hg$1() {
    return Ur$1("navigator");
  }
  var Ca$1 = ce$4.getNavigator = Hg$1;
  function Vg$1() {
    return mi$2("location");
  }
  ce$4.getLocationOrThrow = Vg$1;
  function Kg$1() {
    return Ur$1("location");
  }
  var Tl$1 = ce$4.getLocation = Kg$1;
  function Wg$1() {
    return mi$2("crypto");
  }
  ce$4.getCryptoOrThrow = Wg$1;
  function Gg$1() {
    return Ur$1("crypto");
  }
  ce$4.getCrypto = Gg$1;
  function Yg$1() {
    return mi$2("localStorage");
  }
  ce$4.getLocalStorageOrThrow = Yg$1;
  function Jg$1() {
    return Ur$1("localStorage");
  }
  ce$4.getLocalStorage = Jg$1;
  var Ta$1 = {};
  Object.defineProperty(Ta$1, "__esModule", { value: true });
  var Rl$1 = Ta$1.getWindowMetadata = void 0;
  const Bc$1 = ce$4;
  function Zg$1() {
    let t, e;
    try {
      t = Bc$1.getDocumentOrThrow(), e = Bc$1.getLocationOrThrow();
    } catch {
      return null;
    }
    function r() {
      const l = t.getElementsByTagName("link"), f = [];
      for (let p = 0; p < l.length; p++) {
        const d = l[p], g = d.getAttribute("rel");
        if (g && g.toLowerCase().indexOf("icon") > -1) {
          const m = d.getAttribute("href");
          if (m)
            if (m.toLowerCase().indexOf("https:") === -1 && m.toLowerCase().indexOf("http:") === -1 && m.indexOf("//") !== 0) {
              let _ = e.protocol + "//" + e.host;
              if (m.indexOf("/") === 0)
                _ += m;
              else {
                const I = e.pathname.split("/");
                I.pop();
                const E = I.join("/");
                _ += E + "/" + m;
              }
              f.push(_);
            } else if (m.indexOf("//") === 0) {
              const _ = e.protocol + m;
              f.push(_);
            } else
              f.push(m);
        }
      }
      return f;
    }
    function i(...l) {
      const f = t.getElementsByTagName("meta");
      for (let p = 0; p < f.length; p++) {
        const d = f[p], g = ["itemprop", "property", "name"].map((m) => d.getAttribute(m)).filter((m) => m ? l.includes(m) : false);
        if (g.length && g) {
          const m = d.getAttribute("content");
          if (m)
            return m;
        }
      }
      return "";
    }
    function s() {
      let l = i("name", "og:site_name", "og:title", "twitter:title");
      return l || (l = t.title), l;
    }
    function n() {
      return i("description", "og:description", "twitter:description", "keywords");
    }
    const o = s(), a = n(), c = e.origin, h = r();
    return {
      description: a,
      url: c,
      icons: h,
      name: o
    };
  }
  Rl$1 = Ta$1.getWindowMetadata = Zg$1;
  function ns$1(t, { strict: e = true } = {}) {
    return !t || typeof t != "string" ? false : e ? /^0x[0-9a-fA-F]*$/.test(t) : t.startsWith("0x");
  }
  function Ro$2(t) {
    return ns$1(t, { strict: false }) ? Math.ceil((t.length - 2) / 2) : t.length;
  }
  const Bl$1 = "2.31.0";
  let Oi$2 = {
    getDocsUrl: ({ docsBaseUrl: t, docsPath: e = "", docsSlug: r }) => e ? `${t ?? "https://viem.sh"}${e}${r ? `#${r}` : ""}` : void 0,
    version: `viem@${Bl$1}`
  };
  let Rr$1 = class Rr extends Error {
    constructor(e, r = {}) {
      var a;
      const i = (() => {
        var c;
        return r.cause instanceof Rr ? r.cause.details : (c = r.cause) != null && c.message ? r.cause.message : r.details;
      })(), s = r.cause instanceof Rr && r.cause.docsPath || r.docsPath, n = (a = Oi$2.getDocsUrl) == null ? void 0 : a.call(Oi$2, { ...r, docsPath: s }), o = [
        e || "An error occurred.",
        "",
        ...r.metaMessages ? [...r.metaMessages, ""] : [],
        ...n ? [`Docs: ${n}`] : [],
        ...i ? [`Details: ${i}`] : [],
        ...Oi$2.version ? [`Version: ${Oi$2.version}`] : []
      ].join(`
`);
      super(o, r.cause ? { cause: r.cause } : void 0), Object.defineProperty(this, "details", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "docsPath", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "metaMessages", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "shortMessage", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "version", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "name", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "BaseError"
      }), this.details = i, this.docsPath = s, this.metaMessages = r.metaMessages, this.name = r.name ?? this.name, this.shortMessage = e, this.version = Bl$1;
    }
    walk(e) {
      return Fl$1(this, e);
    }
  };
  function Fl$1(t, e) {
    return e != null && e(t) ? t : t && typeof t == "object" && "cause" in t && t.cause !== void 0 ? Fl$1(t.cause, e) : e ? null : t;
  }
  let Nl$1 = class Nl extends Rr$1 {
    constructor({ size: e, targetSize: r, type: i }) {
      super(`${i.charAt(0).toUpperCase()}${i.slice(1).toLowerCase()} size (${e}) exceeds padding size (${r}).`, { name: "SizeExceedsPaddingSizeError" });
    }
  };
  function bi$2(t, { dir: e, size: r = 32 } = {}) {
    return typeof t == "string" ? Qg$1(t, { dir: e, size: r }) : Xg$1(t, { dir: e, size: r });
  }
  function Qg$1(t, { dir: e, size: r = 32 } = {}) {
    if (r === null)
      return t;
    const i = t.replace("0x", "");
    if (i.length > r * 2)
      throw new Nl$1({
        size: Math.ceil(i.length / 2),
        targetSize: r,
        type: "hex"
      });
    return `0x${i[e === "right" ? "padEnd" : "padStart"](r * 2, "0")}`;
  }
  function Xg$1(t, { dir: e, size: r = 32 } = {}) {
    if (r === null)
      return t;
    if (t.length > r)
      throw new Nl$1({
        size: t.length,
        targetSize: r,
        type: "bytes"
      });
    const i = new Uint8Array(r);
    for (let s = 0; s < r; s++) {
      const n = e === "right";
      i[n ? s : r - s - 1] = t[n ? s : t.length - s - 1];
    }
    return i;
  }
  let ey$1 = class ey extends Rr$1 {
    constructor({ max: e, min: r, signed: i, size: s, value: n }) {
      super(`Number "${n}" is not in safe ${s ? `${s * 8}-bit ${i ? "signed" : "unsigned"} ` : ""}integer range ${e ? `(${r} to ${e})` : `(above ${r})`}`, { name: "IntegerOutOfRangeError" });
    }
  };
  let ty$1 = class ty extends Rr$1 {
    constructor({ givenSize: e, maxSize: r }) {
      super(`Size cannot exceed ${r} bytes. Given size: ${e} bytes.`, { name: "SizeOverflowError" });
    }
  };
  function vi$1(t, { size: e }) {
    if (Ro$2(t) > e)
      throw new ty$1({
        givenSize: Ro$2(t),
        maxSize: e
      });
  }
  function Bo$1(t, e = {}) {
    const { signed: r } = e;
    e.size && vi$1(t, { size: e.size });
    const i = BigInt(t);
    if (!r)
      return i;
    const s = (t.length - 2) / 2, n = (1n << BigInt(s) * 8n - 1n) - 1n;
    return i <= n ? i : i - BigInt(`0x${"f".padStart(s * 2, "f")}`) - 1n;
  }
  function ry$1(t, e = {}) {
    return Number(Bo$1(t, e));
  }
  const iy$1 = /* @__PURE__ */ Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
  function Fo$1(t, e = {}) {
    return typeof t == "number" || typeof t == "bigint" ? kl$1(t, e) : typeof t == "string" ? oy$1(t, e) : typeof t == "boolean" ? sy$1(t, e) : Ul$1(t, e);
  }
  function sy$1(t, e = {}) {
    const r = `0x${Number(t)}`;
    return typeof e.size == "number" ? (vi$1(r, { size: e.size }), bi$2(r, { size: e.size })) : r;
  }
  function Ul$1(t, e = {}) {
    let r = "";
    for (let s = 0; s < t.length; s++)
      r += iy$1[t[s]];
    const i = `0x${r}`;
    return typeof e.size == "number" ? (vi$1(i, { size: e.size }), bi$2(i, { dir: "right", size: e.size })) : i;
  }
  function kl$1(t, e = {}) {
    const { signed: r, size: i } = e, s = BigInt(t);
    let n;
    i ? r ? n = (1n << BigInt(i) * 8n - 1n) - 1n : n = 2n ** (BigInt(i) * 8n) - 1n : typeof t == "number" && (n = BigInt(Number.MAX_SAFE_INTEGER));
    const o = typeof n == "bigint" && r ? -n - 1n : 0;
    if (n && s > n || s < o) {
      const c = typeof t == "bigint" ? "n" : "";
      throw new ey$1({
        max: n ? `${n}${c}` : void 0,
        min: `${o}${c}`,
        signed: r,
        size: i,
        value: `${t}${c}`
      });
    }
    const a = `0x${(r && s < 0 ? (1n << BigInt(i * 8)) + BigInt(s) : s).toString(16)}`;
    return i ? bi$2(a, { size: i }) : a;
  }
  const ny$1 = /* @__PURE__ */ new TextEncoder();
  function oy$1(t, e = {}) {
    const r = ny$1.encode(t);
    return Ul$1(r, e);
  }
  const ay$1 = /* @__PURE__ */ new TextEncoder();
  function cy$1(t, e = {}) {
    return typeof t == "number" || typeof t == "bigint" ? uy$1(t, e) : typeof t == "boolean" ? hy$1(t, e) : ns$1(t) ? Ll$1(t, e) : jl$1(t, e);
  }
  function hy$1(t, e = {}) {
    const r = new Uint8Array(1);
    return r[0] = Number(t), typeof e.size == "number" ? (vi$1(r, { size: e.size }), bi$2(r, { size: e.size })) : r;
  }
  const Ut$4 = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102
  };
  function Fc$1(t) {
    if (t >= Ut$4.zero && t <= Ut$4.nine)
      return t - Ut$4.zero;
    if (t >= Ut$4.A && t <= Ut$4.F)
      return t - (Ut$4.A - 10);
    if (t >= Ut$4.a && t <= Ut$4.f)
      return t - (Ut$4.a - 10);
  }
  function Ll$1(t, e = {}) {
    let r = t;
    e.size && (vi$1(r, { size: e.size }), r = bi$2(r, { dir: "right", size: e.size }));
    let i = r.slice(2);
    i.length % 2 && (i = `0${i}`);
    const s = i.length / 2, n = new Uint8Array(s);
    for (let o = 0, a = 0; o < s; o++) {
      const c = Fc$1(i.charCodeAt(a++)), h = Fc$1(i.charCodeAt(a++));
      if (c === void 0 || h === void 0)
        throw new Rr$1(`Invalid byte sequence ("${i[a - 2]}${i[a - 1]}" in "${i}").`);
      n[o] = c * 16 + h;
    }
    return n;
  }
  function uy$1(t, e) {
    const r = kl$1(t, e);
    return Ll$1(r);
  }
  function jl$1(t, e = {}) {
    const r = ay$1.encode(t);
    return typeof e.size == "number" ? (vi$1(r, { size: e.size }), bi$2(r, { dir: "right", size: e.size })) : r;
  }
  const Ss$1 = /* @__PURE__ */ BigInt(2 ** 32 - 1), Nc$1 = /* @__PURE__ */ BigInt(32);
  function ly$1(t, e = false) {
    return e ? { h: Number(t & Ss$1), l: Number(t >> Nc$1 & Ss$1) } : { h: Number(t >> Nc$1 & Ss$1) | 0, l: Number(t & Ss$1) | 0 };
  }
  function fy$1(t, e = false) {
    const r = t.length;
    let i = new Uint32Array(r), s = new Uint32Array(r);
    for (let n = 0; n < r; n++) {
      const { h: o, l: a } = ly$1(t[n], e);
      [i[n], s[n]] = [o, a];
    }
    return [i, s];
  }
  const dy$1 = (t, e, r) => t << r | e >>> 32 - r, py$1 = (t, e, r) => e << r | t >>> 32 - r, gy$1 = (t, e, r) => e << r - 32 | t >>> 64 - r, yy$1 = (t, e, r) => t << r - 32 | e >>> 64 - r, Vr$1 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function wy$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function nn$4(t) {
    if (!Number.isSafeInteger(t) || t < 0)
      throw new Error("positive integer expected, got " + t);
  }
  function os(t, ...e) {
    if (!wy$1(t))
      throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length))
      throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function OO(t) {
    if (typeof t != "function" || typeof t.create != "function")
      throw new Error("Hash should be wrapped by utils.createHasher");
    nn$4(t.outputLen), nn$4(t.blockLen);
  }
  function Uc$1(t, e = true) {
    if (t.destroyed)
      throw new Error("Hash instance has been destroyed");
    if (e && t.finished)
      throw new Error("Hash#digest() has already been called");
  }
  function my$1(t, e) {
    os(t);
    const r = e.outputLen;
    if (t.length < r)
      throw new Error("digestInto() expects output buffer of length at least " + r);
  }
  function by$1(t) {
    return new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
  }
  function Ml$1(...t) {
    for (let e = 0; e < t.length; e++)
      t[e].fill(0);
  }
  function PO(t) {
    return new DataView(t.buffer, t.byteOffset, t.byteLength);
  }
  function CO(t, e) {
    return t << 32 - e | t >>> e;
  }
  const vy$1 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  function Ey$1(t) {
    return t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;
  }
  function _y$1(t) {
    for (let e = 0; e < t.length; e++)
      t[e] = Ey$1(t[e]);
    return t;
  }
  const kc$1 = vy$1 ? (t) => t : _y$1;
  function Iy$1(t) {
    if (typeof t != "string")
      throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function ql$1(t) {
    return typeof t == "string" && (t = Iy$1(t)), os(t), t;
  }
  function TO(...t) {
    let e = 0;
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      os(s), e += s.length;
    }
    const r = new Uint8Array(e);
    for (let i = 0, s = 0; i < t.length; i++) {
      const n = t[i];
      r.set(n, s), s += n.length;
    }
    return r;
  }
  let xy$1 = class xy {
  };
  function $y$1(t) {
    const e = (i) => t().update(ql$1(i)).digest(), r = t();
    return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
  }
  function RO(t = 32) {
    if (Vr$1 && typeof Vr$1.getRandomValues == "function")
      return Vr$1.getRandomValues(new Uint8Array(t));
    if (Vr$1 && typeof Vr$1.randomBytes == "function")
      return Uint8Array.from(Vr$1.randomBytes(t));
    throw new Error("crypto.getRandomValues must be defined");
  }
  const Sy$1 = BigInt(0), Pi$2 = BigInt(1), Dy$1 = BigInt(2), Ay$1 = BigInt(7), Oy$1 = BigInt(256), Py$1 = BigInt(113), zl$1 = [], Hl$1 = [], Vl$1 = [];
  for (let t = 0, e = Pi$2, r = 1, i = 0; t < 24; t++) {
    [r, i] = [i, (2 * r + 3 * i) % 5], zl$1.push(2 * (5 * i + r)), Hl$1.push((t + 1) * (t + 2) / 2 % 64);
    let s = Sy$1;
    for (let n = 0; n < 7; n++)
      e = (e << Pi$2 ^ (e >> Ay$1) * Py$1) % Oy$1, e & Dy$1 && (s ^= Pi$2 << (Pi$2 << /* @__PURE__ */ BigInt(n)) - Pi$2);
    Vl$1.push(s);
  }
  const Kl$1 = fy$1(Vl$1, true), Cy$1 = Kl$1[0], Ty$1 = Kl$1[1], Lc$1 = (t, e, r) => r > 32 ? gy$1(t, e, r) : dy$1(t, e, r), jc$1 = (t, e, r) => r > 32 ? yy$1(t, e, r) : py$1(t, e, r);
  function Ry$1(t, e = 24) {
    const r = new Uint32Array(10);
    for (let i = 24 - e; i < 24; i++) {
      for (let o = 0; o < 10; o++)
        r[o] = t[o] ^ t[o + 10] ^ t[o + 20] ^ t[o + 30] ^ t[o + 40];
      for (let o = 0; o < 10; o += 2) {
        const a = (o + 8) % 10, c = (o + 2) % 10, h = r[c], u = r[c + 1], l = Lc$1(h, u, 1) ^ r[a], f = jc$1(h, u, 1) ^ r[a + 1];
        for (let p = 0; p < 50; p += 10)
          t[o + p] ^= l, t[o + p + 1] ^= f;
      }
      let s = t[2], n = t[3];
      for (let o = 0; o < 24; o++) {
        const a = Hl$1[o], c = Lc$1(s, n, a), h = jc$1(s, n, a), u = zl$1[o];
        s = t[u], n = t[u + 1], t[u] = c, t[u + 1] = h;
      }
      for (let o = 0; o < 50; o += 10) {
        for (let a = 0; a < 10; a++)
          r[a] = t[o + a];
        for (let a = 0; a < 10; a++)
          t[o + a] ^= ~r[(a + 2) % 10] & r[(a + 4) % 10];
      }
      t[0] ^= Cy$1[i], t[1] ^= Ty$1[i];
    }
    Ml$1(r);
  }
  let Ra$1 = class Ra extends xy$1 {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(e, r, i, s = false, n = 24) {
      if (super(), this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, this.enableXOF = false, this.blockLen = e, this.suffix = r, this.outputLen = i, this.enableXOF = s, this.rounds = n, nn$4(i), !(0 < e && e < 200))
        throw new Error("only keccak-f1600 function is supported");
      this.state = new Uint8Array(200), this.state32 = by$1(this.state);
    }
    clone() {
      return this._cloneInto();
    }
    keccak() {
      kc$1(this.state32), Ry$1(this.state32, this.rounds), kc$1(this.state32), this.posOut = 0, this.pos = 0;
    }
    update(e) {
      Uc$1(this), e = ql$1(e), os(e);
      const { blockLen: r, state: i } = this, s = e.length;
      for (let n = 0; n < s; ) {
        const o = Math.min(r - this.pos, s - n);
        for (let a = 0; a < o; a++)
          i[this.pos++] ^= e[n++];
        this.pos === r && this.keccak();
      }
      return this;
    }
    finish() {
      if (this.finished)
        return;
      this.finished = true;
      const { state: e, suffix: r, pos: i, blockLen: s } = this;
      e[i] ^= r, r & 128 && i === s - 1 && this.keccak(), e[s - 1] ^= 128, this.keccak();
    }
    writeInto(e) {
      Uc$1(this, false), os(e), this.finish();
      const r = this.state, { blockLen: i } = this;
      for (let s = 0, n = e.length; s < n; ) {
        this.posOut >= i && this.keccak();
        const o = Math.min(i - this.posOut, n - s);
        e.set(r.subarray(this.posOut, this.posOut + o), s), this.posOut += o, s += o;
      }
      return e;
    }
    xofInto(e) {
      if (!this.enableXOF)
        throw new Error("XOF is not possible for this instance");
      return this.writeInto(e);
    }
    xof(e) {
      return nn$4(e), this.xofInto(new Uint8Array(e));
    }
    digestInto(e) {
      if (my$1(e, this), this.finished)
        throw new Error("digest() was already called");
      return this.writeInto(e), this.destroy(), e;
    }
    digest() {
      return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
      this.destroyed = true, Ml$1(this.state);
    }
    _cloneInto(e) {
      const { blockLen: r, suffix: i, outputLen: s, rounds: n, enableXOF: o } = this;
      return e || (e = new Ra(r, i, s, o, n)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = n, e.suffix = i, e.outputLen = s, e.enableXOF = o, e.destroyed = this.destroyed, e;
    }
  };
  const By$1 = (t, e, r) => $y$1(() => new Ra$1(e, t, r)), Fy$1 = By$1(1, 136, 256 / 8);
  function Wl$1(t, e) {
    const r = e || "hex", i = Fy$1(ns$1(t, { strict: false }) ? cy$1(t) : t);
    return r === "bytes" ? i : Fo$1(i);
  }
  let Ny$1 = class Ny extends Map {
    constructor(e) {
      super(), Object.defineProperty(this, "maxSize", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.maxSize = e;
    }
    get(e) {
      const r = super.get(e);
      return super.has(e) && r !== void 0 && (this.delete(e), super.set(e, r)), r;
    }
    set(e, r) {
      if (super.set(e, r), this.maxSize && this.size > this.maxSize) {
        const i = this.keys().next().value;
        i && this.delete(i);
      }
      return this;
    }
  };
  const Gn$2 = /* @__PURE__ */ new Ny$1(8192);
  function Uy$1(t, e) {
    if (Gn$2.has(`${t}.${e}`))
      return Gn$2.get(`${t}.${e}`);
    const r = t.substring(2).toLowerCase(), i = Wl$1(jl$1(r), "bytes"), s = r.split("");
    for (let o = 0; o < 40; o += 2)
      i[o >> 1] >> 4 >= 8 && s[o] && (s[o] = s[o].toUpperCase()), (i[o >> 1] & 15) >= 8 && s[o + 1] && (s[o + 1] = s[o + 1].toUpperCase());
    const n = `0x${s.join("")}`;
    return Gn$2.set(`${t}.${e}`, n), n;
  }
  function ky$1(t) {
    const e = Wl$1(`0x${t.substring(4)}`).substring(26);
    return Uy$1(`0x${e}`);
  }
  async function Ly$1({ hash: t, signature: e }) {
    const r = ns$1(t) ? t : Fo$1(t), { secp256k1: i } = await Promise.resolve().then(function () { return secp256k1DA3kncZk; });
    return `0x${(() => {
    if (typeof e == "object" && "r" in e && "s" in e) {
      const { r: h, s: u, v: l, yParity: f } = e, p = Number(f ?? l), d = Mc$1(p);
      return new i.Signature(Bo$1(h), Bo$1(u)).addRecoveryBit(d);
    }
    const o = ns$1(e) ? e : Fo$1(e);
    if (Ro$2(o) !== 65)
      throw new Error("invalid signature length");
    const a = ry$1(`0x${o.slice(130)}`), c = Mc$1(a);
    return i.Signature.fromCompact(o.substring(2, 130)).addRecoveryBit(c);
  })().recoverPublicKey(r.substring(2)).toHex(false)}`;
  }
  function Mc$1(t) {
    if (t === 0 || t === 1)
      return t;
    if (t === 27)
      return 0;
    if (t === 28)
      return 1;
    throw new Error("Invalid yParityOrV value");
  }
  async function jy$1({ hash: t, signature: e }) {
    return ky$1(await Ly$1({ hash: t, signature: e }));
  }
  function My$1(t) {
    if (t.length >= 255)
      throw new TypeError("Alphabet too long");
    const e = new Uint8Array(256);
    for (let h = 0; h < e.length; h++)
      e[h] = 255;
    for (let h = 0; h < t.length; h++) {
      const u = t.charAt(h), l = u.charCodeAt(0);
      if (e[l] !== 255)
        throw new TypeError(u + " is ambiguous");
      e[l] = h;
    }
    const r = t.length, i = t.charAt(0), s = Math.log(r) / Math.log(256), n = Math.log(256) / Math.log(r);
    function o(h) {
      if (h instanceof Uint8Array || (ArrayBuffer.isView(h) ? h = new Uint8Array(h.buffer, h.byteOffset, h.byteLength) : Array.isArray(h) && (h = Uint8Array.from(h))), !(h instanceof Uint8Array))
        throw new TypeError("Expected Uint8Array");
      if (h.length === 0)
        return "";
      let u = 0, l = 0, f = 0;
      const p = h.length;
      for (; f !== p && h[f] === 0; )
        f++, u++;
      const d = (p - f) * n + 1 >>> 0, g = new Uint8Array(d);
      for (; f !== p; ) {
        let I = h[f], E = 0;
        for (let P = d - 1; (I !== 0 || E < l) && P !== -1; P--, E++)
          I += 256 * g[P] >>> 0, g[P] = I % r >>> 0, I = I / r >>> 0;
        if (I !== 0)
          throw new Error("Non-zero carry");
        l = E, f++;
      }
      let m = d - l;
      for (; m !== d && g[m] === 0; )
        m++;
      let _ = i.repeat(u);
      for (; m < d; ++m)
        _ += t.charAt(g[m]);
      return _;
    }
    function a(h) {
      if (typeof h != "string")
        throw new TypeError("Expected String");
      if (h.length === 0)
        return new Uint8Array();
      let u = 0, l = 0, f = 0;
      for (; h[u] === i; )
        l++, u++;
      const p = (h.length - u) * s + 1 >>> 0, d = new Uint8Array(p);
      for (; u < h.length; ) {
        const I = h.charCodeAt(u);
        if (I > 255)
          return;
        let E = e[I];
        if (E === 255)
          return;
        let P = 0;
        for (let A = p - 1; (E !== 0 || P < f) && A !== -1; A--, P++)
          E += r * d[A] >>> 0, d[A] = E % 256 >>> 0, E = E / 256 >>> 0;
        if (E !== 0)
          throw new Error("Non-zero carry");
        f = P, u++;
      }
      let g = p - f;
      for (; g !== p && d[g] === 0; )
        g++;
      const m = new Uint8Array(l + (p - g));
      let _ = l;
      for (; g !== p; )
        m[_++] = d[g++];
      return m;
    }
    function c(h) {
      const u = a(h);
      if (u)
        return u;
      throw new Error("Non-base" + r + " character");
    }
    return {
      encode: o,
      decodeUnsafe: a,
      decode: c
    };
  }
  var qy$1 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
  const ps$1 = My$1(qy$1);
  function zy$1(t) {
    const e = t.length;
    let r = 0, i = 0;
    for (; i < e; ) {
      let s = t.charCodeAt(i++);
      if (s & 4294967168)
        if (!(s & 4294965248))
          r += 2;
        else {
          if (s >= 55296 && s <= 56319 && i < e) {
            const n = t.charCodeAt(i);
            (n & 64512) === 56320 && (++i, s = ((s & 1023) << 10) + (n & 1023) + 65536);
          }
          s & 4294901760 ? r += 4 : r += 3;
        }
      else {
        r++;
        continue;
      }
    }
    return r;
  }
  function Hy$1(t, e, r) {
    const i = t.length;
    let s = r, n = 0;
    for (; n < i; ) {
      let o = t.charCodeAt(n++);
      if (o & 4294967168)
        if (!(o & 4294965248))
          e[s++] = o >> 6 & 31 | 192;
        else {
          if (o >= 55296 && o <= 56319 && n < i) {
            const a = t.charCodeAt(n);
            (a & 64512) === 56320 && (++n, o = ((o & 1023) << 10) + (a & 1023) + 65536);
          }
          o & 4294901760 ? (e[s++] = o >> 18 & 7 | 240, e[s++] = o >> 12 & 63 | 128, e[s++] = o >> 6 & 63 | 128) : (e[s++] = o >> 12 & 15 | 224, e[s++] = o >> 6 & 63 | 128);
        }
      else {
        e[s++] = o;
        continue;
      }
      e[s++] = o & 63 | 128;
    }
  }
  const Vy$1 = new TextEncoder(), Ky$1 = 50;
  function Wy$1(t, e, r) {
    Vy$1.encodeInto(t, e.subarray(r));
  }
  function Gy$1(t, e, r) {
    t.length > Ky$1 ? Wy$1(t, e, r) : Hy$1(t, e, r);
  }
  const Yy$1 = 4096;
  function Gl$1(t, e, r) {
    let i = e;
    const s = i + r, n = [];
    let o = "";
    for (; i < s; ) {
      const a = t[i++];
      if (!(a & 128))
        n.push(a);
      else if ((a & 224) === 192) {
        const c = t[i++] & 63;
        n.push((a & 31) << 6 | c);
      } else if ((a & 240) === 224) {
        const c = t[i++] & 63, h = t[i++] & 63;
        n.push((a & 31) << 12 | c << 6 | h);
      } else if ((a & 248) === 240) {
        const c = t[i++] & 63, h = t[i++] & 63, u = t[i++] & 63;
        let l = (a & 7) << 18 | c << 12 | h << 6 | u;
        l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | l & 1023), n.push(l);
      } else
        n.push(a);
      n.length >= Yy$1 && (o += String.fromCharCode(...n), n.length = 0);
    }
    return n.length > 0 && (o += String.fromCharCode(...n)), o;
  }
  const Jy$1 = new TextDecoder(), Zy$1 = 200;
  function Qy$1(t, e, r) {
    const i = t.subarray(e, e + r);
    return Jy$1.decode(i);
  }
  function Xy$1(t, e, r) {
    return r > Zy$1 ? Qy$1(t, e, r) : Gl$1(t, e, r);
  }
  let Ds$1 = class Ds {
    constructor(e, r) {
      this.type = e, this.data = r;
    }
  };
  let tt$4 = class tt extends Error {
    constructor(e) {
      super(e);
      const r = Object.create(tt.prototype);
      Object.setPrototypeOf(this, r), Object.defineProperty(this, "name", {
        configurable: true,
        enumerable: false,
        value: tt.name
      });
    }
  };
  const Ci$2 = 4294967295;
  function ew$1(t, e, r) {
    const i = r / 4294967296, s = r;
    t.setUint32(e, i), t.setUint32(e + 4, s);
  }
  function Yl$1(t, e, r) {
    const i = Math.floor(r / 4294967296), s = r;
    t.setUint32(e, i), t.setUint32(e + 4, s);
  }
  function Jl$1(t, e) {
    const r = t.getInt32(e), i = t.getUint32(e + 4);
    return r * 4294967296 + i;
  }
  function tw$1(t, e) {
    const r = t.getUint32(e), i = t.getUint32(e + 4);
    return r * 4294967296 + i;
  }
  const rw$1 = -1, iw$1 = 4294967296 - 1, sw$1 = 17179869184 - 1;
  function nw$1({ sec: t, nsec: e }) {
    if (t >= 0 && e >= 0 && t <= sw$1)
      if (e === 0 && t <= iw$1) {
        const r = new Uint8Array(4);
        return new DataView(r.buffer).setUint32(0, t), r;
      } else {
        const r = t / 4294967296, i = t & 4294967295, s = new Uint8Array(8), n = new DataView(s.buffer);
        return n.setUint32(0, e << 2 | r & 3), n.setUint32(4, i), s;
      }
    else {
      const r = new Uint8Array(12), i = new DataView(r.buffer);
      return i.setUint32(0, e), Yl$1(i, 4, t), r;
    }
  }
  function ow$1(t) {
    const e = t.getTime(), r = Math.floor(e / 1e3), i = (e - r * 1e3) * 1e6, s = Math.floor(i / 1e9);
    return {
      sec: r + s,
      nsec: i - s * 1e9
    };
  }
  function aw$1(t) {
    if (t instanceof Date) {
      const e = ow$1(t);
      return nw$1(e);
    } else
      return null;
  }
  function cw$1(t) {
    const e = new DataView(t.buffer, t.byteOffset, t.byteLength);
    switch (t.byteLength) {
      case 4:
        return { sec: e.getUint32(0), nsec: 0 };
      case 8: {
        const r = e.getUint32(0), i = e.getUint32(4), s = (r & 3) * 4294967296 + i, n = r >>> 2;
        return { sec: s, nsec: n };
      }
      case 12: {
        const r = Jl$1(e, 4), i = e.getUint32(0);
        return { sec: r, nsec: i };
      }
      default:
        throw new tt$4(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${t.length}`);
    }
  }
  function hw$1(t) {
    const e = cw$1(t);
    return new Date(e.sec * 1e3 + e.nsec / 1e6);
  }
  const uw$1 = {
    type: rw$1,
    encode: aw$1,
    decode: hw$1
  };
  let on$4 = class on {
    constructor() {
      this.builtInEncoders = [], this.builtInDecoders = [], this.encoders = [], this.decoders = [], this.register(uw$1);
    }
    register({ type: e, encode: r, decode: i }) {
      if (e >= 0)
        this.encoders[e] = r, this.decoders[e] = i;
      else {
        const s = -1 - e;
        this.builtInEncoders[s] = r, this.builtInDecoders[s] = i;
      }
    }
    tryToEncode(e, r) {
      for (let i = 0; i < this.builtInEncoders.length; i++) {
        const s = this.builtInEncoders[i];
        if (s != null) {
          const n = s(e, r);
          if (n != null) {
            const o = -1 - i;
            return new Ds$1(o, n);
          }
        }
      }
      for (let i = 0; i < this.encoders.length; i++) {
        const s = this.encoders[i];
        if (s != null) {
          const n = s(e, r);
          if (n != null) {
            const o = i;
            return new Ds$1(o, n);
          }
        }
      }
      return e instanceof Ds$1 ? e : null;
    }
    decode(e, r, i) {
      const s = r < 0 ? this.builtInDecoders[-1 - r] : this.decoders[r];
      return s ? s(e, r, i) : new Ds$1(r, e);
    }
  };
  on$4.defaultCodec = new on$4();
  function lw$1(t) {
    return t instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && t instanceof SharedArrayBuffer;
  }
  function No$1(t) {
    return t instanceof Uint8Array ? t : ArrayBuffer.isView(t) ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : lw$1(t) ? new Uint8Array(t) : Uint8Array.from(t);
  }
  const fw$1 = 100, dw$1 = 2048;
  let pw$1 = class Zl {
    constructor(e) {
      this.entered = false, this.extensionCodec = (e == null ? void 0 : e.extensionCodec) ?? on$4.defaultCodec, this.context = e == null ? void 0 : e.context, this.useBigInt64 = (e == null ? void 0 : e.useBigInt64) ?? false, this.maxDepth = (e == null ? void 0 : e.maxDepth) ?? fw$1, this.initialBufferSize = (e == null ? void 0 : e.initialBufferSize) ?? dw$1, this.sortKeys = (e == null ? void 0 : e.sortKeys) ?? false, this.forceFloat32 = (e == null ? void 0 : e.forceFloat32) ?? false, this.ignoreUndefined = (e == null ? void 0 : e.ignoreUndefined) ?? false, this.forceIntegerToFloat = (e == null ? void 0 : e.forceIntegerToFloat) ?? false, this.pos = 0, this.view = new DataView(new ArrayBuffer(this.initialBufferSize)), this.bytes = new Uint8Array(this.view.buffer);
    }
    clone() {
      return new Zl({
        extensionCodec: this.extensionCodec,
        context: this.context,
        useBigInt64: this.useBigInt64,
        maxDepth: this.maxDepth,
        initialBufferSize: this.initialBufferSize,
        sortKeys: this.sortKeys,
        forceFloat32: this.forceFloat32,
        ignoreUndefined: this.ignoreUndefined,
        forceIntegerToFloat: this.forceIntegerToFloat
      });
    }
    reinitializeState() {
      this.pos = 0;
    }
    /**
     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.
     *
     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.
     */
    encodeSharedRef(e) {
      if (this.entered)
        return this.clone().encodeSharedRef(e);
      try {
        return this.entered = !0, this.reinitializeState(), this.doEncode(e, 1), this.bytes.subarray(0, this.pos);
      } finally {
        this.entered = false;
      }
    }
    /**
     * @returns Encodes the object and returns a copy of the encoder's internal buffer.
     */
    encode(e) {
      if (this.entered)
        return this.clone().encode(e);
      try {
        return this.entered = !0, this.reinitializeState(), this.doEncode(e, 1), this.bytes.slice(0, this.pos);
      } finally {
        this.entered = false;
      }
    }
    doEncode(e, r) {
      if (r > this.maxDepth)
        throw new Error(`Too deep objects in depth ${r}`);
      e == null ? this.encodeNil() : typeof e == "boolean" ? this.encodeBoolean(e) : typeof e == "number" ? this.forceIntegerToFloat ? this.encodeNumberAsFloat(e) : this.encodeNumber(e) : typeof e == "string" ? this.encodeString(e) : this.useBigInt64 && typeof e == "bigint" ? this.encodeBigInt64(e) : this.encodeObject(e, r);
    }
    ensureBufferSizeToWrite(e) {
      const r = this.pos + e;
      this.view.byteLength < r && this.resizeBuffer(r * 2);
    }
    resizeBuffer(e) {
      const r = new ArrayBuffer(e), i = new Uint8Array(r), s = new DataView(r);
      i.set(this.bytes), this.view = s, this.bytes = i;
    }
    encodeNil() {
      this.writeU8(192);
    }
    encodeBoolean(e) {
      e === false ? this.writeU8(194) : this.writeU8(195);
    }
    encodeNumber(e) {
      !this.forceIntegerToFloat && Number.isSafeInteger(e) ? e >= 0 ? e < 128 ? this.writeU8(e) : e < 256 ? (this.writeU8(204), this.writeU8(e)) : e < 65536 ? (this.writeU8(205), this.writeU16(e)) : e < 4294967296 ? (this.writeU8(206), this.writeU32(e)) : this.useBigInt64 ? this.encodeNumberAsFloat(e) : (this.writeU8(207), this.writeU64(e)) : e >= -32 ? this.writeU8(224 | e + 32) : e >= -128 ? (this.writeU8(208), this.writeI8(e)) : e >= -32768 ? (this.writeU8(209), this.writeI16(e)) : e >= -2147483648 ? (this.writeU8(210), this.writeI32(e)) : this.useBigInt64 ? this.encodeNumberAsFloat(e) : (this.writeU8(211), this.writeI64(e)) : this.encodeNumberAsFloat(e);
    }
    encodeNumberAsFloat(e) {
      this.forceFloat32 ? (this.writeU8(202), this.writeF32(e)) : (this.writeU8(203), this.writeF64(e));
    }
    encodeBigInt64(e) {
      e >= BigInt(0) ? (this.writeU8(207), this.writeBigUint64(e)) : (this.writeU8(211), this.writeBigInt64(e));
    }
    writeStringHeader(e) {
      if (e < 32)
        this.writeU8(160 + e);
      else if (e < 256)
        this.writeU8(217), this.writeU8(e);
      else if (e < 65536)
        this.writeU8(218), this.writeU16(e);
      else if (e < 4294967296)
        this.writeU8(219), this.writeU32(e);
      else
        throw new Error(`Too long string: ${e} bytes in UTF-8`);
    }
    encodeString(e) {
      const i = zy$1(e);
      this.ensureBufferSizeToWrite(5 + i), this.writeStringHeader(i), Gy$1(e, this.bytes, this.pos), this.pos += i;
    }
    encodeObject(e, r) {
      const i = this.extensionCodec.tryToEncode(e, this.context);
      if (i != null)
        this.encodeExtension(i);
      else if (Array.isArray(e))
        this.encodeArray(e, r);
      else if (ArrayBuffer.isView(e))
        this.encodeBinary(e);
      else if (typeof e == "object")
        this.encodeMap(e, r);
      else
        throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(e)}`);
    }
    encodeBinary(e) {
      const r = e.byteLength;
      if (r < 256)
        this.writeU8(196), this.writeU8(r);
      else if (r < 65536)
        this.writeU8(197), this.writeU16(r);
      else if (r < 4294967296)
        this.writeU8(198), this.writeU32(r);
      else
        throw new Error(`Too large binary: ${r}`);
      const i = No$1(e);
      this.writeU8a(i);
    }
    encodeArray(e, r) {
      const i = e.length;
      if (i < 16)
        this.writeU8(144 + i);
      else if (i < 65536)
        this.writeU8(220), this.writeU16(i);
      else if (i < 4294967296)
        this.writeU8(221), this.writeU32(i);
      else
        throw new Error(`Too large array: ${i}`);
      for (const s of e)
        this.doEncode(s, r + 1);
    }
    countWithoutUndefined(e, r) {
      let i = 0;
      for (const s of r)
        e[s] !== void 0 && i++;
      return i;
    }
    encodeMap(e, r) {
      const i = Object.keys(e);
      this.sortKeys && i.sort();
      const s = this.ignoreUndefined ? this.countWithoutUndefined(e, i) : i.length;
      if (s < 16)
        this.writeU8(128 + s);
      else if (s < 65536)
        this.writeU8(222), this.writeU16(s);
      else if (s < 4294967296)
        this.writeU8(223), this.writeU32(s);
      else
        throw new Error(`Too large map object: ${s}`);
      for (const n of i) {
        const o = e[n];
        this.ignoreUndefined && o === void 0 || (this.encodeString(n), this.doEncode(o, r + 1));
      }
    }
    encodeExtension(e) {
      if (typeof e.data == "function") {
        const i = e.data(this.pos + 6), s = i.length;
        if (s >= 4294967296)
          throw new Error(`Too large extension object: ${s}`);
        this.writeU8(201), this.writeU32(s), this.writeI8(e.type), this.writeU8a(i);
        return;
      }
      const r = e.data.length;
      if (r === 1)
        this.writeU8(212);
      else if (r === 2)
        this.writeU8(213);
      else if (r === 4)
        this.writeU8(214);
      else if (r === 8)
        this.writeU8(215);
      else if (r === 16)
        this.writeU8(216);
      else if (r < 256)
        this.writeU8(199), this.writeU8(r);
      else if (r < 65536)
        this.writeU8(200), this.writeU16(r);
      else if (r < 4294967296)
        this.writeU8(201), this.writeU32(r);
      else
        throw new Error(`Too large extension object: ${r}`);
      this.writeI8(e.type), this.writeU8a(e.data);
    }
    writeU8(e) {
      this.ensureBufferSizeToWrite(1), this.view.setUint8(this.pos, e), this.pos++;
    }
    writeU8a(e) {
      const r = e.length;
      this.ensureBufferSizeToWrite(r), this.bytes.set(e, this.pos), this.pos += r;
    }
    writeI8(e) {
      this.ensureBufferSizeToWrite(1), this.view.setInt8(this.pos, e), this.pos++;
    }
    writeU16(e) {
      this.ensureBufferSizeToWrite(2), this.view.setUint16(this.pos, e), this.pos += 2;
    }
    writeI16(e) {
      this.ensureBufferSizeToWrite(2), this.view.setInt16(this.pos, e), this.pos += 2;
    }
    writeU32(e) {
      this.ensureBufferSizeToWrite(4), this.view.setUint32(this.pos, e), this.pos += 4;
    }
    writeI32(e) {
      this.ensureBufferSizeToWrite(4), this.view.setInt32(this.pos, e), this.pos += 4;
    }
    writeF32(e) {
      this.ensureBufferSizeToWrite(4), this.view.setFloat32(this.pos, e), this.pos += 4;
    }
    writeF64(e) {
      this.ensureBufferSizeToWrite(8), this.view.setFloat64(this.pos, e), this.pos += 8;
    }
    writeU64(e) {
      this.ensureBufferSizeToWrite(8), ew$1(this.view, this.pos, e), this.pos += 8;
    }
    writeI64(e) {
      this.ensureBufferSizeToWrite(8), Yl$1(this.view, this.pos, e), this.pos += 8;
    }
    writeBigUint64(e) {
      this.ensureBufferSizeToWrite(8), this.view.setBigUint64(this.pos, e), this.pos += 8;
    }
    writeBigInt64(e) {
      this.ensureBufferSizeToWrite(8), this.view.setBigInt64(this.pos, e), this.pos += 8;
    }
  };
  function gw$1(t, e) {
    return new pw$1(e).encodeSharedRef(t);
  }
  function Yn$2(t) {
    return `${t < 0 ? "-" : ""}0x${Math.abs(t).toString(16).padStart(2, "0")}`;
  }
  const yw$1 = 16, ww$1 = 16;
  let mw$1 = class mw {
    constructor(e = yw$1, r = ww$1) {
      this.hit = 0, this.miss = 0, this.maxKeyLength = e, this.maxLengthPerKey = r, this.caches = [];
      for (let i = 0; i < this.maxKeyLength; i++)
        this.caches.push([]);
    }
    canBeCached(e) {
      return e > 0 && e <= this.maxKeyLength;
    }
    find(e, r, i) {
      const s = this.caches[i - 1];
      e: for (const n of s) {
        const o = n.bytes;
        for (let a = 0; a < i; a++)
          if (o[a] !== e[r + a])
            continue e;
        return n.str;
      }
      return null;
    }
    store(e, r) {
      const i = this.caches[e.length - 1], s = { bytes: e, str: r };
      i.length >= this.maxLengthPerKey ? i[Math.random() * i.length | 0] = s : i.push(s);
    }
    decode(e, r, i) {
      const s = this.find(e, r, i);
      if (s != null)
        return this.hit++, s;
      this.miss++;
      const n = Gl$1(e, r, i), o = Uint8Array.prototype.slice.call(e, r, r + i);
      return this.store(o, n), n;
    }
  };
  const Uo$1 = "array", Yi$1 = "map_key", Ql$1 = "map_value", bw$1 = (t) => {
    if (typeof t == "string" || typeof t == "number")
      return t;
    throw new tt$4("The type of key must be string or number but " + typeof t);
  };
  let vw$1 = class vw {
    constructor() {
      this.stack = [], this.stackHeadPosition = -1;
    }
    get length() {
      return this.stackHeadPosition + 1;
    }
    top() {
      return this.stack[this.stackHeadPosition];
    }
    pushArrayState(e) {
      const r = this.getUninitializedStateFromPool();
      r.type = Uo$1, r.position = 0, r.size = e, r.array = new Array(e);
    }
    pushMapState(e) {
      const r = this.getUninitializedStateFromPool();
      r.type = Yi$1, r.readCount = 0, r.size = e, r.map = {};
    }
    getUninitializedStateFromPool() {
      if (this.stackHeadPosition++, this.stackHeadPosition === this.stack.length) {
        const e = {
          type: void 0,
          size: 0,
          array: void 0,
          position: 0,
          readCount: 0,
          map: void 0,
          key: null
        };
        this.stack.push(e);
      }
      return this.stack[this.stackHeadPosition];
    }
    release(e) {
      if (this.stack[this.stackHeadPosition] !== e)
        throw new Error("Invalid stack state. Released state is not on top of the stack.");
      if (e.type === Uo$1) {
        const i = e;
        i.size = 0, i.array = void 0, i.position = 0, i.type = void 0;
      }
      if (e.type === Yi$1 || e.type === Ql$1) {
        const i = e;
        i.size = 0, i.map = void 0, i.readCount = 0, i.type = void 0;
      }
      this.stackHeadPosition--;
    }
    reset() {
      this.stack.length = 0, this.stackHeadPosition = -1;
    }
  };
  const Ti$2 = -1, Ba$1 = new DataView(new ArrayBuffer(0)), Ew$1 = new Uint8Array(Ba$1.buffer);
  try {
    Ba$1.getInt8(0);
  } catch (t) {
    if (!(t instanceof RangeError))
      throw new Error("This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access");
  }
  const qc$1 = new RangeError("Insufficient data"), _w$1 = new mw$1();
  let Iw$1 = class Xl {
    constructor(e) {
      this.totalPos = 0, this.pos = 0, this.view = Ba$1, this.bytes = Ew$1, this.headByte = Ti$2, this.stack = new vw$1(), this.entered = false, this.extensionCodec = (e == null ? void 0 : e.extensionCodec) ?? on$4.defaultCodec, this.context = e == null ? void 0 : e.context, this.useBigInt64 = (e == null ? void 0 : e.useBigInt64) ?? false, this.rawStrings = (e == null ? void 0 : e.rawStrings) ?? false, this.maxStrLength = (e == null ? void 0 : e.maxStrLength) ?? Ci$2, this.maxBinLength = (e == null ? void 0 : e.maxBinLength) ?? Ci$2, this.maxArrayLength = (e == null ? void 0 : e.maxArrayLength) ?? Ci$2, this.maxMapLength = (e == null ? void 0 : e.maxMapLength) ?? Ci$2, this.maxExtLength = (e == null ? void 0 : e.maxExtLength) ?? Ci$2, this.keyDecoder = (e == null ? void 0 : e.keyDecoder) !== void 0 ? e.keyDecoder : _w$1, this.mapKeyConverter = (e == null ? void 0 : e.mapKeyConverter) ?? bw$1;
    }
    clone() {
      return new Xl({
        extensionCodec: this.extensionCodec,
        context: this.context,
        useBigInt64: this.useBigInt64,
        rawStrings: this.rawStrings,
        maxStrLength: this.maxStrLength,
        maxBinLength: this.maxBinLength,
        maxArrayLength: this.maxArrayLength,
        maxMapLength: this.maxMapLength,
        maxExtLength: this.maxExtLength,
        keyDecoder: this.keyDecoder
      });
    }
    reinitializeState() {
      this.totalPos = 0, this.headByte = Ti$2, this.stack.reset();
    }
    setBuffer(e) {
      const r = No$1(e);
      this.bytes = r, this.view = new DataView(r.buffer, r.byteOffset, r.byteLength), this.pos = 0;
    }
    appendBuffer(e) {
      if (this.headByte === Ti$2 && !this.hasRemaining(1))
        this.setBuffer(e);
      else {
        const r = this.bytes.subarray(this.pos), i = No$1(e), s = new Uint8Array(r.length + i.length);
        s.set(r), s.set(i, r.length), this.setBuffer(s);
      }
    }
    hasRemaining(e) {
      return this.view.byteLength - this.pos >= e;
    }
    createExtraByteError(e) {
      const { view: r, pos: i } = this;
      return new RangeError(`Extra ${r.byteLength - i} of ${r.byteLength} byte(s) found at buffer[${e}]`);
    }
    /**
     * @throws {@link DecodeError}
     * @throws {@link RangeError}
     */
    decode(e) {
      if (this.entered)
        return this.clone().decode(e);
      try {
        this.entered = !0, this.reinitializeState(), this.setBuffer(e);
        const r = this.doDecodeSync();
        if (this.hasRemaining(1))
          throw this.createExtraByteError(this.pos);
        return r;
      } finally {
        this.entered = false;
      }
    }
    *decodeMulti(e) {
      if (this.entered) {
        yield* this.clone().decodeMulti(e);
        return;
      }
      try {
        for (this.entered = !0, this.reinitializeState(), this.setBuffer(e); this.hasRemaining(1); )
          yield this.doDecodeSync();
      } finally {
        this.entered = false;
      }
    }
    async decodeAsync(e) {
      if (this.entered)
        return this.clone().decodeAsync(e);
      try {
        this.entered = !0;
        let r = !1, i;
        for await (const a of e) {
          if (r)
            throw this.entered = !1, this.createExtraByteError(this.totalPos);
          this.appendBuffer(a);
          try {
            i = this.doDecodeSync(), r = !0;
          } catch (c) {
            if (!(c instanceof RangeError))
              throw c;
          }
          this.totalPos += this.pos;
        }
        if (r) {
          if (this.hasRemaining(1))
            throw this.createExtraByteError(this.totalPos);
          return i;
        }
        const { headByte: s, pos: n, totalPos: o } = this;
        throw new RangeError(`Insufficient data in parsing ${Yn$2(s)} at ${o} (${n} in the current buffer)`);
      } finally {
        this.entered = false;
      }
    }
    decodeArrayStream(e) {
      return this.decodeMultiAsync(e, true);
    }
    decodeStream(e) {
      return this.decodeMultiAsync(e, false);
    }
    async *decodeMultiAsync(e, r) {
      if (this.entered) {
        yield* this.clone().decodeMultiAsync(e, r);
        return;
      }
      try {
        this.entered = !0;
        let i = r, s = -1;
        for await (const n of e) {
          if (r && s === 0)
            throw this.createExtraByteError(this.totalPos);
          this.appendBuffer(n), i && (s = this.readArraySize(), i = !1, this.complete());
          try {
            for (; yield this.doDecodeSync(), --s !== 0; )
              ;
          } catch (o) {
            if (!(o instanceof RangeError))
              throw o;
          }
          this.totalPos += this.pos;
        }
      } finally {
        this.entered = false;
      }
    }
    doDecodeSync() {
      e: for (; ; ) {
        const e = this.readHeadByte();
        let r;
        if (e >= 224)
          r = e - 256;
        else if (e < 192)
          if (e < 128)
            r = e;
          else if (e < 144) {
            const s = e - 128;
            if (s !== 0) {
              this.pushMapState(s), this.complete();
              continue e;
            } else
              r = {};
          } else if (e < 160) {
            const s = e - 144;
            if (s !== 0) {
              this.pushArrayState(s), this.complete();
              continue e;
            } else
              r = [];
          } else {
            const s = e - 160;
            r = this.decodeString(s, 0);
          }
        else if (e === 192)
          r = null;
        else if (e === 194)
          r = false;
        else if (e === 195)
          r = true;
        else if (e === 202)
          r = this.readF32();
        else if (e === 203)
          r = this.readF64();
        else if (e === 204)
          r = this.readU8();
        else if (e === 205)
          r = this.readU16();
        else if (e === 206)
          r = this.readU32();
        else if (e === 207)
          this.useBigInt64 ? r = this.readU64AsBigInt() : r = this.readU64();
        else if (e === 208)
          r = this.readI8();
        else if (e === 209)
          r = this.readI16();
        else if (e === 210)
          r = this.readI32();
        else if (e === 211)
          this.useBigInt64 ? r = this.readI64AsBigInt() : r = this.readI64();
        else if (e === 217) {
          const s = this.lookU8();
          r = this.decodeString(s, 1);
        } else if (e === 218) {
          const s = this.lookU16();
          r = this.decodeString(s, 2);
        } else if (e === 219) {
          const s = this.lookU32();
          r = this.decodeString(s, 4);
        } else if (e === 220) {
          const s = this.readU16();
          if (s !== 0) {
            this.pushArrayState(s), this.complete();
            continue e;
          } else
            r = [];
        } else if (e === 221) {
          const s = this.readU32();
          if (s !== 0) {
            this.pushArrayState(s), this.complete();
            continue e;
          } else
            r = [];
        } else if (e === 222) {
          const s = this.readU16();
          if (s !== 0) {
            this.pushMapState(s), this.complete();
            continue e;
          } else
            r = {};
        } else if (e === 223) {
          const s = this.readU32();
          if (s !== 0) {
            this.pushMapState(s), this.complete();
            continue e;
          } else
            r = {};
        } else if (e === 196) {
          const s = this.lookU8();
          r = this.decodeBinary(s, 1);
        } else if (e === 197) {
          const s = this.lookU16();
          r = this.decodeBinary(s, 2);
        } else if (e === 198) {
          const s = this.lookU32();
          r = this.decodeBinary(s, 4);
        } else if (e === 212)
          r = this.decodeExtension(1, 0);
        else if (e === 213)
          r = this.decodeExtension(2, 0);
        else if (e === 214)
          r = this.decodeExtension(4, 0);
        else if (e === 215)
          r = this.decodeExtension(8, 0);
        else if (e === 216)
          r = this.decodeExtension(16, 0);
        else if (e === 199) {
          const s = this.lookU8();
          r = this.decodeExtension(s, 1);
        } else if (e === 200) {
          const s = this.lookU16();
          r = this.decodeExtension(s, 2);
        } else if (e === 201) {
          const s = this.lookU32();
          r = this.decodeExtension(s, 4);
        } else
          throw new tt$4(`Unrecognized type byte: ${Yn$2(e)}`);
        this.complete();
        const i = this.stack;
        for (; i.length > 0; ) {
          const s = i.top();
          if (s.type === Uo$1)
            if (s.array[s.position] = r, s.position++, s.position === s.size)
              r = s.array, i.release(s);
            else
              continue e;
          else if (s.type === Yi$1) {
            if (r === "__proto__")
              throw new tt$4("The key __proto__ is not allowed");
            s.key = this.mapKeyConverter(r), s.type = Ql$1;
            continue e;
          } else if (s.map[s.key] = r, s.readCount++, s.readCount === s.size)
            r = s.map, i.release(s);
          else {
            s.key = null, s.type = Yi$1;
            continue e;
          }
        }
        return r;
      }
    }
    readHeadByte() {
      return this.headByte === Ti$2 && (this.headByte = this.readU8()), this.headByte;
    }
    complete() {
      this.headByte = Ti$2;
    }
    readArraySize() {
      const e = this.readHeadByte();
      switch (e) {
        case 220:
          return this.readU16();
        case 221:
          return this.readU32();
        default: {
          if (e < 160)
            return e - 144;
          throw new tt$4(`Unrecognized array type byte: ${Yn$2(e)}`);
        }
      }
    }
    pushMapState(e) {
      if (e > this.maxMapLength)
        throw new tt$4(`Max length exceeded: map length (${e}) > maxMapLengthLength (${this.maxMapLength})`);
      this.stack.pushMapState(e);
    }
    pushArrayState(e) {
      if (e > this.maxArrayLength)
        throw new tt$4(`Max length exceeded: array length (${e}) > maxArrayLength (${this.maxArrayLength})`);
      this.stack.pushArrayState(e);
    }
    decodeString(e, r) {
      return !this.rawStrings || this.stateIsMapKey() ? this.decodeUtf8String(e, r) : this.decodeBinary(e, r);
    }
    /**
     * @throws {@link RangeError}
     */
    decodeUtf8String(e, r) {
      var n;
      if (e > this.maxStrLength)
        throw new tt$4(`Max length exceeded: UTF-8 byte length (${e}) > maxStrLength (${this.maxStrLength})`);
      if (this.bytes.byteLength < this.pos + r + e)
        throw qc$1;
      const i = this.pos + r;
      let s;
      return this.stateIsMapKey() && ((n = this.keyDecoder) != null && n.canBeCached(e)) ? s = this.keyDecoder.decode(this.bytes, i, e) : s = Xy$1(this.bytes, i, e), this.pos += r + e, s;
    }
    stateIsMapKey() {
      return this.stack.length > 0 ? this.stack.top().type === Yi$1 : false;
    }
    /**
     * @throws {@link RangeError}
     */
    decodeBinary(e, r) {
      if (e > this.maxBinLength)
        throw new tt$4(`Max length exceeded: bin length (${e}) > maxBinLength (${this.maxBinLength})`);
      if (!this.hasRemaining(e + r))
        throw qc$1;
      const i = this.pos + r, s = this.bytes.subarray(i, i + e);
      return this.pos += r + e, s;
    }
    decodeExtension(e, r) {
      if (e > this.maxExtLength)
        throw new tt$4(`Max length exceeded: ext length (${e}) > maxExtLength (${this.maxExtLength})`);
      const i = this.view.getInt8(this.pos + r), s = this.decodeBinary(
        e,
        r + 1
        /* extType */
      );
      return this.extensionCodec.decode(s, i, this.context);
    }
    lookU8() {
      return this.view.getUint8(this.pos);
    }
    lookU16() {
      return this.view.getUint16(this.pos);
    }
    lookU32() {
      return this.view.getUint32(this.pos);
    }
    readU8() {
      const e = this.view.getUint8(this.pos);
      return this.pos++, e;
    }
    readI8() {
      const e = this.view.getInt8(this.pos);
      return this.pos++, e;
    }
    readU16() {
      const e = this.view.getUint16(this.pos);
      return this.pos += 2, e;
    }
    readI16() {
      const e = this.view.getInt16(this.pos);
      return this.pos += 2, e;
    }
    readU32() {
      const e = this.view.getUint32(this.pos);
      return this.pos += 4, e;
    }
    readI32() {
      const e = this.view.getInt32(this.pos);
      return this.pos += 4, e;
    }
    readU64() {
      const e = tw$1(this.view, this.pos);
      return this.pos += 8, e;
    }
    readI64() {
      const e = Jl$1(this.view, this.pos);
      return this.pos += 8, e;
    }
    readU64AsBigInt() {
      const e = this.view.getBigUint64(this.pos);
      return this.pos += 8, e;
    }
    readI64AsBigInt() {
      const e = this.view.getBigInt64(this.pos);
      return this.pos += 8, e;
    }
    readF32() {
      const e = this.view.getFloat32(this.pos);
      return this.pos += 4, e;
    }
    readF64() {
      const e = this.view.getFloat64(this.pos);
      return this.pos += 8, e;
    }
  };
  function xw$1(t, e) {
    return new Iw$1(e).decode(t);
  }
  /*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function $w$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function ef$1(t, e) {
    return Array.isArray(e) ? e.length === 0 ? true : t ? e.every((r) => typeof r == "string") : e.every((r) => Number.isSafeInteger(r)) : false;
  }
  function an$2(t, e) {
    if (typeof e != "string")
      throw new Error(`${t}: string expected`);
    return true;
  }
  function Fa$1(t) {
    if (!Number.isSafeInteger(t))
      throw new Error(`invalid integer: ${t}`);
  }
  function ko$1(t) {
    if (!Array.isArray(t))
      throw new Error("array expected");
  }
  function cn$3(t, e) {
    if (!ef$1(true, e))
      throw new Error(`${t}: array of strings expected`);
  }
  function Sw$1(t, e) {
    if (!ef$1(false, e))
      throw new Error(`${t}: array of numbers expected`);
  }
  // @__NO_SIDE_EFFECTS__
  function Dw$1(...t) {
    const e = (n) => n, r = (n, o) => (a) => n(o(a)), i = t.map((n) => n.encode).reduceRight(r, e), s = t.map((n) => n.decode).reduce(r, e);
    return { encode: i, decode: s };
  }
  // @__NO_SIDE_EFFECTS__
  function Aw$1(t) {
    const e = t.split("") , r = e.length;
    cn$3("alphabet", e);
    const i = new Map(e.map((s, n) => [s, n]));
    return {
      encode: (s) => (ko$1(s), s.map((n) => {
        if (!Number.isSafeInteger(n) || n < 0 || n >= r)
          throw new Error(`alphabet.encode: digit index outside alphabet "${n}". Allowed: ${t}`);
        return e[n];
      })),
      decode: (s) => (ko$1(s), s.map((n) => {
        an$2("alphabet.decode", n);
        const o = i.get(n);
        if (o === void 0)
          throw new Error(`Unknown letter: "${n}". Allowed: ${t}`);
        return o;
      }))
    };
  }
  // @__NO_SIDE_EFFECTS__
  function Ow$1(t = "") {
    return an$2("join", t), {
      encode: (e) => (cn$3("join.decode", e), e.join(t)),
      decode: (e) => (an$2("join.decode", e), e.split(t))
    };
  }
  // @__NO_SIDE_EFFECTS__
  function Pw$1(t, e = "=") {
    return Fa$1(t), an$2("padding", e), {
      encode(r) {
        for (cn$3("padding.encode", r); r.length * t % 8; )
          r.push(e);
        return r;
      },
      decode(r) {
        cn$3("padding.decode", r);
        let i = r.length;
        if (i * t % 8)
          throw new Error("padding: invalid, string should have whole number of bytes");
        for (; i > 0 && r[i - 1] === e; i--)
          if ((i - 1) * t % 8 === 0)
            throw new Error("padding: invalid, string has too much padding");
        return r.slice(0, i);
      }
    };
  }
  const tf$1 = (t, e) => e === 0 ? t : tf$1(e, t % e), hn$2 = /* @__NO_SIDE_EFFECTS__ */ (t, e) => t + (e - tf$1(t, e)), Jn$2 = /* @__PURE__ */ (() => {
    let t = [];
    for (let e = 0; e < 40; e++)
      t.push(2 ** e);
    return t;
  })();
  function zc$1(t, e, r, i) {
    if (ko$1(t), e <= 0 || e > 32)
      throw new Error(`convertRadix2: wrong from=${e}`);
    if (r <= 0 || r > 32)
      throw new Error(`convertRadix2: wrong to=${r}`);
    if (/* @__PURE__ */ hn$2(e, r) > 32)
      throw new Error(`convertRadix2: carry overflow from=${e} to=${r} carryBits=${/* @__PURE__ */ hn$2(e, r)}`);
    let s = 0, n = 0;
    const o = Jn$2[e], a = Jn$2[r] - 1, c = [];
    for (const h of t) {
      if (Fa$1(h), h >= o)
        throw new Error(`convertRadix2: invalid data word=${h} from=${e}`);
      if (s = s << e | h, n + e > 32)
        throw new Error(`convertRadix2: carry overflow pos=${n} from=${e}`);
      for (n += e; n >= r; n -= r)
        c.push((s >> n - r & a) >>> 0);
      const u = Jn$2[n];
      if (u === void 0)
        throw new Error("invalid carry");
      s &= u - 1;
    }
    if (s = s << r - n & a, !i && n >= e)
      throw new Error("Excess padding");
    if (!i && s > 0)
      throw new Error(`Non-zero padding: ${s}`);
    return i && n > 0 && c.push(s >>> 0), c;
  }
  // @__NO_SIDE_EFFECTS__
  function Cw$1(t, e = false) {
    if (Fa$1(t), t > 32)
      ;
    if (/* @__PURE__ */ hn$2(8, t) > 32 || /* @__PURE__ */ hn$2(t, 8) > 32)
      throw new Error("radix2: carry overflow");
    return {
      encode: (r) => {
        if (!$w$1(r))
          throw new Error("radix2.encode input should be Uint8Array");
        return zc$1(Array.from(r), 8, t, !e);
      },
      decode: (r) => (Sw$1("radix2.decode", r), Uint8Array.from(zc$1(r, t, 8, e)))
    };
  }
  const Tw$1 = /* @__PURE__ */ Dw$1(/* @__PURE__ */ Cw$1(5), /* @__PURE__ */ Aw$1("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"), /* @__PURE__ */ Pw$1(5), /* @__PURE__ */ Ow$1("")), Rw$1 = (t) => JSON.stringify(t, (e, r) => typeof r == "bigint" ? r.toString() + "n" : r), Bw$1 = (t) => {
    const e = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g, r = t.replace(e, '$1"$2n"$3');
    return JSON.parse(r, (i, s) => typeof s == "string" && s.match(/^\d+n$/) ? BigInt(s.substring(0, s.length - 1)) : s);
  };
  function Br(t) {
    if (typeof t != "string")
      throw new Error(`Cannot safe json parse value of type ${typeof t}`);
    try {
      return Bw$1(t);
    } catch {
      return t;
    }
  }
  function Wt$4(t) {
    return typeof t == "string" ? t : Rw$1(t) || "";
  }
  function Fw$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function rf$1(t, ...e) {
    if (!Fw$1(t)) throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length)) throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function Hc$1(t, e = true) {
    if (t.destroyed) throw new Error("Hash instance has been destroyed");
    if (e && t.finished) throw new Error("Hash#digest() has already been called");
  }
  function Nw$1(t, e) {
    rf$1(t);
    const r = e.outputLen;
    if (t.length < r) throw new Error("digestInto() expects output buffer of length at least " + r);
  }
  const Kr$1 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Zn$2 = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength);
  function Uw$1(t) {
    if (typeof t != "string") throw new Error("utf8ToBytes expected string, got " + typeof t);
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function sf$1(t) {
    return typeof t == "string" && (t = Uw$1(t)), rf$1(t), t;
  }
  let kw$1 = class kw {
    clone() {
      return this._cloneInto();
    }
  };
  function Lw$1(t) {
    const e = (i) => t().update(sf$1(i)).digest(), r = t();
    return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
  }
  function nf$1(t = 32) {
    if (Kr$1 && typeof Kr$1.getRandomValues == "function") return Kr$1.getRandomValues(new Uint8Array(t));
    if (Kr$1 && typeof Kr$1.randomBytes == "function") return Kr$1.randomBytes(t);
    throw new Error("crypto.getRandomValues must be defined");
  }
  function jw$1(t, e, r, i) {
    if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, r, i);
    const s = BigInt(32), n = BigInt(4294967295), o = Number(r >> s & n), a = Number(r & n), c = i ? 4 : 0, h = i ? 0 : 4;
    t.setUint32(e + c, o, i), t.setUint32(e + h, a, i);
  }
  let Mw$1 = class Mw extends kw$1 {
    constructor(e, r, i, s) {
      super(), this.blockLen = e, this.outputLen = r, this.padOffset = i, this.isLE = s, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e), this.view = Zn$2(this.buffer);
    }
    update(e) {
      Hc$1(this);
      const { view: r, buffer: i, blockLen: s } = this;
      e = sf$1(e);
      const n = e.length;
      for (let o = 0; o < n; ) {
        const a = Math.min(s - this.pos, n - o);
        if (a === s) {
          const c = Zn$2(e);
          for (; s <= n - o; o += s) this.process(c, o);
          continue;
        }
        i.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === s && (this.process(r, 0), this.pos = 0);
      }
      return this.length += e.length, this.roundClean(), this;
    }
    digestInto(e) {
      Hc$1(this), Nw$1(e, this), this.finished = true;
      const { buffer: r, view: i, blockLen: s, isLE: n } = this;
      let { pos: o } = this;
      r[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > s - o && (this.process(i, 0), o = 0);
      for (let l = o; l < s; l++) r[l] = 0;
      jw$1(i, s - 8, BigInt(this.length * 8), n), this.process(i, 0);
      const a = Zn$2(e), c = this.outputLen;
      if (c % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
      const h = c / 4, u = this.get();
      if (h > u.length) throw new Error("_sha2: outputLen bigger than state");
      for (let l = 0; l < h; l++) a.setUint32(4 * l, u[l], n);
    }
    digest() {
      const { buffer: e, outputLen: r } = this;
      this.digestInto(e);
      const i = e.slice(0, r);
      return this.destroy(), i;
    }
    _cloneInto(e) {
      e || (e = new this.constructor()), e.set(...this.get());
      const { blockLen: r, buffer: i, length: s, finished: n, destroyed: o, pos: a } = this;
      return e.length = s, e.pos = a, e.finished = n, e.destroyed = o, s % r && e.buffer.set(i), e;
    }
  };
  const As$1 = BigInt(2 ** 32 - 1), Lo$1 = BigInt(32);
  function of$1(t, e = false) {
    return e ? { h: Number(t & As$1), l: Number(t >> Lo$1 & As$1) } : { h: Number(t >> Lo$1 & As$1) | 0, l: Number(t & As$1) | 0 };
  }
  function qw$1(t, e = false) {
    let r = new Uint32Array(t.length), i = new Uint32Array(t.length);
    for (let s = 0; s < t.length; s++) {
      const { h: n, l: o } = of$1(t[s], e);
      [r[s], i[s]] = [n, o];
    }
    return [r, i];
  }
  const zw$1 = (t, e) => BigInt(t >>> 0) << Lo$1 | BigInt(e >>> 0), Hw$1 = (t, e, r) => t >>> r, Vw$1 = (t, e, r) => t << 32 - r | e >>> r, Kw$1 = (t, e, r) => t >>> r | e << 32 - r, Ww$1 = (t, e, r) => t << 32 - r | e >>> r, Gw$1 = (t, e, r) => t << 64 - r | e >>> r - 32, Yw$1 = (t, e, r) => t >>> r - 32 | e << 64 - r, Jw$1 = (t, e) => e, Zw$1 = (t, e) => t, Qw$1 = (t, e, r) => t << r | e >>> 32 - r, Xw$1 = (t, e, r) => e << r | t >>> 32 - r, e0$1 = (t, e, r) => e << r - 32 | t >>> 64 - r, t0$1 = (t, e, r) => t << r - 32 | e >>> 64 - r;
  function r0$1(t, e, r, i) {
    const s = (e >>> 0) + (i >>> 0);
    return { h: t + r + (s / 2 ** 32 | 0) | 0, l: s | 0 };
  }
  const i0$1 = (t, e, r) => (t >>> 0) + (e >>> 0) + (r >>> 0), s0$1 = (t, e, r, i) => e + r + i + (t / 2 ** 32 | 0) | 0, n0$1 = (t, e, r, i) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (i >>> 0), o0$1 = (t, e, r, i, s) => e + r + i + s + (t / 2 ** 32 | 0) | 0, a0$1 = (t, e, r, i, s) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (i >>> 0) + (s >>> 0), c0$1 = (t, e, r, i, s, n) => e + r + i + s + n + (t / 2 ** 32 | 0) | 0, G$2 = { fromBig: of$1, split: qw$1, toBig: zw$1, shrSH: Hw$1, shrSL: Vw$1, rotrSH: Kw$1, rotrSL: Ww$1, rotrBH: Gw$1, rotrBL: Yw$1, rotr32H: Jw$1, rotr32L: Zw$1, rotlSH: Qw$1, rotlSL: Xw$1, rotlBH: e0$1, rotlBL: t0$1, add: r0$1, add3L: i0$1, add3H: s0$1, add4L: n0$1, add4H: o0$1, add5H: c0$1, add5L: a0$1 }, [h0$1, u0$1] = G$2.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))), Yt$4 = new Uint32Array(80), Jt$2 = new Uint32Array(80);
  let l0$1 = class l0 extends Mw$1 {
    constructor() {
      super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
    }
    get() {
      const { Ah: e, Al: r, Bh: i, Bl: s, Ch: n, Cl: o, Dh: a, Dl: c, Eh: h, El: u, Fh: l, Fl: f, Gh: p, Gl: d, Hh: g, Hl: m } = this;
      return [e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m];
    }
    set(e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m) {
      this.Ah = e | 0, this.Al = r | 0, this.Bh = i | 0, this.Bl = s | 0, this.Ch = n | 0, this.Cl = o | 0, this.Dh = a | 0, this.Dl = c | 0, this.Eh = h | 0, this.El = u | 0, this.Fh = l | 0, this.Fl = f | 0, this.Gh = p | 0, this.Gl = d | 0, this.Hh = g | 0, this.Hl = m | 0;
    }
    process(e, r) {
      for (let E = 0; E < 16; E++, r += 4) Yt$4[E] = e.getUint32(r), Jt$2[E] = e.getUint32(r += 4);
      for (let E = 16; E < 80; E++) {
        const P = Yt$4[E - 15] | 0, A = Jt$2[E - 15] | 0, k = G$2.rotrSH(P, A, 1) ^ G$2.rotrSH(P, A, 8) ^ G$2.shrSH(P, A, 7), U = G$2.rotrSL(P, A, 1) ^ G$2.rotrSL(P, A, 8) ^ G$2.shrSL(P, A, 7), R = Yt$4[E - 2] | 0, b = Jt$2[E - 2] | 0, C = G$2.rotrSH(R, b, 19) ^ G$2.rotrBH(R, b, 61) ^ G$2.shrSH(R, b, 6), S = G$2.rotrSL(R, b, 19) ^ G$2.rotrBL(R, b, 61) ^ G$2.shrSL(R, b, 6), D = G$2.add4L(U, S, Jt$2[E - 7], Jt$2[E - 16]), T = G$2.add4H(D, k, C, Yt$4[E - 7], Yt$4[E - 16]);
        Yt$4[E] = T | 0, Jt$2[E] = D | 0;
      }
      let { Ah: i, Al: s, Bh: n, Bl: o, Ch: a, Cl: c, Dh: h, Dl: u, Eh: l, El: f, Fh: p, Fl: d, Gh: g, Gl: m, Hh: _, Hl: I } = this;
      for (let E = 0; E < 80; E++) {
        const P = G$2.rotrSH(l, f, 14) ^ G$2.rotrSH(l, f, 18) ^ G$2.rotrBH(l, f, 41), A = G$2.rotrSL(l, f, 14) ^ G$2.rotrSL(l, f, 18) ^ G$2.rotrBL(l, f, 41), k = l & p ^ ~l & g, U = f & d ^ ~f & m, R = G$2.add5L(I, A, U, u0$1[E], Jt$2[E]), b = G$2.add5H(R, _, P, k, h0$1[E], Yt$4[E]), C = R | 0, S = G$2.rotrSH(i, s, 28) ^ G$2.rotrBH(i, s, 34) ^ G$2.rotrBH(i, s, 39), D = G$2.rotrSL(i, s, 28) ^ G$2.rotrBL(i, s, 34) ^ G$2.rotrBL(i, s, 39), T = i & n ^ i & a ^ n & a, N = s & o ^ s & c ^ o & c;
        _ = g | 0, I = m | 0, g = p | 0, m = d | 0, p = l | 0, d = f | 0, { h: l, l: f } = G$2.add(h | 0, u | 0, b | 0, C | 0), h = a | 0, u = c | 0, a = n | 0, c = o | 0, n = i | 0, o = s | 0;
        const y = G$2.add3L(C, D, N);
        i = G$2.add3H(y, b, S, T), s = y | 0;
      }
      (({ h: i, l: s } = G$2.add(this.Ah | 0, this.Al | 0, i | 0, s | 0))), { h: n, l: o } = G$2.add(this.Bh | 0, this.Bl | 0, n | 0, o | 0), { h: a, l: c } = G$2.add(this.Ch | 0, this.Cl | 0, a | 0, c | 0), { h, l: u } = G$2.add(this.Dh | 0, this.Dl | 0, h | 0, u | 0), { h: l, l: f } = G$2.add(this.Eh | 0, this.El | 0, l | 0, f | 0), { h: p, l: d } = G$2.add(this.Fh | 0, this.Fl | 0, p | 0, d | 0), { h: g, l: m } = G$2.add(this.Gh | 0, this.Gl | 0, g | 0, m | 0), { h: _, l: I } = G$2.add(this.Hh | 0, this.Hl | 0, _ | 0, I | 0), this.set(i, s, n, o, a, c, h, u, l, f, p, d, g, m, _, I);
    }
    roundClean() {
      Yt$4.fill(0), Jt$2.fill(0);
    }
    destroy() {
      this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
  };
  const f0$1 = Lw$1(() => new l0$1());
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Na$1 = BigInt(0), af$1 = BigInt(1), d0$1 = BigInt(2);
  function Ua$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function ka$1(t) {
    if (!Ua$1(t)) throw new Error("Uint8Array expected");
  }
  function Qn$2(t, e) {
    if (typeof e != "boolean") throw new Error(t + " boolean expected, got " + e);
  }
  const p0$1 = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
  function La$1(t) {
    ka$1(t);
    let e = "";
    for (let r = 0; r < t.length; r++) e += p0$1[t[r]];
    return e;
  }
  function cf$1(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    return t === "" ? Na$1 : BigInt("0x" + t);
  }
  const kt$2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
  function Vc$1(t) {
    if (t >= kt$2._0 && t <= kt$2._9) return t - kt$2._0;
    if (t >= kt$2.A && t <= kt$2.F) return t - (kt$2.A - 10);
    if (t >= kt$2.a && t <= kt$2.f) return t - (kt$2.a - 10);
  }
  function hf$1(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    const e = t.length, r = e / 2;
    if (e % 2) throw new Error("hex string expected, got unpadded hex of length " + e);
    const i = new Uint8Array(r);
    for (let s = 0, n = 0; s < r; s++, n += 2) {
      const o = Vc$1(t.charCodeAt(n)), a = Vc$1(t.charCodeAt(n + 1));
      if (o === void 0 || a === void 0) {
        const c = t[n] + t[n + 1];
        throw new Error('hex string expected, got non-hex character "' + c + '" at index ' + n);
      }
      i[s] = o * 16 + a;
    }
    return i;
  }
  function g0$1(t) {
    return cf$1(La$1(t));
  }
  function Js$1(t) {
    return ka$1(t), cf$1(La$1(Uint8Array.from(t).reverse()));
  }
  function uf$1(t, e) {
    return hf$1(t.toString(16).padStart(e * 2, "0"));
  }
  function jo$1(t, e) {
    return uf$1(t, e).reverse();
  }
  function Lt$4(t, e, r) {
    let i;
    if (typeof e == "string") try {
      i = hf$1(e);
    } catch (n) {
      throw new Error(t + " must be hex string or Uint8Array, cause: " + n);
    }
    else if (Ua$1(e)) i = Uint8Array.from(e);
    else throw new Error(t + " must be hex string or Uint8Array");
    const s = i.length;
    if (typeof r == "number" && s !== r) throw new Error(t + " of length " + r + " expected, got " + s);
    return i;
  }
  function Kc$1(...t) {
    let e = 0;
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      ka$1(s), e += s.length;
    }
    const r = new Uint8Array(e);
    for (let i = 0, s = 0; i < t.length; i++) {
      const n = t[i];
      r.set(n, s), s += n.length;
    }
    return r;
  }
  const Xn$2 = (t) => typeof t == "bigint" && Na$1 <= t;
  function y0$1(t, e, r) {
    return Xn$2(t) && Xn$2(e) && Xn$2(r) && e <= t && t < r;
  }
  function Ri$2(t, e, r, i) {
    if (!y0$1(e, r, i)) throw new Error("expected valid " + t + ": " + r + " <= n < " + i + ", got " + e);
  }
  function w0$1(t) {
    let e;
    for (e = 0; t > Na$1; t >>= af$1, e += 1) ;
    return e;
  }
  const m0$1 = (t) => (d0$1 << BigInt(t - 1)) - af$1, b0$1 = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || Ua$1(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e) => e.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
  function ja$1(t, e, r = {}) {
    const i = (s, n, o) => {
      const a = b0$1[n];
      if (typeof a != "function") throw new Error("invalid validator function");
      const c = t[s];
      if (!(o && c === void 0) && !a(c, t)) throw new Error("param " + String(s) + " is invalid. Expected " + n + ", got " + c);
    };
    for (const [s, n] of Object.entries(e)) i(s, n, false);
    for (const [s, n] of Object.entries(r)) i(s, n, true);
    return t;
  }
  function Wc$1(t) {
    const e = /* @__PURE__ */ new WeakMap();
    return (r, ...i) => {
      const s = e.get(r);
      if (s !== void 0) return s;
      const n = t(r, ...i);
      return e.set(r, n), n;
    };
  }
  const Ie$5 = BigInt(0), de$3 = BigInt(1), xr$1 = BigInt(2), v0$1 = BigInt(3), Mo$1 = BigInt(4), Gc$1 = BigInt(5), Yc$1 = BigInt(8);
  function me$4(t, e) {
    const r = t % e;
    return r >= Ie$5 ? r : e + r;
  }
  function E0$1(t, e, r) {
    if (e < Ie$5) throw new Error("invalid exponent, negatives unsupported");
    if (r <= Ie$5) throw new Error("invalid modulus");
    if (r === de$3) return Ie$5;
    let i = de$3;
    for (; e > Ie$5; ) e & de$3 && (i = i * t % r), t = t * t % r, e >>= de$3;
    return i;
  }
  function $t$4(t, e, r) {
    let i = t;
    for (; e-- > Ie$5; ) i *= i, i %= r;
    return i;
  }
  function Jc$1(t, e) {
    if (t === Ie$5) throw new Error("invert: expected non-zero number");
    if (e <= Ie$5) throw new Error("invert: expected positive modulus, got " + e);
    let r = me$4(t, e), i = e, s = Ie$5, n = de$3;
    for (; r !== Ie$5; ) {
      const o = i / r, a = i % r, c = s - n * o;
      i = r, r = a, s = n, n = c;
    }
    if (i !== de$3) throw new Error("invert: does not exist");
    return me$4(s, e);
  }
  function _0$1(t) {
    const e = (t - de$3) / xr$1;
    let r, i, s;
    for (r = t - de$3, i = 0; r % xr$1 === Ie$5; r /= xr$1, i++) ;
    for (s = xr$1; s < t && E0$1(s, e, t) !== t - de$3; s++) if (s > 1e3) throw new Error("Cannot find square root: likely non-prime P");
    if (i === 1) {
      const o = (t + de$3) / Mo$1;
      return function(a, c) {
        const h = a.pow(c, o);
        if (!a.eql(a.sqr(h), c)) throw new Error("Cannot find square root");
        return h;
      };
    }
    const n = (r + de$3) / xr$1;
    return function(o, a) {
      if (o.pow(a, e) === o.neg(o.ONE)) throw new Error("Cannot find square root");
      let c = i, h = o.pow(o.mul(o.ONE, s), r), u = o.pow(a, n), l = o.pow(a, r);
      for (; !o.eql(l, o.ONE); ) {
        if (o.eql(l, o.ZERO)) return o.ZERO;
        let f = 1;
        for (let d = o.sqr(l); f < c && !o.eql(d, o.ONE); f++) d = o.sqr(d);
        const p = o.pow(h, de$3 << BigInt(c - f - 1));
        h = o.sqr(p), u = o.mul(u, p), l = o.mul(l, h), c = f;
      }
      return u;
    };
  }
  function I0$1(t) {
    if (t % Mo$1 === v0$1) {
      const e = (t + de$3) / Mo$1;
      return function(r, i) {
        const s = r.pow(i, e);
        if (!r.eql(r.sqr(s), i)) throw new Error("Cannot find square root");
        return s;
      };
    }
    if (t % Yc$1 === Gc$1) {
      const e = (t - Gc$1) / Yc$1;
      return function(r, i) {
        const s = r.mul(i, xr$1), n = r.pow(s, e), o = r.mul(i, n), a = r.mul(r.mul(o, xr$1), n), c = r.mul(o, r.sub(a, r.ONE));
        if (!r.eql(r.sqr(c), i)) throw new Error("Cannot find square root");
        return c;
      };
    }
    return _0$1(t);
  }
  const x0$1 = (t, e) => (me$4(t, e) & de$3) === de$3, $0$1 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
  function S0$1(t) {
    const e = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, r = $0$1.reduce((i, s) => (i[s] = "function", i), e);
    return ja$1(t, r);
  }
  function D0$1(t, e, r) {
    if (r < Ie$5) throw new Error("invalid exponent, negatives unsupported");
    if (r === Ie$5) return t.ONE;
    if (r === de$3) return e;
    let i = t.ONE, s = e;
    for (; r > Ie$5; ) r & de$3 && (i = t.mul(i, s)), s = t.sqr(s), r >>= de$3;
    return i;
  }
  function A0$1(t, e) {
    const r = new Array(e.length), i = e.reduce((n, o, a) => t.is0(o) ? n : (r[a] = n, t.mul(n, o)), t.ONE), s = t.inv(i);
    return e.reduceRight((n, o, a) => t.is0(o) ? n : (r[a] = t.mul(n, r[a]), t.mul(n, o)), s), r;
  }
  function lf$1(t, e) {
    const r = e !== void 0 ? e : t.toString(2).length, i = Math.ceil(r / 8);
    return { nBitLength: r, nByteLength: i };
  }
  function ff$1(t, e, r = false, i = {}) {
    if (t <= Ie$5) throw new Error("invalid field: expected ORDER > 0, got " + t);
    const { nBitLength: s, nByteLength: n } = lf$1(t, e);
    if (n > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
    let o;
    const a = Object.freeze({ ORDER: t, isLE: r, BITS: s, BYTES: n, MASK: m0$1(s), ZERO: Ie$5, ONE: de$3, create: (c) => me$4(c, t), isValid: (c) => {
      if (typeof c != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof c);
      return Ie$5 <= c && c < t;
    }, is0: (c) => c === Ie$5, isOdd: (c) => (c & de$3) === de$3, neg: (c) => me$4(-c, t), eql: (c, h) => c === h, sqr: (c) => me$4(c * c, t), add: (c, h) => me$4(c + h, t), sub: (c, h) => me$4(c - h, t), mul: (c, h) => me$4(c * h, t), pow: (c, h) => D0$1(a, c, h), div: (c, h) => me$4(c * Jc$1(h, t), t), sqrN: (c) => c * c, addN: (c, h) => c + h, subN: (c, h) => c - h, mulN: (c, h) => c * h, inv: (c) => Jc$1(c, t), sqrt: i.sqrt || ((c) => (o || (o = I0$1(t)), o(a, c))), invertBatch: (c) => A0$1(a, c), cmov: (c, h, u) => u ? h : c, toBytes: (c) => r ? jo$1(c, n) : uf$1(c, n), fromBytes: (c) => {
      if (c.length !== n) throw new Error("Field.fromBytes: expected " + n + " bytes, got " + c.length);
      return r ? Js$1(c) : g0$1(c);
    } });
    return Object.freeze(a);
  }
  const Zc$1 = BigInt(0), Os$1 = BigInt(1);
  function eo$2(t, e) {
    const r = e.negate();
    return t ? r : e;
  }
  function df$1(t, e) {
    if (!Number.isSafeInteger(t) || t <= 0 || t > e) throw new Error("invalid window size, expected [1.." + e + "], got W=" + t);
  }
  function to$2(t, e) {
    df$1(t, e);
    const r = Math.ceil(e / t) + 1, i = 2 ** (t - 1);
    return { windows: r, windowSize: i };
  }
  function O0$1(t, e) {
    if (!Array.isArray(t)) throw new Error("array expected");
    t.forEach((r, i) => {
      if (!(r instanceof e)) throw new Error("invalid point at index " + i);
    });
  }
  function P0$1(t, e) {
    if (!Array.isArray(t)) throw new Error("array of scalars expected");
    t.forEach((r, i) => {
      if (!e.isValid(r)) throw new Error("invalid scalar at index " + i);
    });
  }
  const ro$2 = /* @__PURE__ */ new WeakMap(), pf$1 = /* @__PURE__ */ new WeakMap();
  function io$2(t) {
    return pf$1.get(t) || 1;
  }
  function C0$1(t, e) {
    return { constTimeNegate: eo$2, hasPrecomputes(r) {
      return io$2(r) !== 1;
    }, unsafeLadder(r, i, s = t.ZERO) {
      let n = r;
      for (; i > Zc$1; ) i & Os$1 && (s = s.add(n)), n = n.double(), i >>= Os$1;
      return s;
    }, precomputeWindow(r, i) {
      const { windows: s, windowSize: n } = to$2(i, e), o = [];
      let a = r, c = a;
      for (let h = 0; h < s; h++) {
        c = a, o.push(c);
        for (let u = 1; u < n; u++) c = c.add(a), o.push(c);
        a = c.double();
      }
      return o;
    }, wNAF(r, i, s) {
      const { windows: n, windowSize: o } = to$2(r, e);
      let a = t.ZERO, c = t.BASE;
      const h = BigInt(2 ** r - 1), u = 2 ** r, l = BigInt(r);
      for (let f = 0; f < n; f++) {
        const p = f * o;
        let d = Number(s & h);
        s >>= l, d > o && (d -= u, s += Os$1);
        const g = p, m = p + Math.abs(d) - 1, _ = f % 2 !== 0, I = d < 0;
        d === 0 ? c = c.add(eo$2(_, i[g])) : a = a.add(eo$2(I, i[m]));
      }
      return { p: a, f: c };
    }, wNAFUnsafe(r, i, s, n = t.ZERO) {
      const { windows: o, windowSize: a } = to$2(r, e), c = BigInt(2 ** r - 1), h = 2 ** r, u = BigInt(r);
      for (let l = 0; l < o; l++) {
        const f = l * a;
        if (s === Zc$1) break;
        let p = Number(s & c);
        if (s >>= u, p > a && (p -= h, s += Os$1), p === 0) continue;
        let d = i[f + Math.abs(p) - 1];
        p < 0 && (d = d.negate()), n = n.add(d);
      }
      return n;
    }, getPrecomputes(r, i, s) {
      let n = ro$2.get(i);
      return n || (n = this.precomputeWindow(i, r), r !== 1 && ro$2.set(i, s(n))), n;
    }, wNAFCached(r, i, s) {
      const n = io$2(r);
      return this.wNAF(n, this.getPrecomputes(n, r, s), i);
    }, wNAFCachedUnsafe(r, i, s, n) {
      const o = io$2(r);
      return o === 1 ? this.unsafeLadder(r, i, n) : this.wNAFUnsafe(o, this.getPrecomputes(o, r, s), i, n);
    }, setWindowSize(r, i) {
      df$1(i, e), pf$1.set(r, i), ro$2.delete(r);
    } };
  }
  function T0$1(t, e, r, i) {
    if (O0$1(r, t), P0$1(i, e), r.length !== i.length) throw new Error("arrays of points and scalars must have equal length");
    const s = t.ZERO, n = w0$1(BigInt(r.length)), o = n > 12 ? n - 3 : n > 4 ? n - 2 : n ? 2 : 1, a = (1 << o) - 1, c = new Array(a + 1).fill(s), h = Math.floor((e.BITS - 1) / o) * o;
    let u = s;
    for (let l = h; l >= 0; l -= o) {
      c.fill(s);
      for (let p = 0; p < i.length; p++) {
        const d = i[p], g = Number(d >> BigInt(l) & BigInt(a));
        c[g] = c[g].add(r[p]);
      }
      let f = s;
      for (let p = c.length - 1, d = s; p > 0; p--) d = d.add(c[p]), f = f.add(d);
      if (u = u.add(f), l !== 0) for (let p = 0; p < o; p++) u = u.double();
    }
    return u;
  }
  function R0$1(t) {
    return S0$1(t.Fp), ja$1(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...lf$1(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
  }
  const yt$4 = BigInt(0), qe$4 = BigInt(1), Ps$1 = BigInt(2), B0$1 = BigInt(8), F0$1 = { zip215: true };
  function N0$1(t) {
    const e = R0$1(t);
    return ja$1(t, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e });
  }
  function U0$1(t) {
    const e = N0$1(t), { Fp: r, n: i, prehash: s, hash: n, randomBytes: o, nByteLength: a, h: c } = e, h = Ps$1 << BigInt(a * 8) - qe$4, u = r.create, l = ff$1(e.n, e.nBitLength), f = e.uvRatio || ((y, w) => {
      try {
        return { isValid: !0, value: r.sqrt(y * r.inv(w)) };
      } catch {
        return { isValid: false, value: yt$4 };
      }
    }), p = e.adjustScalarBytes || ((y) => y), d = e.domain || ((y, w, v) => {
      if (Qn$2("phflag", v), w.length || v) throw new Error("Contexts/pre-hash are not supported");
      return y;
    });
    function g(y, w) {
      Ri$2("coordinate " + y, w, yt$4, h);
    }
    function m(y) {
      if (!(y instanceof E)) throw new Error("ExtendedPoint expected");
    }
    const _ = Wc$1((y, w) => {
      const { ex: v, ey: $, ez: x } = y, O = y.is0();
      w == null && (w = O ? B0$1 : r.inv(x));
      const B = u(v * w), q = u($ * w), H = u(x * w);
      if (O) return { x: yt$4, y: qe$4 };
      if (H !== qe$4) throw new Error("invZ was invalid");
      return { x: B, y: q };
    }), I = Wc$1((y) => {
      const { a: w, d: v } = e;
      if (y.is0()) throw new Error("bad point: ZERO");
      const { ex: $, ey: x, ez: O, et: B } = y, q = u($ * $), H = u(x * x), M = u(O * O), V = u(M * M), K = u(q * w), ie = u(M * u(K + H)), re = u(V + u(v * u(q * H)));
      if (ie !== re) throw new Error("bad point: equation left != right (1)");
      const Y = u($ * x), fe = u(O * B);
      if (Y !== fe) throw new Error("bad point: equation left != right (2)");
      return true;
    });
    class E {
      constructor(w, v, $, x) {
        this.ex = w, this.ey = v, this.ez = $, this.et = x, g("x", w), g("y", v), g("z", $), g("t", x), Object.freeze(this);
      }
      get x() {
        return this.toAffine().x;
      }
      get y() {
        return this.toAffine().y;
      }
      static fromAffine(w) {
        if (w instanceof E) throw new Error("extended point not allowed");
        const { x: v, y: $ } = w || {};
        return g("x", v), g("y", $), new E(v, $, qe$4, u(v * $));
      }
      static normalizeZ(w) {
        const v = r.invertBatch(w.map(($) => $.ez));
        return w.map(($, x) => $.toAffine(v[x])).map(E.fromAffine);
      }
      static msm(w, v) {
        return T0$1(E, l, w, v);
      }
      _setWindowSize(w) {
        k.setWindowSize(this, w);
      }
      assertValidity() {
        I(this);
      }
      equals(w) {
        m(w);
        const { ex: v, ey: $, ez: x } = this, { ex: O, ey: B, ez: q } = w, H = u(v * q), M = u(O * x), V = u($ * q), K = u(B * x);
        return H === M && V === K;
      }
      is0() {
        return this.equals(E.ZERO);
      }
      negate() {
        return new E(u(-this.ex), this.ey, this.ez, u(-this.et));
      }
      double() {
        const { a: w } = e, { ex: v, ey: $, ez: x } = this, O = u(v * v), B = u($ * $), q = u(Ps$1 * u(x * x)), H = u(w * O), M = v + $, V = u(u(M * M) - O - B), K = H + B, ie = K - q, re = H - B, Y = u(V * ie), fe = u(K * re), xe = u(V * re), wr = u(ie * K);
        return new E(Y, fe, wr, xe);
      }
      add(w) {
        m(w);
        const { a: v, d: $ } = e, { ex: x, ey: O, ez: B, et: q } = this, { ex: H, ey: M, ez: V, et: K } = w;
        if (v === BigInt(-1)) {
          const dc = u((O - x) * (M + H)), pc = u((O + x) * (M - H)), zn = u(pc - dc);
          if (zn === yt$4) return this.double();
          const gc = u(B * Ps$1 * K), yc = u(q * Ps$1 * V), wc = yc + gc, mc = pc + dc, bc = yc - gc, Mp = u(wc * zn), qp = u(mc * bc), zp = u(wc * bc), Hp = u(zn * mc);
          return new E(Mp, qp, Hp, zp);
        }
        const ie = u(x * H), re = u(O * M), Y = u(q * $ * K), fe = u(B * V), xe = u((x + O) * (H + M) - ie - re), wr = fe - Y, $s = fe + Y, zr = u(re - v * ie), qn = u(xe * wr), kp = u($s * zr), Lp = u(xe * zr), jp = u(wr * $s);
        return new E(qn, kp, jp, Lp);
      }
      subtract(w) {
        return this.add(w.negate());
      }
      wNAF(w) {
        return k.wNAFCached(this, w, E.normalizeZ);
      }
      multiply(w) {
        const v = w;
        Ri$2("scalar", v, qe$4, i);
        const { p: $, f: x } = this.wNAF(v);
        return E.normalizeZ([$, x])[0];
      }
      multiplyUnsafe(w, v = E.ZERO) {
        const $ = w;
        return Ri$2("scalar", $, yt$4, i), $ === yt$4 ? A : this.is0() || $ === qe$4 ? this : k.wNAFCachedUnsafe(this, $, E.normalizeZ, v);
      }
      isSmallOrder() {
        return this.multiplyUnsafe(c).is0();
      }
      isTorsionFree() {
        return k.unsafeLadder(this, i).is0();
      }
      toAffine(w) {
        return _(this, w);
      }
      clearCofactor() {
        const { h: w } = e;
        return w === qe$4 ? this : this.multiplyUnsafe(w);
      }
      static fromHex(w, v = false) {
        const { d: $, a: x } = e, O = r.BYTES;
        w = Lt$4("pointHex", w, O), Qn$2("zip215", v);
        const B = w.slice(), q = w[O - 1];
        B[O - 1] = q & -129;
        const H = Js$1(B), M = v ? h : r.ORDER;
        Ri$2("pointHex.y", H, yt$4, M);
        const V = u(H * H), K = u(V - qe$4), ie = u($ * V - x);
        let { isValid: re, value: Y } = f(K, ie);
        if (!re) throw new Error("Point.fromHex: invalid y coordinate");
        const fe = (Y & qe$4) === qe$4, xe = (q & 128) !== 0;
        if (!v && Y === yt$4 && xe) throw new Error("Point.fromHex: x=0 and x_0=1");
        return xe !== fe && (Y = u(-Y)), E.fromAffine({ x: Y, y: H });
      }
      static fromPrivateKey(w) {
        return b(w).point;
      }
      toRawBytes() {
        const { x: w, y: v } = this.toAffine(), $ = jo$1(v, r.BYTES);
        return $[$.length - 1] |= w & qe$4 ? 128 : 0, $;
      }
      toHex() {
        return La$1(this.toRawBytes());
      }
    }
    E.BASE = new E(e.Gx, e.Gy, qe$4, u(e.Gx * e.Gy)), E.ZERO = new E(yt$4, qe$4, qe$4, yt$4);
    const { BASE: P, ZERO: A } = E, k = C0$1(E, a * 8);
    function U(y) {
      return me$4(y, i);
    }
    function R(y) {
      return U(Js$1(y));
    }
    function b(y) {
      const w = r.BYTES;
      y = Lt$4("private key", y, w);
      const v = Lt$4("hashed private key", n(y), 2 * w), $ = p(v.slice(0, w)), x = v.slice(w, 2 * w), O = R($), B = P.multiply(O), q = B.toRawBytes();
      return { head: $, prefix: x, scalar: O, point: B, pointBytes: q };
    }
    function C(y) {
      return b(y).pointBytes;
    }
    function S(y = new Uint8Array(), ...w) {
      const v = Kc$1(...w);
      return R(n(d(v, Lt$4("context", y), !!s)));
    }
    function D(y, w, v = {}) {
      y = Lt$4("message", y), s && (y = s(y));
      const { prefix: $, scalar: x, pointBytes: O } = b(w), B = S(v.context, $, y), q = P.multiply(B).toRawBytes(), H = S(v.context, q, O, y), M = U(B + H * x);
      Ri$2("signature.s", M, yt$4, i);
      const V = Kc$1(q, jo$1(M, r.BYTES));
      return Lt$4("result", V, r.BYTES * 2);
    }
    const T = F0$1;
    function N(y, w, v, $ = T) {
      const { context: x, zip215: O } = $, B = r.BYTES;
      y = Lt$4("signature", y, 2 * B), w = Lt$4("message", w), v = Lt$4("publicKey", v, B), O !== void 0 && Qn$2("zip215", O), s && (w = s(w));
      const q = Js$1(y.slice(B, 2 * B));
      let H, M, V;
      try {
        H = E.fromHex(v, O), M = E.fromHex(y.slice(0, B), O), V = P.multiplyUnsafe(q);
      } catch {
        return false;
      }
      if (!O && H.isSmallOrder()) return false;
      const K = S(x, M.toRawBytes(), H.toRawBytes(), w);
      return M.add(H.multiplyUnsafe(K)).subtract(V).clearCofactor().equals(E.ZERO);
    }
    return P._setWindowSize(8), { CURVE: e, getPublicKey: C, sign: D, verify: N, ExtendedPoint: E, utils: { getExtendedPublicKey: b, randomPrivateKey: () => o(r.BYTES), precompute(y = 8, w = E.BASE) {
      return w._setWindowSize(y), w.multiply(BigInt(3)), w;
    } } };
  }
  BigInt(0), BigInt(1);
  const Ma$1 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"), Qc$1 = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
  BigInt(0);
  const k0$1 = BigInt(1), Xc$1 = BigInt(2);
  BigInt(3);
  const L0$1 = BigInt(5), j0$1 = BigInt(8);
  function M0$1(t) {
    const e = BigInt(10), r = BigInt(20), i = BigInt(40), s = BigInt(80), n = Ma$1, o = t * t % n * t % n, a = $t$4(o, Xc$1, n) * o % n, c = $t$4(a, k0$1, n) * t % n, h = $t$4(c, L0$1, n) * c % n, u = $t$4(h, e, n) * h % n, l = $t$4(u, r, n) * u % n, f = $t$4(l, i, n) * l % n, p = $t$4(f, s, n) * f % n, d = $t$4(p, s, n) * f % n, g = $t$4(d, e, n) * h % n;
    return { pow_p_5_8: $t$4(g, Xc$1, n) * t % n, b2: o };
  }
  function q0$1(t) {
    return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
  }
  function z0$1(t, e) {
    const r = Ma$1, i = me$4(e * e * e, r), s = me$4(i * i * e, r), n = M0$1(t * s).pow_p_5_8;
    let o = me$4(t * i * n, r);
    const a = me$4(e * o * o, r), c = o, h = me$4(o * Qc$1, r), u = a === t, l = a === me$4(-t, r), f = a === me$4(-t * Qc$1, r);
    return u && (o = c), (l || f) && (o = h), x0$1(o, r) && (o = me$4(-o, r)), { isValid: u || l, value: o };
  }
  const H0$1 = ff$1(Ma$1, void 0, true), V0$1 = { a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: H0$1, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: j0$1, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: f0$1, randomBytes: nf$1, adjustScalarBytes: q0$1, uvRatio: z0$1 }, gf$1 = U0$1(V0$1), K0$1 = "EdDSA", W0$1 = "JWT", un$2 = ".", In$2 = "base64url", yf$1 = "utf8", wf$1 = "utf8", G0$1 = ":", Y0$1 = "did", J0$1 = "key", eh$1 = "base58btc", Z0$1 = "z", Q0$1 = "K36", X0$1 = 32;
  function qa$1(t) {
    return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
  }
  function mf$1(t = 0) {
    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? qa$1(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
  }
  function bf$1(t, e) {
    e || (e = t.reduce((s, n) => s + n.length, 0));
    const r = mf$1(e);
    let i = 0;
    for (const s of t) r.set(s, i), i += s.length;
    return qa$1(r);
  }
  function em$1(t, e) {
    if (t.length >= 255) throw new TypeError("Alphabet too long");
    for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
    for (var s = 0; s < t.length; s++) {
      var n = t.charAt(s), o = n.charCodeAt(0);
      if (r[o] !== 255) throw new TypeError(n + " is ambiguous");
      r[o] = s;
    }
    var a = t.length, c = t.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
    function l(d) {
      if (d instanceof Uint8Array || (ArrayBuffer.isView(d) ? d = new Uint8Array(d.buffer, d.byteOffset, d.byteLength) : Array.isArray(d) && (d = Uint8Array.from(d))), !(d instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
      if (d.length === 0) return "";
      for (var g = 0, m = 0, _ = 0, I = d.length; _ !== I && d[_] === 0; ) _++, g++;
      for (var E = (I - _) * u + 1 >>> 0, P = new Uint8Array(E); _ !== I; ) {
        for (var A = d[_], k = 0, U = E - 1; (A !== 0 || k < m) && U !== -1; U--, k++) A += 256 * P[U] >>> 0, P[U] = A % a >>> 0, A = A / a >>> 0;
        if (A !== 0) throw new Error("Non-zero carry");
        m = k, _++;
      }
      for (var R = E - m; R !== E && P[R] === 0; ) R++;
      for (var b = c.repeat(g); R < E; ++R) b += t.charAt(P[R]);
      return b;
    }
    function f(d) {
      if (typeof d != "string") throw new TypeError("Expected String");
      if (d.length === 0) return new Uint8Array();
      var g = 0;
      if (d[g] !== " ") {
        for (var m = 0, _ = 0; d[g] === c; ) m++, g++;
        for (var I = (d.length - g) * h + 1 >>> 0, E = new Uint8Array(I); d[g]; ) {
          var P = r[d.charCodeAt(g)];
          if (P === 255) return;
          for (var A = 0, k = I - 1; (P !== 0 || A < _) && k !== -1; k--, A++) P += a * E[k] >>> 0, E[k] = P % 256 >>> 0, P = P / 256 >>> 0;
          if (P !== 0) throw new Error("Non-zero carry");
          _ = A, g++;
        }
        if (d[g] !== " ") {
          for (var U = I - _; U !== I && E[U] === 0; ) U++;
          for (var R = new Uint8Array(m + (I - U)), b = m; U !== I; ) R[b++] = E[U++];
          return R;
        }
      }
    }
    function p(d) {
      var g = f(d);
      if (g) return g;
      throw new Error(`Non-${e} character`);
    }
    return { encode: l, decodeUnsafe: f, decode: p };
  }
  var tm$1 = em$1, rm$1 = tm$1;
  const vf$1 = (t) => {
    if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
    if (t instanceof ArrayBuffer) return new Uint8Array(t);
    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
    throw new Error("Unknown type, must be binary type");
  }, im$1 = (t) => new TextEncoder().encode(t), sm$1 = (t) => new TextDecoder().decode(t);
  let nm$1 = class nm {
    constructor(e, r, i) {
      this.name = e, this.prefix = r, this.baseEncode = i;
    }
    encode(e) {
      if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
      throw Error("Unknown type, must be binary type");
    }
  }, om$1 = class om {
    constructor(e, r, i) {
      if (this.name = e, this.prefix = r, r.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
      this.prefixCodePoint = r.codePointAt(0), this.baseDecode = i;
    }
    decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
        return this.baseDecode(e.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
    or(e) {
      return Ef$1(this, e);
    }
  }, am$1 = class am {
    constructor(e) {
      this.decoders = e;
    }
    or(e) {
      return Ef$1(this, e);
    }
    decode(e) {
      const r = e[0], i = this.decoders[r];
      if (i) return i.decode(e);
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  };
  const Ef$1 = (t, e) => new am$1({ ...t.decoders || { [t.prefix]: t }, ...e.decoders || { [e.prefix]: e } });
  let cm$1 = class cm {
    constructor(e, r, i, s) {
      this.name = e, this.prefix = r, this.baseEncode = i, this.baseDecode = s, this.encoder = new nm$1(e, r, i), this.decoder = new om$1(e, r, s);
    }
    encode(e) {
      return this.encoder.encode(e);
    }
    decode(e) {
      return this.decoder.decode(e);
    }
  };
  const xn$2 = ({ name: t, prefix: e, encode: r, decode: i }) => new cm$1(t, e, r, i), gs$1 = ({ prefix: t, name: e, alphabet: r }) => {
    const { encode: i, decode: s } = rm$1(r, e);
    return xn$2({ prefix: t, name: e, encode: i, decode: (n) => vf$1(s(n)) });
  }, hm$1 = (t, e, r, i) => {
    const s = {};
    for (let u = 0; u < e.length; ++u) s[e[u]] = u;
    let n = t.length;
    for (; t[n - 1] === "="; ) --n;
    const o = new Uint8Array(n * r / 8 | 0);
    let a = 0, c = 0, h = 0;
    for (let u = 0; u < n; ++u) {
      const l = s[t[u]];
      if (l === void 0) throw new SyntaxError(`Non-${i} character`);
      c = c << r | l, a += r, a >= 8 && (a -= 8, o[h++] = 255 & c >> a);
    }
    if (a >= r || 255 & c << 8 - a) throw new SyntaxError("Unexpected end of data");
    return o;
  }, um$1 = (t, e, r) => {
    const i = e[e.length - 1] === "=", s = (1 << r) - 1;
    let n = "", o = 0, a = 0;
    for (let c = 0; c < t.length; ++c) for (a = a << 8 | t[c], o += 8; o > r; ) o -= r, n += e[s & a >> o];
    if (o && (n += e[s & a << r - o]), i) for (; n.length * r & 7; ) n += "=";
    return n;
  }, Pe$5 = ({ name: t, prefix: e, bitsPerChar: r, alphabet: i }) => xn$2({ prefix: e, name: t, encode(s) {
    return um$1(s, i, r);
  }, decode(s) {
    return hm$1(s, i, r, t);
  } }), lm$1 = xn$2({ prefix: "\0", name: "identity", encode: (t) => sm$1(t), decode: (t) => im$1(t) });
  var fm$1 = Object.freeze({ __proto__: null, identity: lm$1 });
  const dm$1 = Pe$5({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
  var pm$1 = Object.freeze({ __proto__: null, base2: dm$1 });
  const gm$1 = Pe$5({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
  var ym$1 = Object.freeze({ __proto__: null, base8: gm$1 });
  const wm$1 = gs$1({ prefix: "9", name: "base10", alphabet: "0123456789" });
  var mm$1 = Object.freeze({ __proto__: null, base10: wm$1 });
  const bm$1 = Pe$5({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 }), vm$1 = Pe$5({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
  var Em$1 = Object.freeze({ __proto__: null, base16: bm$1, base16upper: vm$1 });
  const _m$1 = Pe$5({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 }), Im$1 = Pe$5({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 }), xm$1 = Pe$5({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 }), $m$1 = Pe$5({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 }), Sm$1 = Pe$5({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 }), Dm$1 = Pe$5({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 }), Am$1 = Pe$5({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 }), Om$1 = Pe$5({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 }), Pm$1 = Pe$5({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
  var Cm$1 = Object.freeze({ __proto__: null, base32: _m$1, base32upper: Im$1, base32pad: xm$1, base32padupper: $m$1, base32hex: Sm$1, base32hexupper: Dm$1, base32hexpad: Am$1, base32hexpadupper: Om$1, base32z: Pm$1 });
  const Tm$1 = gs$1({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" }), Rm$1 = gs$1({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
  var Bm$1 = Object.freeze({ __proto__: null, base36: Tm$1, base36upper: Rm$1 });
  const Fm$1 = gs$1({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" }), Nm$1 = gs$1({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
  var Um$1 = Object.freeze({ __proto__: null, base58btc: Fm$1, base58flickr: Nm$1 });
  const km$1 = Pe$5({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 }), Lm$1 = Pe$5({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 }), jm$1 = Pe$5({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 }), Mm$1 = Pe$5({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
  var qm$1 = Object.freeze({ __proto__: null, base64: km$1, base64pad: Lm$1, base64url: jm$1, base64urlpad: Mm$1 });
  const _f$1 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), zm$1 = _f$1.reduce((t, e, r) => (t[r] = e, t), []), Hm$1 = _f$1.reduce((t, e, r) => (t[e.codePointAt(0)] = r, t), []);
  function Vm$1(t) {
    return t.reduce((e, r) => (e += zm$1[r], e), "");
  }
  function Km$1(t) {
    const e = [];
    for (const r of t) {
      const i = Hm$1[r.codePointAt(0)];
      if (i === void 0) throw new Error(`Non-base256emoji character: ${r}`);
      e.push(i);
    }
    return new Uint8Array(e);
  }
  const Wm$1 = xn$2({ prefix: "🚀", name: "base256emoji", encode: Vm$1, decode: Km$1 });
  var Gm$1 = Object.freeze({ __proto__: null, base256emoji: Wm$1 }), Ym$1 = If$1, th$1 = 128, Jm$1 = -128, Zm$1 = Math.pow(2, 31);
  function If$1(t, e, r) {
    e = e || [], r = r || 0;
    for (var i = r; t >= Zm$1; ) e[r++] = t & 255 | th$1, t /= 128;
    for (; t & Jm$1; ) e[r++] = t & 255 | th$1, t >>>= 7;
    return e[r] = t | 0, If$1.bytes = r - i + 1, e;
  }
  var Qm$1 = qo$1, Xm$1 = 128, rh$1 = 127;
  function qo$1(t, i) {
    var r = 0, i = i || 0, s = 0, n = i, o, a = t.length;
    do {
      if (n >= a) throw qo$1.bytes = 0, new RangeError("Could not decode varint");
      o = t[n++], r += s < 28 ? (o & rh$1) << s : (o & rh$1) * Math.pow(2, s), s += 7;
    } while (o >= Xm$1);
    return qo$1.bytes = n - i, r;
  }
  var eb$1 = Math.pow(2, 7), tb$1 = Math.pow(2, 14), rb$1 = Math.pow(2, 21), ib$1 = Math.pow(2, 28), sb$1 = Math.pow(2, 35), nb$1 = Math.pow(2, 42), ob$1 = Math.pow(2, 49), ab$1 = Math.pow(2, 56), cb$1 = Math.pow(2, 63), hb$1 = function(t) {
    return t < eb$1 ? 1 : t < tb$1 ? 2 : t < rb$1 ? 3 : t < ib$1 ? 4 : t < sb$1 ? 5 : t < nb$1 ? 6 : t < ob$1 ? 7 : t < ab$1 ? 8 : t < cb$1 ? 9 : 10;
  }, ub$1 = { encode: Ym$1, decode: Qm$1, encodingLength: hb$1 }, xf$1 = ub$1;
  const ih$1 = (t, e, r = 0) => (xf$1.encode(t, e, r), e), sh$1 = (t) => xf$1.encodingLength(t), zo$1 = (t, e) => {
    const r = e.byteLength, i = sh$1(t), s = i + sh$1(r), n = new Uint8Array(s + r);
    return ih$1(t, n, 0), ih$1(r, n, i), n.set(e, s), new lb$1(t, r, e, n);
  };
  let lb$1 = class lb {
    constructor(e, r, i, s) {
      this.code = e, this.size = r, this.digest = i, this.bytes = s;
    }
  };
  const $f$1 = ({ name: t, code: e, encode: r }) => new fb$1(t, e, r);
  let fb$1 = class fb {
    constructor(e, r, i) {
      this.name = e, this.code = r, this.encode = i;
    }
    digest(e) {
      if (e instanceof Uint8Array) {
        const r = this.encode(e);
        return r instanceof Uint8Array ? zo$1(this.code, r) : r.then((i) => zo$1(this.code, i));
      } else throw Error("Unknown type, must be binary type");
    }
  };
  const Sf$1 = (t) => async (e) => new Uint8Array(await crypto.subtle.digest(t, e)), db$1 = $f$1({ name: "sha2-256", code: 18, encode: Sf$1("SHA-256") }), pb$1 = $f$1({ name: "sha2-512", code: 19, encode: Sf$1("SHA-512") });
  var gb$1 = Object.freeze({ __proto__: null, sha256: db$1, sha512: pb$1 });
  const Df$1 = 0, yb$1 = "identity", Af$1 = vf$1, wb$1 = (t) => zo$1(Df$1, Af$1(t)), mb$1 = { code: Df$1, name: yb$1, encode: Af$1, digest: wb$1 };
  var bb$1 = Object.freeze({ __proto__: null, identity: mb$1 });
  new TextEncoder(), new TextDecoder();
  const nh$1 = { ...fm$1, ...pm$1, ...ym$1, ...mm$1, ...Em$1, ...Cm$1, ...Bm$1, ...Um$1, ...qm$1, ...Gm$1 };
  ({ ...gb$1, ...bb$1 });
  function Of$1(t, e, r, i) {
    return { name: t, prefix: e, encoder: { name: t, prefix: e, encode: r }, decoder: { decode: i } };
  }
  const oh$1 = Of$1("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1))), so$1 = Of$1("ascii", "a", (t) => {
    let e = "a";
    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
    return e;
  }, (t) => {
    t = t.substring(1);
    const e = mf$1(t.length);
    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
    return e;
  }), Pf$1 = { utf8: oh$1, "utf-8": oh$1, hex: nh$1.base16, latin1: so$1, ascii: so$1, binary: so$1, ...nh$1 };
  function $n$2(t, e = "utf8") {
    const r = Pf$1[e];
    if (!r) throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : r.encoder.encode(t).substring(1);
  }
  function Ei$2(t, e = "utf8") {
    const r = Pf$1[e];
    if (!r) throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? qa$1(globalThis.Buffer.from(t, "utf-8")) : r.decoder.decode(`${r.prefix}${t}`);
  }
  function ah$1(t) {
    return Br($n$2(Ei$2(t, In$2), yf$1));
  }
  function ln$2(t) {
    return $n$2(Ei$2(Wt$4(t), yf$1), In$2);
  }
  function Cf$1(t) {
    const e = Ei$2(Q0$1, eh$1), r = Z0$1 + $n$2(bf$1([e, t]), eh$1);
    return [Y0$1, J0$1, r].join(G0$1);
  }
  function vb$1(t) {
    return $n$2(t, In$2);
  }
  function Eb$1(t) {
    return Ei$2(t, In$2);
  }
  function _b$1(t) {
    return Ei$2([ln$2(t.header), ln$2(t.payload)].join(un$2), wf$1);
  }
  function Ib$1(t) {
    return [ln$2(t.header), ln$2(t.payload), vb$1(t.signature)].join(un$2);
  }
  function Ho$1(t) {
    const e = t.split(un$2), r = ah$1(e[0]), i = ah$1(e[1]), s = Eb$1(e[2]), n = Ei$2(e.slice(0, 2).join(un$2), wf$1);
    return { header: r, payload: i, signature: s, data: n };
  }
  function ch$1(t = nf$1(X0$1)) {
    const e = gf$1.getPublicKey(t);
    return { secretKey: bf$1([t, e]), publicKey: e };
  }
  async function xb$1(t, e, r, i, s = L$3.fromMiliseconds(Date.now())) {
    const n = { alg: K0$1, typ: W0$1 }, o = Cf$1(i.publicKey), a = s + r, c = { iss: o, sub: t, aud: e, iat: s, exp: a }, h = _b$1({ header: n, payload: c }), u = gf$1.sign(h, i.secretKey.slice(0, 32));
    return Ib$1({ header: n, payload: c, signature: u });
  }
  function za$1(t) {
    return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
  }
  function Tf$1(t = 0) {
    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? za$1(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
  }
  function Ji$1(t, e) {
    e || (e = t.reduce((s, n) => s + n.length, 0));
    const r = Tf$1(e);
    let i = 0;
    for (const s of t)
      r.set(s, i), i += s.length;
    return za$1(r);
  }
  function $b$1(t, e) {
    if (t.length >= 255)
      throw new TypeError("Alphabet too long");
    for (var r = new Uint8Array(256), i = 0; i < r.length; i++)
      r[i] = 255;
    for (var s = 0; s < t.length; s++) {
      var n = t.charAt(s), o = n.charCodeAt(0);
      if (r[o] !== 255)
        throw new TypeError(n + " is ambiguous");
      r[o] = s;
    }
    var a = t.length, c = t.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
    function l(d) {
      if (d instanceof Uint8Array || (ArrayBuffer.isView(d) ? d = new Uint8Array(d.buffer, d.byteOffset, d.byteLength) : Array.isArray(d) && (d = Uint8Array.from(d))), !(d instanceof Uint8Array))
        throw new TypeError("Expected Uint8Array");
      if (d.length === 0)
        return "";
      for (var g = 0, m = 0, _ = 0, I = d.length; _ !== I && d[_] === 0; )
        _++, g++;
      for (var E = (I - _) * u + 1 >>> 0, P = new Uint8Array(E); _ !== I; ) {
        for (var A = d[_], k = 0, U = E - 1; (A !== 0 || k < m) && U !== -1; U--, k++)
          A += 256 * P[U] >>> 0, P[U] = A % a >>> 0, A = A / a >>> 0;
        if (A !== 0)
          throw new Error("Non-zero carry");
        m = k, _++;
      }
      for (var R = E - m; R !== E && P[R] === 0; )
        R++;
      for (var b = c.repeat(g); R < E; ++R)
        b += t.charAt(P[R]);
      return b;
    }
    function f(d) {
      if (typeof d != "string")
        throw new TypeError("Expected String");
      if (d.length === 0)
        return new Uint8Array();
      var g = 0;
      if (d[g] !== " ") {
        for (var m = 0, _ = 0; d[g] === c; )
          m++, g++;
        for (var I = (d.length - g) * h + 1 >>> 0, E = new Uint8Array(I); d[g]; ) {
          var P = r[d.charCodeAt(g)];
          if (P === 255)
            return;
          for (var A = 0, k = I - 1; (P !== 0 || A < _) && k !== -1; k--, A++)
            P += a * E[k] >>> 0, E[k] = P % 256 >>> 0, P = P / 256 >>> 0;
          if (P !== 0)
            throw new Error("Non-zero carry");
          _ = A, g++;
        }
        if (d[g] !== " ") {
          for (var U = I - _; U !== I && E[U] === 0; )
            U++;
          for (var R = new Uint8Array(m + (I - U)), b = m; U !== I; )
            R[b++] = E[U++];
          return R;
        }
      }
    }
    function p(d) {
      var g = f(d);
      if (g)
        return g;
      throw new Error(`Non-${e} character`);
    }
    return {
      encode: l,
      decodeUnsafe: f,
      decode: p
    };
  }
  var Sb$1 = $b$1, Db$1 = Sb$1;
  const Ab$1 = (t) => {
    if (t instanceof Uint8Array && t.constructor.name === "Uint8Array")
      return t;
    if (t instanceof ArrayBuffer)
      return new Uint8Array(t);
    if (ArrayBuffer.isView(t))
      return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
    throw new Error("Unknown type, must be binary type");
  }, Ob$1 = (t) => new TextEncoder().encode(t), Pb$1 = (t) => new TextDecoder().decode(t);
  let Cb$1 = class Cb {
    constructor(e, r, i) {
      this.name = e, this.prefix = r, this.baseEncode = i;
    }
    encode(e) {
      if (e instanceof Uint8Array)
        return `${this.prefix}${this.baseEncode(e)}`;
      throw Error("Unknown type, must be binary type");
    }
  };
  let Tb$1 = class Tb {
    constructor(e, r, i) {
      if (this.name = e, this.prefix = r, r.codePointAt(0) === void 0)
        throw new Error("Invalid prefix character");
      this.prefixCodePoint = r.codePointAt(0), this.baseDecode = i;
    }
    decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint)
          throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
        return this.baseDecode(e.slice(this.prefix.length));
      } else
        throw Error("Can only multibase decode strings");
    }
    or(e) {
      return Rf$1(this, e);
    }
  };
  let Rb$1 = class Rb {
    constructor(e) {
      this.decoders = e;
    }
    or(e) {
      return Rf$1(this, e);
    }
    decode(e) {
      const r = e[0], i = this.decoders[r];
      if (i)
        return i.decode(e);
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  };
  const Rf$1 = (t, e) => new Rb$1({
    ...t.decoders || { [t.prefix]: t },
    ...e.decoders || { [e.prefix]: e }
  });
  let Bb$1 = class Bb {
    constructor(e, r, i, s) {
      this.name = e, this.prefix = r, this.baseEncode = i, this.baseDecode = s, this.encoder = new Cb$1(e, r, i), this.decoder = new Tb$1(e, r, s);
    }
    encode(e) {
      return this.encoder.encode(e);
    }
    decode(e) {
      return this.decoder.decode(e);
    }
  };
  const Sn$1 = ({ name: t, prefix: e, encode: r, decode: i }) => new Bb$1(t, e, r, i), ys$1 = ({ prefix: t, name: e, alphabet: r }) => {
    const { encode: i, decode: s } = Db$1(r, e);
    return Sn$1({
      prefix: t,
      name: e,
      encode: i,
      decode: (n) => Ab$1(s(n))
    });
  }, Fb$1 = (t, e, r, i) => {
    const s = {};
    for (let u = 0; u < e.length; ++u)
      s[e[u]] = u;
    let n = t.length;
    for (; t[n - 1] === "="; )
      --n;
    const o = new Uint8Array(n * r / 8 | 0);
    let a = 0, c = 0, h = 0;
    for (let u = 0; u < n; ++u) {
      const l = s[t[u]];
      if (l === void 0)
        throw new SyntaxError(`Non-${i} character`);
      c = c << r | l, a += r, a >= 8 && (a -= 8, o[h++] = 255 & c >> a);
    }
    if (a >= r || 255 & c << 8 - a)
      throw new SyntaxError("Unexpected end of data");
    return o;
  }, Nb$1 = (t, e, r) => {
    const i = e[e.length - 1] === "=", s = (1 << r) - 1;
    let n = "", o = 0, a = 0;
    for (let c = 0; c < t.length; ++c)
      for (a = a << 8 | t[c], o += 8; o > r; )
        o -= r, n += e[s & a >> o];
    if (o && (n += e[s & a << r - o]), i)
      for (; n.length * r & 7; )
        n += "=";
    return n;
  }, Ce$3 = ({ name: t, prefix: e, bitsPerChar: r, alphabet: i }) => Sn$1({
    prefix: e,
    name: t,
    encode(s) {
      return Nb$1(s, i, r);
    },
    decode(s) {
      return Fb$1(s, i, r, t);
    }
  }), Ub$1 = Sn$1({
    prefix: "\0",
    name: "identity",
    encode: (t) => Pb$1(t),
    decode: (t) => Ob$1(t)
  }), kb$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    identity: Ub$1
  }, Symbol.toStringTag, { value: "Module" })), Lb$1 = Ce$3({
    prefix: "0",
    name: "base2",
    alphabet: "01",
    bitsPerChar: 1
  }), jb$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base2: Lb$1
  }, Symbol.toStringTag, { value: "Module" })), Mb$1 = Ce$3({
    prefix: "7",
    name: "base8",
    alphabet: "01234567",
    bitsPerChar: 3
  }), qb$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base8: Mb$1
  }, Symbol.toStringTag, { value: "Module" })), zb$1 = ys$1({
    prefix: "9",
    name: "base10",
    alphabet: "0123456789"
  }), Hb$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base10: zb$1
  }, Symbol.toStringTag, { value: "Module" })), Vb$1 = Ce$3({
    prefix: "f",
    name: "base16",
    alphabet: "0123456789abcdef",
    bitsPerChar: 4
  }), Kb$1 = Ce$3({
    prefix: "F",
    name: "base16upper",
    alphabet: "0123456789ABCDEF",
    bitsPerChar: 4
  }), Wb$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base16: Vb$1,
    base16upper: Kb$1
  }, Symbol.toStringTag, { value: "Module" })), Gb$1 = Ce$3({
    prefix: "b",
    name: "base32",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
    bitsPerChar: 5
  }), Yb$1 = Ce$3({
    prefix: "B",
    name: "base32upper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
    bitsPerChar: 5
  }), Jb$1 = Ce$3({
    prefix: "c",
    name: "base32pad",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
    bitsPerChar: 5
  }), Zb$1 = Ce$3({
    prefix: "C",
    name: "base32padupper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
    bitsPerChar: 5
  }), Qb$1 = Ce$3({
    prefix: "v",
    name: "base32hex",
    alphabet: "0123456789abcdefghijklmnopqrstuv",
    bitsPerChar: 5
  }), Xb$1 = Ce$3({
    prefix: "V",
    name: "base32hexupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
    bitsPerChar: 5
  }), e1$1 = Ce$3({
    prefix: "t",
    name: "base32hexpad",
    alphabet: "0123456789abcdefghijklmnopqrstuv=",
    bitsPerChar: 5
  }), t1$1 = Ce$3({
    prefix: "T",
    name: "base32hexpadupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
    bitsPerChar: 5
  }), r1$1 = Ce$3({
    prefix: "h",
    name: "base32z",
    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
    bitsPerChar: 5
  }), i1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base32: Gb$1,
    base32hex: Qb$1,
    base32hexpad: e1$1,
    base32hexpadupper: t1$1,
    base32hexupper: Xb$1,
    base32pad: Jb$1,
    base32padupper: Zb$1,
    base32upper: Yb$1,
    base32z: r1$1
  }, Symbol.toStringTag, { value: "Module" })), s1$1 = ys$1({
    prefix: "k",
    name: "base36",
    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
  }), n1$1 = ys$1({
    prefix: "K",
    name: "base36upper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  }), o1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base36: s1$1,
    base36upper: n1$1
  }, Symbol.toStringTag, { value: "Module" })), a1$1 = ys$1({
    name: "base58btc",
    prefix: "z",
    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
  }), c1$1 = ys$1({
    name: "base58flickr",
    prefix: "Z",
    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
  }), h1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base58btc: a1$1,
    base58flickr: c1$1
  }, Symbol.toStringTag, { value: "Module" })), u1$1 = Ce$3({
    prefix: "m",
    name: "base64",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    bitsPerChar: 6
  }), l1$1 = Ce$3({
    prefix: "M",
    name: "base64pad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    bitsPerChar: 6
  }), f1$1 = Ce$3({
    prefix: "u",
    name: "base64url",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
    bitsPerChar: 6
  }), d1$1 = Ce$3({
    prefix: "U",
    name: "base64urlpad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
    bitsPerChar: 6
  }), p1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base64: u1$1,
    base64pad: l1$1,
    base64url: f1$1,
    base64urlpad: d1$1
  }, Symbol.toStringTag, { value: "Module" })), Bf$1 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), g1$1 = Bf$1.reduce((t, e, r) => (t[r] = e, t), []), y1$1 = Bf$1.reduce((t, e, r) => (t[e.codePointAt(0)] = r, t), []);
  function w1$1(t) {
    return t.reduce((e, r) => (e += g1$1[r], e), "");
  }
  function m1$1(t) {
    const e = [];
    for (const r of t) {
      const i = y1$1[r.codePointAt(0)];
      if (i === void 0)
        throw new Error(`Non-base256emoji character: ${r}`);
      e.push(i);
    }
    return new Uint8Array(e);
  }
  const b1$1 = Sn$1({
    prefix: "🚀",
    name: "base256emoji",
    encode: w1$1,
    decode: m1$1
  }), v1$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    base256emoji: b1$1
  }, Symbol.toStringTag, { value: "Module" }));
  new TextEncoder();
  new TextDecoder();
  const hh = {
    ...kb$1,
    ...jb$1,
    ...qb$1,
    ...Hb$1,
    ...Wb$1,
    ...i1$1,
    ...o1$1,
    ...h1$1,
    ...p1$1,
    ...v1$1
  };
  function Ff$1(t, e, r, i) {
    return {
      name: t,
      prefix: e,
      encoder: {
        name: t,
        prefix: e,
        encode: r
      },
      decoder: { decode: i }
    };
  }
  const uh$1 = Ff$1("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1))), no$2 = Ff$1("ascii", "a", (t) => {
    let e = "a";
    for (let r = 0; r < t.length; r++)
      e += String.fromCharCode(t[r]);
    return e;
  }, (t) => {
    t = t.substring(1);
    const e = Tf$1(t.length);
    for (let r = 0; r < t.length; r++)
      e[r] = t.charCodeAt(r);
    return e;
  }), Nf$1 = {
    utf8: uh$1,
    "utf-8": uh$1,
    hex: hh.base16,
    latin1: no$2,
    ascii: no$2,
    binary: no$2,
    ...hh
  };
  function ut$4(t, e = "utf8") {
    const r = Nf$1[e];
    if (!r)
      throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? za$1(globalThis.Buffer.from(t, "utf-8")) : r.decoder.decode(`${r.prefix}${t}`);
  }
  function Je$4(t, e = "utf8") {
    const r = Nf$1[e];
    if (!r)
      throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : r.encoder.encode(t).substring(1);
  }
  const E1$1 = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } }, _1$1 = "Input must be an string, Buffer or Uint8Array";
  function I1$1(t) {
    let e;
    if (t instanceof Uint8Array)
      e = t;
    else if (typeof t == "string")
      e = new TextEncoder().encode(t);
    else
      throw new Error(_1$1);
    return e;
  }
  function x1$1(t) {
    return Array.prototype.map.call(t, function(e) {
      return (e < 16 ? "0" : "") + e.toString(16);
    }).join("");
  }
  function Cs$1(t) {
    return (4294967296 + t).toString(16).substring(1);
  }
  function $1$1(t, e, r) {
    let i = `
` + t + " = ";
    for (let s = 0; s < e.length; s += 2) {
      if (r === 32)
        i += Cs$1(e[s]).toUpperCase(), i += " ", i += Cs$1(e[s + 1]).toUpperCase();
      else if (r === 64)
        i += Cs$1(e[s + 1]).toUpperCase(), i += Cs$1(e[s]).toUpperCase();
      else throw new Error("Invalid size " + r);
      s % 6 === 4 ? i += `
` + new Array(t.length + 4).join(" ") : s < e.length - 2 && (i += " ");
    }
    console.log(i);
  }
  function S1$1(t, e, r) {
    let i = (/* @__PURE__ */ new Date()).getTime();
    const s = new Uint8Array(e);
    for (let o = 0; o < e; o++)
      s[o] = o % 256;
    const n = (/* @__PURE__ */ new Date()).getTime();
    console.log("Generated random input in " + (n - i) + "ms"), i = n;
    for (let o = 0; o < r; o++) {
      const a = t(s), c = (/* @__PURE__ */ new Date()).getTime(), h = c - i;
      i = c, console.log("Hashed in " + h + "ms: " + a.substring(0, 20) + "..."), console.log(
        Math.round(e / (1 << 20) / (h / 1e3) * 100) / 100 + " MB PER SECOND"
      );
    }
  }
  var Uf$1 = {
    normalizeInput: I1$1,
    toHex: x1$1,
    debugPrint: $1$1,
    testSpeed: S1$1
  };
  const Zs$1 = Uf$1;
  function Ts$1(t, e, r) {
    const i = t[e] + t[r];
    let s = t[e + 1] + t[r + 1];
    i >= 4294967296 && s++, t[e] = i, t[e + 1] = s;
  }
  function lh$1(t, e, r, i) {
    let s = t[e] + r;
    r < 0 && (s += 4294967296);
    let n = t[e + 1] + i;
    s >= 4294967296 && n++, t[e] = s, t[e + 1] = n;
  }
  function kf$1(t, e) {
    return t[e] ^ t[e + 1] << 8 ^ t[e + 2] << 16 ^ t[e + 3] << 24;
  }
  function Zt$4(t, e, r, i, s, n) {
    const o = Hi$1[s], a = Hi$1[s + 1], c = Hi$1[n], h = Hi$1[n + 1];
    Ts$1(W$3, t, e), lh$1(W$3, t, o, a);
    let u = W$3[i] ^ W$3[t], l = W$3[i + 1] ^ W$3[t + 1];
    W$3[i] = l, W$3[i + 1] = u, Ts$1(W$3, r, i), u = W$3[e] ^ W$3[r], l = W$3[e + 1] ^ W$3[r + 1], W$3[e] = u >>> 24 ^ l << 8, W$3[e + 1] = l >>> 24 ^ u << 8, Ts$1(W$3, t, e), lh$1(W$3, t, c, h), u = W$3[i] ^ W$3[t], l = W$3[i + 1] ^ W$3[t + 1], W$3[i] = u >>> 16 ^ l << 16, W$3[i + 1] = l >>> 16 ^ u << 16, Ts$1(W$3, r, i), u = W$3[e] ^ W$3[r], l = W$3[e + 1] ^ W$3[r + 1], W$3[e] = l >>> 31 ^ u << 1, W$3[e + 1] = u >>> 31 ^ l << 1;
  }
  const Lf$1 = new Uint32Array([
    4089235720,
    1779033703,
    2227873595,
    3144134277,
    4271175723,
    1013904242,
    1595750129,
    2773480762,
    2917565137,
    1359893119,
    725511199,
    2600822924,
    4215389547,
    528734635,
    327033209,
    1541459225
  ]), D1$1 = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    14,
    10,
    4,
    8,
    9,
    15,
    13,
    6,
    1,
    12,
    0,
    2,
    11,
    7,
    5,
    3,
    11,
    8,
    12,
    0,
    5,
    2,
    15,
    13,
    10,
    14,
    3,
    6,
    7,
    1,
    9,
    4,
    7,
    9,
    3,
    1,
    13,
    12,
    11,
    14,
    2,
    6,
    5,
    10,
    4,
    0,
    15,
    8,
    9,
    0,
    5,
    7,
    2,
    4,
    10,
    15,
    14,
    1,
    11,
    12,
    6,
    8,
    3,
    13,
    2,
    12,
    6,
    10,
    0,
    11,
    8,
    3,
    4,
    13,
    7,
    5,
    15,
    14,
    1,
    9,
    12,
    5,
    1,
    15,
    14,
    13,
    4,
    10,
    0,
    7,
    6,
    3,
    9,
    2,
    8,
    11,
    13,
    11,
    7,
    14,
    12,
    1,
    3,
    9,
    5,
    0,
    15,
    4,
    8,
    6,
    2,
    10,
    6,
    15,
    14,
    9,
    11,
    3,
    0,
    8,
    12,
    2,
    13,
    7,
    1,
    4,
    10,
    5,
    10,
    2,
    8,
    4,
    7,
    6,
    1,
    5,
    15,
    11,
    9,
    14,
    3,
    12,
    13,
    0,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    14,
    10,
    4,
    8,
    9,
    15,
    13,
    6,
    1,
    12,
    0,
    2,
    11,
    7,
    5,
    3
  ], Re$4 = new Uint8Array(
    D1$1.map(function(t) {
      return t * 2;
    })
  ), W$3 = new Uint32Array(32), Hi$1 = new Uint32Array(32);
  function jf$1(t, e) {
    let r = 0;
    for (r = 0; r < 16; r++)
      W$3[r] = t.h[r], W$3[r + 16] = Lf$1[r];
    for (W$3[24] = W$3[24] ^ t.t, W$3[25] = W$3[25] ^ t.t / 4294967296, e && (W$3[28] = ~W$3[28], W$3[29] = ~W$3[29]), r = 0; r < 32; r++)
      Hi$1[r] = kf$1(t.b, 4 * r);
    for (r = 0; r < 12; r++)
      Zt$4(0, 8, 16, 24, Re$4[r * 16 + 0], Re$4[r * 16 + 1]), Zt$4(2, 10, 18, 26, Re$4[r * 16 + 2], Re$4[r * 16 + 3]), Zt$4(4, 12, 20, 28, Re$4[r * 16 + 4], Re$4[r * 16 + 5]), Zt$4(6, 14, 22, 30, Re$4[r * 16 + 6], Re$4[r * 16 + 7]), Zt$4(0, 10, 20, 30, Re$4[r * 16 + 8], Re$4[r * 16 + 9]), Zt$4(2, 12, 22, 24, Re$4[r * 16 + 10], Re$4[r * 16 + 11]), Zt$4(4, 14, 16, 26, Re$4[r * 16 + 12], Re$4[r * 16 + 13]), Zt$4(6, 8, 18, 28, Re$4[r * 16 + 14], Re$4[r * 16 + 15]);
    for (r = 0; r < 16; r++)
      t.h[r] = t.h[r] ^ W$3[r] ^ W$3[r + 16];
  }
  const Qt$1 = new Uint8Array([
    0,
    0,
    0,
    0,
    //  0: outlen, keylen, fanout, depth
    0,
    0,
    0,
    0,
    //  4: leaf length, sequential mode
    0,
    0,
    0,
    0,
    //  8: node offset
    0,
    0,
    0,
    0,
    // 12: node offset
    0,
    0,
    0,
    0,
    // 16: node depth, inner length, rfu
    0,
    0,
    0,
    0,
    // 20: rfu
    0,
    0,
    0,
    0,
    // 24: rfu
    0,
    0,
    0,
    0,
    // 28: rfu
    0,
    0,
    0,
    0,
    // 32: salt
    0,
    0,
    0,
    0,
    // 36: salt
    0,
    0,
    0,
    0,
    // 40: salt
    0,
    0,
    0,
    0,
    // 44: salt
    0,
    0,
    0,
    0,
    // 48: personal
    0,
    0,
    0,
    0,
    // 52: personal
    0,
    0,
    0,
    0,
    // 56: personal
    0,
    0,
    0,
    0
    // 60: personal
  ]);
  function Mf$1(t, e, r, i) {
    if (t === 0 || t > 64)
      throw new Error("Illegal output length, expected 0 < length <= 64");
    if (e && e.length > 64)
      throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
    if (r && r.length !== 16)
      throw new Error("Illegal salt, expected Uint8Array with length is 16");
    if (i && i.length !== 16)
      throw new Error("Illegal personal, expected Uint8Array with length is 16");
    const s = {
      b: new Uint8Array(128),
      h: new Uint32Array(16),
      t: 0,
      // input count
      c: 0,
      // pointer within buffer
      outlen: t
      // output length in bytes
    };
    Qt$1.fill(0), Qt$1[0] = t, e && (Qt$1[1] = e.length), Qt$1[2] = 1, Qt$1[3] = 1, r && Qt$1.set(r, 32), i && Qt$1.set(i, 48);
    for (let n = 0; n < 16; n++)
      s.h[n] = Lf$1[n] ^ kf$1(Qt$1, n * 4);
    return e && (Ha(s, e), s.c = 128), s;
  }
  function Ha(t, e) {
    for (let r = 0; r < e.length; r++)
      t.c === 128 && (t.t += t.c, jf$1(t, false), t.c = 0), t.b[t.c++] = e[r];
  }
  function qf$1(t) {
    for (t.t += t.c; t.c < 128; )
      t.b[t.c++] = 0;
    jf$1(t, true);
    const e = new Uint8Array(t.outlen);
    for (let r = 0; r < t.outlen; r++)
      e[r] = t.h[r >> 2] >> 8 * (r & 3);
    return e;
  }
  function zf$1(t, e, r, i, s) {
    r = r || 64, t = Zs$1.normalizeInput(t), i && (i = Zs$1.normalizeInput(i)), s && (s = Zs$1.normalizeInput(s));
    const n = Mf$1(r, e, i, s);
    return Ha(n, t), qf$1(n);
  }
  function A1$1(t, e, r, i, s) {
    const n = zf$1(t, e, r, i, s);
    return Zs$1.toHex(n);
  }
  var O1$1 = {
    blake2b: zf$1,
    blake2bHex: A1$1,
    blake2bInit: Mf$1,
    blake2bUpdate: Ha,
    blake2bFinal: qf$1
  };
  const Hf$1 = Uf$1;
  function P1$1(t, e) {
    return t[e] ^ t[e + 1] << 8 ^ t[e + 2] << 16 ^ t[e + 3] << 24;
  }
  function Xt$4(t, e, r, i, s, n) {
    ee$4[t] = ee$4[t] + ee$4[e] + s, ee$4[i] = Rs$1(ee$4[i] ^ ee$4[t], 16), ee$4[r] = ee$4[r] + ee$4[i], ee$4[e] = Rs$1(ee$4[e] ^ ee$4[r], 12), ee$4[t] = ee$4[t] + ee$4[e] + n, ee$4[i] = Rs$1(ee$4[i] ^ ee$4[t], 8), ee$4[r] = ee$4[r] + ee$4[i], ee$4[e] = Rs$1(ee$4[e] ^ ee$4[r], 7);
  }
  function Rs$1(t, e) {
    return t >>> e ^ t << 32 - e;
  }
  const Vf$1 = new Uint32Array([
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ]), Be$4 = new Uint8Array([
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    14,
    10,
    4,
    8,
    9,
    15,
    13,
    6,
    1,
    12,
    0,
    2,
    11,
    7,
    5,
    3,
    11,
    8,
    12,
    0,
    5,
    2,
    15,
    13,
    10,
    14,
    3,
    6,
    7,
    1,
    9,
    4,
    7,
    9,
    3,
    1,
    13,
    12,
    11,
    14,
    2,
    6,
    5,
    10,
    4,
    0,
    15,
    8,
    9,
    0,
    5,
    7,
    2,
    4,
    10,
    15,
    14,
    1,
    11,
    12,
    6,
    8,
    3,
    13,
    2,
    12,
    6,
    10,
    0,
    11,
    8,
    3,
    4,
    13,
    7,
    5,
    15,
    14,
    1,
    9,
    12,
    5,
    1,
    15,
    14,
    13,
    4,
    10,
    0,
    7,
    6,
    3,
    9,
    2,
    8,
    11,
    13,
    11,
    7,
    14,
    12,
    1,
    3,
    9,
    5,
    0,
    15,
    4,
    8,
    6,
    2,
    10,
    6,
    15,
    14,
    9,
    11,
    3,
    0,
    8,
    12,
    2,
    13,
    7,
    1,
    4,
    10,
    5,
    10,
    2,
    8,
    4,
    7,
    6,
    1,
    5,
    15,
    11,
    9,
    14,
    3,
    12,
    13,
    0
  ]), ee$4 = new Uint32Array(16), $e$4 = new Uint32Array(16);
  function Kf$1(t, e) {
    let r = 0;
    for (r = 0; r < 8; r++)
      ee$4[r] = t.h[r], ee$4[r + 8] = Vf$1[r];
    for (ee$4[12] ^= t.t, ee$4[13] ^= t.t / 4294967296, e && (ee$4[14] = ~ee$4[14]), r = 0; r < 16; r++)
      $e$4[r] = P1$1(t.b, 4 * r);
    for (r = 0; r < 10; r++)
      Xt$4(0, 4, 8, 12, $e$4[Be$4[r * 16 + 0]], $e$4[Be$4[r * 16 + 1]]), Xt$4(1, 5, 9, 13, $e$4[Be$4[r * 16 + 2]], $e$4[Be$4[r * 16 + 3]]), Xt$4(2, 6, 10, 14, $e$4[Be$4[r * 16 + 4]], $e$4[Be$4[r * 16 + 5]]), Xt$4(3, 7, 11, 15, $e$4[Be$4[r * 16 + 6]], $e$4[Be$4[r * 16 + 7]]), Xt$4(0, 5, 10, 15, $e$4[Be$4[r * 16 + 8]], $e$4[Be$4[r * 16 + 9]]), Xt$4(1, 6, 11, 12, $e$4[Be$4[r * 16 + 10]], $e$4[Be$4[r * 16 + 11]]), Xt$4(2, 7, 8, 13, $e$4[Be$4[r * 16 + 12]], $e$4[Be$4[r * 16 + 13]]), Xt$4(3, 4, 9, 14, $e$4[Be$4[r * 16 + 14]], $e$4[Be$4[r * 16 + 15]]);
    for (r = 0; r < 8; r++)
      t.h[r] ^= ee$4[r] ^ ee$4[r + 8];
  }
  function Wf$1(t, e) {
    if (!(t > 0 && t <= 32))
      throw new Error("Incorrect output length, should be in [1, 32]");
    const r = e ? e.length : 0;
    if (e && !(r > 0 && r <= 32))
      throw new Error("Incorrect key length, should be in [1, 32]");
    const i = {
      h: new Uint32Array(Vf$1),
      // hash state
      b: new Uint8Array(64),
      // input block
      c: 0,
      // pointer within block
      t: 0,
      // input count
      outlen: t
      // output length in bytes
    };
    return i.h[0] ^= 16842752 ^ r << 8 ^ t, r > 0 && (Va(i, e), i.c = 64), i;
  }
  function Va(t, e) {
    for (let r = 0; r < e.length; r++)
      t.c === 64 && (t.t += t.c, Kf$1(t, false), t.c = 0), t.b[t.c++] = e[r];
  }
  function Gf$1(t) {
    for (t.t += t.c; t.c < 64; )
      t.b[t.c++] = 0;
    Kf$1(t, true);
    const e = new Uint8Array(t.outlen);
    for (let r = 0; r < t.outlen; r++)
      e[r] = t.h[r >> 2] >> 8 * (r & 3) & 255;
    return e;
  }
  function Yf$1(t, e, r) {
    r = r || 32, t = Hf$1.normalizeInput(t);
    const i = Wf$1(r, e);
    return Va(i, t), Gf$1(i);
  }
  function C1$1(t, e, r) {
    const i = Yf$1(t, e, r);
    return Hf$1.toHex(i);
  }
  var T1$1 = {
    blake2s: Yf$1,
    blake2sHex: C1$1,
    blake2sInit: Wf$1,
    blake2sUpdate: Va,
    blake2sFinal: Gf$1
  };
  const Bi$2 = O1$1, Fi$2 = T1$1;
  var R1$1 = {
    blake2b: Bi$2.blake2b,
    blake2bHex: Bi$2.blake2bHex,
    blake2bInit: Bi$2.blake2bInit,
    blake2bUpdate: Bi$2.blake2bUpdate,
    blake2bFinal: Bi$2.blake2bFinal,
    blake2s: Fi$2.blake2s,
    blake2sHex: Fi$2.blake2sHex,
    blake2sInit: Fi$2.blake2sInit,
    blake2sUpdate: Fi$2.blake2sUpdate,
    blake2sFinal: Fi$2.blake2sFinal
  };
  const B1$1 = ":";
  function gi$2(t) {
    const [e, r] = t.split(B1$1);
    return { namespace: e, reference: r };
  }
  function fh$1(t, e = []) {
    const r = [];
    return Object.keys(t).forEach((i) => {
      if (e.length && !e.includes(i)) return;
      const s = t[i];
      r.push(...s.accounts);
    }), r;
  }
  function Jf$1(t, e) {
    return t.includes(":") ? [t] : e.chains || [];
  }
  var F1$1 = Object.defineProperty, N1$1 = Object.defineProperties, U1$1 = Object.getOwnPropertyDescriptors, dh$1 = Object.getOwnPropertySymbols, k1$1 = Object.prototype.hasOwnProperty, L1$1 = Object.prototype.propertyIsEnumerable, ph$1 = (t, e, r) => e in t ? F1$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, gh$1 = (t, e) => {
    for (var r in e || (e = {})) k1$1.call(e, r) && ph$1(t, r, e[r]);
    if (dh$1) for (var r of dh$1(e)) L1$1.call(e, r) && ph$1(t, r, e[r]);
    return t;
  }, j1$1 = (t, e) => N1$1(t, U1$1(e));
  const M1$1 = "ReactNative", rt$4 = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" }, q1$1 = "js";
  function fn$1() {
    return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
  }
  function yr$1() {
    return !Tr$1() && !!Ca$1() && navigator.product === M1$1;
  }
  function z1$1() {
    return yr$1() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "android";
  }
  function H1$1() {
    return yr$1() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "ios";
  }
  function _i$2() {
    return !fn$1() && !!Ca$1() && !!Tr$1();
  }
  function ws$1() {
    return yr$1() ? rt$4.reactNative : fn$1() ? rt$4.node : _i$2() ? rt$4.browser : rt$4.unknown;
  }
  function yh$1() {
    var t;
    try {
      return yr$1() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (t = global.Application) == null ? void 0 : t.applicationId : void 0;
    } catch {
      return;
    }
  }
  function V1$1(t, e) {
    const r = new URLSearchParams(t);
    for (const i of Object.keys(e).sort()) if (e.hasOwnProperty(i)) {
      const s = e[i];
      s !== void 0 && r.set(i, s);
    }
    return r.toString();
  }
  function K1$1(t) {
    var e, r;
    const i = Zf$1();
    try {
      return t != null && t.url && i.url && new URL(t.url).host !== new URL(i.url).host && (console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${i.url}. This is probably unintended and can lead to issues.`), t.url = i.url), (e = t == null ? void 0 : t.icons) != null && e.length && t.icons.length > 0 && (t.icons = t.icons.filter((s) => s !== "")), j1$1(gh$1(gh$1({}, i), t), { url: (t == null ? void 0 : t.url) || i.url, name: (t == null ? void 0 : t.name) || i.name, description: (t == null ? void 0 : t.description) || i.description, icons: (r = t == null ? void 0 : t.icons) != null && r.length && t.icons.length > 0 ? t.icons : i.icons });
    } catch (s) {
      return console.warn("Error populating app metadata", s), t || i;
    }
  }
  function Zf$1() {
    return Rl$1() || { name: "", description: "", url: "", icons: [""] };
  }
  function W1$1() {
    if (ws$1() === rt$4.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
      const { OS: r, Version: i } = global.Platform;
      return [r, i].join("-");
    }
    const t = ag$1();
    if (t === null) return "unknown";
    const e = t.os ? t.os.replace(" ", "").toLowerCase() : "unknown";
    return t.type === "browser" ? [e, t.name, t.version].join("-") : [e, t.version].join("-");
  }
  function G1$1() {
    var t;
    const e = ws$1();
    return e === rt$4.browser ? [e, ((t = Tl$1()) == null ? void 0 : t.host) || "unknown"].join(":") : e;
  }
  function Qf$1(t, e, r) {
    const i = W1$1(), s = G1$1();
    return [[t, e].join("-"), [q1$1, r].join("-"), i, s].join("/");
  }
  function Y1$1({ protocol: t, version: e, relayUrl: r, sdkVersion: i, auth: s, projectId: n, useOnCloseEvent: o, bundleId: a, packageName: c }) {
    const h = r.split("?"), u = Qf$1(t, e, i), l = { auth: s, ua: u, projectId: n, useOnCloseEvent: o, packageName: c || void 0, bundleId: a || void 0 }, f = V1$1(h[1] || "", l);
    return h[0] + "?" + f;
  }
  function Dr$1(t, e) {
    return t.filter((r) => e.includes(r)).length === t.length;
  }
  function Vo$1(t) {
    return Object.fromEntries(t.entries());
  }
  function Ko$1(t) {
    return new Map(Object.entries(t));
  }
  function _r$1(t = L$3.FIVE_MINUTES, e) {
    const r = L$3.toMiliseconds(t || L$3.FIVE_MINUTES);
    let i, s, n, o;
    return { resolve: (a) => {
      n && i && (clearTimeout(n), i(a), o = Promise.resolve(a));
    }, reject: (a) => {
      n && s && (clearTimeout(n), s(a));
    }, done: () => new Promise((a, c) => {
      if (o) return a(o);
      n = setTimeout(() => {
        const h = new Error(e);
        o = Promise.reject(h), c(h);
      }, r), i = a, s = c;
    }) };
  }
  function lr$1(t, e, r) {
    return new Promise(async (i, s) => {
      const n = setTimeout(() => s(new Error(r)), e);
      try {
        const o = await t;
        i(o);
      } catch (o) {
        s(o);
      }
      clearTimeout(n);
    });
  }
  function Xf$1(t, e) {
    if (typeof e == "string" && e.startsWith(`${t}:`)) return e;
    if (t.toLowerCase() === "topic") {
      if (typeof e != "string") throw new Error('Value must be "string" for expirer target type: topic');
      return `topic:${e}`;
    } else if (t.toLowerCase() === "id") {
      if (typeof e != "number") throw new Error('Value must be "number" for expirer target type: id');
      return `id:${e}`;
    }
    throw new Error(`Unknown expirer target type: ${t}`);
  }
  function J1$1(t) {
    return Xf$1("topic", t);
  }
  function Z1$1(t) {
    return Xf$1("id", t);
  }
  function ed$1(t) {
    const [e, r] = t.split(":"), i = { id: void 0, topic: void 0 };
    if (e === "topic" && typeof r == "string") i.topic = r;
    else if (e === "id" && Number.isInteger(Number(r))) i.id = Number(r);
    else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${r}`);
    return i;
  }
  function we$4(t, e) {
    return L$3.fromMiliseconds(Date.now() + L$3.toMiliseconds(t));
  }
  function or$1(t) {
    return Date.now() >= L$3.toMiliseconds(t);
  }
  function se$3(t, e) {
    return `${t}${e ? `:${e}` : ""}`;
  }
  function Bt$4(t = [], e = []) {
    return [.../* @__PURE__ */ new Set([...t, ...e])];
  }
  async function Q1$1({ id: t, topic: e, wcDeepLink: r }) {
    var i;
    try {
      if (!r) return;
      const s = typeof r == "string" ? JSON.parse(r) : r, n = s == null ? void 0 : s.href;
      if (typeof n != "string") return;
      const o = X1$1(n, t, e), a = ws$1();
      if (a === rt$4.browser) {
        if (!((i = Tr$1()) != null && i.hasFocus())) {
          console.warn("Document does not have focus, skipping deeplink.");
          return;
        }
        ev$1(o);
      } else a === rt$4.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(o);
    } catch (s) {
      console.error(s);
    }
  }
  function X1$1(t, e, r) {
    const i = `requestId=${e}&sessionTopic=${r}`;
    t.endsWith("/") && (t = t.slice(0, -1));
    let s = `${t}`;
    if (t.startsWith("https://t.me")) {
      const n = t.includes("?") ? "&startapp=" : "?startapp=";
      s = `${s}${n}${sv$1(i, true)}`;
    } else s = `${s}/wc?${i}`;
    return s;
  }
  function ev$1(t) {
    let e = "_self";
    iv$1() ? e = "_top" : (rv$1() || t.startsWith("https://") || t.startsWith("http://")) && (e = "_blank"), window.open(t, e, "noreferrer noopener");
  }
  async function tv$1(t, e) {
    let r = "";
    try {
      if (_i$2() && (r = localStorage.getItem(e), r)) return r;
      r = await t.getItem(e);
    } catch (i) {
      console.error(i);
    }
    return r;
  }
  function wh$1(t, e) {
    if (!t.includes(e)) return null;
    const r = t.split(/([&,?,=])/), i = r.indexOf(e);
    return r[i + 2];
  }
  function mh() {
    return typeof crypto < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (t) => {
      const e = Math.random() * 16 | 0;
      return (t === "x" ? e : e & 3 | 8).toString(16);
    });
  }
  function Ka() {
    return typeof process < "u" && process.env.IS_VITEST === "true";
  }
  function rv$1() {
    return typeof window < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
  }
  function iv$1() {
    try {
      return window.self !== window.top;
    } catch {
      return false;
    }
  }
  function sv$1(t, e = false) {
    const r = Buffer.from(t).toString("base64");
    return e ? r.replace(/[=]/g, "") : r;
  }
  function td$1(t) {
    return Buffer.from(t, "base64").toString("utf-8");
  }
  function nv$1(t) {
    return new Promise((e) => setTimeout(e, t));
  }
  const Bs$1 = BigInt(2 ** 32 - 1), bh$1 = BigInt(32);
  function rd$1(t, e = false) {
    return e ? { h: Number(t & Bs$1), l: Number(t >> bh$1 & Bs$1) } : { h: Number(t >> bh$1 & Bs$1) | 0, l: Number(t & Bs$1) | 0 };
  }
  function id$1(t, e = false) {
    const r = t.length;
    let i = new Uint32Array(r), s = new Uint32Array(r);
    for (let n = 0; n < r; n++) {
      const { h: o, l: a } = rd$1(t[n], e);
      [i[n], s[n]] = [o, a];
    }
    return [i, s];
  }
  const vh$1 = (t, e, r) => t >>> r, Eh$1 = (t, e, r) => t << 32 - r | e >>> r, ar$1 = (t, e, r) => t >>> r | e << 32 - r, cr$1 = (t, e, r) => t << 32 - r | e >>> r, Vi$2 = (t, e, r) => t << 64 - r | e >>> r - 32, Ki$1 = (t, e, r) => t >>> r - 32 | e << 64 - r, ov$1 = (t, e) => e, av$1 = (t, e) => t, cv$1 = (t, e, r) => t << r | e >>> 32 - r, hv$1 = (t, e, r) => e << r | t >>> 32 - r, uv$1 = (t, e, r) => e << r - 32 | t >>> 64 - r, lv$1 = (t, e, r) => t << r - 32 | e >>> 64 - r;
  function Et$2(t, e, r, i) {
    const s = (e >>> 0) + (i >>> 0);
    return { h: t + r + (s / 2 ** 32 | 0) | 0, l: s | 0 };
  }
  const Wa$1 = (t, e, r) => (t >>> 0) + (e >>> 0) + (r >>> 0), Ga = (t, e, r, i) => e + r + i + (t / 2 ** 32 | 0) | 0, fv$1 = (t, e, r, i) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (i >>> 0), dv$1 = (t, e, r, i, s) => e + r + i + s + (t / 2 ** 32 | 0) | 0, pv$1 = (t, e, r, i, s) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (i >>> 0) + (s >>> 0), gv$1 = (t, e, r, i, s, n) => e + r + i + s + n + (t / 2 ** 32 | 0) | 0, Wr$1 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  function Ya$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function Gt$4(t) {
    if (!Number.isSafeInteger(t) || t < 0) throw new Error("positive integer expected, got " + t);
  }
  function ft$3(t, ...e) {
    if (!Ya$1(t)) throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length)) throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function Ja(t) {
    if (typeof t != "function" || typeof t.create != "function") throw new Error("Hash should be wrapped by utils.createHasher");
    Gt$4(t.outputLen), Gt$4(t.blockLen);
  }
  function gr$1(t, e = true) {
    if (t.destroyed) throw new Error("Hash instance has been destroyed");
    if (e && t.finished) throw new Error("Hash#digest() has already been called");
  }
  function Za$1(t, e) {
    ft$3(t);
    const r = e.outputLen;
    if (t.length < r) throw new Error("digestInto() expects output buffer of length at least " + r);
  }
  function as$1(t) {
    return new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
  }
  function dt$5(...t) {
    for (let e = 0; e < t.length; e++) t[e].fill(0);
  }
  function oo$2(t) {
    return new DataView(t.buffer, t.byteOffset, t.byteLength);
  }
  function St$4(t, e) {
    return t << 32 - e | t >>> e;
  }
  const sd$1 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  function nd$1(t) {
    return t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;
  }
  const zt$4 = sd$1 ? (t) => t : (t) => nd$1(t);
  function yv$1(t) {
    for (let e = 0; e < t.length; e++) t[e] = nd$1(t[e]);
    return t;
  }
  const hr$1 = sd$1 ? (t) => t : yv$1, od$1 = typeof Uint8Array.from([]).toHex == "function" && typeof Uint8Array.fromHex == "function", wv$1 = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
  function cs$1(t) {
    if (ft$3(t), od$1) return t.toHex();
    let e = "";
    for (let r = 0; r < t.length; r++) e += wv$1[t[r]];
    return e;
  }
  const jt$2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
  function _h(t) {
    if (t >= jt$2._0 && t <= jt$2._9) return t - jt$2._0;
    if (t >= jt$2.A && t <= jt$2.F) return t - (jt$2.A - 10);
    if (t >= jt$2.a && t <= jt$2.f) return t - (jt$2.a - 10);
  }
  function Qa$1(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    if (od$1) return Uint8Array.fromHex(t);
    const e = t.length, r = e / 2;
    if (e % 2) throw new Error("hex string expected, got unpadded hex of length " + e);
    const i = new Uint8Array(r);
    for (let s = 0, n = 0; s < r; s++, n += 2) {
      const o = _h(t.charCodeAt(n)), a = _h(t.charCodeAt(n + 1));
      if (o === void 0 || a === void 0) {
        const c = t[n] + t[n + 1];
        throw new Error('hex string expected, got non-hex character "' + c + '" at index ' + n);
      }
      i[s] = o * 16 + a;
    }
    return i;
  }
  function mv$1(t) {
    if (typeof t != "string") throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function It$3(t) {
    return typeof t == "string" && (t = mv$1(t)), ft$3(t), t;
  }
  function Ar$1(...t) {
    let e = 0;
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      ft$3(s), e += s.length;
    }
    const r = new Uint8Array(e);
    for (let i = 0, s = 0; i < t.length; i++) {
      const n = t[i];
      r.set(n, s), s += n.length;
    }
    return r;
  }
  let Dn$2 = class Dn {
  };
  function ms$1(t) {
    const e = (i) => t().update(It$3(i)).digest(), r = t();
    return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
  }
  function bv$1(t) {
    const e = (i, s) => t(s).update(It$3(i)).digest(), r = t({});
    return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = (i) => t(i), e;
  }
  function Ii$2(t = 32) {
    if (Wr$1 && typeof Wr$1.getRandomValues == "function") return Wr$1.getRandomValues(new Uint8Array(t));
    if (Wr$1 && typeof Wr$1.randomBytes == "function") return Uint8Array.from(Wr$1.randomBytes(t));
    throw new Error("crypto.getRandomValues must be defined");
  }
  const vv$1 = BigInt(0), Ni$2 = BigInt(1), Ev$1 = BigInt(2), _v$1 = BigInt(7), Iv$1 = BigInt(256), xv$1 = BigInt(113), ad$1 = [], cd$1 = [], hd$1 = [];
  for (let t = 0, e = Ni$2, r = 1, i = 0; t < 24; t++) {
    [r, i] = [i, (2 * r + 3 * i) % 5], ad$1.push(2 * (5 * i + r)), cd$1.push((t + 1) * (t + 2) / 2 % 64);
    let s = vv$1;
    for (let n = 0; n < 7; n++) e = (e << Ni$2 ^ (e >> _v$1) * xv$1) % Iv$1, e & Ev$1 && (s ^= Ni$2 << (Ni$2 << BigInt(n)) - Ni$2);
    hd$1.push(s);
  }
  const ud$1 = id$1(hd$1, true), $v$1 = ud$1[0], Sv$1 = ud$1[1], Ih$1 = (t, e, r) => r > 32 ? uv$1(t, e, r) : cv$1(t, e, r), xh$1 = (t, e, r) => r > 32 ? lv$1(t, e, r) : hv$1(t, e, r);
  function Dv$1(t, e = 24) {
    const r = new Uint32Array(10);
    for (let i = 24 - e; i < 24; i++) {
      for (let o = 0; o < 10; o++) r[o] = t[o] ^ t[o + 10] ^ t[o + 20] ^ t[o + 30] ^ t[o + 40];
      for (let o = 0; o < 10; o += 2) {
        const a = (o + 8) % 10, c = (o + 2) % 10, h = r[c], u = r[c + 1], l = Ih$1(h, u, 1) ^ r[a], f = xh$1(h, u, 1) ^ r[a + 1];
        for (let p = 0; p < 50; p += 10) t[o + p] ^= l, t[o + p + 1] ^= f;
      }
      let s = t[2], n = t[3];
      for (let o = 0; o < 24; o++) {
        const a = cd$1[o], c = Ih$1(s, n, a), h = xh$1(s, n, a), u = ad$1[o];
        s = t[u], n = t[u + 1], t[u] = c, t[u + 1] = h;
      }
      for (let o = 0; o < 50; o += 10) {
        for (let a = 0; a < 10; a++) r[a] = t[o + a];
        for (let a = 0; a < 10; a++) t[o + a] ^= ~r[(a + 2) % 10] & r[(a + 4) % 10];
      }
      t[0] ^= $v$1[i], t[1] ^= Sv$1[i];
    }
    dt$5(r);
  }
  let Av$1 = class ld extends Dn$2 {
    constructor(e, r, i, s = false, n = 24) {
      if (super(), this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, this.enableXOF = false, this.blockLen = e, this.suffix = r, this.outputLen = i, this.enableXOF = s, this.rounds = n, Gt$4(i), !(0 < e && e < 200)) throw new Error("only keccak-f1600 function is supported");
      this.state = new Uint8Array(200), this.state32 = as$1(this.state);
    }
    clone() {
      return this._cloneInto();
    }
    keccak() {
      hr$1(this.state32), Dv$1(this.state32, this.rounds), hr$1(this.state32), this.posOut = 0, this.pos = 0;
    }
    update(e) {
      gr$1(this), e = It$3(e), ft$3(e);
      const { blockLen: r, state: i } = this, s = e.length;
      for (let n = 0; n < s; ) {
        const o = Math.min(r - this.pos, s - n);
        for (let a = 0; a < o; a++) i[this.pos++] ^= e[n++];
        this.pos === r && this.keccak();
      }
      return this;
    }
    finish() {
      if (this.finished) return;
      this.finished = true;
      const { state: e, suffix: r, pos: i, blockLen: s } = this;
      e[i] ^= r, r & 128 && i === s - 1 && this.keccak(), e[s - 1] ^= 128, this.keccak();
    }
    writeInto(e) {
      gr$1(this, false), ft$3(e), this.finish();
      const r = this.state, { blockLen: i } = this;
      for (let s = 0, n = e.length; s < n; ) {
        this.posOut >= i && this.keccak();
        const o = Math.min(i - this.posOut, n - s);
        e.set(r.subarray(this.posOut, this.posOut + o), s), this.posOut += o, s += o;
      }
      return e;
    }
    xofInto(e) {
      if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
      return this.writeInto(e);
    }
    xof(e) {
      return Gt$4(e), this.xofInto(new Uint8Array(e));
    }
    digestInto(e) {
      if (Za$1(e, this), this.finished) throw new Error("digest() was already called");
      return this.writeInto(e), this.destroy(), e;
    }
    digest() {
      return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
      this.destroyed = true, dt$5(this.state);
    }
    _cloneInto(e) {
      const { blockLen: r, suffix: i, outputLen: s, rounds: n, enableXOF: o } = this;
      return e || (e = new ld(r, i, s, o, n)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = n, e.suffix = i, e.outputLen = s, e.enableXOF = o, e.destroyed = this.destroyed, e;
    }
  };
  const Ov$1 = (t, e, r) => ms$1(() => new Av$1(e, t, r)), Pv$1 = Ov$1(1, 136, 256 / 8);
  function Cv$1(t, e, r, i) {
    if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, r, i);
    const s = BigInt(32), n = BigInt(4294967295), o = Number(r >> s & n), a = Number(r & n), c = i ? 4 : 0, h = i ? 0 : 4;
    t.setUint32(e + c, o, i), t.setUint32(e + h, a, i);
  }
  function Tv$1(t, e, r) {
    return t & e ^ ~t & r;
  }
  function Rv$1(t, e, r) {
    return t & e ^ t & r ^ e & r;
  }
  let fd$1 = class fd extends Dn$2 {
    constructor(e, r, i, s) {
      super(), this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.blockLen = e, this.outputLen = r, this.padOffset = i, this.isLE = s, this.buffer = new Uint8Array(e), this.view = oo$2(this.buffer);
    }
    update(e) {
      gr$1(this), e = It$3(e), ft$3(e);
      const { view: r, buffer: i, blockLen: s } = this, n = e.length;
      for (let o = 0; o < n; ) {
        const a = Math.min(s - this.pos, n - o);
        if (a === s) {
          const c = oo$2(e);
          for (; s <= n - o; o += s) this.process(c, o);
          continue;
        }
        i.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === s && (this.process(r, 0), this.pos = 0);
      }
      return this.length += e.length, this.roundClean(), this;
    }
    digestInto(e) {
      gr$1(this), Za$1(e, this), this.finished = true;
      const { buffer: r, view: i, blockLen: s, isLE: n } = this;
      let { pos: o } = this;
      r[o++] = 128, dt$5(this.buffer.subarray(o)), this.padOffset > s - o && (this.process(i, 0), o = 0);
      for (let l = o; l < s; l++) r[l] = 0;
      Cv$1(i, s - 8, BigInt(this.length * 8), n), this.process(i, 0);
      const a = oo$2(e), c = this.outputLen;
      if (c % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
      const h = c / 4, u = this.get();
      if (h > u.length) throw new Error("_sha2: outputLen bigger than state");
      for (let l = 0; l < h; l++) a.setUint32(4 * l, u[l], n);
    }
    digest() {
      const { buffer: e, outputLen: r } = this;
      this.digestInto(e);
      const i = e.slice(0, r);
      return this.destroy(), i;
    }
    _cloneInto(e) {
      e || (e = new this.constructor()), e.set(...this.get());
      const { blockLen: r, buffer: i, length: s, finished: n, destroyed: o, pos: a } = this;
      return e.destroyed = o, e.finished = n, e.length = s, e.pos = a, s % r && e.buffer.set(i), e;
    }
    clone() {
      return this._cloneInto();
    }
  };
  const er$1 = Uint32Array.from([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), Fe$4 = Uint32Array.from([3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]), Ne$5 = Uint32Array.from([1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]), Bv$1 = Uint32Array.from([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]), tr$1 = new Uint32Array(64);
  let Fv$1 = class Fv extends fd$1 {
    constructor(e = 32) {
      super(64, e, 8, false), this.A = er$1[0] | 0, this.B = er$1[1] | 0, this.C = er$1[2] | 0, this.D = er$1[3] | 0, this.E = er$1[4] | 0, this.F = er$1[5] | 0, this.G = er$1[6] | 0, this.H = er$1[7] | 0;
    }
    get() {
      const { A: e, B: r, C: i, D: s, E: n, F: o, G: a, H: c } = this;
      return [e, r, i, s, n, o, a, c];
    }
    set(e, r, i, s, n, o, a, c) {
      this.A = e | 0, this.B = r | 0, this.C = i | 0, this.D = s | 0, this.E = n | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
    }
    process(e, r) {
      for (let l = 0; l < 16; l++, r += 4) tr$1[l] = e.getUint32(r, false);
      for (let l = 16; l < 64; l++) {
        const f = tr$1[l - 15], p = tr$1[l - 2], d = St$4(f, 7) ^ St$4(f, 18) ^ f >>> 3, g = St$4(p, 17) ^ St$4(p, 19) ^ p >>> 10;
        tr$1[l] = g + tr$1[l - 7] + d + tr$1[l - 16] | 0;
      }
      let { A: i, B: s, C: n, D: o, E: a, F: c, G: h, H: u } = this;
      for (let l = 0; l < 64; l++) {
        const f = St$4(a, 6) ^ St$4(a, 11) ^ St$4(a, 25), p = u + f + Tv$1(a, c, h) + Bv$1[l] + tr$1[l] | 0, d = (St$4(i, 2) ^ St$4(i, 13) ^ St$4(i, 22)) + Rv$1(i, s, n) | 0;
        u = h, h = c, c = a, a = o + p | 0, o = n, n = s, s = i, i = p + d | 0;
      }
      i = i + this.A | 0, s = s + this.B | 0, n = n + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, h = h + this.G | 0, u = u + this.H | 0, this.set(i, s, n, o, a, c, h, u);
    }
    roundClean() {
      dt$5(tr$1);
    }
    destroy() {
      this.set(0, 0, 0, 0, 0, 0, 0, 0), dt$5(this.buffer);
    }
  };
  const dd$1 = id$1(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))), Nv$1 = dd$1[0], Uv$1 = dd$1[1], rr$1 = new Uint32Array(80), ir = new Uint32Array(80);
  let Xa$1 = class Xa extends fd$1 {
    constructor(e = 64) {
      super(128, e, 16, false), this.Ah = Ne$5[0] | 0, this.Al = Ne$5[1] | 0, this.Bh = Ne$5[2] | 0, this.Bl = Ne$5[3] | 0, this.Ch = Ne$5[4] | 0, this.Cl = Ne$5[5] | 0, this.Dh = Ne$5[6] | 0, this.Dl = Ne$5[7] | 0, this.Eh = Ne$5[8] | 0, this.El = Ne$5[9] | 0, this.Fh = Ne$5[10] | 0, this.Fl = Ne$5[11] | 0, this.Gh = Ne$5[12] | 0, this.Gl = Ne$5[13] | 0, this.Hh = Ne$5[14] | 0, this.Hl = Ne$5[15] | 0;
    }
    get() {
      const { Ah: e, Al: r, Bh: i, Bl: s, Ch: n, Cl: o, Dh: a, Dl: c, Eh: h, El: u, Fh: l, Fl: f, Gh: p, Gl: d, Hh: g, Hl: m } = this;
      return [e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m];
    }
    set(e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m) {
      this.Ah = e | 0, this.Al = r | 0, this.Bh = i | 0, this.Bl = s | 0, this.Ch = n | 0, this.Cl = o | 0, this.Dh = a | 0, this.Dl = c | 0, this.Eh = h | 0, this.El = u | 0, this.Fh = l | 0, this.Fl = f | 0, this.Gh = p | 0, this.Gl = d | 0, this.Hh = g | 0, this.Hl = m | 0;
    }
    process(e, r) {
      for (let E = 0; E < 16; E++, r += 4) rr$1[E] = e.getUint32(r), ir[E] = e.getUint32(r += 4);
      for (let E = 16; E < 80; E++) {
        const P = rr$1[E - 15] | 0, A = ir[E - 15] | 0, k = ar$1(P, A, 1) ^ ar$1(P, A, 8) ^ vh$1(P, A, 7), U = cr$1(P, A, 1) ^ cr$1(P, A, 8) ^ Eh$1(P, A, 7), R = rr$1[E - 2] | 0, b = ir[E - 2] | 0, C = ar$1(R, b, 19) ^ Vi$2(R, b, 61) ^ vh$1(R, b, 6), S = cr$1(R, b, 19) ^ Ki$1(R, b, 61) ^ Eh$1(R, b, 6), D = fv$1(U, S, ir[E - 7], ir[E - 16]), T = dv$1(D, k, C, rr$1[E - 7], rr$1[E - 16]);
        rr$1[E] = T | 0, ir[E] = D | 0;
      }
      let { Ah: i, Al: s, Bh: n, Bl: o, Ch: a, Cl: c, Dh: h, Dl: u, Eh: l, El: f, Fh: p, Fl: d, Gh: g, Gl: m, Hh: _, Hl: I } = this;
      for (let E = 0; E < 80; E++) {
        const P = ar$1(l, f, 14) ^ ar$1(l, f, 18) ^ Vi$2(l, f, 41), A = cr$1(l, f, 14) ^ cr$1(l, f, 18) ^ Ki$1(l, f, 41), k = l & p ^ ~l & g, U = f & d ^ ~f & m, R = pv$1(I, A, U, Uv$1[E], ir[E]), b = gv$1(R, _, P, k, Nv$1[E], rr$1[E]), C = R | 0, S = ar$1(i, s, 28) ^ Vi$2(i, s, 34) ^ Vi$2(i, s, 39), D = cr$1(i, s, 28) ^ Ki$1(i, s, 34) ^ Ki$1(i, s, 39), T = i & n ^ i & a ^ n & a, N = s & o ^ s & c ^ o & c;
        _ = g | 0, I = m | 0, g = p | 0, m = d | 0, p = l | 0, d = f | 0, { h: l, l: f } = Et$2(h | 0, u | 0, b | 0, C | 0), h = a | 0, u = c | 0, a = n | 0, c = o | 0, n = i | 0, o = s | 0;
        const y = Wa$1(C, D, N);
        i = Ga(y, b, S, T), s = y | 0;
      }
      (({ h: i, l: s } = Et$2(this.Ah | 0, this.Al | 0, i | 0, s | 0))), { h: n, l: o } = Et$2(this.Bh | 0, this.Bl | 0, n | 0, o | 0), { h: a, l: c } = Et$2(this.Ch | 0, this.Cl | 0, a | 0, c | 0), { h, l: u } = Et$2(this.Dh | 0, this.Dl | 0, h | 0, u | 0), { h: l, l: f } = Et$2(this.Eh | 0, this.El | 0, l | 0, f | 0), { h: p, l: d } = Et$2(this.Fh | 0, this.Fl | 0, p | 0, d | 0), { h: g, l: m } = Et$2(this.Gh | 0, this.Gl | 0, g | 0, m | 0), { h: _, l: I } = Et$2(this.Hh | 0, this.Hl | 0, _ | 0, I | 0), this.set(i, s, n, o, a, c, h, u, l, f, p, d, g, m, _, I);
    }
    roundClean() {
      dt$5(rr$1, ir);
    }
    destroy() {
      dt$5(this.buffer), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
  }, kv$1 = class kv extends Xa$1 {
    constructor() {
      super(48), this.Ah = Fe$4[0] | 0, this.Al = Fe$4[1] | 0, this.Bh = Fe$4[2] | 0, this.Bl = Fe$4[3] | 0, this.Ch = Fe$4[4] | 0, this.Cl = Fe$4[5] | 0, this.Dh = Fe$4[6] | 0, this.Dl = Fe$4[7] | 0, this.Eh = Fe$4[8] | 0, this.El = Fe$4[9] | 0, this.Fh = Fe$4[10] | 0, this.Fl = Fe$4[11] | 0, this.Gh = Fe$4[12] | 0, this.Gl = Fe$4[13] | 0, this.Hh = Fe$4[14] | 0, this.Hl = Fe$4[15] | 0;
    }
  };
  const Ue$5 = Uint32Array.from([573645204, 4230739756, 2673172387, 3360449730, 596883563, 1867755857, 2520282905, 1497426621, 2519219938, 2827943907, 3193839141, 1401305490, 721525244, 746961066, 246885852, 2177182882]);
  let Lv$1 = class Lv extends Xa$1 {
    constructor() {
      super(32), this.Ah = Ue$5[0] | 0, this.Al = Ue$5[1] | 0, this.Bh = Ue$5[2] | 0, this.Bl = Ue$5[3] | 0, this.Ch = Ue$5[4] | 0, this.Cl = Ue$5[5] | 0, this.Dh = Ue$5[6] | 0, this.Dl = Ue$5[7] | 0, this.Eh = Ue$5[8] | 0, this.El = Ue$5[9] | 0, this.Fh = Ue$5[10] | 0, this.Fl = Ue$5[11] | 0, this.Gh = Ue$5[12] | 0, this.Gl = Ue$5[13] | 0, this.Hh = Ue$5[14] | 0, this.Hl = Ue$5[15] | 0;
    }
  };
  const An$2 = ms$1(() => new Fv$1()), jv$1 = ms$1(() => new Xa$1()), Mv$1 = ms$1(() => new kv$1()), qv$1 = ms$1(() => new Lv$1()), zv$1 = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]), ye$3 = Uint32Array.from([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]), z$4 = new Uint32Array(32);
  function sr$1(t, e, r, i, s, n) {
    const o = s[n], a = s[n + 1];
    let c = z$4[2 * t], h = z$4[2 * t + 1], u = z$4[2 * e], l = z$4[2 * e + 1], f = z$4[2 * r], p = z$4[2 * r + 1], d = z$4[2 * i], g = z$4[2 * i + 1], m = Wa$1(c, u, o);
    h = Ga(m, h, l, a), c = m | 0, { Dh: g, Dl: d } = { Dh: g ^ h, Dl: d ^ c }, { Dh: g, Dl: d } = { Dh: ov$1(g, d), Dl: av$1(g) }, { h: p, l: f } = Et$2(p, f, g, d), { Bh: l, Bl: u } = { Bh: l ^ p, Bl: u ^ f }, { Bh: l, Bl: u } = { Bh: ar$1(l, u, 24), Bl: cr$1(l, u, 24) }, z$4[2 * t] = c, z$4[2 * t + 1] = h, z$4[2 * e] = u, z$4[2 * e + 1] = l, z$4[2 * r] = f, z$4[2 * r + 1] = p, z$4[2 * i] = d, z$4[2 * i + 1] = g;
  }
  function nr(t, e, r, i, s, n) {
    const o = s[n], a = s[n + 1];
    let c = z$4[2 * t], h = z$4[2 * t + 1], u = z$4[2 * e], l = z$4[2 * e + 1], f = z$4[2 * r], p = z$4[2 * r + 1], d = z$4[2 * i], g = z$4[2 * i + 1], m = Wa$1(c, u, o);
    h = Ga(m, h, l, a), c = m | 0, { Dh: g, Dl: d } = { Dh: g ^ h, Dl: d ^ c }, { Dh: g, Dl: d } = { Dh: ar$1(g, d, 16), Dl: cr$1(g, d, 16) }, { h: p, l: f } = Et$2(p, f, g, d), { Bh: l, Bl: u } = { Bh: l ^ p, Bl: u ^ f }, { Bh: l, Bl: u } = { Bh: Vi$2(l, u, 63), Bl: Ki$1(l, u, 63) }, z$4[2 * t] = c, z$4[2 * t + 1] = h, z$4[2 * e] = u, z$4[2 * e + 1] = l, z$4[2 * r] = f, z$4[2 * r + 1] = p, z$4[2 * i] = d, z$4[2 * i + 1] = g;
  }
  function Hv$1(t, e = {}, r, i, s) {
    if (Gt$4(r), t < 0 || t > r) throw new Error("outputLen bigger than keyLen");
    const { key: n, salt: o, personalization: a } = e;
    if (n !== void 0 && (n.length < 1 || n.length > r)) throw new Error("key length must be undefined or 1.." + r);
    if (o !== void 0 && o.length !== i) throw new Error("salt must be undefined or " + i);
    if (a !== void 0 && a.length !== s) throw new Error("personalization must be undefined or " + s);
  }
  let Vv$1 = class Vv extends Dn$2 {
    constructor(e, r) {
      super(), this.finished = false, this.destroyed = false, this.length = 0, this.pos = 0, Gt$4(e), Gt$4(r), this.blockLen = e, this.outputLen = r, this.buffer = new Uint8Array(e), this.buffer32 = as$1(this.buffer);
    }
    update(e) {
      gr$1(this), e = It$3(e), ft$3(e);
      const { blockLen: r, buffer: i, buffer32: s } = this, n = e.length, o = e.byteOffset, a = e.buffer;
      for (let c = 0; c < n; ) {
        this.pos === r && (hr$1(s), this.compress(s, 0, false), hr$1(s), this.pos = 0);
        const h = Math.min(r - this.pos, n - c), u = o + c;
        if (h === r && !(u % 4) && c + h < n) {
          const l = new Uint32Array(a, u, Math.floor((n - c) / 4));
          hr$1(l);
          for (let f = 0; c + r < n; f += s.length, c += r) this.length += r, this.compress(l, f, false);
          hr$1(l);
          continue;
        }
        i.set(e.subarray(c, c + h), this.pos), this.pos += h, this.length += h, c += h;
      }
      return this;
    }
    digestInto(e) {
      gr$1(this), Za$1(e, this);
      const { pos: r, buffer32: i } = this;
      this.finished = true, dt$5(this.buffer.subarray(r)), hr$1(i), this.compress(i, 0, true), hr$1(i);
      const s = as$1(e);
      this.get().forEach((n, o) => s[o] = zt$4(n));
    }
    digest() {
      const { buffer: e, outputLen: r } = this;
      this.digestInto(e);
      const i = e.slice(0, r);
      return this.destroy(), i;
    }
    _cloneInto(e) {
      const { buffer: r, length: i, finished: s, destroyed: n, outputLen: o, pos: a } = this;
      return e || (e = new this.constructor({ dkLen: o })), e.set(...this.get()), e.buffer.set(r), e.destroyed = n, e.finished = s, e.length = i, e.pos = a, e.outputLen = o, e;
    }
    clone() {
      return this._cloneInto();
    }
  };
  let Kv$1 = class Kv extends Vv$1 {
    constructor(e = {}) {
      const r = e.dkLen === void 0 ? 64 : e.dkLen;
      super(128, r), this.v0l = ye$3[0] | 0, this.v0h = ye$3[1] | 0, this.v1l = ye$3[2] | 0, this.v1h = ye$3[3] | 0, this.v2l = ye$3[4] | 0, this.v2h = ye$3[5] | 0, this.v3l = ye$3[6] | 0, this.v3h = ye$3[7] | 0, this.v4l = ye$3[8] | 0, this.v4h = ye$3[9] | 0, this.v5l = ye$3[10] | 0, this.v5h = ye$3[11] | 0, this.v6l = ye$3[12] | 0, this.v6h = ye$3[13] | 0, this.v7l = ye$3[14] | 0, this.v7h = ye$3[15] | 0, Hv$1(r, e, 64, 16, 16);
      let { key: i, personalization: s, salt: n } = e, o = 0;
      if (i !== void 0 && (i = It$3(i), o = i.length), this.v0l ^= this.outputLen | o << 8 | 65536 | 1 << 24, n !== void 0) {
        n = It$3(n);
        const a = as$1(n);
        this.v4l ^= zt$4(a[0]), this.v4h ^= zt$4(a[1]), this.v5l ^= zt$4(a[2]), this.v5h ^= zt$4(a[3]);
      }
      if (s !== void 0) {
        s = It$3(s);
        const a = as$1(s);
        this.v6l ^= zt$4(a[0]), this.v6h ^= zt$4(a[1]), this.v7l ^= zt$4(a[2]), this.v7h ^= zt$4(a[3]);
      }
      if (i !== void 0) {
        const a = new Uint8Array(this.blockLen);
        a.set(i), this.update(a);
      }
    }
    get() {
      let { v0l: e, v0h: r, v1l: i, v1h: s, v2l: n, v2h: o, v3l: a, v3h: c, v4l: h, v4h: u, v5l: l, v5h: f, v6l: p, v6h: d, v7l: g, v7h: m } = this;
      return [e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m];
    }
    set(e, r, i, s, n, o, a, c, h, u, l, f, p, d, g, m) {
      this.v0l = e | 0, this.v0h = r | 0, this.v1l = i | 0, this.v1h = s | 0, this.v2l = n | 0, this.v2h = o | 0, this.v3l = a | 0, this.v3h = c | 0, this.v4l = h | 0, this.v4h = u | 0, this.v5l = l | 0, this.v5h = f | 0, this.v6l = p | 0, this.v6h = d | 0, this.v7l = g | 0, this.v7h = m | 0;
    }
    compress(e, r, i) {
      this.get().forEach((c, h) => z$4[h] = c), z$4.set(ye$3, 16);
      let { h: s, l: n } = rd$1(BigInt(this.length));
      z$4[24] = ye$3[8] ^ n, z$4[25] = ye$3[9] ^ s, i && (z$4[28] = ~z$4[28], z$4[29] = ~z$4[29]);
      let o = 0;
      const a = zv$1;
      for (let c = 0; c < 12; c++) sr$1(0, 4, 8, 12, e, r + 2 * a[o++]), nr(0, 4, 8, 12, e, r + 2 * a[o++]), sr$1(1, 5, 9, 13, e, r + 2 * a[o++]), nr(1, 5, 9, 13, e, r + 2 * a[o++]), sr$1(2, 6, 10, 14, e, r + 2 * a[o++]), nr(2, 6, 10, 14, e, r + 2 * a[o++]), sr$1(3, 7, 11, 15, e, r + 2 * a[o++]), nr(3, 7, 11, 15, e, r + 2 * a[o++]), sr$1(0, 5, 10, 15, e, r + 2 * a[o++]), nr(0, 5, 10, 15, e, r + 2 * a[o++]), sr$1(1, 6, 11, 12, e, r + 2 * a[o++]), nr(1, 6, 11, 12, e, r + 2 * a[o++]), sr$1(2, 7, 8, 13, e, r + 2 * a[o++]), nr(2, 7, 8, 13, e, r + 2 * a[o++]), sr$1(3, 4, 9, 14, e, r + 2 * a[o++]), nr(3, 4, 9, 14, e, r + 2 * a[o++]);
      this.v0l ^= z$4[0] ^ z$4[16], this.v0h ^= z$4[1] ^ z$4[17], this.v1l ^= z$4[2] ^ z$4[18], this.v1h ^= z$4[3] ^ z$4[19], this.v2l ^= z$4[4] ^ z$4[20], this.v2h ^= z$4[5] ^ z$4[21], this.v3l ^= z$4[6] ^ z$4[22], this.v3h ^= z$4[7] ^ z$4[23], this.v4l ^= z$4[8] ^ z$4[24], this.v4h ^= z$4[9] ^ z$4[25], this.v5l ^= z$4[10] ^ z$4[26], this.v5h ^= z$4[11] ^ z$4[27], this.v6l ^= z$4[12] ^ z$4[28], this.v6h ^= z$4[13] ^ z$4[29], this.v7l ^= z$4[14] ^ z$4[30], this.v7h ^= z$4[15] ^ z$4[31], dt$5(z$4);
    }
    destroy() {
      this.destroyed = true, dt$5(this.buffer32), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
  };
  const Wv$1 = bv$1((t) => new Kv$1(t)), Gv$1 = "https://rpc.walletconnect.org/v1";
  function pd$1(t) {
    const e = `Ethereum Signed Message:
${t.length}`, r = new TextEncoder().encode(e + t);
    return "0x" + Buffer.from(Pv$1(r)).toString("hex");
  }
  async function Yv$1(t, e, r, i, s, n) {
    switch (r.t) {
      case "eip191":
        return await Jv$1(t, e, r.s);
      case "eip1271":
        return await Zv$1(t, e, r.s, i, s, n);
      default:
        throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`);
    }
  }
  async function Jv$1(t, e, r) {
    return (await jy$1({ hash: pd$1(e), signature: r })).toLowerCase() === t.toLowerCase();
  }
  async function Zv$1(t, e, r, i, s, n) {
    const o = gi$2(i);
    if (!o.namespace || !o.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${i}`);
    try {
      const a = "0x1626ba7e", c = "0000000000000000000000000000000000000000000000000000000000000040", h = r.substring(2), u = (h.length / 2).toString(16).padStart(64, "0"), l = (e.startsWith("0x") ? e : pd$1(e)).substring(2), f = a + l + c + u + h, p = await fetch(`${n || Gv$1}/?chainId=${i}&projectId=${s}`, { headers: { "Content-Type": "application/json" }, method: "POST", body: JSON.stringify({ id: Qv$1(), jsonrpc: "2.0", method: "eth_call", params: [{ to: t, data: f }, "latest"] }) }), { result: d } = await p.json();
      return d ? d.slice(0, a.length).toLowerCase() === a.toLowerCase() : !1;
    } catch (a) {
      return console.error("isValidEip1271Signature: ", a), false;
    }
  }
  function Qv$1() {
    return Date.now() + Math.floor(Math.random() * 1e3);
  }
  function Xv$1(t) {
    const e = atob(t), r = new Uint8Array(e.length);
    for (let o = 0; o < e.length; o++) r[o] = e.charCodeAt(o);
    const i = r[0];
    if (i === 0) throw new Error("No signatures found");
    const s = 1 + i * 64;
    if (r.length < s) throw new Error("Transaction data too short for claimed signature count");
    if (r.length < 100) throw new Error("Transaction too short");
    const n = Buffer.from(t, "base64").slice(1, 65);
    return ps$1.encode(n);
  }
  function e2(t) {
    const e = new Uint8Array(Buffer.from(t, "base64")), r = Array.from("TransactionData::").map((n) => n.charCodeAt(0)), i = new Uint8Array(r.length + e.length);
    i.set(r), i.set(e, r.length);
    const s = Wv$1(i, { dkLen: 32 });
    return ps$1.encode(s);
  }
  function $h$1(t) {
    const e = new Uint8Array(An$2(t2(t)));
    return ps$1.encode(e);
  }
  function t2(t) {
    if (t instanceof Uint8Array) return t;
    if (Array.isArray(t)) return new Uint8Array(t);
    if (typeof t == "object" && t != null && t.data) return new Uint8Array(Object.values(t.data));
    if (typeof t == "object" && t) return new Uint8Array(Object.values(t));
    throw new Error("getNearUint8ArrayFromBytes: Unexpected result type from bytes array");
  }
  function Sh$1(t) {
    const e = Buffer.from(t, "base64"), r = xw$1(e).txn;
    if (!r) throw new Error("Invalid signed transaction: missing 'txn' field");
    const i = gw$1(r), s = Buffer.from("TX"), n = Buffer.concat([s, Buffer.from(i)]), o = qv$1(n);
    return Tw$1.encode(o).replace(/=+$/, "");
  }
  function ao$2(t) {
    const e = [];
    let r = BigInt(t);
    for (; r >= BigInt(128); ) e.push(Number(r & BigInt(127) | BigInt(128))), r >>= BigInt(7);
    return e.push(Number(r)), Buffer.from(e);
  }
  function r2(t) {
    const e = Buffer.from(t.signed.bodyBytes, "base64"), r = Buffer.from(t.signed.authInfoBytes, "base64"), i = Buffer.from(t.signature.signature, "base64"), s = [];
    s.push(Buffer.from([10])), s.push(ao$2(e.length)), s.push(e), s.push(Buffer.from([18])), s.push(ao$2(r.length)), s.push(r), s.push(Buffer.from([26])), s.push(ao$2(i.length)), s.push(i);
    const n = Buffer.concat(s), o = An$2(n);
    return Buffer.from(o).toString("hex").toUpperCase();
  }
  var i2 = Object.defineProperty, s2 = Object.defineProperties, n2 = Object.getOwnPropertyDescriptors, Dh$1 = Object.getOwnPropertySymbols, o2 = Object.prototype.hasOwnProperty, a2 = Object.prototype.propertyIsEnumerable, Ah$1 = (t, e, r) => e in t ? i2(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, c2 = (t, e) => {
    for (var r in e || (e = {})) o2.call(e, r) && Ah$1(t, r, e[r]);
    if (Dh$1) for (var r of Dh$1(e)) a2.call(e, r) && Ah$1(t, r, e[r]);
    return t;
  }, h2 = (t, e) => s2(t, n2(e));
  const u2 = "did:pkh:", ec$1 = (t) => t == null ? void 0 : t.split(":"), l2 = (t) => {
    const e = t && ec$1(t);
    if (e) return t.includes(u2) ? e[3] : e[1];
  }, Wo$2 = (t) => {
    const e = t && ec$1(t);
    if (e) return e[2] + ":" + e[3];
  }, dn$2 = (t) => {
    const e = t && ec$1(t);
    if (e) return e.pop();
  };
  async function Oh$1(t) {
    const { cacao: e, projectId: r } = t, { s: i, p: s } = e, n = gd$1(s, s.iss), o = dn$2(s.iss);
    return await Yv$1(o, n, i, Wo$2(s.iss), r);
  }
  const gd$1 = (t, e) => {
    const r = `${t.domain} wants you to sign in with your Ethereum account:`, i = dn$2(e);
    if (!t.aud && !t.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
    let s = t.statement || void 0;
    const n = `URI: ${t.aud || t.uri}`, o = `Version: ${t.version}`, a = `Chain ID: ${l2(e)}`, c = `Nonce: ${t.nonce}`, h = `Issued At: ${t.iat}`, u = t.exp ? `Expiration Time: ${t.exp}` : void 0, l = t.nbf ? `Not Before: ${t.nbf}` : void 0, f = t.requestId ? `Request ID: ${t.requestId}` : void 0, p = t.resources ? `Resources:${t.resources.map((g) => `
- ${g}`).join("")}` : void 0, d = Qs$1(t.resources);
    if (d) {
      const g = hs(d);
      s = v2(s, g);
    }
    return [r, i, "", s, "", n, o, a, c, h, u, l, f, p].filter((g) => g != null).join(`
`);
  };
  function f2(t) {
    return Buffer.from(JSON.stringify(t)).toString("base64");
  }
  function d2(t) {
    return JSON.parse(Buffer.from(t, "base64").toString("utf-8"));
  }
  function Fr$1(t) {
    if (!t) throw new Error("No recap provided, value is undefined");
    if (!t.att) throw new Error("No `att` property found");
    const e = Object.keys(t.att);
    if (!(e != null && e.length)) throw new Error("No resources found in `att` property");
    e.forEach((r) => {
      const i = t.att[r];
      if (Array.isArray(i)) throw new Error(`Resource must be an object: ${r}`);
      if (typeof i != "object") throw new Error(`Resource must be an object: ${r}`);
      if (!Object.keys(i).length) throw new Error(`Resource object is empty: ${r}`);
      Object.keys(i).forEach((s) => {
        const n = i[s];
        if (!Array.isArray(n)) throw new Error(`Ability limits ${s} must be an array of objects, found: ${n}`);
        if (!n.length) throw new Error(`Value of ${s} is empty array, must be an array with objects`);
        n.forEach((o) => {
          if (typeof o != "object") throw new Error(`Ability limits (${s}) must be an array of objects, found: ${o}`);
        });
      });
    });
  }
  function p2(t, e, r, i = {}) {
    return r == null || r.sort((s, n) => s.localeCompare(n)), { att: { [t]: g2(e, r, i) } };
  }
  function g2(t, e, r = {}) {
    e = e == null ? void 0 : e.sort((s, n) => s.localeCompare(n));
    const i = e.map((s) => ({ [`${t}/${s}`]: [r] }));
    return Object.assign({}, ...i);
  }
  function yd$1(t) {
    return Fr$1(t), `urn:recap:${f2(t).replace(/=/g, "")}`;
  }
  function hs(t) {
    const e = d2(t.replace("urn:recap:", ""));
    return Fr$1(e), e;
  }
  function y2(t, e, r) {
    const i = p2(t, e, r);
    return yd$1(i);
  }
  function w2(t) {
    return t && t.includes("urn:recap:");
  }
  function m2(t, e) {
    const r = hs(t), i = hs(e), s = b2(r, i);
    return yd$1(s);
  }
  function b2(t, e) {
    Fr$1(t), Fr$1(e);
    const r = Object.keys(t.att).concat(Object.keys(e.att)).sort((s, n) => s.localeCompare(n)), i = { att: {} };
    return r.forEach((s) => {
      var n, o;
      Object.keys(((n = t.att) == null ? void 0 : n[s]) || {}).concat(Object.keys(((o = e.att) == null ? void 0 : o[s]) || {})).sort((a, c) => a.localeCompare(c)).forEach((a) => {
        var c, h;
        i.att[s] = h2(c2({}, i.att[s]), { [a]: ((c = t.att[s]) == null ? void 0 : c[a]) || ((h = e.att[s]) == null ? void 0 : h[a]) });
      });
    }), i;
  }
  function v2(t = "", e) {
    Fr$1(e);
    const r = "I further authorize the stated URI to perform the following actions on my behalf: ";
    if (t.includes(r)) return t;
    const i = [];
    let s = 0;
    Object.keys(e.att).forEach((a) => {
      const c = Object.keys(e.att[a]).map((l) => ({ ability: l.split("/")[0], action: l.split("/")[1] }));
      c.sort((l, f) => l.action.localeCompare(f.action));
      const h = {};
      c.forEach((l) => {
        h[l.ability] || (h[l.ability] = []), h[l.ability].push(l.action);
      });
      const u = Object.keys(h).map((l) => (s++, `(${s}) '${l}': '${h[l].join("', '")}' for '${a}'.`));
      i.push(u.join(", ").replace(".,", "."));
    });
    const n = i.join(" "), o = `${r}${n}`;
    return `${t ? t + " " : ""}${o}`;
  }
  function Ph$1(t) {
    var e;
    const r = hs(t);
    Fr$1(r);
    const i = (e = r.att) == null ? void 0 : e.eip155;
    return i ? Object.keys(i).map((s) => s.split("/")[1]) : [];
  }
  function Ch$1(t) {
    const e = hs(t);
    Fr$1(e);
    const r = [];
    return Object.values(e.att).forEach((i) => {
      Object.values(i).forEach((s) => {
        var n;
        (n = s == null ? void 0 : s[0]) != null && n.chains && r.push(s[0].chains);
      });
    }), [...new Set(r.flat())];
  }
  function Qs$1(t) {
    if (!t) return;
    const e = t == null ? void 0 : t[t.length - 1];
    return w2(e) ? e : void 0;
  }
  /*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */
  function wd$1(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function Go$1(t) {
    if (typeof t != "boolean") throw new Error(`boolean expected, not ${t}`);
  }
  function co$2(t) {
    if (!Number.isSafeInteger(t) || t < 0) throw new Error("positive integer expected, got " + t);
  }
  function Ge$4(t, ...e) {
    if (!wd$1(t)) throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length)) throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function Th$1(t, e = true) {
    if (t.destroyed) throw new Error("Hash instance has been destroyed");
    if (e && t.finished) throw new Error("Hash#digest() has already been called");
  }
  function E2(t, e) {
    Ge$4(t);
    const r = e.outputLen;
    if (t.length < r) throw new Error("digestInto() expects output buffer of length at least " + r);
  }
  function dr$1(t) {
    return new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
  }
  function yi$1(...t) {
    for (let e = 0; e < t.length; e++) t[e].fill(0);
  }
  function _2(t) {
    return new DataView(t.buffer, t.byteOffset, t.byteLength);
  }
  const I2 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  function x2(t) {
    if (typeof t != "string") throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function Yo$1(t) {
    if (typeof t == "string") t = x2(t);
    else if (wd$1(t)) t = Jo$1(t);
    else throw new Error("Uint8Array expected, got " + typeof t);
    return t;
  }
  function $2(t, e) {
    if (e == null || typeof e != "object") throw new Error("options must be defined");
    return Object.assign(t, e);
  }
  function S2(t, e) {
    if (t.length !== e.length) return false;
    let r = 0;
    for (let i = 0; i < t.length; i++) r |= t[i] ^ e[i];
    return r === 0;
  }
  const D2 = (t, e) => {
    function r(i, ...s) {
      if (Ge$4(i), !I2) throw new Error("Non little-endian hardware is not yet supported");
      if (t.nonceLength !== void 0) {
        const h = s[0];
        if (!h) throw new Error("nonce / iv required");
        t.varSizeNonce ? Ge$4(h) : Ge$4(h, t.nonceLength);
      }
      const n = t.tagLength;
      n && s[1] !== void 0 && Ge$4(s[1]);
      const o = e(i, ...s), a = (h, u) => {
        if (u !== void 0) {
          if (h !== 2) throw new Error("cipher output not supported");
          Ge$4(u);
        }
      };
      let c = false;
      return { encrypt(h, u) {
        if (c) throw new Error("cannot encrypt() twice with same key + nonce");
        return c = true, Ge$4(h), a(o.encrypt.length, u), o.encrypt(h, u);
      }, decrypt(h, u) {
        if (Ge$4(h), n && h.length < n) throw new Error("invalid ciphertext length: smaller than tagLength=" + n);
        return a(o.decrypt.length, u), o.decrypt(h, u);
      } };
    }
    return Object.assign(r, t), r;
  };
  function Rh$1(t, e, r = true) {
    if (e === void 0) return new Uint8Array(t);
    if (e.length !== t) throw new Error("invalid output length, expected " + t + ", got: " + e.length);
    if (r && !O2(e)) throw new Error("invalid output, must be aligned");
    return e;
  }
  function Bh(t, e, r, i) {
    if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, r, i);
    const s = BigInt(32), n = BigInt(4294967295), o = Number(r >> s & n), a = Number(r & n);
    t.setUint32(e + 4, o, i), t.setUint32(e + 0, a, i);
  }
  function A2(t, e, r) {
    Go$1(r);
    const i = new Uint8Array(16), s = _2(i);
    return Bh(s, 0, BigInt(e), r), Bh(s, 8, BigInt(t), r), i;
  }
  function O2(t) {
    return t.byteOffset % 4 === 0;
  }
  function Jo$1(t) {
    return Uint8Array.from(t);
  }
  const md$1 = (t) => Uint8Array.from(t.split("").map((e) => e.charCodeAt(0))), P2 = md$1("expand 16-byte k"), C2 = md$1("expand 32-byte k"), T2 = dr$1(P2), R2 = dr$1(C2);
  function Q$4(t, e) {
    return t << e | t >>> 32 - e;
  }
  function Zo$1(t) {
    return t.byteOffset % 4 === 0;
  }
  const Fs$1 = 64, B2 = 16, bd$1 = 2 ** 32 - 1, Fh = new Uint32Array();
  function F2(t, e, r, i, s, n, o, a) {
    const c = s.length, h = new Uint8Array(Fs$1), u = dr$1(h), l = Zo$1(s) && Zo$1(n), f = l ? dr$1(s) : Fh, p = l ? dr$1(n) : Fh;
    for (let d = 0; d < c; o++) {
      if (t(e, r, i, u, o, a), o >= bd$1) throw new Error("arx: counter overflow");
      const g = Math.min(Fs$1, c - d);
      if (l && g === Fs$1) {
        const m = d / 4;
        if (d % 4 !== 0) throw new Error("arx: invalid block position");
        for (let _ = 0, I; _ < B2; _++) I = m + _, p[I] = f[I] ^ u[_];
        d += Fs$1;
        continue;
      }
      for (let m = 0, _; m < g; m++) _ = d + m, n[_] = s[_] ^ h[m];
      d += g;
    }
  }
  function N2(t, e) {
    const { allowShortKeys: r, extendNonceFn: i, counterLength: s, counterRight: n, rounds: o } = $2({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, e);
    if (typeof t != "function") throw new Error("core must be a function");
    return co$2(s), co$2(o), Go$1(n), Go$1(r), (a, c, h, u, l = 0) => {
      Ge$4(a), Ge$4(c), Ge$4(h);
      const f = h.length;
      if (u === void 0 && (u = new Uint8Array(f)), Ge$4(u), co$2(l), l < 0 || l >= bd$1) throw new Error("arx: counter overflow");
      if (u.length < f) throw new Error(`arx: output (${u.length}) is shorter than data (${f})`);
      const p = [];
      let d = a.length, g, m;
      if (d === 32) p.push(g = Jo$1(a)), m = R2;
      else if (d === 16 && r) g = new Uint8Array(32), g.set(a), g.set(a, 16), m = T2, p.push(g);
      else throw new Error(`arx: invalid 32-byte key, got length=${d}`);
      Zo$1(c) || p.push(c = Jo$1(c));
      const _ = dr$1(g);
      if (i) {
        if (c.length !== 24) throw new Error("arx: extended nonce must be 24 bytes");
        i(m, _, dr$1(c.subarray(0, 16)), _), c = c.subarray(16);
      }
      const I = 16 - s;
      if (I !== c.length) throw new Error(`arx: nonce must be ${I} or 16 bytes`);
      if (I !== 12) {
        const P = new Uint8Array(12);
        P.set(c, n ? 0 : 12 - c.length), c = P, p.push(c);
      }
      const E = dr$1(c);
      return F2(t, m, _, E, h, u, l, o), yi$1(...p), u;
    };
  }
  const Se$3 = (t, e) => t[e++] & 255 | (t[e++] & 255) << 8;
  class U2 {
    constructor(e) {
      this.blockLen = 16, this.outputLen = 16, this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.pos = 0, this.finished = false, e = Yo$1(e), Ge$4(e, 32);
      const r = Se$3(e, 0), i = Se$3(e, 2), s = Se$3(e, 4), n = Se$3(e, 6), o = Se$3(e, 8), a = Se$3(e, 10), c = Se$3(e, 12), h = Se$3(e, 14);
      this.r[0] = r & 8191, this.r[1] = (r >>> 13 | i << 3) & 8191, this.r[2] = (i >>> 10 | s << 6) & 7939, this.r[3] = (s >>> 7 | n << 9) & 8191, this.r[4] = (n >>> 4 | o << 12) & 255, this.r[5] = o >>> 1 & 8190, this.r[6] = (o >>> 14 | a << 2) & 8191, this.r[7] = (a >>> 11 | c << 5) & 8065, this.r[8] = (c >>> 8 | h << 8) & 8191, this.r[9] = h >>> 5 & 127;
      for (let u = 0; u < 8; u++) this.pad[u] = Se$3(e, 16 + 2 * u);
    }
    process(e, r, i = false) {
      const s = i ? 0 : 2048, { h: n, r: o } = this, a = o[0], c = o[1], h = o[2], u = o[3], l = o[4], f = o[5], p = o[6], d = o[7], g = o[8], m = o[9], _ = Se$3(e, r + 0), I = Se$3(e, r + 2), E = Se$3(e, r + 4), P = Se$3(e, r + 6), A = Se$3(e, r + 8), k = Se$3(e, r + 10), U = Se$3(e, r + 12), R = Se$3(e, r + 14);
      let b = n[0] + (_ & 8191), C = n[1] + ((_ >>> 13 | I << 3) & 8191), S = n[2] + ((I >>> 10 | E << 6) & 8191), D = n[3] + ((E >>> 7 | P << 9) & 8191), T = n[4] + ((P >>> 4 | A << 12) & 8191), N = n[5] + (A >>> 1 & 8191), y = n[6] + ((A >>> 14 | k << 2) & 8191), w = n[7] + ((k >>> 11 | U << 5) & 8191), v = n[8] + ((U >>> 8 | R << 8) & 8191), $ = n[9] + (R >>> 5 | s), x = 0, O = x + b * a + C * (5 * m) + S * (5 * g) + D * (5 * d) + T * (5 * p);
      x = O >>> 13, O &= 8191, O += N * (5 * f) + y * (5 * l) + w * (5 * u) + v * (5 * h) + $ * (5 * c), x += O >>> 13, O &= 8191;
      let B = x + b * c + C * a + S * (5 * m) + D * (5 * g) + T * (5 * d);
      x = B >>> 13, B &= 8191, B += N * (5 * p) + y * (5 * f) + w * (5 * l) + v * (5 * u) + $ * (5 * h), x += B >>> 13, B &= 8191;
      let q = x + b * h + C * c + S * a + D * (5 * m) + T * (5 * g);
      x = q >>> 13, q &= 8191, q += N * (5 * d) + y * (5 * p) + w * (5 * f) + v * (5 * l) + $ * (5 * u), x += q >>> 13, q &= 8191;
      let H = x + b * u + C * h + S * c + D * a + T * (5 * m);
      x = H >>> 13, H &= 8191, H += N * (5 * g) + y * (5 * d) + w * (5 * p) + v * (5 * f) + $ * (5 * l), x += H >>> 13, H &= 8191;
      let M = x + b * l + C * u + S * h + D * c + T * a;
      x = M >>> 13, M &= 8191, M += N * (5 * m) + y * (5 * g) + w * (5 * d) + v * (5 * p) + $ * (5 * f), x += M >>> 13, M &= 8191;
      let V = x + b * f + C * l + S * u + D * h + T * c;
      x = V >>> 13, V &= 8191, V += N * a + y * (5 * m) + w * (5 * g) + v * (5 * d) + $ * (5 * p), x += V >>> 13, V &= 8191;
      let K = x + b * p + C * f + S * l + D * u + T * h;
      x = K >>> 13, K &= 8191, K += N * c + y * a + w * (5 * m) + v * (5 * g) + $ * (5 * d), x += K >>> 13, K &= 8191;
      let ie = x + b * d + C * p + S * f + D * l + T * u;
      x = ie >>> 13, ie &= 8191, ie += N * h + y * c + w * a + v * (5 * m) + $ * (5 * g), x += ie >>> 13, ie &= 8191;
      let re = x + b * g + C * d + S * p + D * f + T * l;
      x = re >>> 13, re &= 8191, re += N * u + y * h + w * c + v * a + $ * (5 * m), x += re >>> 13, re &= 8191;
      let Y = x + b * m + C * g + S * d + D * p + T * f;
      x = Y >>> 13, Y &= 8191, Y += N * l + y * u + w * h + v * c + $ * a, x += Y >>> 13, Y &= 8191, x = (x << 2) + x | 0, x = x + O | 0, O = x & 8191, x = x >>> 13, B += x, n[0] = O, n[1] = B, n[2] = q, n[3] = H, n[4] = M, n[5] = V, n[6] = K, n[7] = ie, n[8] = re, n[9] = Y;
    }
    finalize() {
      const { h: e, pad: r } = this, i = new Uint16Array(10);
      let s = e[1] >>> 13;
      e[1] &= 8191;
      for (let a = 2; a < 10; a++) e[a] += s, s = e[a] >>> 13, e[a] &= 8191;
      e[0] += s * 5, s = e[0] >>> 13, e[0] &= 8191, e[1] += s, s = e[1] >>> 13, e[1] &= 8191, e[2] += s, i[0] = e[0] + 5, s = i[0] >>> 13, i[0] &= 8191;
      for (let a = 1; a < 10; a++) i[a] = e[a] + s, s = i[a] >>> 13, i[a] &= 8191;
      i[9] -= 8192;
      let n = (s ^ 1) - 1;
      for (let a = 0; a < 10; a++) i[a] &= n;
      n = ~n;
      for (let a = 0; a < 10; a++) e[a] = e[a] & n | i[a];
      e[0] = (e[0] | e[1] << 13) & 65535, e[1] = (e[1] >>> 3 | e[2] << 10) & 65535, e[2] = (e[2] >>> 6 | e[3] << 7) & 65535, e[3] = (e[3] >>> 9 | e[4] << 4) & 65535, e[4] = (e[4] >>> 12 | e[5] << 1 | e[6] << 14) & 65535, e[5] = (e[6] >>> 2 | e[7] << 11) & 65535, e[6] = (e[7] >>> 5 | e[8] << 8) & 65535, e[7] = (e[8] >>> 8 | e[9] << 5) & 65535;
      let o = e[0] + r[0];
      e[0] = o & 65535;
      for (let a = 1; a < 8; a++) o = (e[a] + r[a] | 0) + (o >>> 16) | 0, e[a] = o & 65535;
      yi$1(i);
    }
    update(e) {
      Th$1(this), e = Yo$1(e), Ge$4(e);
      const { buffer: r, blockLen: i } = this, s = e.length;
      for (let n = 0; n < s; ) {
        const o = Math.min(i - this.pos, s - n);
        if (o === i) {
          for (; i <= s - n; n += i) this.process(e, n);
          continue;
        }
        r.set(e.subarray(n, n + o), this.pos), this.pos += o, n += o, this.pos === i && (this.process(r, 0, false), this.pos = 0);
      }
      return this;
    }
    destroy() {
      yi$1(this.h, this.r, this.buffer, this.pad);
    }
    digestInto(e) {
      Th$1(this), E2(e, this), this.finished = true;
      const { buffer: r, h: i } = this;
      let { pos: s } = this;
      if (s) {
        for (r[s++] = 1; s < 16; s++) r[s] = 0;
        this.process(r, 0, true);
      }
      this.finalize();
      let n = 0;
      for (let o = 0; o < 8; o++) e[n++] = i[o] >>> 0, e[n++] = i[o] >>> 8;
      return e;
    }
    digest() {
      const { buffer: e, outputLen: r } = this;
      this.digestInto(e);
      const i = e.slice(0, r);
      return this.destroy(), i;
    }
  }
  function k2(t) {
    const e = (i, s) => t(s).update(Yo$1(i)).digest(), r = t(new Uint8Array(32));
    return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = (i) => t(i), e;
  }
  const L2 = k2((t) => new U2(t));
  function j2(t, e, r, i, s, n = 20) {
    let o = t[0], a = t[1], c = t[2], h = t[3], u = e[0], l = e[1], f = e[2], p = e[3], d = e[4], g = e[5], m = e[6], _ = e[7], I = s, E = r[0], P = r[1], A = r[2], k = o, U = a, R = c, b = h, C = u, S = l, D = f, T = p, N = d, y = g, w = m, v = _, $ = I, x = E, O = P, B = A;
    for (let H = 0; H < n; H += 2) k = k + C | 0, $ = Q$4($ ^ k, 16), N = N + $ | 0, C = Q$4(C ^ N, 12), k = k + C | 0, $ = Q$4($ ^ k, 8), N = N + $ | 0, C = Q$4(C ^ N, 7), U = U + S | 0, x = Q$4(x ^ U, 16), y = y + x | 0, S = Q$4(S ^ y, 12), U = U + S | 0, x = Q$4(x ^ U, 8), y = y + x | 0, S = Q$4(S ^ y, 7), R = R + D | 0, O = Q$4(O ^ R, 16), w = w + O | 0, D = Q$4(D ^ w, 12), R = R + D | 0, O = Q$4(O ^ R, 8), w = w + O | 0, D = Q$4(D ^ w, 7), b = b + T | 0, B = Q$4(B ^ b, 16), v = v + B | 0, T = Q$4(T ^ v, 12), b = b + T | 0, B = Q$4(B ^ b, 8), v = v + B | 0, T = Q$4(T ^ v, 7), k = k + S | 0, B = Q$4(B ^ k, 16), w = w + B | 0, S = Q$4(S ^ w, 12), k = k + S | 0, B = Q$4(B ^ k, 8), w = w + B | 0, S = Q$4(S ^ w, 7), U = U + D | 0, $ = Q$4($ ^ U, 16), v = v + $ | 0, D = Q$4(D ^ v, 12), U = U + D | 0, $ = Q$4($ ^ U, 8), v = v + $ | 0, D = Q$4(D ^ v, 7), R = R + T | 0, x = Q$4(x ^ R, 16), N = N + x | 0, T = Q$4(T ^ N, 12), R = R + T | 0, x = Q$4(x ^ R, 8), N = N + x | 0, T = Q$4(T ^ N, 7), b = b + C | 0, O = Q$4(O ^ b, 16), y = y + O | 0, C = Q$4(C ^ y, 12), b = b + C | 0, O = Q$4(O ^ b, 8), y = y + O | 0, C = Q$4(C ^ y, 7);
    let q = 0;
    i[q++] = o + k | 0, i[q++] = a + U | 0, i[q++] = c + R | 0, i[q++] = h + b | 0, i[q++] = u + C | 0, i[q++] = l + S | 0, i[q++] = f + D | 0, i[q++] = p + T | 0, i[q++] = d + N | 0, i[q++] = g + y | 0, i[q++] = m + w | 0, i[q++] = _ + v | 0, i[q++] = I + $ | 0, i[q++] = E + x | 0, i[q++] = P + O | 0, i[q++] = A + B | 0;
  }
  const M2 = N2(j2, { counterRight: false, counterLength: 4, allowShortKeys: false }), q2 = new Uint8Array(16), Nh$1 = (t, e) => {
    t.update(e);
    const r = e.length % 16;
    r && t.update(q2.subarray(r));
  }, z2 = new Uint8Array(32);
  function Uh$1(t, e, r, i, s) {
    const n = t(e, r, z2), o = L2.create(n);
    s && Nh$1(o, s), Nh$1(o, i);
    const a = A2(i.length, s ? s.length : 0, true);
    o.update(a);
    const c = o.digest();
    return yi$1(n, a), c;
  }
  const H2 = (t) => (e, r, i) => ({ encrypt(s, n) {
    const o = s.length;
    n = Rh$1(o + 16, n, false), n.set(s);
    const a = n.subarray(0, -16);
    t(e, r, a, a, 1);
    const c = Uh$1(t, e, r, a, i);
    return n.set(c, o), yi$1(c), n;
  }, decrypt(s, n) {
    n = Rh$1(s.length - 16, n, false);
    const o = s.subarray(0, -16), a = s.subarray(-16), c = Uh$1(t, e, r, o, i);
    if (!S2(a, c)) throw new Error("invalid tag");
    return n.set(s.subarray(0, -16)), t(e, r, n, n, 1), yi$1(c), n;
  } }), vd$1 = D2({ blockSize: 64, nonceLength: 12, tagLength: 16 }, H2(M2));
  let Ed$1 = class Ed extends Dn$2 {
    constructor(e, r) {
      super(), this.finished = false, this.destroyed = false, Ja(e);
      const i = It$3(r);
      if (this.iHash = e.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const s = this.blockLen, n = new Uint8Array(s);
      n.set(i.length > s ? e.create().update(i).digest() : i);
      for (let o = 0; o < n.length; o++) n[o] ^= 54;
      this.iHash.update(n), this.oHash = e.create();
      for (let o = 0; o < n.length; o++) n[o] ^= 106;
      this.oHash.update(n), dt$5(n);
    }
    update(e) {
      return gr$1(this), this.iHash.update(e), this;
    }
    digestInto(e) {
      gr$1(this), ft$3(e, this.outputLen), this.finished = true, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
    }
    digest() {
      const e = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(e), e;
    }
    _cloneInto(e) {
      e || (e = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: r, iHash: i, finished: s, destroyed: n, blockLen: o, outputLen: a } = this;
      return e = e, e.finished = s, e.destroyed = n, e.blockLen = o, e.outputLen = a, e.oHash = r._cloneInto(e.oHash), e.iHash = i._cloneInto(e.iHash), e;
    }
    clone() {
      return this._cloneInto();
    }
    destroy() {
      this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
    }
  };
  const On$2 = (t, e, r) => new Ed$1(t, e).update(r).digest();
  On$2.create = (t, e) => new Ed$1(t, e);
  function V2(t, e, r) {
    return Ja(t), r === void 0 && (r = new Uint8Array(t.outputLen)), On$2(t, It$3(r), It$3(e));
  }
  const ho$2 = Uint8Array.from([0]), kh$1 = Uint8Array.of();
  function K2(t, e, r, i = 32) {
    Ja(t), Gt$4(i);
    const s = t.outputLen;
    if (i > 255 * s) throw new Error("Length should be <= 255*HashLen");
    const n = Math.ceil(i / s);
    r === void 0 && (r = kh$1);
    const o = new Uint8Array(n * s), a = On$2.create(t, e), c = a._cloneInto(), h = new Uint8Array(a.outputLen);
    for (let u = 0; u < n; u++) ho$2[0] = u + 1, c.update(u === 0 ? kh$1 : h).update(r).update(ho$2).digestInto(h), o.set(h, s * u), a._cloneInto(c);
    return a.destroy(), c.destroy(), dt$5(h, ho$2), o.slice(0, i);
  }
  const W2 = (t, e, r, i, s) => K2(t, V2(t, e, r), i, s), Pn$2 = An$2, tc$1 = BigInt(0), Qo$1 = BigInt(1);
  function pn$2(t, e) {
    if (typeof e != "boolean") throw new Error(t + " boolean expected, got " + e);
  }
  function Ns$1(t) {
    const e = t.toString(16);
    return e.length & 1 ? "0" + e : e;
  }
  function _d$1(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    return t === "" ? tc$1 : BigInt("0x" + t);
  }
  function Cn$2(t) {
    return _d$1(cs$1(t));
  }
  function gn$2(t) {
    return ft$3(t), _d$1(cs$1(Uint8Array.from(t).reverse()));
  }
  function rc$1(t, e) {
    return Qa$1(t.toString(16).padStart(e * 2, "0"));
  }
  function ic$1(t, e) {
    return rc$1(t, e).reverse();
  }
  function We$4(t, e, r) {
    let i;
    if (typeof e == "string") try {
      i = Qa$1(e);
    } catch (n) {
      throw new Error(t + " must be hex string or Uint8Array, cause: " + n);
    }
    else if (Ya$1(e)) i = Uint8Array.from(e);
    else throw new Error(t + " must be hex string or Uint8Array");
    const s = i.length;
    if (typeof r == "number" && s !== r) throw new Error(t + " of length " + r + " expected, got " + s);
    return i;
  }
  const uo$2 = (t) => typeof t == "bigint" && tc$1 <= t;
  function G2(t, e, r) {
    return uo$2(t) && uo$2(e) && uo$2(r) && e <= t && t < r;
  }
  function Xo$1(t, e, r, i) {
    if (!G2(e, r, i)) throw new Error("expected valid " + t + ": " + r + " <= n < " + i + ", got " + e);
  }
  function Y2(t) {
    let e;
    for (e = 0; t > tc$1; t >>= Qo$1, e += 1) ;
    return e;
  }
  const Tn$2 = (t) => (Qo$1 << BigInt(t)) - Qo$1;
  function J2(t, e, r) {
    if (typeof t != "number" || t < 2) throw new Error("hashLen must be a number");
    if (typeof e != "number" || e < 2) throw new Error("qByteLen must be a number");
    if (typeof r != "function") throw new Error("hmacFn must be a function");
    const i = (f) => new Uint8Array(f), s = (f) => Uint8Array.of(f);
    let n = i(t), o = i(t), a = 0;
    const c = () => {
      n.fill(1), o.fill(0), a = 0;
    }, h = (...f) => r(o, n, ...f), u = (f = i(0)) => {
      o = h(s(0), f), n = h(), f.length !== 0 && (o = h(s(1), f), n = h());
    }, l = () => {
      if (a++ >= 1e3) throw new Error("drbg: tried 1000 values");
      let f = 0;
      const p = [];
      for (; f < e; ) {
        n = h();
        const d = n.slice();
        p.push(d), f += n.length;
      }
      return Ar$1(...p);
    };
    return (f, p) => {
      c(), u(f);
      let d;
      for (; !(d = p(l())); ) u();
      return c(), d;
    };
  }
  function Rn$2(t, e, r = {}) {
    if (!t || typeof t != "object") throw new Error("expected valid options object");
    function i(s, n, o) {
      const a = t[s];
      if (o && a === void 0) return;
      const c = typeof a;
      if (c !== n || a === null) throw new Error(`param "${s}" is invalid: expected ${n}, got ${c}`);
    }
    Object.entries(e).forEach(([s, n]) => i(s, n, false)), Object.entries(r).forEach(([s, n]) => i(s, n, true));
  }
  function Lh(t) {
    const e = /* @__PURE__ */ new WeakMap();
    return (r, ...i) => {
      const s = e.get(r);
      if (s !== void 0) return s;
      const n = t(r, ...i);
      return e.set(r, n), n;
    };
  }
  const Ye$4 = BigInt(0), Le$4 = BigInt(1), Or$1 = BigInt(2), Z2 = BigInt(3), Id$1 = BigInt(4), xd$1 = BigInt(5), $d$1 = BigInt(8);
  function ht$5(t, e) {
    const r = t % e;
    return r >= Ye$4 ? r : e + r;
  }
  function vt$4(t, e, r) {
    let i = t;
    for (; e-- > Ye$4; ) i *= i, i %= r;
    return i;
  }
  function jh(t, e) {
    if (t === Ye$4) throw new Error("invert: expected non-zero number");
    if (e <= Ye$4) throw new Error("invert: expected positive modulus, got " + e);
    let r = ht$5(t, e), i = e, s = Ye$4, n = Le$4;
    for (; r !== Ye$4; ) {
      const o = i / r, a = i % r, c = s - n * o;
      i = r, r = a, s = n, n = c;
    }
    if (i !== Le$4) throw new Error("invert: does not exist");
    return ht$5(s, e);
  }
  function Sd$1(t, e) {
    const r = (t.ORDER + Le$4) / Id$1, i = t.pow(e, r);
    if (!t.eql(t.sqr(i), e)) throw new Error("Cannot find square root");
    return i;
  }
  function Q2(t, e) {
    const r = (t.ORDER - xd$1) / $d$1, i = t.mul(e, Or$1), s = t.pow(i, r), n = t.mul(e, s), o = t.mul(t.mul(n, Or$1), s), a = t.mul(n, t.sub(o, t.ONE));
    if (!t.eql(t.sqr(a), e)) throw new Error("Cannot find square root");
    return a;
  }
  function X2(t) {
    if (t < BigInt(3)) throw new Error("sqrt is not defined for small field");
    let e = t - Le$4, r = 0;
    for (; e % Or$1 === Ye$4; ) e /= Or$1, r++;
    let i = Or$1;
    const s = xi$2(t);
    for (; Mh(s, i) === 1; ) if (i++ > 1e3) throw new Error("Cannot find square root: probably non-prime P");
    if (r === 1) return Sd$1;
    let n = s.pow(i, e);
    const o = (e + Le$4) / Or$1;
    return function(a, c) {
      if (a.is0(c)) return c;
      if (Mh(a, c) !== 1) throw new Error("Cannot find square root");
      let h = r, u = a.mul(a.ONE, n), l = a.pow(c, e), f = a.pow(c, o);
      for (; !a.eql(l, a.ONE); ) {
        if (a.is0(l)) return a.ZERO;
        let p = 1, d = a.sqr(l);
        for (; !a.eql(d, a.ONE); ) if (p++, d = a.sqr(d), p === h) throw new Error("Cannot find square root");
        const g = Le$4 << BigInt(h - p - 1), m = a.pow(u, g);
        h = p, u = a.sqr(m), l = a.mul(l, u), f = a.mul(f, m);
      }
      return f;
    };
  }
  function eE$1(t) {
    return t % Id$1 === Z2 ? Sd$1 : t % $d$1 === xd$1 ? Q2 : X2(t);
  }
  const tE$1 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
  function rE$1(t) {
    const e = { ORDER: "bigint", MASK: "bigint", BYTES: "number", BITS: "number" }, r = tE$1.reduce((i, s) => (i[s] = "function", i), e);
    return Rn$2(t, r), t;
  }
  function iE$1(t, e, r) {
    if (r < Ye$4) throw new Error("invalid exponent, negatives unsupported");
    if (r === Ye$4) return t.ONE;
    if (r === Le$4) return e;
    let i = t.ONE, s = e;
    for (; r > Ye$4; ) r & Le$4 && (i = t.mul(i, s)), s = t.sqr(s), r >>= Le$4;
    return i;
  }
  function Dd$1(t, e, r = false) {
    const i = new Array(e.length).fill(r ? t.ZERO : void 0), s = e.reduce((o, a, c) => t.is0(a) ? o : (i[c] = o, t.mul(o, a)), t.ONE), n = t.inv(s);
    return e.reduceRight((o, a, c) => t.is0(a) ? o : (i[c] = t.mul(o, i[c]), t.mul(o, a)), n), i;
  }
  function Mh(t, e) {
    const r = (t.ORDER - Le$4) / Or$1, i = t.pow(e, r), s = t.eql(i, t.ONE), n = t.eql(i, t.ZERO), o = t.eql(i, t.neg(t.ONE));
    if (!s && !n && !o) throw new Error("invalid Legendre symbol result");
    return s ? 1 : n ? 0 : -1;
  }
  function sE$1(t, e) {
    e !== void 0 && Gt$4(e);
    const r = e !== void 0 ? e : t.toString(2).length, i = Math.ceil(r / 8);
    return { nBitLength: r, nByteLength: i };
  }
  function xi$2(t, e, r = false, i = {}) {
    if (t <= Ye$4) throw new Error("invalid field: expected ORDER > 0, got " + t);
    let s, n;
    if (typeof e == "object" && e != null) {
      if (i.sqrt || r) throw new Error("cannot specify opts in two arguments");
      const u = e;
      u.BITS && (s = u.BITS), u.sqrt && (n = u.sqrt), typeof u.isLE == "boolean" && (r = u.isLE);
    } else typeof e == "number" && (s = e), i.sqrt && (n = i.sqrt);
    const { nBitLength: o, nByteLength: a } = sE$1(t, s);
    if (a > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
    let c;
    const h = Object.freeze({ ORDER: t, isLE: r, BITS: o, BYTES: a, MASK: Tn$2(o), ZERO: Ye$4, ONE: Le$4, create: (u) => ht$5(u, t), isValid: (u) => {
      if (typeof u != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof u);
      return Ye$4 <= u && u < t;
    }, is0: (u) => u === Ye$4, isValidNot0: (u) => !h.is0(u) && h.isValid(u), isOdd: (u) => (u & Le$4) === Le$4, neg: (u) => ht$5(-u, t), eql: (u, l) => u === l, sqr: (u) => ht$5(u * u, t), add: (u, l) => ht$5(u + l, t), sub: (u, l) => ht$5(u - l, t), mul: (u, l) => ht$5(u * l, t), pow: (u, l) => iE$1(h, u, l), div: (u, l) => ht$5(u * jh(l, t), t), sqrN: (u) => u * u, addN: (u, l) => u + l, subN: (u, l) => u - l, mulN: (u, l) => u * l, inv: (u) => jh(u, t), sqrt: n || ((u) => (c || (c = eE$1(t)), c(h, u))), toBytes: (u) => r ? ic$1(u, a) : rc$1(u, a), fromBytes: (u) => {
      if (u.length !== a) throw new Error("Field.fromBytes: expected " + a + " bytes, got " + u.length);
      return r ? gn$2(u) : Cn$2(u);
    }, invertBatch: (u) => Dd$1(h, u), cmov: (u, l, f) => f ? l : u });
    return Object.freeze(h);
  }
  function Ad$1(t) {
    if (typeof t != "bigint") throw new Error("field order must be bigint");
    const e = t.toString(2).length;
    return Math.ceil(e / 8);
  }
  function Od$1(t) {
    const e = Ad$1(t);
    return e + Math.ceil(e / 2);
  }
  function nE$1(t, e, r = false) {
    const i = t.length, s = Ad$1(e), n = Od$1(e);
    if (i < 16 || i < n || i > 1024) throw new Error("expected " + n + "-1024 bytes of input, got " + i);
    const o = r ? gn$2(t) : Cn$2(t), a = ht$5(o, e - Le$4) + Le$4;
    return r ? ic$1(a, s) : rc$1(a, s);
  }
  const wi$2 = BigInt(0), Pr$1 = BigInt(1);
  function Zi$2(t, e) {
    const r = e.negate();
    return t ? r : e;
  }
  function oE$1(t, e, r) {
    const i = (n) => n.pz, s = Dd$1(t.Fp, r.map(i));
    return r.map((n, o) => n.toAffine(s[o])).map(t.fromAffine);
  }
  function Pd$1(t, e) {
    if (!Number.isSafeInteger(t) || t <= 0 || t > e) throw new Error("invalid window size, expected [1.." + e + "], got W=" + t);
  }
  function lo$2(t, e) {
    Pd$1(t, e);
    const r = Math.ceil(e / t) + 1, i = 2 ** (t - 1), s = 2 ** t, n = Tn$2(t), o = BigInt(t);
    return { windows: r, windowSize: i, mask: n, maxNumber: s, shiftBy: o };
  }
  function qh(t, e, r) {
    const { windowSize: i, mask: s, maxNumber: n, shiftBy: o } = r;
    let a = Number(t & s), c = t >> o;
    a > i && (a -= n, c += Pr$1);
    const h = e * i, u = h + Math.abs(a) - 1, l = a === 0, f = a < 0, p = e % 2 !== 0;
    return { nextN: c, offset: u, isZero: l, isNeg: f, isNegF: p, offsetF: h };
  }
  function aE$1(t, e) {
    if (!Array.isArray(t)) throw new Error("array expected");
    t.forEach((r, i) => {
      if (!(r instanceof e)) throw new Error("invalid point at index " + i);
    });
  }
  function cE$1(t, e) {
    if (!Array.isArray(t)) throw new Error("array of scalars expected");
    t.forEach((r, i) => {
      if (!e.isValid(r)) throw new Error("invalid scalar at index " + i);
    });
  }
  const fo$2 = /* @__PURE__ */ new WeakMap(), Cd = /* @__PURE__ */ new WeakMap();
  function po$1(t) {
    return Cd.get(t) || 1;
  }
  function zh(t) {
    if (t !== wi$2) throw new Error("invalid wNAF");
  }
  function hE$1(t, e) {
    return { constTimeNegate: Zi$2, hasPrecomputes(r) {
      return po$1(r) !== 1;
    }, unsafeLadder(r, i, s = t.ZERO) {
      let n = r;
      for (; i > wi$2; ) i & Pr$1 && (s = s.add(n)), n = n.double(), i >>= Pr$1;
      return s;
    }, precomputeWindow(r, i) {
      const { windows: s, windowSize: n } = lo$2(i, e), o = [];
      let a = r, c = a;
      for (let h = 0; h < s; h++) {
        c = a, o.push(c);
        for (let u = 1; u < n; u++) c = c.add(a), o.push(c);
        a = c.double();
      }
      return o;
    }, wNAF(r, i, s) {
      let n = t.ZERO, o = t.BASE;
      const a = lo$2(r, e);
      for (let c = 0; c < a.windows; c++) {
        const { nextN: h, offset: u, isZero: l, isNeg: f, isNegF: p, offsetF: d } = qh(s, c, a);
        s = h, l ? o = o.add(Zi$2(p, i[d])) : n = n.add(Zi$2(f, i[u]));
      }
      return zh(s), { p: n, f: o };
    }, wNAFUnsafe(r, i, s, n = t.ZERO) {
      const o = lo$2(r, e);
      for (let a = 0; a < o.windows && s !== wi$2; a++) {
        const { nextN: c, offset: h, isZero: u, isNeg: l } = qh(s, a, o);
        if (s = c, !u) {
          const f = i[h];
          n = n.add(l ? f.negate() : f);
        }
      }
      return zh(s), n;
    }, getPrecomputes(r, i, s) {
      let n = fo$2.get(i);
      return n || (n = this.precomputeWindow(i, r), r !== 1 && (typeof s == "function" && (n = s(n)), fo$2.set(i, n))), n;
    }, wNAFCached(r, i, s) {
      const n = po$1(r);
      return this.wNAF(n, this.getPrecomputes(n, r, s), i);
    }, wNAFCachedUnsafe(r, i, s, n) {
      const o = po$1(r);
      return o === 1 ? this.unsafeLadder(r, i, n) : this.wNAFUnsafe(o, this.getPrecomputes(o, r, s), i, n);
    }, setWindowSize(r, i) {
      Pd$1(i, e), Cd.set(r, i), fo$2.delete(r);
    } };
  }
  function uE$1(t, e, r, i) {
    let s = e, n = t.ZERO, o = t.ZERO;
    for (; r > wi$2 || i > wi$2; ) r & Pr$1 && (n = n.add(s)), i & Pr$1 && (o = o.add(s)), s = s.double(), r >>= Pr$1, i >>= Pr$1;
    return { p1: n, p2: o };
  }
  function lE$1(t, e, r, i) {
    aE$1(r, t), cE$1(i, e);
    const s = r.length, n = i.length;
    if (s !== n) throw new Error("arrays of points and scalars must have equal length");
    const o = t.ZERO, a = Y2(BigInt(s));
    let c = 1;
    a > 12 ? c = a - 3 : a > 4 ? c = a - 2 : a > 0 && (c = 2);
    const h = Tn$2(c), u = new Array(Number(h) + 1).fill(o), l = Math.floor((e.BITS - 1) / c) * c;
    let f = o;
    for (let p = l; p >= 0; p -= c) {
      u.fill(o);
      for (let g = 0; g < n; g++) {
        const m = i[g], _ = Number(m >> BigInt(p) & h);
        u[_] = u[_].add(r[g]);
      }
      let d = o;
      for (let g = u.length - 1, m = o; g > 0; g--) m = m.add(u[g]), d = d.add(m);
      if (f = f.add(d), p !== 0) for (let g = 0; g < c; g++) f = f.double();
    }
    return f;
  }
  function Hh(t, e) {
    if (e) {
      if (e.ORDER !== t) throw new Error("Field.ORDER must match order: Fp == p, Fn == n");
      return rE$1(e), e;
    } else return xi$2(t);
  }
  function fE$1(t, e, r = {}) {
    if (!e || typeof e != "object") throw new Error(`expected valid ${t} CURVE object`);
    for (const o of ["p", "n", "h"]) {
      const a = e[o];
      if (!(typeof a == "bigint" && a > wi$2)) throw new Error(`CURVE.${o} must be positive bigint`);
    }
    const i = Hh(e.p, r.Fp), s = Hh(e.n, r.Fn), n = ["Gx", "Gy", "a", "b"];
    for (const o of n) if (!i.isValid(e[o])) throw new Error(`CURVE.${o} must be valid field element of CURVE.Fp`);
    return { Fp: i, Fn: s };
  }
  BigInt(0), BigInt(1), BigInt(2), BigInt(8);
  const Ui$2 = BigInt(0), Gr$1 = BigInt(1), Us$1 = BigInt(2);
  function dE$1(t) {
    return Rn$2(t, { adjustScalarBytes: "function", powPminus2: "function" }), Object.freeze({ ...t });
  }
  function pE$1(t) {
    const e = dE$1(t), { P: r, type: i, adjustScalarBytes: s, powPminus2: n, randomBytes: o } = e, a = i === "x25519";
    if (!a && i !== "x448") throw new Error("invalid type");
    const c = o || Ii$2, h = a ? 255 : 448, u = a ? 32 : 56, l = BigInt(a ? 9 : 5), f = BigInt(a ? 121665 : 39081), p = a ? Us$1 ** BigInt(254) : Us$1 ** BigInt(447), d = a ? BigInt(8) * Us$1 ** BigInt(251) - Gr$1 : BigInt(4) * Us$1 ** BigInt(445) - Gr$1, g = p + d + Gr$1, m = (b) => ht$5(b, r), _ = I(l);
    function I(b) {
      return ic$1(m(b), u);
    }
    function E(b) {
      const C = We$4("u coordinate", b, u);
      return a && (C[31] &= 127), m(gn$2(C));
    }
    function P(b) {
      return gn$2(s(We$4("scalar", b, u)));
    }
    function A(b, C) {
      const S = R(E(C), P(b));
      if (S === Ui$2) throw new Error("invalid private or public key received");
      return I(S);
    }
    function k(b) {
      return A(b, _);
    }
    function U(b, C, S) {
      const D = m(b * (C - S));
      return C = m(C - D), S = m(S + D), { x_2: C, x_3: S };
    }
    function R(b, C) {
      Xo$1("u", b, Ui$2, r), Xo$1("scalar", C, p, g);
      const S = C, D = b;
      let T = Gr$1, N = Ui$2, y = b, w = Gr$1, v = Ui$2;
      for (let x = BigInt(h - 1); x >= Ui$2; x--) {
        const O = S >> x & Gr$1;
        v ^= O, { x_2: T, x_3: y } = U(v, T, y), { x_2: N, x_3: w } = U(v, N, w), v = O;
        const B = T + N, q = m(B * B), H = T - N, M = m(H * H), V = q - M, K = y + w, ie = y - w, re = m(ie * B), Y = m(K * H), fe = re + Y, xe = re - Y;
        y = m(fe * fe), w = m(D * m(xe * xe)), T = m(q * M), N = m(V * (q + m(f * V)));
      }
      (({ x_2: T, x_3: y } = U(v, T, y))), { x_2: N, x_3: w } = U(v, N, w);
      const $ = n(N);
      return m(T * $);
    }
    return { scalarMult: A, scalarMultBase: k, getSharedSecret: (b, C) => A(b, C), getPublicKey: (b) => k(b), utils: { randomPrivateKey: () => c(u) }, GuBytes: _.slice() };
  }
  BigInt(0);
  const gE$1 = BigInt(1), Vh = BigInt(2), yE$1 = BigInt(3), wE$1 = BigInt(5);
  BigInt(8);
  const Td$1 = { p: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"), n: BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"), a: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"), d: BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"), Gx: BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"), Gy: BigInt("0x6666666666666666666666666666666666666666666666666666666666666658") };
  function mE$1(t) {
    const e = BigInt(10), r = BigInt(20), i = BigInt(40), s = BigInt(80), n = Td$1.p, o = t * t % n * t % n, a = vt$4(o, Vh, n) * o % n, c = vt$4(a, gE$1, n) * t % n, h = vt$4(c, wE$1, n) * c % n, u = vt$4(h, e, n) * h % n, l = vt$4(u, r, n) * u % n, f = vt$4(l, i, n) * l % n, p = vt$4(f, s, n) * f % n, d = vt$4(p, s, n) * f % n, g = vt$4(d, e, n) * h % n;
    return { pow_p_5_8: vt$4(g, Vh, n) * t % n, b2: o };
  }
  function bE$1(t) {
    return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
  }
  const ea$1 = (() => {
    const t = Td$1.p;
    return pE$1({ P: t, type: "x25519", powPminus2: (e) => {
      const { pow_p_5_8: r, b2: i } = mE$1(e);
      return ht$5(vt$4(r, yE$1, t) * i, t);
    }, adjustScalarBytes: bE$1 });
  })();
  function Kh(t) {
    t.lowS !== void 0 && pn$2("lowS", t.lowS), t.prehash !== void 0 && pn$2("prehash", t.prehash);
  }
  let vE$1 = class vE extends Error {
    constructor(e = "") {
      super(e);
    }
  };
  const Vt$3 = { Err: vE$1, _tlv: { encode: (t, e) => {
    const { Err: r } = Vt$3;
    if (t < 0 || t > 256) throw new r("tlv.encode: wrong tag");
    if (e.length & 1) throw new r("tlv.encode: unpadded data");
    const i = e.length / 2, s = Ns$1(i);
    if (s.length / 2 & 128) throw new r("tlv.encode: long form length too big");
    const n = i > 127 ? Ns$1(s.length / 2 | 128) : "";
    return Ns$1(t) + n + s + e;
  }, decode(t, e) {
    const { Err: r } = Vt$3;
    let i = 0;
    if (t < 0 || t > 256) throw new r("tlv.encode: wrong tag");
    if (e.length < 2 || e[i++] !== t) throw new r("tlv.decode: wrong tlv");
    const s = e[i++], n = !!(s & 128);
    let o = 0;
    if (!n) o = s;
    else {
      const c = s & 127;
      if (!c) throw new r("tlv.decode(long): indefinite length not supported");
      if (c > 4) throw new r("tlv.decode(long): byte length is too big");
      const h = e.subarray(i, i + c);
      if (h.length !== c) throw new r("tlv.decode: length bytes not complete");
      if (h[0] === 0) throw new r("tlv.decode(long): zero leftmost byte");
      for (const u of h) o = o << 8 | u;
      if (i += c, o < 128) throw new r("tlv.decode(long): not minimal encoding");
    }
    const a = e.subarray(i, i + o);
    if (a.length !== o) throw new r("tlv.decode: wrong value length");
    return { v: a, l: e.subarray(i + o) };
  } }, _int: { encode(t) {
    const { Err: e } = Vt$3;
    if (t < Qi$2) throw new e("integer: negative integers are not allowed");
    let r = Ns$1(t);
    if (Number.parseInt(r[0], 16) & 8 && (r = "00" + r), r.length & 1) throw new e("unexpected DER parsing assertion: unpadded hex");
    return r;
  }, decode(t) {
    const { Err: e } = Vt$3;
    if (t[0] & 128) throw new e("invalid signature integer: negative");
    if (t[0] === 0 && !(t[1] & 128)) throw new e("invalid signature integer: unnecessary leading zero");
    return Cn$2(t);
  } }, toSig(t) {
    const { Err: e, _int: r, _tlv: i } = Vt$3, s = We$4("signature", t), { v: n, l: o } = i.decode(48, s);
    if (o.length) throw new e("invalid signature: left bytes after parsing");
    const { v: a, l: c } = i.decode(2, n), { v: h, l: u } = i.decode(2, c);
    if (u.length) throw new e("invalid signature: left bytes after parsing");
    return { r: r.decode(a), s: r.decode(h) };
  }, hexFromSig(t) {
    const { _tlv: e, _int: r } = Vt$3, i = e.encode(2, r.encode(t.r)), s = e.encode(2, r.encode(t.s)), n = i + s;
    return e.encode(48, n);
  } }, Qi$2 = BigInt(0), Xi$2 = BigInt(1), EE$1 = BigInt(2), ks$1 = BigInt(3), _E$1 = BigInt(4);
  function IE$1(t, e, r) {
    function i(s) {
      const n = t.sqr(s), o = t.mul(n, s);
      return t.add(t.add(o, t.mul(s, e)), r);
    }
    return i;
  }
  function Rd$1(t, e, r) {
    const { BYTES: i } = t;
    function s(n) {
      let o;
      if (typeof n == "bigint") o = n;
      else {
        let a = We$4("private key", n);
        if (e) {
          if (!e.includes(a.length * 2)) throw new Error("invalid private key");
          const c = new Uint8Array(i);
          c.set(a, c.length - a.length), a = c;
        }
        try {
          o = t.fromBytes(a);
        } catch {
          throw new Error(`invalid private key: expected ui8a of size ${i}, got ${typeof n}`);
        }
      }
      if (r && (o = t.create(o)), !t.isValidNot0(o)) throw new Error("invalid private key: out of range [1..N-1]");
      return o;
    }
    return s;
  }
  function xE$1(t, e = {}) {
    const { Fp: r, Fn: i } = fE$1("weierstrass", t, e), { h: s, n } = t;
    Rn$2(e, {}, { allowInfinityPoint: "boolean", clearCofactor: "function", isTorsionFree: "function", fromBytes: "function", toBytes: "function", endo: "object", wrapPrivateKey: "boolean" });
    const { endo: o } = e;
    if (o && (!r.is0(t.a) || typeof o.beta != "bigint" || typeof o.splitScalar != "function")) throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');
    function a() {
      if (!r.isOdd) throw new Error("compression is not supported: Field does not have .isOdd()");
    }
    function c(R, b, C) {
      const { x: S, y: D } = b.toAffine(), T = r.toBytes(S);
      if (pn$2("isCompressed", C), C) {
        a();
        const N = !r.isOdd(D);
        return Ar$1(Bd$1(N), T);
      } else return Ar$1(Uint8Array.of(4), T, r.toBytes(D));
    }
    function h(R) {
      ft$3(R);
      const b = r.BYTES, C = b + 1, S = 2 * b + 1, D = R.length, T = R[0], N = R.subarray(1);
      if (D === C && (T === 2 || T === 3)) {
        const y = r.fromBytes(N);
        if (!r.isValid(y)) throw new Error("bad point: is not on curve, wrong x");
        const w = f(y);
        let v;
        try {
          v = r.sqrt(w);
        } catch (x) {
          const O = x instanceof Error ? ": " + x.message : "";
          throw new Error("bad point: is not on curve, sqrt error" + O);
        }
        a();
        const $ = r.isOdd(v);
        return (T & 1) === 1 !== $ && (v = r.neg(v)), { x: y, y: v };
      } else if (D === S && T === 4) {
        const y = r.fromBytes(N.subarray(b * 0, b * 1)), w = r.fromBytes(N.subarray(b * 1, b * 2));
        if (!p(y, w)) throw new Error("bad point: is not on curve");
        return { x: y, y: w };
      } else throw new Error(`bad point: got length ${D}, expected compressed=${C} or uncompressed=${S}`);
    }
    const u = e.toBytes || c, l = e.fromBytes || h, f = IE$1(r, t.a, t.b);
    function p(R, b) {
      const C = r.sqr(b), S = f(R);
      return r.eql(C, S);
    }
    if (!p(t.Gx, t.Gy)) throw new Error("bad curve params: generator point");
    const d = r.mul(r.pow(t.a, ks$1), _E$1), g = r.mul(r.sqr(t.b), BigInt(27));
    if (r.is0(r.add(d, g))) throw new Error("bad curve params: a or b");
    function m(R, b, C = false) {
      if (!r.isValid(b) || C && r.is0(b)) throw new Error(`bad point coordinate ${R}`);
      return b;
    }
    function _(R) {
      if (!(R instanceof A)) throw new Error("ProjectivePoint expected");
    }
    const I = Lh((R, b) => {
      const { px: C, py: S, pz: D } = R;
      if (r.eql(D, r.ONE)) return { x: C, y: S };
      const T = R.is0();
      b == null && (b = T ? r.ONE : r.inv(D));
      const N = r.mul(C, b), y = r.mul(S, b), w = r.mul(D, b);
      if (T) return { x: r.ZERO, y: r.ZERO };
      if (!r.eql(w, r.ONE)) throw new Error("invZ was invalid");
      return { x: N, y };
    }), E = Lh((R) => {
      if (R.is0()) {
        if (e.allowInfinityPoint && !r.is0(R.py)) return;
        throw new Error("bad point: ZERO");
      }
      const { x: b, y: C } = R.toAffine();
      if (!r.isValid(b) || !r.isValid(C)) throw new Error("bad point: x or y not field elements");
      if (!p(b, C)) throw new Error("bad point: equation left != right");
      if (!R.isTorsionFree()) throw new Error("bad point: not in prime-order subgroup");
      return true;
    });
    function P(R, b, C, S, D) {
      return C = new A(r.mul(C.px, R), C.py, C.pz), b = Zi$2(S, b), C = Zi$2(D, C), b.add(C);
    }
    class A {
      constructor(b, C, S) {
        this.px = m("x", b), this.py = m("y", C, true), this.pz = m("z", S), Object.freeze(this);
      }
      static fromAffine(b) {
        const { x: C, y: S } = b || {};
        if (!b || !r.isValid(C) || !r.isValid(S)) throw new Error("invalid affine point");
        if (b instanceof A) throw new Error("projective point not allowed");
        return r.is0(C) && r.is0(S) ? A.ZERO : new A(C, S, r.ONE);
      }
      get x() {
        return this.toAffine().x;
      }
      get y() {
        return this.toAffine().y;
      }
      static normalizeZ(b) {
        return oE$1(A, "pz", b);
      }
      static fromBytes(b) {
        return ft$3(b), A.fromHex(b);
      }
      static fromHex(b) {
        const C = A.fromAffine(l(We$4("pointHex", b)));
        return C.assertValidity(), C;
      }
      static fromPrivateKey(b) {
        const C = Rd$1(i, e.allowedPrivateKeyLengths, e.wrapPrivateKey);
        return A.BASE.multiply(C(b));
      }
      static msm(b, C) {
        return lE$1(A, i, b, C);
      }
      precompute(b = 8, C = true) {
        return U.setWindowSize(this, b), C || this.multiply(ks$1), this;
      }
      _setWindowSize(b) {
        this.precompute(b);
      }
      assertValidity() {
        E(this);
      }
      hasEvenY() {
        const { y: b } = this.toAffine();
        if (!r.isOdd) throw new Error("Field doesn't support isOdd");
        return !r.isOdd(b);
      }
      equals(b) {
        _(b);
        const { px: C, py: S, pz: D } = this, { px: T, py: N, pz: y } = b, w = r.eql(r.mul(C, y), r.mul(T, D)), v = r.eql(r.mul(S, y), r.mul(N, D));
        return w && v;
      }
      negate() {
        return new A(this.px, r.neg(this.py), this.pz);
      }
      double() {
        const { a: b, b: C } = t, S = r.mul(C, ks$1), { px: D, py: T, pz: N } = this;
        let y = r.ZERO, w = r.ZERO, v = r.ZERO, $ = r.mul(D, D), x = r.mul(T, T), O = r.mul(N, N), B = r.mul(D, T);
        return B = r.add(B, B), v = r.mul(D, N), v = r.add(v, v), y = r.mul(b, v), w = r.mul(S, O), w = r.add(y, w), y = r.sub(x, w), w = r.add(x, w), w = r.mul(y, w), y = r.mul(B, y), v = r.mul(S, v), O = r.mul(b, O), B = r.sub($, O), B = r.mul(b, B), B = r.add(B, v), v = r.add($, $), $ = r.add(v, $), $ = r.add($, O), $ = r.mul($, B), w = r.add(w, $), O = r.mul(T, N), O = r.add(O, O), $ = r.mul(O, B), y = r.sub(y, $), v = r.mul(O, x), v = r.add(v, v), v = r.add(v, v), new A(y, w, v);
      }
      add(b) {
        _(b);
        const { px: C, py: S, pz: D } = this, { px: T, py: N, pz: y } = b;
        let w = r.ZERO, v = r.ZERO, $ = r.ZERO;
        const x = t.a, O = r.mul(t.b, ks$1);
        let B = r.mul(C, T), q = r.mul(S, N), H = r.mul(D, y), M = r.add(C, S), V = r.add(T, N);
        M = r.mul(M, V), V = r.add(B, q), M = r.sub(M, V), V = r.add(C, D);
        let K = r.add(T, y);
        return V = r.mul(V, K), K = r.add(B, H), V = r.sub(V, K), K = r.add(S, D), w = r.add(N, y), K = r.mul(K, w), w = r.add(q, H), K = r.sub(K, w), $ = r.mul(x, V), w = r.mul(O, H), $ = r.add(w, $), w = r.sub(q, $), $ = r.add(q, $), v = r.mul(w, $), q = r.add(B, B), q = r.add(q, B), H = r.mul(x, H), V = r.mul(O, V), q = r.add(q, H), H = r.sub(B, H), H = r.mul(x, H), V = r.add(V, H), B = r.mul(q, V), v = r.add(v, B), B = r.mul(K, V), w = r.mul(M, w), w = r.sub(w, B), B = r.mul(M, q), $ = r.mul(K, $), $ = r.add($, B), new A(w, v, $);
      }
      subtract(b) {
        return this.add(b.negate());
      }
      is0() {
        return this.equals(A.ZERO);
      }
      multiply(b) {
        const { endo: C } = e;
        if (!i.isValidNot0(b)) throw new Error("invalid scalar: out of range");
        let S, D;
        const T = (N) => U.wNAFCached(this, N, A.normalizeZ);
        if (C) {
          const { k1neg: N, k1: y, k2neg: w, k2: v } = C.splitScalar(b), { p: $, f: x } = T(y), { p: O, f: B } = T(v);
          D = x.add(B), S = P(C.beta, $, O, N, w);
        } else {
          const { p: N, f: y } = T(b);
          S = N, D = y;
        }
        return A.normalizeZ([S, D])[0];
      }
      multiplyUnsafe(b) {
        const { endo: C } = e, S = this;
        if (!i.isValid(b)) throw new Error("invalid scalar: out of range");
        if (b === Qi$2 || S.is0()) return A.ZERO;
        if (b === Xi$2) return S;
        if (U.hasPrecomputes(this)) return this.multiply(b);
        if (C) {
          const { k1neg: D, k1: T, k2neg: N, k2: y } = C.splitScalar(b), { p1: w, p2: v } = uE$1(A, S, T, y);
          return P(C.beta, w, v, D, N);
        } else return U.wNAFCachedUnsafe(S, b);
      }
      multiplyAndAddUnsafe(b, C, S) {
        const D = this.multiplyUnsafe(C).add(b.multiplyUnsafe(S));
        return D.is0() ? void 0 : D;
      }
      toAffine(b) {
        return I(this, b);
      }
      isTorsionFree() {
        const { isTorsionFree: b } = e;
        return s === Xi$2 ? true : b ? b(A, this) : U.wNAFCachedUnsafe(this, n).is0();
      }
      clearCofactor() {
        const { clearCofactor: b } = e;
        return s === Xi$2 ? this : b ? b(A, this) : this.multiplyUnsafe(s);
      }
      toBytes(b = true) {
        return pn$2("isCompressed", b), this.assertValidity(), u(A, this, b);
      }
      toRawBytes(b = true) {
        return this.toBytes(b);
      }
      toHex(b = true) {
        return cs$1(this.toBytes(b));
      }
      toString() {
        return `<Point ${this.is0() ? "ZERO" : this.toHex()}>`;
      }
    }
    A.BASE = new A(t.Gx, t.Gy, r.ONE), A.ZERO = new A(r.ZERO, r.ONE, r.ZERO), A.Fp = r, A.Fn = i;
    const k = i.BITS, U = hE$1(A, e.endo ? Math.ceil(k / 2) : k);
    return A;
  }
  function Bd$1(t) {
    return Uint8Array.of(t ? 2 : 3);
  }
  function $E$1(t, e, r = {}) {
    Rn$2(e, { hash: "function" }, { hmac: "function", lowS: "boolean", randomBytes: "function", bits2int: "function", bits2int_modN: "function" });
    const i = e.randomBytes || Ii$2, s = e.hmac || ((S, ...D) => On$2(e.hash, S, Ar$1(...D))), { Fp: n, Fn: o } = t, { ORDER: a, BITS: c } = o;
    function h(S) {
      const D = a >> Xi$2;
      return S > D;
    }
    function u(S) {
      return h(S) ? o.neg(S) : S;
    }
    function l(S, D) {
      if (!o.isValidNot0(D)) throw new Error(`invalid signature ${S}: out of range 1..CURVE.n`);
    }
    class f {
      constructor(D, T, N) {
        l("r", D), l("s", T), this.r = D, this.s = T, N != null && (this.recovery = N), Object.freeze(this);
      }
      static fromCompact(D) {
        const T = o.BYTES, N = We$4("compactSignature", D, T * 2);
        return new f(o.fromBytes(N.subarray(0, T)), o.fromBytes(N.subarray(T, T * 2)));
      }
      static fromDER(D) {
        const { r: T, s: N } = Vt$3.toSig(We$4("DER", D));
        return new f(T, N);
      }
      assertValidity() {
      }
      addRecoveryBit(D) {
        return new f(this.r, this.s, D);
      }
      recoverPublicKey(D) {
        const T = n.ORDER, { r: N, s: y, recovery: w } = this;
        if (w == null || ![0, 1, 2, 3].includes(w)) throw new Error("recovery id invalid");
        if (a * EE$1 < T && w > 1) throw new Error("recovery id is ambiguous for h>1 curve");
        const v = w === 2 || w === 3 ? N + a : N;
        if (!n.isValid(v)) throw new Error("recovery id 2 or 3 invalid");
        const $ = n.toBytes(v), x = t.fromHex(Ar$1(Bd$1((w & 1) === 0), $)), O = o.inv(v), B = E(We$4("msgHash", D)), q = o.create(-B * O), H = o.create(y * O), M = t.BASE.multiplyUnsafe(q).add(x.multiplyUnsafe(H));
        if (M.is0()) throw new Error("point at infinify");
        return M.assertValidity(), M;
      }
      hasHighS() {
        return h(this.s);
      }
      normalizeS() {
        return this.hasHighS() ? new f(this.r, o.neg(this.s), this.recovery) : this;
      }
      toBytes(D) {
        if (D === "compact") return Ar$1(o.toBytes(this.r), o.toBytes(this.s));
        if (D === "der") return Qa$1(Vt$3.hexFromSig(this));
        throw new Error("invalid format");
      }
      toDERRawBytes() {
        return this.toBytes("der");
      }
      toDERHex() {
        return cs$1(this.toBytes("der"));
      }
      toCompactRawBytes() {
        return this.toBytes("compact");
      }
      toCompactHex() {
        return cs$1(this.toBytes("compact"));
      }
    }
    const p = Rd$1(o, r.allowedPrivateKeyLengths, r.wrapPrivateKey), d = { isValidPrivateKey(S) {
      try {
        return p(S), !0;
      } catch {
        return false;
      }
    }, normPrivateKeyToScalar: p, randomPrivateKey: () => {
      const S = a;
      return nE$1(i(Od$1(S)), S);
    }, precompute(S = 8, D = t.BASE) {
      return D.precompute(S, false);
    } };
    function g(S, D = true) {
      return t.fromPrivateKey(S).toBytes(D);
    }
    function m(S) {
      if (typeof S == "bigint") return false;
      if (S instanceof t) return true;
      const D = We$4("key", S).length, T = n.BYTES, N = T + 1, y = 2 * T + 1;
      if (!(r.allowedPrivateKeyLengths || o.BYTES === N)) return D === N || D === y;
    }
    function _(S, D, T = true) {
      if (m(S) === true) throw new Error("first arg must be private key");
      if (m(D) === false) throw new Error("second arg must be public key");
      return t.fromHex(D).multiply(p(S)).toBytes(T);
    }
    const I = e.bits2int || function(S) {
      if (S.length > 8192) throw new Error("input is too large");
      const D = Cn$2(S), T = S.length * 8 - c;
      return T > 0 ? D >> BigInt(T) : D;
    }, E = e.bits2int_modN || function(S) {
      return o.create(I(S));
    }, P = Tn$2(c);
    function A(S) {
      return Xo$1("num < 2^" + c, S, Qi$2, P), o.toBytes(S);
    }
    function k(S, D, T = U) {
      if (["recovered", "canonical"].some((M) => M in T)) throw new Error("sign() legacy options not supported");
      const { hash: N } = e;
      let { lowS: y, prehash: w, extraEntropy: v } = T;
      y == null && (y = true), S = We$4("msgHash", S), Kh(T), w && (S = We$4("prehashed msgHash", N(S)));
      const $ = E(S), x = p(D), O = [A(x), A($)];
      if (v != null && v !== false) {
        const M = v === true ? i(n.BYTES) : v;
        O.push(We$4("extraEntropy", M));
      }
      const B = Ar$1(...O), q = $;
      function H(M) {
        const V = I(M);
        if (!o.isValidNot0(V)) return;
        const K = o.inv(V), ie = t.BASE.multiply(V).toAffine(), re = o.create(ie.x);
        if (re === Qi$2) return;
        const Y = o.create(K * o.create(q + re * x));
        if (Y === Qi$2) return;
        let fe = (ie.x === re ? 0 : 2) | Number(ie.y & Xi$2), xe = Y;
        return y && h(Y) && (xe = u(Y), fe ^= 1), new f(re, xe, fe);
      }
      return { seed: B, k2sig: H };
    }
    const U = { lowS: e.lowS, prehash: false }, R = { lowS: e.lowS, prehash: false };
    function b(S, D, T = U) {
      const { seed: N, k2sig: y } = k(S, D, T);
      return J2(e.hash.outputLen, o.BYTES, s)(N, y);
    }
    t.BASE.precompute(8);
    function C(S, D, T, N = R) {
      const y = S;
      D = We$4("msgHash", D), T = We$4("publicKey", T), Kh(N);
      const { lowS: w, prehash: v, format: $ } = N;
      if ("strict" in N) throw new Error("options.strict was renamed to lowS");
      if ($ !== void 0 && !["compact", "der", "js"].includes($)) throw new Error('format must be "compact", "der" or "js"');
      const x = typeof y == "string" || Ya$1(y), O = !x && !$ && typeof y == "object" && y !== null && typeof y.r == "bigint" && typeof y.s == "bigint";
      if (!x && !O) throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");
      let B, q;
      try {
        if (O) if ($ === void 0 || $ === "js") B = new f(y.r, y.s);
        else throw new Error("invalid format");
        if (x) {
          try {
            $ !== "compact" && (B = f.fromDER(y));
          } catch (fe) {
            if (!(fe instanceof Vt$3.Err)) throw fe;
          }
          !B && $ !== "der" && (B = f.fromCompact(y));
        }
        q = t.fromHex(T);
      } catch {
        return false;
      }
      if (!B || w && B.hasHighS()) return false;
      v && (D = e.hash(D));
      const { r: H, s: M } = B, V = E(D), K = o.inv(M), ie = o.create(V * K), re = o.create(H * K), Y = t.BASE.multiplyUnsafe(ie).add(q.multiplyUnsafe(re));
      return Y.is0() ? false : o.create(Y.x) === H;
    }
    return Object.freeze({ getPublicKey: g, getSharedSecret: _, sign: b, verify: C, utils: d, Point: t, Signature: f });
  }
  function SE$1(t) {
    const e = { a: t.a, b: t.b, p: t.Fp.ORDER, n: t.n, h: t.h, Gx: t.Gx, Gy: t.Gy }, r = t.Fp, i = xi$2(e.n, t.nBitLength), s = { Fp: r, Fn: i, allowedPrivateKeyLengths: t.allowedPrivateKeyLengths, allowInfinityPoint: t.allowInfinityPoint, endo: t.endo, wrapPrivateKey: t.wrapPrivateKey, isTorsionFree: t.isTorsionFree, clearCofactor: t.clearCofactor, fromBytes: t.fromBytes, toBytes: t.toBytes };
    return { CURVE: e, curveOpts: s };
  }
  function DE$1(t) {
    const { CURVE: e, curveOpts: r } = SE$1(t), i = { hash: t.hash, hmac: t.hmac, randomBytes: t.randomBytes, lowS: t.lowS, bits2int: t.bits2int, bits2int_modN: t.bits2int_modN };
    return { CURVE: e, curveOpts: r, ecdsaOpts: i };
  }
  function AE$1(t, e) {
    return Object.assign({}, e, { ProjectivePoint: e.Point, CURVE: t });
  }
  function OE$1(t) {
    const { CURVE: e, curveOpts: r, ecdsaOpts: i } = DE$1(t), s = xE$1(e, r), n = $E$1(s, i, r);
    return AE$1(t, n);
  }
  function ta$1(t, e) {
    const r = (i) => OE$1({ ...t, hash: i });
    return { ...r(e), create: r };
  }
  const Fd$1 = { p: BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"), n: BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"), h: BigInt(1), a: BigInt("0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc"), b: BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"), Gx: BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"), Gy: BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5") }, Nd$1 = { p: BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"), n: BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973"), h: BigInt(1), a: BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc"), b: BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"), Gx: BigInt("0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7"), Gy: BigInt("0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f") }, Ud$1 = { p: BigInt("0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), n: BigInt("0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409"), h: BigInt(1), a: BigInt("0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"), b: BigInt("0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00"), Gx: BigInt("0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66"), Gy: BigInt("0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650") }, PE$1 = xi$2(Fd$1.p), CE$1 = xi$2(Nd$1.p), TE$1 = xi$2(Ud$1.p), RE$1 = ta$1({ ...Fd$1, Fp: PE$1, lowS: false }, An$2);
  ta$1({ ...Nd$1, Fp: CE$1, lowS: false }, Mv$1), ta$1({ ...Ud$1, Fp: TE$1, lowS: false, allowedPrivateKeyLengths: [130, 131, 132] }, jv$1);
  const BE$1 = RE$1, kd$1 = "base10", je$5 = "base16", _t$4 = "base64pad", ur$1 = "base64url", bs$1 = "utf8", Ld$1 = 0, Kt$4 = 1, vs$1 = 2, FE$1 = 0, Wh = 1, es = 12, sc$1 = 32;
  function NE$1() {
    const t = ea$1.utils.randomPrivateKey(), e = ea$1.getPublicKey(t);
    return { privateKey: Je$4(t, je$5), publicKey: Je$4(e, je$5) };
  }
  function ra$1() {
    const t = Ii$2(sc$1);
    return Je$4(t, je$5);
  }
  function UE$1(t, e) {
    const r = ea$1.getSharedSecret(ut$4(t, je$5), ut$4(e, je$5)), i = W2(Pn$2, r, void 0, void 0, sc$1);
    return Je$4(i, je$5);
  }
  function Xs$1(t) {
    const e = Pn$2(ut$4(t, je$5));
    return Je$4(e, je$5);
  }
  function Rt$4(t) {
    const e = Pn$2(ut$4(t, bs$1));
    return Je$4(e, je$5);
  }
  function jd$1(t) {
    return ut$4(`${t}`, kd$1);
  }
  function Nr$1(t) {
    return Number(Je$4(t, kd$1));
  }
  function Md$1(t) {
    return t.replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
  }
  function qd$1(t) {
    const e = t.replace(/-/g, "+").replace(/_/g, "/"), r = (4 - e.length % 4) % 4;
    return e + "=".repeat(r);
  }
  function kE$1(t) {
    const e = jd$1(typeof t.type < "u" ? t.type : Ld$1);
    if (Nr$1(e) === Kt$4 && typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    const r = typeof t.senderPublicKey < "u" ? ut$4(t.senderPublicKey, je$5) : void 0, i = typeof t.iv < "u" ? ut$4(t.iv, je$5) : Ii$2(es), s = ut$4(t.symKey, je$5), n = vd$1(s, i).encrypt(ut$4(t.message, bs$1)), o = zd$1({ type: e, sealed: n, iv: i, senderPublicKey: r });
    return t.encoding === ur$1 ? Md$1(o) : o;
  }
  function LE$1(t) {
    const e = ut$4(t.symKey, je$5), { sealed: r, iv: i } = us$1({ encoded: t.encoded, encoding: t.encoding }), s = vd$1(e, i).decrypt(r);
    if (s === null) throw new Error("Failed to decrypt");
    return Je$4(s, bs$1);
  }
  function jE$1(t, e) {
    const r = jd$1(vs$1), i = Ii$2(es), s = ut$4(t, bs$1), n = zd$1({ type: r, sealed: s, iv: i });
    return e === ur$1 ? Md$1(n) : n;
  }
  function ME$1(t, e) {
    const { sealed: r } = us$1({ encoded: t, encoding: e });
    return Je$4(r, bs$1);
  }
  function zd$1(t) {
    if (Nr$1(t.type) === vs$1) return Je$4(Ji$1([t.type, t.sealed]), _t$4);
    if (Nr$1(t.type) === Kt$4) {
      if (typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
      return Je$4(Ji$1([t.type, t.senderPublicKey, t.iv, t.sealed]), _t$4);
    }
    return Je$4(Ji$1([t.type, t.iv, t.sealed]), _t$4);
  }
  function us$1(t) {
    const e = (t.encoding || _t$4) === ur$1 ? qd$1(t.encoded) : t.encoded, r = ut$4(e, _t$4), i = r.slice(FE$1, Wh), s = Wh;
    if (Nr$1(i) === Kt$4) {
      const c = s + sc$1, h = c + es, u = r.slice(s, c), l = r.slice(c, h), f = r.slice(h);
      return { type: i, sealed: f, iv: l, senderPublicKey: u };
    }
    if (Nr$1(i) === vs$1) {
      const c = r.slice(s), h = Ii$2(es);
      return { type: i, sealed: c, iv: h };
    }
    const n = s + es, o = r.slice(s, n), a = r.slice(n);
    return { type: i, sealed: a, iv: o };
  }
  function qE$1(t, e) {
    const r = us$1({ encoded: t, encoding: e == null ? void 0 : e.encoding });
    return Hd$1({ type: Nr$1(r.type), senderPublicKey: typeof r.senderPublicKey < "u" ? Je$4(r.senderPublicKey, je$5) : void 0, receiverPublicKey: e == null ? void 0 : e.receiverPublicKey });
  }
  function Hd$1(t) {
    const e = (t == null ? void 0 : t.type) || Ld$1;
    if (e === Kt$4) {
      if (typeof (t == null ? void 0 : t.senderPublicKey) > "u") throw new Error("missing sender public key");
      if (typeof (t == null ? void 0 : t.receiverPublicKey) > "u") throw new Error("missing receiver public key");
    }
    return { type: e, senderPublicKey: t == null ? void 0 : t.senderPublicKey, receiverPublicKey: t == null ? void 0 : t.receiverPublicKey };
  }
  function Gh(t) {
    return t.type === Kt$4 && typeof t.senderPublicKey == "string" && typeof t.receiverPublicKey == "string";
  }
  function Yh(t) {
    return t.type === vs$1;
  }
  function zE$1(t) {
    const e = Buffer.from(t.x, "base64"), r = Buffer.from(t.y, "base64");
    return Ji$1([new Uint8Array([4]), e, r]);
  }
  function HE$1(t, e) {
    const [r, i, s] = t.split("."), n = Buffer.from(qd$1(s), "base64");
    if (n.length !== 64) throw new Error("Invalid signature length");
    const o = n.slice(0, 32), a = n.slice(32, 64), c = `${r}.${i}`, h = Pn$2(c), u = zE$1(e);
    if (!BE$1.verify(Ji$1([o, a]), h, u)) throw new Error("Invalid signature");
    return Ho$1(t).payload;
  }
  const VE$1 = "irn";
  function yn$2(t) {
    return (t == null ? void 0 : t.relay) || { protocol: VE$1 };
  }
  function Wi$2(t) {
    const e = E1$1[t];
    if (typeof e > "u") throw new Error(`Relay Protocol not supported: ${t}`);
    return e;
  }
  function KE$1(t, e = "-") {
    const r = {}, i = "relay" + e;
    return Object.keys(t).forEach((s) => {
      if (s.startsWith(i)) {
        const n = s.replace(i, ""), o = t[s];
        r[n] = o;
      }
    }), r;
  }
  function Jh(t) {
    if (!t.includes("wc:")) {
      const h = td$1(t);
      h != null && h.includes("wc:") && (t = h);
    }
    t = t.includes("wc://") ? t.replace("wc://", "") : t, t = t.includes("wc:") ? t.replace("wc:", "") : t;
    const e = t.indexOf(":"), r = t.indexOf("?") !== -1 ? t.indexOf("?") : void 0, i = t.substring(0, e), s = t.substring(e + 1, r).split("@"), n = typeof r < "u" ? t.substring(r) : "", o = new URLSearchParams(n), a = {};
    o.forEach((h, u) => {
      a[u] = h;
    });
    const c = typeof a.methods == "string" ? a.methods.split(",") : void 0;
    return { protocol: i, topic: WE$1(s[0]), version: parseInt(s[1], 10), symKey: a.symKey, relay: KE$1(a), methods: c, expiryTimestamp: a.expiryTimestamp ? parseInt(a.expiryTimestamp, 10) : void 0 };
  }
  function WE$1(t) {
    return t.startsWith("//") ? t.substring(2) : t;
  }
  function GE$1(t, e = "-") {
    const r = "relay", i = {};
    return Object.keys(t).forEach((s) => {
      const n = s, o = r + e + n;
      t[n] && (i[o] = t[n]);
    }), i;
  }
  function Zh$1(t) {
    const e = new URLSearchParams(), r = GE$1(t.relay);
    Object.keys(r).sort().forEach((s) => {
      e.set(s, r[s]);
    }), e.set("symKey", t.symKey), t.expiryTimestamp && e.set("expiryTimestamp", t.expiryTimestamp.toString()), t.methods && e.set("methods", t.methods.join(","));
    const i = e.toString();
    return `${t.protocol}:${t.topic}@${t.version}?${i}`;
  }
  function Ls$1(t, e, r) {
    return `${t}?wc_ev=${r}&topic=${e}`;
  }
  var YE$1 = Object.defineProperty, JE$1 = Object.defineProperties, ZE$1 = Object.getOwnPropertyDescriptors, Qh$1 = Object.getOwnPropertySymbols, QE$1 = Object.prototype.hasOwnProperty, XE$1 = Object.prototype.propertyIsEnumerable, Xh = (t, e, r) => e in t ? YE$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, e3 = (t, e) => {
    for (var r in e || (e = {})) QE$1.call(e, r) && Xh(t, r, e[r]);
    if (Qh$1) for (var r of Qh$1(e)) XE$1.call(e, r) && Xh(t, r, e[r]);
    return t;
  }, t3 = (t, e) => JE$1(t, ZE$1(e));
  function $i$2(t) {
    const e = [];
    return t.forEach((r) => {
      const [i, s] = r.split(":");
      e.push(`${i}:${s}`);
    }), e;
  }
  function r3(t) {
    const e = [];
    return Object.values(t).forEach((r) => {
      e.push(...$i$2(r.accounts));
    }), e;
  }
  function i3(t, e) {
    const r = [];
    return Object.values(t).forEach((i) => {
      $i$2(i.accounts).includes(e) && r.push(...i.methods);
    }), r;
  }
  function s3(t, e) {
    const r = [];
    return Object.values(t).forEach((i) => {
      $i$2(i.accounts).includes(e) && r.push(...i.events);
    }), r;
  }
  function Bn$2(t) {
    return t.includes(":");
  }
  function fi$2(t) {
    return Bn$2(t) ? t.split(":")[0] : t;
  }
  function eu$1(t) {
    var e, r, i;
    const s = {};
    if (!pr$1(t)) return s;
    for (const [n, o] of Object.entries(t)) {
      const a = Bn$2(n) ? [n] : o.chains, c = o.methods || [], h = o.events || [], u = fi$2(n);
      s[u] = t3(e3({}, s[u]), { chains: Bt$4(a, (e = s[u]) == null ? void 0 : e.chains), methods: Bt$4(c, (r = s[u]) == null ? void 0 : r.methods), events: Bt$4(h, (i = s[u]) == null ? void 0 : i.events) });
    }
    return s;
  }
  function n3(t) {
    const e = {};
    return t == null || t.forEach((r) => {
      var i;
      const [s, n] = r.split(":");
      e[s] || (e[s] = { accounts: [], chains: [], events: [], methods: [] }), e[s].accounts.push(r), (i = e[s].chains) == null || i.push(`${s}:${n}`);
    }), e;
  }
  function tu$1(t, e) {
    e = e.map((i) => i.replace("did:pkh:", ""));
    const r = n3(e);
    for (const [i, s] of Object.entries(r)) s.methods ? s.methods = Bt$4(s.methods, t) : s.methods = t, s.events = ["chainChanged", "accountsChanged"];
    return r;
  }
  function o3(t, e) {
    var r, i, s, n, o, a;
    const c = eu$1(t), h = eu$1(e), u = {}, l = Object.keys(c).concat(Object.keys(h));
    for (const f of l) u[f] = { chains: Bt$4((r = c[f]) == null ? void 0 : r.chains, (i = h[f]) == null ? void 0 : i.chains), methods: Bt$4((s = c[f]) == null ? void 0 : s.methods, (n = h[f]) == null ? void 0 : n.methods), events: Bt$4((o = c[f]) == null ? void 0 : o.events, (a = h[f]) == null ? void 0 : a.events) };
    return u;
  }
  const a3 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } }, c3 = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
  function j$2(t, e) {
    const { message: r, code: i } = c3[t];
    return { message: e ? `${r} ${e}` : r, code: i };
  }
  function le$4(t, e) {
    const { message: r, code: i } = a3[t];
    return { message: e ? `${r} ${e}` : r, code: i };
  }
  function lt$4(t, e) {
    return !!Array.isArray(t);
  }
  function pr$1(t) {
    return Object.getPrototypeOf(t) === Object.prototype && Object.keys(t).length;
  }
  function Oe$4(t) {
    return typeof t > "u";
  }
  function ge$3(t, e) {
    return e && Oe$4(t) ? true : typeof t == "string" && !!t.trim().length;
  }
  function nc$1(t, e) {
    return e && Oe$4(t) ? true : typeof t == "number" && !isNaN(t);
  }
  function h3(t, e) {
    const { requiredNamespaces: r } = e, i = Object.keys(t.namespaces), s = Object.keys(r);
    let n = true;
    return Dr$1(s, i) ? (i.forEach((o) => {
      const { accounts: a, methods: c, events: h } = t.namespaces[o], u = $i$2(a), l = r[o];
      (!Dr$1(Jf$1(o, l), u) || !Dr$1(l.methods, c) || !Dr$1(l.events, h)) && (n = false);
    }), n) : false;
  }
  function wn$2(t) {
    return ge$3(t, false) && t.includes(":") ? t.split(":").length === 2 : false;
  }
  function u3(t) {
    if (ge$3(t, false) && t.includes(":")) {
      const e = t.split(":");
      if (e.length === 3) {
        const r = e[0] + ":" + e[1];
        return !!e[2] && wn$2(r);
      }
    }
    return false;
  }
  function l3(t) {
    function e(r) {
      try {
        return typeof new URL(r) < "u";
      } catch {
        return false;
      }
    }
    try {
      if (ge$3(t, !1)) {
        if (e(t)) return !0;
        const r = td$1(t);
        return e(r);
      }
    } catch {
    }
    return false;
  }
  function f3(t) {
    var e;
    return (e = t == null ? void 0 : t.proposer) == null ? void 0 : e.publicKey;
  }
  function d3(t) {
    return t == null ? void 0 : t.topic;
  }
  function p3(t, e) {
    let r = null;
    return ge$3(t == null ? void 0 : t.publicKey, false) || (r = j$2("MISSING_OR_INVALID", `${e} controller public key should be a string`)), r;
  }
  function ru$1(t) {
    let e = true;
    return lt$4(t) ? t.length && (e = t.every((r) => ge$3(r, false))) : e = false, e;
  }
  function g3(t, e, r) {
    let i = null;
    return lt$4(e) && e.length ? e.forEach((s) => {
      i || wn$2(s) || (i = le$4("UNSUPPORTED_CHAINS", `${r}, chain ${s} should be a string and conform to "namespace:chainId" format`));
    }) : wn$2(t) || (i = le$4("UNSUPPORTED_CHAINS", `${r}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), i;
  }
  function y3(t, e, r) {
    let i = null;
    return Object.entries(t).forEach(([s, n]) => {
      if (i) return;
      const o = g3(s, Jf$1(s, n), `${e} ${r}`);
      o && (i = o);
    }), i;
  }
  function w3(t, e) {
    let r = null;
    return lt$4(t) ? t.forEach((i) => {
      r || u3(i) || (r = le$4("UNSUPPORTED_ACCOUNTS", `${e}, account ${i} should be a string and conform to "namespace:chainId:address" format`));
    }) : r = le$4("UNSUPPORTED_ACCOUNTS", `${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r;
  }
  function m3(t, e) {
    let r = null;
    return Object.values(t).forEach((i) => {
      if (r) return;
      const s = w3(i == null ? void 0 : i.accounts, `${e} namespace`);
      s && (r = s);
    }), r;
  }
  function b3(t, e) {
    let r = null;
    return ru$1(t == null ? void 0 : t.methods) ? ru$1(t == null ? void 0 : t.events) || (r = le$4("UNSUPPORTED_EVENTS", `${e}, events should be an array of strings or empty array for no events`)) : r = le$4("UNSUPPORTED_METHODS", `${e}, methods should be an array of strings or empty array for no methods`), r;
  }
  function Vd$1(t, e) {
    let r = null;
    return Object.values(t).forEach((i) => {
      if (r) return;
      const s = b3(i, `${e}, namespace`);
      s && (r = s);
    }), r;
  }
  function v3(t, e, r) {
    let i = null;
    if (t && pr$1(t)) {
      const s = Vd$1(t, e);
      s && (i = s);
      const n = y3(t, e, r);
      n && (i = n);
    } else i = j$2("MISSING_OR_INVALID", `${e}, ${r} should be an object with data`);
    return i;
  }
  function go$2(t, e) {
    let r = null;
    if (t && pr$1(t)) {
      const i = Vd$1(t, e);
      i && (r = i);
      const s = m3(t, e);
      s && (r = s);
    } else r = j$2("MISSING_OR_INVALID", `${e}, namespaces should be an object with data`);
    return r;
  }
  function Kd$1(t) {
    return ge$3(t.protocol, true);
  }
  function E3(t, e) {
    let r = false;
    return t ? t && lt$4(t) && t.length && t.forEach((i) => {
      r = Kd$1(i);
    }) : r = true, r;
  }
  function _3(t) {
    return typeof t == "number";
  }
  function Ke$4(t) {
    return typeof t < "u" && typeof t !== null;
  }
  function I3(t) {
    return !(!t || typeof t != "object" || !t.code || !nc$1(t.code, false) || !t.message || !ge$3(t.message, false));
  }
  function x3(t) {
    return !(Oe$4(t) || !ge$3(t.method, false));
  }
  function $3(t) {
    return !(Oe$4(t) || Oe$4(t.result) && Oe$4(t.error) || !nc$1(t.id, false) || !ge$3(t.jsonrpc, false));
  }
  function S3(t) {
    return !(Oe$4(t) || !ge$3(t.name, false));
  }
  function iu$1(t, e) {
    return !(!wn$2(e) || !r3(t).includes(e));
  }
  function D3(t, e, r) {
    return ge$3(r, false) ? i3(t, e).includes(r) : false;
  }
  function A3(t, e, r) {
    return ge$3(r, false) ? s3(t, e).includes(r) : false;
  }
  function su$1(t, e, r) {
    let i = null;
    const s = O3(t), n = P3(e), o = Object.keys(s), a = Object.keys(n), c = nu$1(Object.keys(t)), h = nu$1(Object.keys(e)), u = c.filter((l) => !h.includes(l));
    return u.length && (i = j$2("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u.toString()}
      Received: ${Object.keys(e).toString()}`)), Dr$1(o, a) || (i = j$2("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${o.toString()}
      Approved: ${a.toString()}`)), Object.keys(e).forEach((l) => {
      if (!l.includes(":") || i) return;
      const f = $i$2(e[l].accounts);
      f.includes(l) || (i = j$2("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${l}
        Required: ${l}
        Approved: ${f.toString()}`));
    }), o.forEach((l) => {
      i || (Dr$1(s[l].methods, n[l].methods) ? Dr$1(s[l].events, n[l].events) || (i = j$2("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${l}`)) : i = j$2("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${l}`));
    }), i;
  }
  function O3(t) {
    const e = {};
    return Object.keys(t).forEach((r) => {
      var i;
      r.includes(":") ? e[r] = t[r] : (i = t[r].chains) == null || i.forEach((s) => {
        e[s] = { methods: t[r].methods, events: t[r].events };
      });
    }), e;
  }
  function nu$1(t) {
    return [...new Set(t.map((e) => e.includes(":") ? e.split(":")[0] : e))];
  }
  function P3(t) {
    const e = {};
    return Object.keys(t).forEach((r) => {
      if (r.includes(":")) e[r] = t[r];
      else {
        const i = $i$2(t[r].accounts);
        i == null || i.forEach((s) => {
          e[s] = { accounts: t[r].accounts.filter((n) => n.includes(`${s}:`)), methods: t[r].methods, events: t[r].events };
        });
      }
    }), e;
  }
  function C3(t, e) {
    return nc$1(t, false) && t <= e.max && t >= e.min;
  }
  function ou$1() {
    const t = ws$1();
    return new Promise((e) => {
      switch (t) {
        case rt$4.browser:
          e(T3());
          break;
        case rt$4.reactNative:
          e(R3());
          break;
        case rt$4.node:
          e(B3());
          break;
        default:
          e(true);
      }
    });
  }
  function T3() {
    return _i$2() && (navigator == null ? void 0 : navigator.onLine);
  }
  async function R3() {
    if (yr$1() && typeof global < "u" && global != null && global.NetInfo) {
      const t = await (global == null ? void 0 : global.NetInfo.fetch());
      return t == null ? void 0 : t.isConnected;
    }
    return true;
  }
  function B3() {
    return true;
  }
  function F3(t) {
    switch (ws$1()) {
      case rt$4.browser:
        N3(t);
        break;
      case rt$4.reactNative:
        U3(t);
        break;
    }
  }
  function N3(t) {
    !yr$1() && _i$2() && (window.addEventListener("online", () => t(true)), window.addEventListener("offline", () => t(false)));
  }
  function U3(t) {
    yr$1() && typeof global < "u" && global != null && global.NetInfo && (global == null || global.NetInfo.addEventListener((e) => t(e == null ? void 0 : e.isConnected)));
  }
  function k3() {
    var t;
    return _i$2() && Tr$1() ? ((t = Tr$1()) == null ? void 0 : t.visibilityState) === "visible" : true;
  }
  const yo$2 = {};
  let ki$2 = class ki {
    static get(e) {
      return yo$2[e];
    }
    static set(e, r) {
      yo$2[e] = r;
    }
    static delete(e) {
      delete yo$2[e];
    }
  };
  function L3(t) {
    const e = ps$1.decode(t);
    if (e.length < 33) throw new Error("Too short to contain a public key");
    return e.slice(1, 33);
  }
  function j3({ publicKey: t, signature: e, payload: r }) {
    var i;
    const s = ia$1(r.method), n = 128 | parseInt(((i = r.version) == null ? void 0 : i.toString()) || "4"), o = z3(r.address), a = r.era === "00" ? new Uint8Array([0]) : ia$1(r.era);
    if (a.length !== 1 && a.length !== 2) throw new Error("Invalid era length");
    const c = parseInt(r.nonce, 16), h = new Uint8Array([c & 255, c >> 8 & 255]), u = BigInt(`0x${q3(r.tip)}`), l = V3(u), f = new Uint8Array([0, ...t, o, ...e, ...a, ...h, ...l, ...s]), p = H3(f.length + 1);
    return new Uint8Array([...p, n, ...f]);
  }
  function M3(t) {
    const e = ia$1(t), r = R1$1.blake2b(e, void 0, 32);
    return "0x" + Buffer.from(r).toString("hex");
  }
  function ia$1(t) {
    return new Uint8Array(t.replace(/^0x/, "").match(/.{1,2}/g).map((e) => parseInt(e, 16)));
  }
  function q3(t) {
    return t.startsWith("0x") ? t.slice(2) : t;
  }
  function z3(t) {
    const e = ps$1.decode(t)[0];
    return e === 42 ? 0 : e === 60 ? 2 : 1;
  }
  function H3(t) {
    if (t < 64) return new Uint8Array([t << 2]);
    if (t < 16384) {
      const e = t << 2 | 1;
      return new Uint8Array([e & 255, e >> 8 & 255]);
    } else if (t < 1 << 30) {
      const e = t << 2 | 2;
      return new Uint8Array([e & 255, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255]);
    } else throw new Error("Compact encoding > 2^30 not supported");
  }
  function V3(t) {
    if (t < BigInt(1) << BigInt(6)) return new Uint8Array([Number(t << BigInt(2))]);
    if (t < BigInt(1) << BigInt(14)) {
      const e = t << BigInt(2) | BigInt(1);
      return new Uint8Array([Number(e & BigInt(255)), Number(e >> BigInt(8) & BigInt(255))]);
    } else if (t < BigInt(1) << BigInt(30)) {
      const e = t << BigInt(2) | BigInt(2);
      return new Uint8Array([Number(e & BigInt(255)), Number(e >> BigInt(8) & BigInt(255)), Number(e >> BigInt(16) & BigInt(255)), Number(e >> BigInt(24) & BigInt(255))]);
    } else throw new Error("BigInt compact encoding not supported > 2^30");
  }
  function K3(t) {
    const e = Uint8Array.from(Buffer.from(t.signature, "hex")), r = L3(t.transaction.address), i = j3({ publicKey: r, signature: e, payload: t.transaction }), s = Buffer.from(i).toString("hex");
    return M3(s);
  }
  class kr {
  }
  let W3 = class extends kr {
    constructor(e) {
      super();
    }
  };
  const au$1 = L$3.FIVE_SECONDS, Lr$1 = { pulse: "heartbeat_pulse" };
  let G3 = class Wd extends W3 {
    constructor(e) {
      super(e), this.events = new st$3.EventEmitter(), this.interval = au$1, this.interval = (e == null ? void 0 : e.interval) || au$1;
    }
    static async init(e) {
      const r = new Wd(e);
      return await r.init(), r;
    }
    async init() {
      await this.initialize();
    }
    stop() {
      clearInterval(this.intervalRef);
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    async initialize() {
      this.intervalRef = setInterval(() => this.pulse(), L$3.toMiliseconds(this.interval));
    }
    pulse() {
      this.events.emit(Lr$1.pulse);
    }
  };
  const Y3 = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/, J3 = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/, Z3 = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
  function Q3(t, e) {
    if (t === "__proto__" || t === "constructor" && e && typeof e == "object" && "prototype" in e) {
      X3(t);
      return;
    }
    return e;
  }
  function X3(t) {
    console.warn(`[destr] Dropping "${t}" key to prevent prototype pollution.`);
  }
  function js$1(t, e = {}) {
    if (typeof t != "string")
      return t;
    if (t[0] === '"' && t[t.length - 1] === '"' && t.indexOf("\\") === -1)
      return t.slice(1, -1);
    const r = t.trim();
    if (r.length <= 9)
      switch (r.toLowerCase()) {
        case "true":
          return true;
        case "false":
          return false;
        case "undefined":
          return;
        case "null":
          return null;
        case "nan":
          return Number.NaN;
        case "infinity":
          return Number.POSITIVE_INFINITY;
        case "-infinity":
          return Number.NEGATIVE_INFINITY;
      }
    if (!Z3.test(t)) {
      if (e.strict)
        throw new SyntaxError("[destr] Invalid JSON");
      return t;
    }
    try {
      if (Y3.test(t) || J3.test(t)) {
        if (e.strict)
          throw new Error("[destr] Possible prototype pollution");
        return JSON.parse(t, Q3);
      }
      return JSON.parse(t);
    } catch (i) {
      if (e.strict)
        throw i;
      return t;
    }
  }
  function e_(t) {
    return !t || typeof t.then != "function" ? Promise.resolve(t) : t;
  }
  function Ee$4(t, ...e) {
    try {
      return e_(t(...e));
    } catch (r) {
      return Promise.reject(r);
    }
  }
  function t_(t) {
    const e = typeof t;
    return t === null || e !== "object" && e !== "function";
  }
  function r_(t) {
    const e = Object.getPrototypeOf(t);
    return !e || e.isPrototypeOf(Object);
  }
  function en$4(t) {
    if (t_(t))
      return String(t);
    if (r_(t) || Array.isArray(t))
      return JSON.stringify(t);
    if (typeof t.toJSON == "function")
      return en$4(t.toJSON());
    throw new Error("[unstorage] Cannot stringify value!");
  }
  const sa$1 = "base64:";
  function i_(t) {
    return typeof t == "string" ? t : sa$1 + o_(t);
  }
  function s_(t) {
    return typeof t != "string" || !t.startsWith(sa$1) ? t : n_(t.slice(sa$1.length));
  }
  function n_(t) {
    return globalThis.Buffer ? Buffer.from(t, "base64") : Uint8Array.from(
      globalThis.atob(t),
      (e) => e.codePointAt(0)
    );
  }
  function o_(t) {
    return globalThis.Buffer ? Buffer.from(t).toString("base64") : globalThis.btoa(String.fromCodePoint(...t));
  }
  function Ve$4(t) {
    var e;
    return t && ((e = t.split("?")[0]) == null ? void 0 : e.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
  }
  function a_(...t) {
    return Ve$4(t.join(":"));
  }
  function Ms$1(t) {
    return t = Ve$4(t), t ? t + ":" : "";
  }
  function c_(t, e) {
    if (e === void 0)
      return true;
    let r = 0, i = t.indexOf(":");
    for (; i > -1; )
      r++, i = t.indexOf(":", i + 1);
    return r <= e;
  }
  function h_(t, e) {
    return e ? t.startsWith(e) && t[t.length - 1] !== "$" : t[t.length - 1] !== "$";
  }
  const u_ = "memory", l_ = () => {
    const t = /* @__PURE__ */ new Map();
    return {
      name: u_,
      getInstance: () => t,
      hasItem(e) {
        return t.has(e);
      },
      getItem(e) {
        return t.get(e) ?? null;
      },
      getItemRaw(e) {
        return t.get(e) ?? null;
      },
      setItem(e, r) {
        t.set(e, r);
      },
      setItemRaw(e, r) {
        t.set(e, r);
      },
      removeItem(e) {
        t.delete(e);
      },
      getKeys() {
        return [...t.keys()];
      },
      clear() {
        t.clear();
      },
      dispose() {
        t.clear();
      }
    };
  };
  function f_(t = {}) {
    const e = {
      mounts: { "": t.driver || l_() },
      mountpoints: [""],
      watching: false,
      watchListeners: [],
      unwatch: {}
    }, r = (h) => {
      for (const u of e.mountpoints)
        if (h.startsWith(u))
          return {
            base: u,
            relativeKey: h.slice(u.length),
            driver: e.mounts[u]
          };
      return {
        base: "",
        relativeKey: h,
        driver: e.mounts[""]
      };
    }, i = (h, u) => e.mountpoints.filter(
      (l) => l.startsWith(h) || u && h.startsWith(l)
    ).map((l) => ({
      relativeBase: h.length > l.length ? h.slice(l.length) : void 0,
      mountpoint: l,
      driver: e.mounts[l]
    })), s = (h, u) => {
      if (e.watching) {
        u = Ve$4(u);
        for (const l of e.watchListeners)
          l(h, u);
      }
    }, n = async () => {
      if (!e.watching) {
        e.watching = true;
        for (const h in e.mounts)
          e.unwatch[h] = await cu$1(
            e.mounts[h],
            s,
            h
          );
      }
    }, o = async () => {
      if (e.watching) {
        for (const h in e.unwatch)
          await e.unwatch[h]();
        e.unwatch = {}, e.watching = false;
      }
    }, a = (h, u, l) => {
      const f = /* @__PURE__ */ new Map(), p = (d) => {
        let g = f.get(d.base);
        return g || (g = {
          driver: d.driver,
          base: d.base,
          items: []
        }, f.set(d.base, g)), g;
      };
      for (const d of h) {
        const g = typeof d == "string", m = Ve$4(g ? d : d.key), _ = g ? void 0 : d.value, I = g || !d.options ? u : { ...u, ...d.options }, E = r(m);
        p(E).items.push({
          key: m,
          value: _,
          relativeKey: E.relativeKey,
          options: I
        });
      }
      return Promise.all([...f.values()].map((d) => l(d))).then(
        (d) => d.flat()
      );
    }, c = {
      // Item
      hasItem(h, u = {}) {
        h = Ve$4(h);
        const { relativeKey: l, driver: f } = r(h);
        return Ee$4(f.hasItem, l, u);
      },
      getItem(h, u = {}) {
        h = Ve$4(h);
        const { relativeKey: l, driver: f } = r(h);
        return Ee$4(f.getItem, l, u).then(
          (p) => js$1(p)
        );
      },
      getItems(h, u = {}) {
        return a(h, u, (l) => l.driver.getItems ? Ee$4(
          l.driver.getItems,
          l.items.map((f) => ({
            key: f.relativeKey,
            options: f.options
          })),
          u
        ).then(
          (f) => f.map((p) => ({
            key: a_(l.base, p.key),
            value: js$1(p.value)
          }))
        ) : Promise.all(
          l.items.map((f) => Ee$4(
            l.driver.getItem,
            f.relativeKey,
            f.options
          ).then((p) => ({
            key: f.key,
            value: js$1(p)
          })))
        ));
      },
      getItemRaw(h, u = {}) {
        h = Ve$4(h);
        const { relativeKey: l, driver: f } = r(h);
        return f.getItemRaw ? Ee$4(f.getItemRaw, l, u) : Ee$4(f.getItem, l, u).then(
          (p) => s_(p)
        );
      },
      async setItem(h, u, l = {}) {
        if (u === void 0)
          return c.removeItem(h);
        h = Ve$4(h);
        const { relativeKey: f, driver: p } = r(h);
        p.setItem && (await Ee$4(p.setItem, f, en$4(u), l), p.watch || s("update", h));
      },
      async setItems(h, u) {
        await a(h, u, async (l) => {
          if (l.driver.setItems)
            return Ee$4(
              l.driver.setItems,
              l.items.map((f) => ({
                key: f.relativeKey,
                value: en$4(f.value),
                options: f.options
              })),
              u
            );
          l.driver.setItem && await Promise.all(
            l.items.map((f) => Ee$4(
              l.driver.setItem,
              f.relativeKey,
              en$4(f.value),
              f.options
            ))
          );
        });
      },
      async setItemRaw(h, u, l = {}) {
        if (u === void 0)
          return c.removeItem(h, l);
        h = Ve$4(h);
        const { relativeKey: f, driver: p } = r(h);
        if (p.setItemRaw)
          await Ee$4(p.setItemRaw, f, u, l);
        else if (p.setItem)
          await Ee$4(p.setItem, f, i_(u), l);
        else
          return;
        p.watch || s("update", h);
      },
      async removeItem(h, u = {}) {
        typeof u == "boolean" && (u = { removeMeta: u }), h = Ve$4(h);
        const { relativeKey: l, driver: f } = r(h);
        f.removeItem && (await Ee$4(f.removeItem, l, u), (u.removeMeta || u.removeMata) && await Ee$4(f.removeItem, l + "$", u), f.watch || s("remove", h));
      },
      // Meta
      async getMeta(h, u = {}) {
        typeof u == "boolean" && (u = { nativeOnly: u }), h = Ve$4(h);
        const { relativeKey: l, driver: f } = r(h), p = /* @__PURE__ */ Object.create(null);
        if (f.getMeta && Object.assign(p, await Ee$4(f.getMeta, l, u)), !u.nativeOnly) {
          const d = await Ee$4(
            f.getItem,
            l + "$",
            u
          ).then((g) => js$1(g));
          d && typeof d == "object" && (typeof d.atime == "string" && (d.atime = new Date(d.atime)), typeof d.mtime == "string" && (d.mtime = new Date(d.mtime)), Object.assign(p, d));
        }
        return p;
      },
      setMeta(h, u, l = {}) {
        return this.setItem(h + "$", u, l);
      },
      removeMeta(h, u = {}) {
        return this.removeItem(h + "$", u);
      },
      // Keys
      async getKeys(h, u = {}) {
        var m;
        h = Ms$1(h);
        const l = i(h, true);
        let f = [];
        const p = [];
        let d = true;
        for (const _ of l) {
          (m = _.driver.flags) != null && m.maxDepth || (d = false);
          const I = await Ee$4(
            _.driver.getKeys,
            _.relativeBase,
            u
          );
          for (const E of I) {
            const P = _.mountpoint + Ve$4(E);
            f.some((A) => P.startsWith(A)) || p.push(P);
          }
          f = [
            _.mountpoint,
            ...f.filter((E) => !E.startsWith(_.mountpoint))
          ];
        }
        const g = u.maxDepth !== void 0 && !d;
        return p.filter(
          (_) => (!g || c_(_, u.maxDepth)) && h_(_, h)
        );
      },
      // Utils
      async clear(h, u = {}) {
        h = Ms$1(h), await Promise.all(
          i(h, false).map(async (l) => {
            if (l.driver.clear)
              return Ee$4(l.driver.clear, l.relativeBase, u);
            if (l.driver.removeItem) {
              const f = await l.driver.getKeys(l.relativeBase || "", u);
              return Promise.all(
                f.map((p) => l.driver.removeItem(p, u))
              );
            }
          })
        );
      },
      async dispose() {
        await Promise.all(
          Object.values(e.mounts).map((h) => hu$1(h))
        );
      },
      async watch(h) {
        return await n(), e.watchListeners.push(h), async () => {
          e.watchListeners = e.watchListeners.filter(
            (u) => u !== h
          ), e.watchListeners.length === 0 && await o();
        };
      },
      async unwatch() {
        e.watchListeners = [], await o();
      },
      // Mount
      mount(h, u) {
        if (h = Ms$1(h), h && e.mounts[h])
          throw new Error(`already mounted at ${h}`);
        return h && (e.mountpoints.push(h), e.mountpoints.sort((l, f) => f.length - l.length)), e.mounts[h] = u, e.watching && Promise.resolve(cu$1(u, s, h)).then((l) => {
          e.unwatch[h] = l;
        }).catch(console.error), c;
      },
      async unmount(h, u = true) {
        var l, f;
        h = Ms$1(h), !(!h || !e.mounts[h]) && (e.watching && h in e.unwatch && ((f = (l = e.unwatch)[h]) == null || f.call(l), delete e.unwatch[h]), u && await hu$1(e.mounts[h]), e.mountpoints = e.mountpoints.filter((p) => p !== h), delete e.mounts[h]);
      },
      getMount(h = "") {
        h = Ve$4(h) + ":";
        const u = r(h);
        return {
          driver: u.driver,
          base: u.base
        };
      },
      getMounts(h = "", u = {}) {
        return h = Ve$4(h), i(h, u.parents).map((f) => ({
          driver: f.driver,
          base: f.mountpoint
        }));
      },
      // Aliases
      keys: (h, u = {}) => c.getKeys(h, u),
      get: (h, u = {}) => c.getItem(h, u),
      set: (h, u, l = {}) => c.setItem(h, u, l),
      has: (h, u = {}) => c.hasItem(h, u),
      del: (h, u = {}) => c.removeItem(h, u),
      remove: (h, u = {}) => c.removeItem(h, u)
    };
    return c;
  }
  function cu$1(t, e, r) {
    return t.watch ? t.watch((i, s) => e(i, r + s)) : () => {
    };
  }
  async function hu$1(t) {
    typeof t.dispose == "function" && await Ee$4(t.dispose);
  }
  function jr$1(t) {
    return new Promise((e, r) => {
      t.oncomplete = t.onsuccess = () => e(t.result), t.onabort = t.onerror = () => r(t.error);
    });
  }
  function Gd$1(t, e) {
    let r;
    const i = () => {
      if (r)
        return r;
      const s = indexedDB.open(t);
      return s.onupgradeneeded = () => s.result.createObjectStore(e), r = jr$1(s), r.then((n) => {
        n.onclose = () => r = void 0;
      }, () => {
      }), r;
    };
    return (s, n) => i().then((o) => n(o.transaction(e, s).objectStore(e)));
  }
  let wo$2;
  function Es$1() {
    return wo$2 || (wo$2 = Gd$1("keyval-store", "keyval")), wo$2;
  }
  function uu$1(t, e = Es$1()) {
    return e("readonly", (r) => jr$1(r.get(t)));
  }
  function d_(t, e, r = Es$1()) {
    return r("readwrite", (i) => (i.put(e, t), jr$1(i.transaction)));
  }
  function p_(t, e = Es$1()) {
    return e("readwrite", (r) => (r.delete(t), jr$1(r.transaction)));
  }
  function g_(t = Es$1()) {
    return t("readwrite", (e) => (e.clear(), jr$1(e.transaction)));
  }
  function y_(t, e) {
    return t.openCursor().onsuccess = function() {
      this.result && (e(this.result), this.result.continue());
    }, jr$1(t.transaction);
  }
  function w_(t = Es$1()) {
    return t("readonly", (e) => {
      if (e.getAllKeys)
        return jr$1(e.getAllKeys());
      const r = [];
      return y_(e, (i) => r.push(i.key)).then(() => r);
    });
  }
  const m_ = "idb-keyval";
  var b_ = (t = {}) => {
    const e = t.base && t.base.length > 0 ? `${t.base}:` : "", r = (s) => e + s;
    let i;
    return t.dbName && t.storeName && (i = Gd$1(t.dbName, t.storeName)), { name: m_, options: t, async hasItem(s) {
      return !(typeof await uu$1(r(s), i) > "u");
    }, async getItem(s) {
      return await uu$1(r(s), i) ?? null;
    }, setItem(s, n) {
      return d_(r(s), n, i);
    }, removeItem(s) {
      return p_(r(s), i);
    }, getKeys() {
      return w_(i);
    }, clear() {
      return g_(i);
    } };
  };
  const v_ = "WALLET_CONNECT_V2_INDEXED_DB", E_ = "keyvaluestorage";
  let __ = class {
    constructor() {
      this.indexedDb = f_({ driver: b_({ dbName: v_, storeName: E_ }) });
    }
    async getKeys() {
      return this.indexedDb.getKeys();
    }
    async getEntries() {
      return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((e) => [e.key, e.value]);
    }
    async getItem(e) {
      const r = await this.indexedDb.getItem(e);
      if (r !== null) return r;
    }
    async setItem(e, r) {
      await this.indexedDb.setItem(e, Wt$4(r));
    }
    async removeItem(e) {
      await this.indexedDb.removeItem(e);
    }
  };
  var mo$2 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, tn$4 = { exports: {} };
  (function() {
    let t;
    function e() {
    }
    t = e, t.prototype.getItem = function(r) {
      return this.hasOwnProperty(r) ? String(this[r]) : null;
    }, t.prototype.setItem = function(r, i) {
      this[r] = String(i);
    }, t.prototype.removeItem = function(r) {
      delete this[r];
    }, t.prototype.clear = function() {
      const r = this;
      Object.keys(r).forEach(function(i) {
        r[i] = void 0, delete r[i];
      });
    }, t.prototype.key = function(r) {
      return r = r || 0, Object.keys(this)[r];
    }, t.prototype.__defineGetter__("length", function() {
      return Object.keys(this).length;
    }), typeof mo$2 < "u" && mo$2.localStorage ? tn$4.exports = mo$2.localStorage : typeof window < "u" && window.localStorage ? tn$4.exports = window.localStorage : tn$4.exports = new e();
  })();
  function I_(t) {
    var e;
    return [t[0], Br((e = t[1]) != null ? e : "")];
  }
  let x_ = class {
    constructor() {
      this.localStorage = tn$4.exports;
    }
    async getKeys() {
      return Object.keys(this.localStorage);
    }
    async getEntries() {
      return Object.entries(this.localStorage).map(I_);
    }
    async getItem(e) {
      const r = this.localStorage.getItem(e);
      if (r !== null) return Br(r);
    }
    async setItem(e, r) {
      this.localStorage.setItem(e, Wt$4(r));
    }
    async removeItem(e) {
      this.localStorage.removeItem(e);
    }
  };
  const $_ = "wc_storage_version", lu$1 = 1, S_ = async (t, e, r) => {
    const i = $_, s = await e.getItem(i);
    if (s && s >= lu$1) {
      r(e);
      return;
    }
    const n = await t.getKeys();
    if (!n.length) {
      r(e);
      return;
    }
    const o = [];
    for (; n.length; ) {
      const a = n.shift();
      if (!a) continue;
      const c = a.toLowerCase();
      if (c.includes("wc@") || c.includes("walletconnect") || c.includes("wc_") || c.includes("wallet_connect")) {
        const h = await t.getItem(a);
        await e.setItem(a, h), o.push(a);
      }
    }
    await e.setItem(i, lu$1), r(e), D_(t, o);
  }, D_ = async (t, e) => {
    e.length && e.forEach(async (r) => {
      await t.removeItem(r);
    });
  };
  let A_ = class {
    constructor() {
      this.initialized = false, this.setInitialized = (r) => {
        this.storage = r, this.initialized = true;
      };
      const e = new x_();
      this.storage = e;
      try {
        const r = new __();
        S_(e, r, this.setInitialized);
      } catch {
        this.initialized = true;
      }
    }
    async getKeys() {
      return await this.initialize(), this.storage.getKeys();
    }
    async getEntries() {
      return await this.initialize(), this.storage.getEntries();
    }
    async getItem(e) {
      return await this.initialize(), this.storage.getItem(e);
    }
    async setItem(e, r) {
      return await this.initialize(), this.storage.setItem(e, r);
    }
    async removeItem(e) {
      return await this.initialize(), this.storage.removeItem(e);
    }
    async initialize() {
      this.initialized || await new Promise((e) => {
        const r = setInterval(() => {
          this.initialized && (clearInterval(r), e());
        }, 20);
      });
    }
  };
  function O_(t) {
    try {
      return JSON.stringify(t);
    } catch {
      return '"[Circular]"';
    }
  }
  var P_ = C_;
  function C_(t, e, r) {
    var i = r && r.stringify || O_, s = 1;
    if (typeof t == "object" && t !== null) {
      var n = e.length + s;
      if (n === 1) return t;
      var o = new Array(n);
      o[0] = i(t);
      for (var a = 1; a < n; a++)
        o[a] = i(e[a]);
      return o.join(" ");
    }
    if (typeof t != "string")
      return t;
    var c = e.length;
    if (c === 0) return t;
    for (var h = "", u = 1 - s, l = -1, f = t && t.length || 0, p = 0; p < f; ) {
      if (t.charCodeAt(p) === 37 && p + 1 < f) {
        switch (l = l > -1 ? l : 0, t.charCodeAt(p + 1)) {
          case 100:
          case 102:
            if (u >= c || e[u] == null) break;
            l < p && (h += t.slice(l, p)), h += Number(e[u]), l = p + 2, p++;
            break;
          case 105:
            if (u >= c || e[u] == null) break;
            l < p && (h += t.slice(l, p)), h += Math.floor(Number(e[u])), l = p + 2, p++;
            break;
          case 79:
          case 111:
          case 106:
            if (u >= c || e[u] === void 0) break;
            l < p && (h += t.slice(l, p));
            var d = typeof e[u];
            if (d === "string") {
              h += "'" + e[u] + "'", l = p + 2, p++;
              break;
            }
            if (d === "function") {
              h += e[u].name || "<anonymous>", l = p + 2, p++;
              break;
            }
            h += i(e[u]), l = p + 2, p++;
            break;
          case 115:
            if (u >= c)
              break;
            l < p && (h += t.slice(l, p)), h += String(e[u]), l = p + 2, p++;
            break;
          case 37:
            l < p && (h += t.slice(l, p)), h += "%", l = p + 2, p++, u--;
            break;
        }
        ++u;
      }
      ++p;
    }
    return l === -1 ? t : (l < f && (h += t.slice(l)), h);
  }
  const fu$1 = P_;
  var ui$2 = Ft$4;
  const ls$1 = M_().console || {}, T_ = {
    mapHttpRequest: qs$1,
    mapHttpResponse: qs$1,
    wrapRequestSerializer: bo$2,
    wrapResponseSerializer: bo$2,
    wrapErrorSerializer: bo$2,
    req: qs$1,
    res: qs$1,
    err: U_
  };
  function R_(t, e) {
    return Array.isArray(t) ? t.filter(function(i) {
      return i !== "!stdSerializers.err";
    }) : t === true ? Object.keys(e) : false;
  }
  function Ft$4(t) {
    t = t || {}, t.browser = t.browser || {};
    const e = t.browser.transmit;
    if (e && typeof e.send != "function")
      throw Error("pino: transmit option must have a send function");
    const r = t.browser.write || ls$1;
    t.browser.write && (t.browser.asObject = true);
    const i = t.serializers || {}, s = R_(t.browser.serialize, i);
    let n = t.browser.serialize;
    Array.isArray(t.browser.serialize) && t.browser.serialize.indexOf("!stdSerializers.err") > -1 && (n = false);
    const o = ["error", "fatal", "warn", "info", "debug", "trace"];
    typeof r == "function" && (r.error = r.fatal = r.warn = r.info = r.debug = r.trace = r), t.enabled === false && (t.level = "silent");
    const a = t.level || "info", c = Object.create(r);
    c.log || (c.log = fs$1), Object.defineProperty(c, "levelVal", {
      get: u
    }), Object.defineProperty(c, "level", {
      get: l,
      set: f
    });
    const h = {
      transmit: e,
      serialize: s,
      asObject: t.browser.asObject,
      levels: o,
      timestamp: k_(t)
    };
    c.levels = Ft$4.levels, c.level = a, c.setMaxListeners = c.getMaxListeners = c.emit = c.addListener = c.on = c.prependListener = c.once = c.prependOnceListener = c.removeListener = c.removeAllListeners = c.listeners = c.listenerCount = c.eventNames = c.write = c.flush = fs$1, c.serializers = i, c._serialize = s, c._stdErrSerialize = n, c.child = p, e && (c._logEvent = na$1());
    function u() {
      return this.level === "silent" ? 1 / 0 : this.levels.values[this.level];
    }
    function l() {
      return this._level;
    }
    function f(d) {
      if (d !== "silent" && !this.levels.values[d])
        throw Error("unknown level " + d);
      this._level = d, Yr$1(h, c, "error", "log"), Yr$1(h, c, "fatal", "error"), Yr$1(h, c, "warn", "error"), Yr$1(h, c, "info", "log"), Yr$1(h, c, "debug", "log"), Yr$1(h, c, "trace", "log");
    }
    function p(d, g) {
      if (!d)
        throw new Error("missing bindings for child Pino");
      g = g || {}, s && d.serializers && (g.serializers = d.serializers);
      const m = g.serializers;
      if (s && m) {
        var _ = Object.assign({}, i, m), I = t.browser.serialize === true ? Object.keys(_) : s;
        delete d.serializers, Fn$2([d], I, _, this._stdErrSerialize);
      }
      function E(P) {
        this._childLevel = (P._childLevel | 0) + 1, this.error = Jr$1(P, d, "error"), this.fatal = Jr$1(P, d, "fatal"), this.warn = Jr$1(P, d, "warn"), this.info = Jr$1(P, d, "info"), this.debug = Jr$1(P, d, "debug"), this.trace = Jr$1(P, d, "trace"), _ && (this.serializers = _, this._serialize = I), e && (this._logEvent = na$1(
          [].concat(P._logEvent.bindings, d)
        ));
      }
      return E.prototype = this, new E(this);
    }
    return c;
  }
  Ft$4.levels = {
    values: {
      fatal: 60,
      error: 50,
      warn: 40,
      info: 30,
      debug: 20,
      trace: 10
    },
    labels: {
      10: "trace",
      20: "debug",
      30: "info",
      40: "warn",
      50: "error",
      60: "fatal"
    }
  };
  Ft$4.stdSerializers = T_;
  Ft$4.stdTimeFunctions = Object.assign({}, { nullTime: Yd$1, epochTime: Jd$1, unixTime: L_, isoTime: j_ });
  function Yr$1(t, e, r, i) {
    const s = Object.getPrototypeOf(e);
    e[r] = e.levelVal > e.levels.values[r] ? fs$1 : s[r] ? s[r] : ls$1[r] || ls$1[i] || fs$1, B_(t, e, r);
  }
  function B_(t, e, r) {
    !t.transmit && e[r] === fs$1 || (e[r] = /* @__PURE__ */ function(i) {
      return function() {
        const n = t.timestamp(), o = new Array(arguments.length), a = Object.getPrototypeOf && Object.getPrototypeOf(this) === ls$1 ? ls$1 : this;
        for (var c = 0; c < o.length; c++) o[c] = arguments[c];
        if (t.serialize && !t.asObject && Fn$2(o, this._serialize, this.serializers, this._stdErrSerialize), t.asObject ? i.call(a, F_(this, r, o, n)) : i.apply(a, o), t.transmit) {
          const h = t.transmit.level || e.level, u = Ft$4.levels.values[h], l = Ft$4.levels.values[r];
          if (l < u) return;
          N_(this, {
            ts: n,
            methodLevel: r,
            methodValue: l,
            transmitValue: Ft$4.levels.values[t.transmit.level || e.level],
            send: t.transmit.send,
            val: e.levelVal
          }, o);
        }
      };
    }(e[r]));
  }
  function F_(t, e, r, i) {
    t._serialize && Fn$2(r, t._serialize, t.serializers, t._stdErrSerialize);
    const s = r.slice();
    let n = s[0];
    const o = {};
    i && (o.time = i), o.level = Ft$4.levels.values[e];
    let a = (t._childLevel | 0) + 1;
    if (a < 1 && (a = 1), n !== null && typeof n == "object") {
      for (; a-- && typeof s[0] == "object"; )
        Object.assign(o, s.shift());
      n = s.length ? fu$1(s.shift(), s) : void 0;
    } else typeof n == "string" && (n = fu$1(s.shift(), s));
    return n !== void 0 && (o.msg = n), o;
  }
  function Fn$2(t, e, r, i) {
    for (const s in t)
      if (i && t[s] instanceof Error)
        t[s] = Ft$4.stdSerializers.err(t[s]);
      else if (typeof t[s] == "object" && !Array.isArray(t[s]))
        for (const n in t[s])
          e && e.indexOf(n) > -1 && n in r && (t[s][n] = r[n](t[s][n]));
  }
  function Jr$1(t, e, r) {
    return function() {
      const i = new Array(1 + arguments.length);
      i[0] = e;
      for (var s = 1; s < i.length; s++)
        i[s] = arguments[s - 1];
      return t[r].apply(this, i);
    };
  }
  function N_(t, e, r) {
    const i = e.send, s = e.ts, n = e.methodLevel, o = e.methodValue, a = e.val, c = t._logEvent.bindings;
    Fn$2(
      r,
      t._serialize || Object.keys(t.serializers),
      t.serializers,
      t._stdErrSerialize === void 0 ? true : t._stdErrSerialize
    ), t._logEvent.ts = s, t._logEvent.messages = r.filter(function(h) {
      return c.indexOf(h) === -1;
    }), t._logEvent.level.label = n, t._logEvent.level.value = o, i(n, t._logEvent, a), t._logEvent = na$1(c);
  }
  function na$1(t) {
    return {
      ts: 0,
      messages: [],
      bindings: t || [],
      level: { label: "", value: 0 }
    };
  }
  function U_(t) {
    const e = {
      type: t.constructor.name,
      msg: t.message,
      stack: t.stack
    };
    for (const r in t)
      e[r] === void 0 && (e[r] = t[r]);
    return e;
  }
  function k_(t) {
    return typeof t.timestamp == "function" ? t.timestamp : t.timestamp === false ? Yd$1 : Jd$1;
  }
  function qs$1() {
    return {};
  }
  function bo$2(t) {
    return t;
  }
  function fs$1() {
  }
  function Yd$1() {
    return false;
  }
  function Jd$1() {
    return Date.now();
  }
  function L_() {
    return Math.round(Date.now() / 1e3);
  }
  function j_() {
    return new Date(Date.now()).toISOString();
  }
  function M_() {
    function t(e) {
      return typeof e < "u" && e;
    }
    try {
      return typeof globalThis < "u" || Object.defineProperty(Object.prototype, "globalThis", {
        get: function() {
          return delete Object.prototype.globalThis, this.globalThis = this;
        },
        configurable: !0
      }), globalThis;
    } catch {
      return t(self) || t(window) || t(this) || {};
    }
  }
  const _s$1 = /* @__PURE__ */ Aa$1(ui$2), q_ = { level: "info" }, Is$1 = "custom_context", oc$1 = 1e3 * 1024;
  let z_ = class {
    constructor(e) {
      this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
    }
    get value() {
      return this.nodeValue;
    }
    get size() {
      return this.sizeInBytes;
    }
  }, du$1 = class du {
    constructor(e) {
      this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;
    }
    append(e) {
      const r = new z_(e);
      if (r.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${r.size}`);
      for (; this.size + r.size > this.maxSizeInBytes; ) this.shift();
      this.head ? (this.tail && (this.tail.next = r), this.tail = r) : (this.head = r, this.tail = r), this.lengthInNodes++, this.sizeInBytes += r.size;
    }
    shift() {
      if (!this.head) return;
      const e = this.head;
      this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;
    }
    toArray() {
      const e = [];
      let r = this.head;
      for (; r !== null; ) e.push(r.value), r = r.next;
      return e;
    }
    get length() {
      return this.lengthInNodes;
    }
    get size() {
      return this.sizeInBytes;
    }
    toOrderedArray() {
      return Array.from(this);
    }
    [Symbol.iterator]() {
      let e = this.head;
      return { next: () => {
        if (!e) return { done: true, value: null };
        const r = e.value;
        return e = e.next, { done: false, value: r };
      } };
    }
  }, Zd$1 = class Zd {
    constructor(e, r = oc$1) {
      this.level = e ?? "error", this.levelValue = ui$2.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = r, this.logs = new du$1(this.MAX_LOG_SIZE_IN_BYTES);
    }
    forwardToConsole(e, r) {
      r === ui$2.levels.values.error ? console.error(e) : r === ui$2.levels.values.warn ? console.warn(e) : r === ui$2.levels.values.debug ? console.debug(e) : r === ui$2.levels.values.trace ? console.trace(e) : console.log(e);
    }
    appendToLogs(e) {
      this.logs.append(Wt$4({ timestamp: (/* @__PURE__ */ new Date()).toISOString(), log: e }));
      const r = typeof e == "string" ? JSON.parse(e).level : e.level;
      r >= this.levelValue && this.forwardToConsole(e, r);
    }
    getLogs() {
      return this.logs;
    }
    clearLogs() {
      this.logs = new du$1(this.MAX_LOG_SIZE_IN_BYTES);
    }
    getLogArray() {
      return Array.from(this.logs);
    }
    logsToBlob(e) {
      const r = this.getLogArray();
      return r.push(Wt$4({ extraMetadata: e })), new Blob(r, { type: "application/json" });
    }
  }, H_ = class {
    constructor(e, r = oc$1) {
      this.baseChunkLogger = new Zd$1(e, r);
    }
    write(e) {
      this.baseChunkLogger.appendToLogs(e);
    }
    getLogs() {
      return this.baseChunkLogger.getLogs();
    }
    clearLogs() {
      this.baseChunkLogger.clearLogs();
    }
    getLogArray() {
      return this.baseChunkLogger.getLogArray();
    }
    logsToBlob(e) {
      return this.baseChunkLogger.logsToBlob(e);
    }
    downloadLogsBlobInBrowser(e) {
      const r = URL.createObjectURL(this.logsToBlob(e)), i = document.createElement("a");
      i.href = r, i.download = `walletconnect-logs-${(/* @__PURE__ */ new Date()).toISOString()}.txt`, document.body.appendChild(i), i.click(), document.body.removeChild(i), URL.revokeObjectURL(r);
    }
  }, V_ = class {
    constructor(e, r = oc$1) {
      this.baseChunkLogger = new Zd$1(e, r);
    }
    write(e) {
      this.baseChunkLogger.appendToLogs(e);
    }
    getLogs() {
      return this.baseChunkLogger.getLogs();
    }
    clearLogs() {
      this.baseChunkLogger.clearLogs();
    }
    getLogArray() {
      return this.baseChunkLogger.getLogArray();
    }
    logsToBlob(e) {
      return this.baseChunkLogger.logsToBlob(e);
    }
  };
  var K_ = Object.defineProperty, W_ = Object.defineProperties, G_ = Object.getOwnPropertyDescriptors, pu$1 = Object.getOwnPropertySymbols, Y_ = Object.prototype.hasOwnProperty, J_ = Object.prototype.propertyIsEnumerable, gu$1 = (t, e, r) => e in t ? K_(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, mn$2 = (t, e) => {
    for (var r in e || (e = {})) Y_.call(e, r) && gu$1(t, r, e[r]);
    if (pu$1) for (var r of pu$1(e)) J_.call(e, r) && gu$1(t, r, e[r]);
    return t;
  }, bn$2 = (t, e) => W_(t, G_(e));
  function Nn$2(t) {
    return bn$2(mn$2({}, t), { level: (t == null ? void 0 : t.level) || q_.level });
  }
  function Z_(t, e = Is$1) {
    return t[e] || "";
  }
  function Q_(t, e, r = Is$1) {
    return t[r] = e, t;
  }
  function Ze$4(t, e = Is$1) {
    let r = "";
    return typeof t.bindings > "u" ? r = Z_(t, e) : r = t.bindings().context || "", r;
  }
  function X_(t, e, r = Is$1) {
    const i = Ze$4(t, r);
    return i.trim() ? `${i}/${e}` : e;
  }
  function Me$4(t, e, r = Is$1) {
    const i = X_(t, e, r), s = t.child({ context: i });
    return Q_(s, i, r);
  }
  function eI$1(t) {
    var e, r;
    const i = new H_((e = t.opts) == null ? void 0 : e.level, t.maxSizeInBytes);
    return { logger: _s$1(bn$2(mn$2({}, t.opts), { level: "trace", browser: bn$2(mn$2({}, (r = t.opts) == null ? void 0 : r.browser), { write: (s) => i.write(s) }) })), chunkLoggerController: i };
  }
  function tI$1(t) {
    var e;
    const r = new V_((e = t.opts) == null ? void 0 : e.level, t.maxSizeInBytes);
    return { logger: _s$1(bn$2(mn$2({}, t.opts), { level: "trace" }), r), chunkLoggerController: r };
  }
  function rI$1(t) {
    return typeof t.loggerOverride < "u" && typeof t.loggerOverride != "string" ? { logger: t.loggerOverride, chunkLoggerController: null } : typeof window < "u" ? eI$1(t) : tI$1(t);
  }
  var iI$1 = Object.defineProperty, sI$1 = (t, e, r) => e in t ? iI$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, yu$1 = (t, e, r) => sI$1(t, typeof e != "symbol" ? e + "" : e, r);
  let nI$1 = class nI extends kr {
    constructor(e) {
      super(), this.opts = e, yu$1(this, "protocol", "wc"), yu$1(this, "version", 2);
    }
  };
  var oI$1 = Object.defineProperty, aI$1 = (t, e, r) => e in t ? oI$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, cI$1 = (t, e, r) => aI$1(t, e + "", r);
  let hI$1 = class hI extends kr {
    constructor(e, r) {
      super(), this.core = e, this.logger = r, cI$1(this, "records", /* @__PURE__ */ new Map());
    }
  }, uI$1 = class uI {
    constructor(e, r) {
      this.logger = e, this.core = r;
    }
  };
  let lI$1 = class lI extends kr {
    constructor(e, r) {
      super(), this.relayer = e, this.logger = r;
    }
  };
  let fI$1 = class fI extends kr {
    constructor(e) {
      super();
    }
  }, dI$1 = class dI {
    constructor(e, r, i, s) {
      this.core = e, this.logger = r, this.name = i;
    }
  }, pI$1 = class pI extends kr {
    constructor(e, r) {
      super(), this.relayer = e, this.logger = r;
    }
  }, gI$1 = class gI extends kr {
    constructor(e, r) {
      super(), this.core = e, this.logger = r;
    }
  }, yI$1 = class yI {
    constructor(e, r, i) {
      this.core = e, this.logger = r, this.store = i;
    }
  }, wI$1 = class wI {
    constructor(e, r) {
      this.projectId = e, this.logger = r;
    }
  }, mI$1 = class mI {
    constructor(e, r, i) {
      this.core = e, this.logger = r, this.telemetryEnabled = i;
    }
  };
  var bI$1 = Object.defineProperty, vI$1 = (t, e, r) => e in t ? bI$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, wu$1 = (t, e, r) => vI$1(t, typeof e != "symbol" ? e + "" : e, r);
  let EI$1 = class EI {
    constructor(e) {
      this.opts = e, wu$1(this, "protocol", "wc"), wu$1(this, "version", 2);
    }
  }, _I$1 = class _I {
    constructor(e) {
      this.client = e;
    }
  };
  const II$1 = "PARSE_ERROR", xI$1 = "INVALID_REQUEST", $I$1 = "METHOD_NOT_FOUND", SI$1 = "INVALID_PARAMS", Qd$1 = "INTERNAL_ERROR", ac$1 = "SERVER_ERROR", DI$1 = [-32700, -32600, -32601, -32602, -32603], ts = {
    [II$1]: { code: -32700, message: "Parse error" },
    [xI$1]: { code: -32600, message: "Invalid Request" },
    [$I$1]: { code: -32601, message: "Method not found" },
    [SI$1]: { code: -32602, message: "Invalid params" },
    [Qd$1]: { code: -32603, message: "Internal error" },
    [ac$1]: { code: -32e3, message: "Server error" }
  }, Xd$1 = ac$1;
  function AI$1(t) {
    return DI$1.includes(t);
  }
  function mu$1(t) {
    return Object.keys(ts).includes(t) ? ts[t] : ts[Xd$1];
  }
  function OI$1(t) {
    const e = Object.values(ts).find((r) => r.code === t);
    return e || ts[Xd$1];
  }
  function ep$1(t, e, r) {
    return t.message.includes("getaddrinfo ENOTFOUND") || t.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${r} RPC url at ${e}`) : t;
  }
  var tp$1 = {};
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var oa$1 = function(t, e) {
    return oa$1 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var s in i) i.hasOwnProperty(s) && (r[s] = i[s]);
    }, oa$1(t, e);
  };
  function PI$1(t, e) {
    oa$1(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  }
  var aa = function() {
    return aa = Object.assign || function(e) {
      for (var r, i = 1, s = arguments.length; i < s; i++) {
        r = arguments[i];
        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
      }
      return e;
    }, aa.apply(this, arguments);
  };
  function CI$1(t, e) {
    var r = {};
    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
      for (var s = 0, i = Object.getOwnPropertySymbols(t); s < i.length; s++)
        e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[s]) && (r[i[s]] = t[i[s]]);
    return r;
  }
  function TI$1(t, e, r, i) {
    var s = arguments.length, n = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, r) : i, o;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") n = Reflect.decorate(t, e, r, i);
    else for (var a = t.length - 1; a >= 0; a--) (o = t[a]) && (n = (s < 3 ? o(n) : s > 3 ? o(e, r, n) : o(e, r)) || n);
    return s > 3 && n && Object.defineProperty(e, r, n), n;
  }
  function RI$1(t, e) {
    return function(r, i) {
      e(r, i, t);
    };
  }
  function BI$1(t, e) {
    if (typeof Reflect == "object" && typeof Reflect.metadata == "function") return Reflect.metadata(t, e);
  }
  function FI$1(t, e, r, i) {
    function s(n) {
      return n instanceof r ? n : new r(function(o) {
        o(n);
      });
    }
    return new (r || (r = Promise))(function(n, o) {
      function a(u) {
        try {
          h(i.next(u));
        } catch (l) {
          o(l);
        }
      }
      function c(u) {
        try {
          h(i.throw(u));
        } catch (l) {
          o(l);
        }
      }
      function h(u) {
        u.done ? n(u.value) : s(u.value).then(a, c);
      }
      h((i = i.apply(t, e || [])).next());
    });
  }
  function NI$1(t, e) {
    var r = { label: 0, sent: function() {
      if (n[0] & 1) throw n[1];
      return n[1];
    }, trys: [], ops: [] }, i, s, n, o;
    return o = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
      return this;
    }), o;
    function a(h) {
      return function(u) {
        return c([h, u]);
      };
    }
    function c(h) {
      if (i) throw new TypeError("Generator is already executing.");
      for (; r; ) try {
        if (i = 1, s && (n = h[0] & 2 ? s.return : h[0] ? s.throw || ((n = s.return) && n.call(s), 0) : s.next) && !(n = n.call(s, h[1])).done) return n;
        switch (s = 0, n && (h = [h[0] & 2, n.value]), h[0]) {
          case 0:
          case 1:
            n = h;
            break;
          case 4:
            return r.label++, { value: h[1], done: !1 };
          case 5:
            r.label++, s = h[1], h = [0];
            continue;
          case 7:
            h = r.ops.pop(), r.trys.pop();
            continue;
          default:
            if (n = r.trys, !(n = n.length > 0 && n[n.length - 1]) && (h[0] === 6 || h[0] === 2)) {
              r = 0;
              continue;
            }
            if (h[0] === 3 && (!n || h[1] > n[0] && h[1] < n[3])) {
              r.label = h[1];
              break;
            }
            if (h[0] === 6 && r.label < n[1]) {
              r.label = n[1], n = h;
              break;
            }
            if (n && r.label < n[2]) {
              r.label = n[2], r.ops.push(h);
              break;
            }
            n[2] && r.ops.pop(), r.trys.pop();
            continue;
        }
        h = e.call(t, r);
      } catch (u) {
        h = [6, u], s = 0;
      } finally {
        i = n = 0;
      }
      if (h[0] & 5) throw h[1];
      return { value: h[0] ? h[1] : void 0, done: true };
    }
  }
  function UI$1(t, e, r, i) {
    i === void 0 && (i = r), t[i] = e[r];
  }
  function kI$1(t, e) {
    for (var r in t) r !== "default" && !e.hasOwnProperty(r) && (e[r] = t[r]);
  }
  function ca$1(t) {
    var e = typeof Symbol == "function" && Symbol.iterator, r = e && t[e], i = 0;
    if (r) return r.call(t);
    if (t && typeof t.length == "number") return {
      next: function() {
        return t && i >= t.length && (t = void 0), { value: t && t[i++], done: !t };
      }
    };
    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function rp$1(t, e) {
    var r = typeof Symbol == "function" && t[Symbol.iterator];
    if (!r) return t;
    var i = r.call(t), s, n = [], o;
    try {
      for (; (e === void 0 || e-- > 0) && !(s = i.next()).done; ) n.push(s.value);
    } catch (a) {
      o = { error: a };
    } finally {
      try {
        s && !s.done && (r = i.return) && r.call(i);
      } finally {
        if (o) throw o.error;
      }
    }
    return n;
  }
  function LI$1() {
    for (var t = [], e = 0; e < arguments.length; e++)
      t = t.concat(rp$1(arguments[e]));
    return t;
  }
  function jI$1() {
    for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
    for (var i = Array(t), s = 0, e = 0; e < r; e++)
      for (var n = arguments[e], o = 0, a = n.length; o < a; o++, s++)
        i[s] = n[o];
    return i;
  }
  function ds$1(t) {
    return this instanceof ds$1 ? (this.v = t, this) : new ds$1(t);
  }
  function MI$1(t, e, r) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var i = r.apply(t, e || []), s, n = [];
    return s = {}, o("next"), o("throw"), o("return"), s[Symbol.asyncIterator] = function() {
      return this;
    }, s;
    function o(f) {
      i[f] && (s[f] = function(p) {
        return new Promise(function(d, g) {
          n.push([f, p, d, g]) > 1 || a(f, p);
        });
      });
    }
    function a(f, p) {
      try {
        c(i[f](p));
      } catch (d) {
        l(n[0][3], d);
      }
    }
    function c(f) {
      f.value instanceof ds$1 ? Promise.resolve(f.value.v).then(h, u) : l(n[0][2], f);
    }
    function h(f) {
      a("next", f);
    }
    function u(f) {
      a("throw", f);
    }
    function l(f, p) {
      f(p), n.shift(), n.length && a(n[0][0], n[0][1]);
    }
  }
  function qI$1(t) {
    var e, r;
    return e = {}, i("next"), i("throw", function(s) {
      throw s;
    }), i("return"), e[Symbol.iterator] = function() {
      return this;
    }, e;
    function i(s, n) {
      e[s] = t[s] ? function(o) {
        return (r = !r) ? { value: ds$1(t[s](o)), done: s === "return" } : n ? n(o) : o;
      } : n;
    }
  }
  function zI$1(t) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var e = t[Symbol.asyncIterator], r;
    return e ? e.call(t) : (t = typeof ca$1 == "function" ? ca$1(t) : t[Symbol.iterator](), r = {}, i("next"), i("throw"), i("return"), r[Symbol.asyncIterator] = function() {
      return this;
    }, r);
    function i(n) {
      r[n] = t[n] && function(o) {
        return new Promise(function(a, c) {
          o = t[n](o), s(a, c, o.done, o.value);
        });
      };
    }
    function s(n, o, a, c) {
      Promise.resolve(c).then(function(h) {
        n({ value: h, done: a });
      }, o);
    }
  }
  function HI$1(t, e) {
    return Object.defineProperty ? Object.defineProperty(t, "raw", { value: e }) : t.raw = e, t;
  }
  function VI(t) {
    if (t && t.__esModule) return t;
    var e = {};
    if (t != null) for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    return e.default = t, e;
  }
  function KI(t) {
    return t && t.__esModule ? t : { default: t };
  }
  function WI$1(t, e) {
    if (!e.has(t))
      throw new TypeError("attempted to get private field on non-instance");
    return e.get(t);
  }
  function GI(t, e, r) {
    if (!e.has(t))
      throw new TypeError("attempted to set private field on non-instance");
    return e.set(t, r), r;
  }
  const YI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    get __assign() {
      return aa;
    },
    __asyncDelegator: qI$1,
    __asyncGenerator: MI$1,
    __asyncValues: zI$1,
    __await: ds$1,
    __awaiter: FI$1,
    __classPrivateFieldGet: WI$1,
    __classPrivateFieldSet: GI,
    __createBinding: UI$1,
    __decorate: TI$1,
    __exportStar: kI$1,
    __extends: PI$1,
    __generator: NI$1,
    __importDefault: KI,
    __importStar: VI,
    __makeTemplateObject: HI$1,
    __metadata: BI$1,
    __param: RI$1,
    __read: rp$1,
    __rest: CI$1,
    __spread: LI$1,
    __spreadArrays: jI$1,
    __values: ca$1
  }, Symbol.toStringTag, { value: "Module" })), JI = /* @__PURE__ */ El$1(YI);
  var Mt$4 = {}, bu$1;
  function ZI() {
    if (bu$1) return Mt$4;
    bu$1 = 1, Object.defineProperty(Mt$4, "__esModule", { value: true }), Mt$4.isBrowserCryptoAvailable = Mt$4.getSubtleCrypto = Mt$4.getBrowerCrypto = void 0;
    function t() {
      return (Tt$4 == null ? void 0 : Tt$4.crypto) || (Tt$4 == null ? void 0 : Tt$4.msCrypto) || {};
    }
    Mt$4.getBrowerCrypto = t;
    function e() {
      const i = t();
      return i.subtle || i.webkitSubtle;
    }
    Mt$4.getSubtleCrypto = e;
    function r() {
      return !!t() && !!e();
    }
    return Mt$4.isBrowserCryptoAvailable = r, Mt$4;
  }
  var qt$3 = {}, vu$1;
  function QI() {
    if (vu$1) return qt$3;
    vu$1 = 1, Object.defineProperty(qt$3, "__esModule", { value: true }), qt$3.isBrowser = qt$3.isNode = qt$3.isReactNative = void 0;
    function t() {
      return typeof document > "u" && typeof navigator < "u" && navigator.product === "ReactNative";
    }
    qt$3.isReactNative = t;
    function e() {
      return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
    }
    qt$3.isNode = e;
    function r() {
      return !t() && !e();
    }
    return qt$3.isBrowser = r, qt$3;
  }
  (function(t) {
    Object.defineProperty(t, "__esModule", { value: true });
    const e = JI;
    e.__exportStar(ZI(), t), e.__exportStar(QI(), t);
  })(tp$1);
  function Pt$4(t = 3) {
    const e = Date.now() * Math.pow(10, t), r = Math.floor(Math.random() * Math.pow(10, t));
    return e + r;
  }
  function Cr$1(t = 6) {
    return BigInt(Pt$4(t));
  }
  function fr$1(t, e, r) {
    return {
      id: r || Pt$4(),
      jsonrpc: "2.0",
      method: t,
      params: e
    };
  }
  function Un$2(t, e) {
    return {
      id: t,
      jsonrpc: "2.0",
      result: e
    };
  }
  function kn$2(t, e, r) {
    return {
      id: t,
      jsonrpc: "2.0",
      error: XI(e)
    };
  }
  function XI(t, e) {
    return typeof t > "u" ? mu$1(Qd$1) : (typeof t == "string" && (t = Object.assign(Object.assign({}, mu$1(ac$1)), { message: t })), AI$1(t.code) && (t = OI$1(t.code)), t);
  }
  class ex {
  }
  class tx extends ex {
    constructor() {
      super();
    }
  }
  class rx extends tx {
    constructor(e) {
      super();
    }
  }
  const ix = "^https?:", sx = "^wss?:";
  function nx(t) {
    const e = t.match(new RegExp(/^\w+:/, "gi"));
    if (!(!e || !e.length))
      return e[0];
  }
  function ip$1(t, e) {
    const r = nx(t);
    return typeof r > "u" ? false : new RegExp(e).test(r);
  }
  function Eu$1(t) {
    return ip$1(t, ix);
  }
  function _u$1(t) {
    return ip$1(t, sx);
  }
  function ox(t) {
    return new RegExp("wss?://localhost(:d{2,5})?").test(t);
  }
  function sp$1(t) {
    return typeof t == "object" && "id" in t && "jsonrpc" in t && t.jsonrpc === "2.0";
  }
  function cc$1(t) {
    return sp$1(t) && "method" in t;
  }
  function Ln$2(t) {
    return sp$1(t) && (Ct$3(t) || ct$3(t));
  }
  function Ct$3(t) {
    return "result" in t;
  }
  function ct$3(t) {
    return "error" in t;
  }
  let pt$4 = class pt extends rx {
    constructor(e) {
      super(e), this.events = new st$3.EventEmitter(), this.hasRegisteredEventListeners = false, this.connection = this.setConnection(e), this.connection.connected && this.registerEventListeners();
    }
    async connect(e = this.connection) {
      await this.open(e);
    }
    async disconnect() {
      await this.close();
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    async request(e, r) {
      return this.requestStrict(fr$1(e.method, e.params || [], e.id || Cr$1().toString()), r);
    }
    async requestStrict(e, r) {
      return new Promise(async (i, s) => {
        if (!this.connection.connected) try {
          await this.open();
        } catch (n) {
          s(n);
        }
        this.events.on(`${e.id}`, (n) => {
          ct$3(n) ? s(n.error) : i(n.result);
        });
        try {
          await this.connection.send(e, r);
        } catch (n) {
          s(n);
        }
      });
    }
    setConnection(e = this.connection) {
      return e;
    }
    onPayload(e) {
      this.events.emit("payload", e), Ln$2(e) ? this.events.emit(`${e.id}`, e) : this.events.emit("message", { type: e.method, data: e.params });
    }
    onClose(e) {
      e && e.code === 3e3 && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${e.code} ${e.reason ? `(${e.reason})` : ""}`)), this.events.emit("disconnect");
    }
    async open(e = this.connection) {
      this.connection === e && this.connection.connected || (this.connection.connected && this.close(), typeof e == "string" && (await this.connection.open(e), e = this.connection), this.connection = this.setConnection(e), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"));
    }
    async close() {
      await this.connection.close();
    }
    registerEventListeners() {
      this.hasRegisteredEventListeners || (this.connection.on("payload", (e) => this.onPayload(e)), this.connection.on("close", (e) => this.onClose(e)), this.connection.on("error", (e) => this.events.emit("error", e)), this.connection.on("register_error", (e) => this.onClose()), this.hasRegisteredEventListeners = true);
    }
  };
  const ax = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require("ws"), cx = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u", Iu$1 = (t) => t.split("?")[0], xu$1 = 10, hx = ax();
  let ux = class {
    constructor(e) {
      if (this.url = e, this.events = new st$3.EventEmitter(), this.registering = false, !_u$1(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
      this.url = e;
    }
    get connected() {
      return typeof this.socket < "u";
    }
    get connecting() {
      return this.registering;
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    async open(e = this.url) {
      await this.register(e);
    }
    async close() {
      return new Promise((e, r) => {
        if (typeof this.socket > "u") {
          r(new Error("Connection already closed"));
          return;
        }
        this.socket.onclose = (i) => {
          this.onClose(i), e();
        }, this.socket.close();
      });
    }
    async send(e) {
      typeof this.socket > "u" && (this.socket = await this.register());
      try {
        this.socket.send(Wt$4(e));
      } catch (r) {
        this.onError(e.id, r);
      }
    }
    register(e = this.url) {
      if (!_u$1(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
      if (this.registering) {
        const r = this.events.getMaxListeners();
        return (this.events.listenerCount("register_error") >= r || this.events.listenerCount("open") >= r) && this.events.setMaxListeners(r + 1), new Promise((i, s) => {
          this.events.once("register_error", (n) => {
            this.resetMaxListeners(), s(n);
          }), this.events.once("open", () => {
            if (this.resetMaxListeners(), typeof this.socket > "u") return s(new Error("WebSocket connection is missing or invalid"));
            i(this.socket);
          });
        });
      }
      return this.url = e, this.registering = true, new Promise((r, i) => {
        const s = tp$1.isReactNative() ? void 0 : { rejectUnauthorized: !ox(e) }, n = new hx(e, [], s);
        cx() ? n.onerror = (o) => {
          const a = o;
          i(this.emitError(a.error));
        } : n.on("error", (o) => {
          i(this.emitError(o));
        }), n.onopen = () => {
          this.onOpen(n), r(n);
        };
      });
    }
    onOpen(e) {
      e.onmessage = (r) => this.onPayload(r), e.onclose = (r) => this.onClose(r), this.socket = e, this.registering = false, this.events.emit("open");
    }
    onClose(e) {
      this.socket = void 0, this.registering = false, this.events.emit("close", e);
    }
    onPayload(e) {
      if (typeof e.data > "u") return;
      const r = typeof e.data == "string" ? Br(e.data) : e.data;
      this.events.emit("payload", r);
    }
    onError(e, r) {
      const i = this.parseError(r), s = i.message || i.toString(), n = kn$2(e, s);
      this.events.emit("payload", n);
    }
    parseError(e, r = this.url) {
      return ep$1(e, Iu$1(r), "WS");
    }
    resetMaxListeners() {
      this.events.getMaxListeners() > xu$1 && this.events.setMaxListeners(xu$1);
    }
    emitError(e) {
      const r = this.parseError(new Error((e == null ? void 0 : e.message) || `WebSocket connection failed for host: ${Iu$1(this.url)}`));
      return this.events.emit("register_error", r), r;
    }
  };
  const np$1 = "wc", op$1 = 2, ha$1 = "core", Nt$3 = `${np$1}@2:${ha$1}:`, lx = { logger: "error" }, fx = { database: ":memory:" }, dx = "crypto", $u$1 = "client_ed25519_seed", px = L$3.ONE_DAY, gx = "keychain", yx = "0.3", wx = "messages", mx = "0.3", Su$1 = L$3.SIX_HOURS, bx = "publisher", ap$1 = "irn", vx = "error", cp$1 = "wss://relay.walletconnect.org", Ex = "relayer", _e$5 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" }, _x = "_subscription", nt$4 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" }, Ix = 0.1, ua$1 = "2.21.3", ue$5 = { link_mode: "link_mode", relay: "relay" }, rn$4 = { inbound: "inbound", outbound: "outbound" }, xx = "0.3", $x = "WALLETCONNECT_CLIENT_ID", Du = "WALLETCONNECT_LINK_MODE_APPS", et$3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" }, Sx = "subscription", Dx = "0.3", Ax = "pairing", Ox = "0.3", Li$2 = { wc_pairingDelete: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: L$3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: L$3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 0 } } }, $r$1 = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" }, wt$4 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" }, Px = "history", Cx = "0.3", Tx = "expirer", at$4 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" }, Rx = "0.3", Bx = "verify-api", Fx = "https://verify.walletconnect.com", hp$1 = "https://verify.walletconnect.org", rs$1 = hp$1, Nx = `${rs$1}/v3`, Ux = [Fx, hp$1], kx = "echo", Lx = "https://echo.walletconnect.com", Ot$4 = { pairing_started: "pairing_started", pairing_uri_validation_success: "pairing_uri_validation_success", pairing_uri_not_expired: "pairing_uri_not_expired", store_new_pairing: "store_new_pairing", subscribing_pairing_topic: "subscribing_pairing_topic", subscribe_pairing_topic_success: "subscribe_pairing_topic_success", existing_pairing: "existing_pairing", pairing_not_expired: "pairing_not_expired", emit_inactive_pairing: "emit_inactive_pairing", emit_session_proposal: "emit_session_proposal", subscribing_to_pairing_topic: "subscribing_to_pairing_topic" }, Ht$4 = { no_wss_connection: "no_wss_connection", no_internet_connection: "no_internet_connection", malformed_pairing_uri: "malformed_pairing_uri", active_pairing_already_exists: "active_pairing_already_exists", subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure", pairing_expired: "pairing_expired", proposal_expired: "proposal_expired", proposal_listener_not_found: "proposal_listener_not_found" }, mt$4 = { session_approve_started: "session_approve_started", proposal_not_expired: "proposal_not_expired", session_namespaces_validation_success: "session_namespaces_validation_success", create_session_topic: "create_session_topic", subscribing_session_topic: "subscribing_session_topic", subscribe_session_topic_success: "subscribe_session_topic_success", publishing_session_approve: "publishing_session_approve", session_approve_publish_success: "session_approve_publish_success", store_session: "store_session", publishing_session_settle: "publishing_session_settle", session_settle_publish_success: "session_settle_publish_success" }, vr$1 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", proposal_expired: "proposal_expired", subscribe_session_topic_failure: "subscribe_session_topic_failure", session_approve_publish_failure: "session_approve_publish_failure", session_settle_publish_failure: "session_settle_publish_failure", session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure", proposal_not_found: "proposal_not_found" }, Er$1 = { authenticated_session_approve_started: "authenticated_session_approve_started", create_authenticated_session_topic: "create_authenticated_session_topic", cacaos_verified: "cacaos_verified", store_authenticated_session: "store_authenticated_session", subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic", subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success", publishing_authenticated_session_approve: "publishing_authenticated_session_approve" }, ji$2 = { no_internet_connection: "no_internet_connection", invalid_cacao: "invalid_cacao", subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure", authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure", authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found" }, jx = 0.1, Mx = "event-client", qx = 86400, zx = "https://pulse.walletconnect.org/batch";
  function Hx(t, e) {
    if (t.length >= 255) throw new TypeError("Alphabet too long");
    for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
    for (var s = 0; s < t.length; s++) {
      var n = t.charAt(s), o = n.charCodeAt(0);
      if (r[o] !== 255) throw new TypeError(n + " is ambiguous");
      r[o] = s;
    }
    var a = t.length, c = t.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
    function l(d) {
      if (d instanceof Uint8Array || (ArrayBuffer.isView(d) ? d = new Uint8Array(d.buffer, d.byteOffset, d.byteLength) : Array.isArray(d) && (d = Uint8Array.from(d))), !(d instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
      if (d.length === 0) return "";
      for (var g = 0, m = 0, _ = 0, I = d.length; _ !== I && d[_] === 0; ) _++, g++;
      for (var E = (I - _) * u + 1 >>> 0, P = new Uint8Array(E); _ !== I; ) {
        for (var A = d[_], k = 0, U = E - 1; (A !== 0 || k < m) && U !== -1; U--, k++) A += 256 * P[U] >>> 0, P[U] = A % a >>> 0, A = A / a >>> 0;
        if (A !== 0) throw new Error("Non-zero carry");
        m = k, _++;
      }
      for (var R = E - m; R !== E && P[R] === 0; ) R++;
      for (var b = c.repeat(g); R < E; ++R) b += t.charAt(P[R]);
      return b;
    }
    function f(d) {
      if (typeof d != "string") throw new TypeError("Expected String");
      if (d.length === 0) return new Uint8Array();
      var g = 0;
      if (d[g] !== " ") {
        for (var m = 0, _ = 0; d[g] === c; ) m++, g++;
        for (var I = (d.length - g) * h + 1 >>> 0, E = new Uint8Array(I); d[g]; ) {
          var P = r[d.charCodeAt(g)];
          if (P === 255) return;
          for (var A = 0, k = I - 1; (P !== 0 || A < _) && k !== -1; k--, A++) P += a * E[k] >>> 0, E[k] = P % 256 >>> 0, P = P / 256 >>> 0;
          if (P !== 0) throw new Error("Non-zero carry");
          _ = A, g++;
        }
        if (d[g] !== " ") {
          for (var U = I - _; U !== I && E[U] === 0; ) U++;
          for (var R = new Uint8Array(m + (I - U)), b = m; U !== I; ) R[b++] = E[U++];
          return R;
        }
      }
    }
    function p(d) {
      var g = f(d);
      if (g) return g;
      throw new Error(`Non-${e} character`);
    }
    return { encode: l, decodeUnsafe: f, decode: p };
  }
  var Vx = Hx, Kx = Vx;
  const up$1 = (t) => {
    if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
    if (t instanceof ArrayBuffer) return new Uint8Array(t);
    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
    throw new Error("Unknown type, must be binary type");
  }, Wx = (t) => new TextEncoder().encode(t), Gx = (t) => new TextDecoder().decode(t);
  class Yx {
    constructor(e, r, i) {
      this.name = e, this.prefix = r, this.baseEncode = i;
    }
    encode(e) {
      if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
      throw Error("Unknown type, must be binary type");
    }
  }
  class Jx {
    constructor(e, r, i) {
      if (this.name = e, this.prefix = r, r.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
      this.prefixCodePoint = r.codePointAt(0), this.baseDecode = i;
    }
    decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
        return this.baseDecode(e.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
    or(e) {
      return lp$1(this, e);
    }
  }
  class Zx {
    constructor(e) {
      this.decoders = e;
    }
    or(e) {
      return lp$1(this, e);
    }
    decode(e) {
      const r = e[0], i = this.decoders[r];
      if (i) return i.decode(e);
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
  const lp$1 = (t, e) => new Zx({ ...t.decoders || { [t.prefix]: t }, ...e.decoders || { [e.prefix]: e } });
  class Qx {
    constructor(e, r, i, s) {
      this.name = e, this.prefix = r, this.baseEncode = i, this.baseDecode = s, this.encoder = new Yx(e, r, i), this.decoder = new Jx(e, r, s);
    }
    encode(e) {
      return this.encoder.encode(e);
    }
    decode(e) {
      return this.decoder.decode(e);
    }
  }
  const jn$2 = ({ name: t, prefix: e, encode: r, decode: i }) => new Qx(t, e, r, i), xs$1 = ({ prefix: t, name: e, alphabet: r }) => {
    const { encode: i, decode: s } = Kx(r, e);
    return jn$2({ prefix: t, name: e, encode: i, decode: (n) => up$1(s(n)) });
  }, Xx = (t, e, r, i) => {
    const s = {};
    for (let u = 0; u < e.length; ++u) s[e[u]] = u;
    let n = t.length;
    for (; t[n - 1] === "="; ) --n;
    const o = new Uint8Array(n * r / 8 | 0);
    let a = 0, c = 0, h = 0;
    for (let u = 0; u < n; ++u) {
      const l = s[t[u]];
      if (l === void 0) throw new SyntaxError(`Non-${i} character`);
      c = c << r | l, a += r, a >= 8 && (a -= 8, o[h++] = 255 & c >> a);
    }
    if (a >= r || 255 & c << 8 - a) throw new SyntaxError("Unexpected end of data");
    return o;
  }, e8 = (t, e, r) => {
    const i = e[e.length - 1] === "=", s = (1 << r) - 1;
    let n = "", o = 0, a = 0;
    for (let c = 0; c < t.length; ++c) for (a = a << 8 | t[c], o += 8; o > r; ) o -= r, n += e[s & a >> o];
    if (o && (n += e[s & a << r - o]), i) for (; n.length * r & 7; ) n += "=";
    return n;
  }, Te$4 = ({ name: t, prefix: e, bitsPerChar: r, alphabet: i }) => jn$2({ prefix: e, name: t, encode(s) {
    return e8(s, i, r);
  }, decode(s) {
    return Xx(s, i, r, t);
  } }), t8 = jn$2({ prefix: "\0", name: "identity", encode: (t) => Gx(t), decode: (t) => Wx(t) });
  var r8 = Object.freeze({ __proto__: null, identity: t8 });
  const i8 = Te$4({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
  var s8 = Object.freeze({ __proto__: null, base2: i8 });
  const n8 = Te$4({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
  var o8 = Object.freeze({ __proto__: null, base8: n8 });
  const a8 = xs$1({ prefix: "9", name: "base10", alphabet: "0123456789" });
  var c8 = Object.freeze({ __proto__: null, base10: a8 });
  const h8 = Te$4({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 }), u8 = Te$4({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
  var l8 = Object.freeze({ __proto__: null, base16: h8, base16upper: u8 });
  const f8 = Te$4({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 }), d8 = Te$4({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 }), p8 = Te$4({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 }), g8 = Te$4({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 }), y8 = Te$4({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 }), w8 = Te$4({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 }), m8 = Te$4({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 }), b8 = Te$4({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 }), v8 = Te$4({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
  var E8 = Object.freeze({ __proto__: null, base32: f8, base32upper: d8, base32pad: p8, base32padupper: g8, base32hex: y8, base32hexupper: w8, base32hexpad: m8, base32hexpadupper: b8, base32z: v8 });
  const _8 = xs$1({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" }), I8 = xs$1({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
  var x8 = Object.freeze({ __proto__: null, base36: _8, base36upper: I8 });
  const $8 = xs$1({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" }), S8 = xs$1({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
  var D8 = Object.freeze({ __proto__: null, base58btc: $8, base58flickr: S8 });
  const A8 = Te$4({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 }), O8 = Te$4({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 }), P8 = Te$4({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 }), C8 = Te$4({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
  var T8 = Object.freeze({ __proto__: null, base64: A8, base64pad: O8, base64url: P8, base64urlpad: C8 });
  const fp$1 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), R8 = fp$1.reduce((t, e, r) => (t[r] = e, t), []), B8 = fp$1.reduce((t, e, r) => (t[e.codePointAt(0)] = r, t), []);
  function F8(t) {
    return t.reduce((e, r) => (e += R8[r], e), "");
  }
  function N8(t) {
    const e = [];
    for (const r of t) {
      const i = B8[r.codePointAt(0)];
      if (i === void 0) throw new Error(`Non-base256emoji character: ${r}`);
      e.push(i);
    }
    return new Uint8Array(e);
  }
  const U8 = jn$2({ prefix: "🚀", name: "base256emoji", encode: F8, decode: N8 });
  var k8 = Object.freeze({ __proto__: null, base256emoji: U8 }), L8 = dp$1, Au$1 = 128, j8 = -128, M8 = Math.pow(2, 31);
  function dp$1(t, e, r) {
    e = e || [], r = r || 0;
    for (var i = r; t >= M8; ) e[r++] = t & 255 | Au$1, t /= 128;
    for (; t & j8; ) e[r++] = t & 255 | Au$1, t >>>= 7;
    return e[r] = t | 0, dp$1.bytes = r - i + 1, e;
  }
  var q8 = la$1, z8 = 128, Ou$1 = 127;
  function la$1(t, i) {
    var r = 0, i = i || 0, s = 0, n = i, o, a = t.length;
    do {
      if (n >= a) throw la$1.bytes = 0, new RangeError("Could not decode varint");
      o = t[n++], r += s < 28 ? (o & Ou$1) << s : (o & Ou$1) * Math.pow(2, s), s += 7;
    } while (o >= z8);
    return la$1.bytes = n - i, r;
  }
  var H8 = Math.pow(2, 7), V8 = Math.pow(2, 14), K8 = Math.pow(2, 21), W8 = Math.pow(2, 28), G8 = Math.pow(2, 35), Y8 = Math.pow(2, 42), J8 = Math.pow(2, 49), Z8 = Math.pow(2, 56), Q8 = Math.pow(2, 63), X8 = function(t) {
    return t < H8 ? 1 : t < V8 ? 2 : t < K8 ? 3 : t < W8 ? 4 : t < G8 ? 5 : t < Y8 ? 6 : t < J8 ? 7 : t < Z8 ? 8 : t < Q8 ? 9 : 10;
  }, e$ = { encode: L8, decode: q8, encodingLength: X8 }, pp$1 = e$;
  const Pu$1 = (t, e, r = 0) => (pp$1.encode(t, e, r), e), Cu$1 = (t) => pp$1.encodingLength(t), fa$1 = (t, e) => {
    const r = e.byteLength, i = Cu$1(t), s = i + Cu$1(r), n = new Uint8Array(s + r);
    return Pu$1(t, n, 0), Pu$1(r, n, i), n.set(e, s), new t$(t, r, e, n);
  };
  class t$ {
    constructor(e, r, i, s) {
      this.code = e, this.size = r, this.digest = i, this.bytes = s;
    }
  }
  const gp$1 = ({ name: t, code: e, encode: r }) => new r$(t, e, r);
  class r$ {
    constructor(e, r, i) {
      this.name = e, this.code = r, this.encode = i;
    }
    digest(e) {
      if (e instanceof Uint8Array) {
        const r = this.encode(e);
        return r instanceof Uint8Array ? fa$1(this.code, r) : r.then((i) => fa$1(this.code, i));
      } else throw Error("Unknown type, must be binary type");
    }
  }
  const yp$1 = (t) => async (e) => new Uint8Array(await crypto.subtle.digest(t, e)), i$ = gp$1({ name: "sha2-256", code: 18, encode: yp$1("SHA-256") }), s$ = gp$1({ name: "sha2-512", code: 19, encode: yp$1("SHA-512") });
  var n$ = Object.freeze({ __proto__: null, sha256: i$, sha512: s$ });
  const wp$1 = 0, o$ = "identity", mp$1 = up$1, a$ = (t) => fa$1(wp$1, mp$1(t)), c$ = { code: wp$1, name: o$, encode: mp$1, digest: a$ };
  var h$ = Object.freeze({ __proto__: null, identity: c$ });
  new TextEncoder(), new TextDecoder();
  const Tu$1 = { ...r8, ...s8, ...o8, ...c8, ...l8, ...E8, ...x8, ...D8, ...T8, ...k8 };
  ({ ...n$, ...h$ });
  function bp$1(t) {
    return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
  }
  function u$(t = 0) {
    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? bp$1(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
  }
  function vp$1(t, e, r, i) {
    return { name: t, prefix: e, encoder: { name: t, prefix: e, encode: r }, decoder: { decode: i } };
  }
  const Ru$1 = vp$1("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1))), vo$2 = vp$1("ascii", "a", (t) => {
    let e = "a";
    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
    return e;
  }, (t) => {
    t = t.substring(1);
    const e = u$(t.length);
    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
    return e;
  }), l$ = { utf8: Ru$1, "utf-8": Ru$1, hex: Tu$1.base16, latin1: vo$2, ascii: vo$2, binary: vo$2, ...Tu$1 };
  function f$(t, e = "utf8") {
    const r = l$[e];
    if (!r) throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? bp$1(globalThis.Buffer.from(t, "utf-8")) : r.decoder.decode(`${r.prefix}${t}`);
  }
  var d$ = Object.defineProperty, p$ = (t, e, r) => e in t ? d$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Dt$4 = (t, e, r) => p$(t, typeof e != "symbol" ? e + "" : e, r);
  class g$ {
    constructor(e, r) {
      this.core = e, this.logger = r, Dt$4(this, "keychain", /* @__PURE__ */ new Map()), Dt$4(this, "name", gx), Dt$4(this, "version", yx), Dt$4(this, "initialized", false), Dt$4(this, "storagePrefix", Nt$3), Dt$4(this, "init", async () => {
        if (!this.initialized) {
          const i = await this.getKeyChain();
          typeof i < "u" && (this.keychain = i), this.initialized = true;
        }
      }), Dt$4(this, "has", (i) => (this.isInitialized(), this.keychain.has(i))), Dt$4(this, "set", async (i, s) => {
        this.isInitialized(), this.keychain.set(i, s), await this.persist();
      }), Dt$4(this, "get", (i) => {
        this.isInitialized();
        const s = this.keychain.get(i);
        if (typeof s > "u") {
          const { message: n } = j$2("NO_MATCHING_KEY", `${this.name}: ${i}`);
          throw new Error(n);
        }
        return s;
      }), Dt$4(this, "del", async (i) => {
        this.isInitialized(), this.keychain.delete(i), await this.persist();
      }), this.core = e, this.logger = Me$4(r, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    async setKeyChain(e) {
      await this.core.storage.setItem(this.storageKey, Vo$1(e));
    }
    async getKeyChain() {
      const e = await this.core.storage.getItem(this.storageKey);
      return typeof e < "u" ? Ko$1(e) : void 0;
    }
    async persist() {
      await this.setKeyChain(this.keychain);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var y$ = Object.defineProperty, w$ = (t, e, r) => e in t ? y$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, De$5 = (t, e, r) => w$(t, typeof e != "symbol" ? e + "" : e, r);
  class m$ {
    constructor(e, r, i) {
      this.core = e, this.logger = r, De$5(this, "name", dx), De$5(this, "keychain"), De$5(this, "randomSessionIdentifier", ra$1()), De$5(this, "initialized", false), De$5(this, "init", async () => {
        this.initialized || (await this.keychain.init(), this.initialized = true);
      }), De$5(this, "hasKeys", (s) => (this.isInitialized(), this.keychain.has(s))), De$5(this, "getClientId", async () => {
        this.isInitialized();
        const s = await this.getClientSeed(), n = ch$1(s);
        return Cf$1(n.publicKey);
      }), De$5(this, "generateKeyPair", () => {
        this.isInitialized();
        const s = NE$1();
        return this.setPrivateKey(s.publicKey, s.privateKey);
      }), De$5(this, "signJWT", async (s) => {
        this.isInitialized();
        const n = await this.getClientSeed(), o = ch$1(n), a = this.randomSessionIdentifier;
        return await xb$1(a, s, px, o);
      }), De$5(this, "generateSharedKey", (s, n, o) => {
        this.isInitialized();
        const a = this.getPrivateKey(s), c = UE$1(a, n);
        return this.setSymKey(c, o);
      }), De$5(this, "setSymKey", async (s, n) => {
        this.isInitialized();
        const o = n || Xs$1(s);
        return await this.keychain.set(o, s), o;
      }), De$5(this, "deleteKeyPair", async (s) => {
        this.isInitialized(), await this.keychain.del(s);
      }), De$5(this, "deleteSymKey", async (s) => {
        this.isInitialized(), await this.keychain.del(s);
      }), De$5(this, "encode", async (s, n, o) => {
        this.isInitialized();
        const a = Hd$1(o), c = Wt$4(n);
        if (Yh(a)) return jE$1(c, o == null ? void 0 : o.encoding);
        if (Gh(a)) {
          const f = a.senderPublicKey, p = a.receiverPublicKey;
          s = await this.generateSharedKey(f, p);
        }
        const h = this.getSymKey(s), { type: u, senderPublicKey: l } = a;
        return kE$1({ type: u, symKey: h, message: c, senderPublicKey: l, encoding: o == null ? void 0 : o.encoding });
      }), De$5(this, "decode", async (s, n, o) => {
        this.isInitialized();
        const a = qE$1(n, o);
        if (Yh(a)) {
          const c = ME$1(n, o == null ? void 0 : o.encoding);
          return Br(c);
        }
        if (Gh(a)) {
          const c = a.receiverPublicKey, h = a.senderPublicKey;
          s = await this.generateSharedKey(c, h);
        }
        try {
          const c = this.getSymKey(s), h = LE$1({ symKey: c, encoded: n, encoding: o == null ? void 0 : o.encoding });
          return Br(h);
        } catch (c) {
          this.logger.error(`Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`), this.logger.error(c);
        }
      }), De$5(this, "getPayloadType", (s, n = _t$4) => {
        const o = us$1({ encoded: s, encoding: n });
        return Nr$1(o.type);
      }), De$5(this, "getPayloadSenderPublicKey", (s, n = _t$4) => {
        const o = us$1({ encoded: s, encoding: n });
        return o.senderPublicKey ? Je$4(o.senderPublicKey, je$5) : void 0;
      }), this.core = e, this.logger = Me$4(r, this.name), this.keychain = i || new g$(this.core, this.logger);
    }
    get context() {
      return Ze$4(this.logger);
    }
    async setPrivateKey(e, r) {
      return await this.keychain.set(e, r), e;
    }
    getPrivateKey(e) {
      return this.keychain.get(e);
    }
    async getClientSeed() {
      let e = "";
      try {
        e = this.keychain.get($u$1);
      } catch {
        e = ra$1(), await this.keychain.set($u$1, e);
      }
      return f$(e, "base16");
    }
    getSymKey(e) {
      return this.keychain.get(e);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var b$ = Object.defineProperty, v$ = Object.defineProperties, E$ = Object.getOwnPropertyDescriptors, Bu = Object.getOwnPropertySymbols, _$ = Object.prototype.hasOwnProperty, I$ = Object.prototype.propertyIsEnumerable, da$1 = (t, e, r) => e in t ? b$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, x$ = (t, e) => {
    for (var r in e || (e = {})) _$.call(e, r) && da$1(t, r, e[r]);
    if (Bu) for (var r of Bu(e)) I$.call(e, r) && da$1(t, r, e[r]);
    return t;
  }, $$ = (t, e) => v$(t, E$(e)), Qe$3 = (t, e, r) => da$1(t, typeof e != "symbol" ? e + "" : e, r);
  class S$ extends uI$1 {
    constructor(e, r) {
      super(e, r), this.logger = e, this.core = r, Qe$3(this, "messages", /* @__PURE__ */ new Map()), Qe$3(this, "messagesWithoutClientAck", /* @__PURE__ */ new Map()), Qe$3(this, "name", wx), Qe$3(this, "version", mx), Qe$3(this, "initialized", false), Qe$3(this, "storagePrefix", Nt$3), Qe$3(this, "init", async () => {
        if (!this.initialized) {
          this.logger.trace("Initialized");
          try {
            const i = await this.getRelayerMessages();
            typeof i < "u" && (this.messages = i);
            const s = await this.getRelayerMessagesWithoutClientAck();
            typeof s < "u" && (this.messagesWithoutClientAck = s), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
          } catch (i) {
            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i);
          } finally {
            this.initialized = true;
          }
        }
      }), Qe$3(this, "set", async (i, s, n) => {
        this.isInitialized();
        const o = Rt$4(s);
        let a = this.messages.get(i);
        if (typeof a > "u" && (a = {}), typeof a[o] < "u") return o;
        if (a[o] = s, this.messages.set(i, a), n === rn$4.inbound) {
          const c = this.messagesWithoutClientAck.get(i) || {};
          this.messagesWithoutClientAck.set(i, $$(x$({}, c), { [o]: s }));
        }
        return await this.persist(), o;
      }), Qe$3(this, "get", (i) => {
        this.isInitialized();
        let s = this.messages.get(i);
        return typeof s > "u" && (s = {}), s;
      }), Qe$3(this, "getWithoutAck", (i) => {
        this.isInitialized();
        const s = {};
        for (const n of i) {
          const o = this.messagesWithoutClientAck.get(n) || {};
          s[n] = Object.values(o);
        }
        return s;
      }), Qe$3(this, "has", (i, s) => {
        this.isInitialized();
        const n = this.get(i), o = Rt$4(s);
        return typeof n[o] < "u";
      }), Qe$3(this, "ack", async (i, s) => {
        this.isInitialized();
        const n = this.messagesWithoutClientAck.get(i);
        if (typeof n > "u") return;
        const o = Rt$4(s);
        delete n[o], Object.keys(n).length === 0 ? this.messagesWithoutClientAck.delete(i) : this.messagesWithoutClientAck.set(i, n), await this.persist();
      }), Qe$3(this, "del", async (i) => {
        this.isInitialized(), this.messages.delete(i), this.messagesWithoutClientAck.delete(i), await this.persist();
      }), this.logger = Me$4(e, this.name), this.core = r;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get storageKeyWithoutClientAck() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name + "_withoutClientAck";
    }
    async setRelayerMessages(e) {
      await this.core.storage.setItem(this.storageKey, Vo$1(e));
    }
    async setRelayerMessagesWithoutClientAck(e) {
      await this.core.storage.setItem(this.storageKeyWithoutClientAck, Vo$1(e));
    }
    async getRelayerMessages() {
      const e = await this.core.storage.getItem(this.storageKey);
      return typeof e < "u" ? Ko$1(e) : void 0;
    }
    async getRelayerMessagesWithoutClientAck() {
      const e = await this.core.storage.getItem(this.storageKeyWithoutClientAck);
      return typeof e < "u" ? Ko$1(e) : void 0;
    }
    async persist() {
      await this.setRelayerMessages(this.messages), await this.setRelayerMessagesWithoutClientAck(this.messagesWithoutClientAck);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var D$ = Object.defineProperty, A$ = Object.defineProperties, O$ = Object.getOwnPropertyDescriptors, Fu$1 = Object.getOwnPropertySymbols, P$ = Object.prototype.hasOwnProperty, C$ = Object.prototype.propertyIsEnumerable, pa$1 = (t, e, r) => e in t ? D$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, zs = (t, e) => {
    for (var r in e || (e = {})) P$.call(e, r) && pa$1(t, r, e[r]);
    if (Fu$1) for (var r of Fu$1(e)) C$.call(e, r) && pa$1(t, r, e[r]);
    return t;
  }, Eo$2 = (t, e) => A$(t, O$(e)), bt$4 = (t, e, r) => pa$1(t, typeof e != "symbol" ? e + "" : e, r);
  class T$ extends lI$1 {
    constructor(e, r) {
      super(e, r), this.relayer = e, this.logger = r, bt$4(this, "events", new st$3.EventEmitter()), bt$4(this, "name", bx), bt$4(this, "queue", /* @__PURE__ */ new Map()), bt$4(this, "publishTimeout", L$3.toMiliseconds(L$3.ONE_MINUTE)), bt$4(this, "initialPublishTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), bt$4(this, "needsTransportRestart", false), bt$4(this, "publish", async (i, s, n) => {
        var o;
        this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i, message: s, opts: n } });
        const a = (n == null ? void 0 : n.ttl) || Su$1, c = yn$2(n), h = (n == null ? void 0 : n.prompt) || false, u = (n == null ? void 0 : n.tag) || 0, l = (n == null ? void 0 : n.id) || Cr$1().toString(), f = { topic: i, message: s, opts: { ttl: a, relay: c, prompt: h, tag: u, id: l, attestation: n == null ? void 0 : n.attestation, tvf: n == null ? void 0 : n.tvf } }, p = `Failed to publish payload, please try again. id:${l} tag:${u}`;
        try {
          const d = new Promise(async (g) => {
            const m = ({ id: I }) => {
              f.opts.id === I && (this.removeRequestFromQueue(I), this.relayer.events.removeListener(_e$5.publish, m), g(f));
            };
            this.relayer.events.on(_e$5.publish, m);
            const _ = lr$1(new Promise((I, E) => {
              this.rpcPublish({ topic: i, message: s, ttl: a, prompt: h, tag: u, id: l, attestation: n == null ? void 0 : n.attestation, tvf: n == null ? void 0 : n.tvf }).then(I).catch((P) => {
                this.logger.warn(P, P == null ? void 0 : P.message), E(P);
              });
            }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${l} tag:${u}`);
            try {
              await _, this.events.removeListener(_e$5.publish, m);
            } catch (I) {
              this.queue.set(l, Eo$2(zs({}, f), { attempt: 1 })), this.logger.warn(I, I == null ? void 0 : I.message);
            }
          });
          this.logger.trace({ type: "method", method: "publish", params: { id: l, topic: i, message: s, opts: n } }), await lr$1(d, this.publishTimeout, p);
        } catch (d) {
          if (this.logger.debug("Failed to Publish Payload"), this.logger.error(d), (o = n == null ? void 0 : n.internal) != null && o.throwOnFailedPublish) throw d;
        } finally {
          this.queue.delete(l);
        }
      }), bt$4(this, "on", (i, s) => {
        this.events.on(i, s);
      }), bt$4(this, "once", (i, s) => {
        this.events.once(i, s);
      }), bt$4(this, "off", (i, s) => {
        this.events.off(i, s);
      }), bt$4(this, "removeListener", (i, s) => {
        this.events.removeListener(i, s);
      }), this.relayer = e, this.logger = Me$4(r, this.name), this.registerEventListeners();
    }
    get context() {
      return Ze$4(this.logger);
    }
    async rpcPublish(e) {
      var r, i, s, n;
      const { topic: o, message: a, ttl: c = Su$1, prompt: h, tag: u, id: l, attestation: f, tvf: p } = e, d = { method: Wi$2(yn$2().protocol).publish, params: zs({ topic: o, message: a, ttl: c, prompt: h, tag: u, attestation: f }, p), id: l };
      Oe$4((r = d.params) == null ? void 0 : r.prompt) && ((i = d.params) == null || delete i.prompt), Oe$4((s = d.params) == null ? void 0 : s.tag) && ((n = d.params) == null || delete n.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: d });
      const g = await this.relayer.request(d);
      return this.relayer.events.emit(_e$5.publish, e), this.logger.debug("Successfully Published Payload"), g;
    }
    removeRequestFromQueue(e) {
      this.queue.delete(e);
    }
    checkQueue() {
      this.queue.forEach(async (e, r) => {
        const i = e.attempt + 1;
        this.queue.set(r, Eo$2(zs({}, e), { attempt: i }));
        const { topic: s, message: n, opts: o, attestation: a } = e;
        this.logger.warn({}, `Publisher: queue->publishing: ${e.opts.id}, tag: ${e.opts.tag}, attempt: ${i}`), await this.rpcPublish(Eo$2(zs({}, e), { topic: s, message: n, ttl: o.ttl, prompt: o.prompt, tag: o.tag, id: o.id, attestation: a, tvf: o.tvf })), this.logger.warn({}, `Publisher: queue->published: ${e.opts.id}`);
      });
    }
    registerEventListeners() {
      this.relayer.core.heartbeat.on(Lr$1.pulse, () => {
        if (this.needsTransportRestart) {
          this.needsTransportRestart = false, this.relayer.events.emit(_e$5.connection_stalled);
          return;
        }
        this.checkQueue();
      }), this.relayer.on(_e$5.message_ack, (e) => {
        this.removeRequestFromQueue(e.id.toString());
      });
    }
  }
  var R$ = Object.defineProperty, B$ = (t, e, r) => e in t ? R$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Zr$1 = (t, e, r) => B$(t, typeof e != "symbol" ? e + "" : e, r);
  class F$ {
    constructor() {
      Zr$1(this, "map", /* @__PURE__ */ new Map()), Zr$1(this, "set", (e, r) => {
        const i = this.get(e);
        this.exists(e, r) || this.map.set(e, [...i, r]);
      }), Zr$1(this, "get", (e) => this.map.get(e) || []), Zr$1(this, "exists", (e, r) => this.get(e).includes(r)), Zr$1(this, "delete", (e, r) => {
        if (typeof r > "u") {
          this.map.delete(e);
          return;
        }
        if (!this.map.has(e)) return;
        const i = this.get(e);
        if (!this.exists(e, r)) return;
        const s = i.filter((n) => n !== r);
        if (!s.length) {
          this.map.delete(e);
          return;
        }
        this.map.set(e, s);
      }), Zr$1(this, "clear", () => {
        this.map.clear();
      });
    }
    get topics() {
      return Array.from(this.map.keys());
    }
  }
  var N$ = Object.defineProperty, U$ = Object.defineProperties, k$ = Object.getOwnPropertyDescriptors, Nu$1 = Object.getOwnPropertySymbols, L$ = Object.prototype.hasOwnProperty, j$ = Object.prototype.propertyIsEnumerable, ga$1 = (t, e, r) => e in t ? N$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Mi$2 = (t, e) => {
    for (var r in e || (e = {})) L$.call(e, r) && ga$1(t, r, e[r]);
    if (Nu$1) for (var r of Nu$1(e)) j$.call(e, r) && ga$1(t, r, e[r]);
    return t;
  }, _o$2 = (t, e) => U$(t, k$(e)), oe$4 = (t, e, r) => ga$1(t, typeof e != "symbol" ? e + "" : e, r);
  class M$ extends pI$1 {
    constructor(e, r) {
      super(e, r), this.relayer = e, this.logger = r, oe$4(this, "subscriptions", /* @__PURE__ */ new Map()), oe$4(this, "topicMap", new F$()), oe$4(this, "events", new st$3.EventEmitter()), oe$4(this, "name", Sx), oe$4(this, "version", Dx), oe$4(this, "pending", /* @__PURE__ */ new Map()), oe$4(this, "cached", []), oe$4(this, "initialized", false), oe$4(this, "storagePrefix", Nt$3), oe$4(this, "subscribeTimeout", L$3.toMiliseconds(L$3.ONE_MINUTE)), oe$4(this, "initialSubscribeTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), oe$4(this, "clientId"), oe$4(this, "batchSubscribeTopicsLimit", 500), oe$4(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), await this.restore()), this.initialized = true;
      }), oe$4(this, "subscribe", async (i, s) => {
        this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i, opts: s } });
        try {
          const n = yn$2(s), o = { topic: i, relay: n, transportType: s == null ? void 0 : s.transportType };
          this.pending.set(i, o);
          const a = await this.rpcSubscribe(i, n, s);
          return typeof a == "string" && (this.onSubscribe(a, o), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i, opts: s } })), a;
        } catch (n) {
          throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n), n;
        }
      }), oe$4(this, "unsubscribe", async (i, s) => {
        this.isInitialized(), typeof (s == null ? void 0 : s.id) < "u" ? await this.unsubscribeById(i, s.id, s) : await this.unsubscribeByTopic(i, s);
      }), oe$4(this, "isSubscribed", (i) => new Promise((s) => {
        s(this.topicMap.topics.includes(i));
      })), oe$4(this, "isKnownTopic", (i) => new Promise((s) => {
        s(this.topicMap.topics.includes(i) || this.pending.has(i) || this.cached.some((n) => n.topic === i));
      })), oe$4(this, "on", (i, s) => {
        this.events.on(i, s);
      }), oe$4(this, "once", (i, s) => {
        this.events.once(i, s);
      }), oe$4(this, "off", (i, s) => {
        this.events.off(i, s);
      }), oe$4(this, "removeListener", (i, s) => {
        this.events.removeListener(i, s);
      }), oe$4(this, "start", async () => {
        await this.onConnect();
      }), oe$4(this, "stop", async () => {
        await this.onDisconnect();
      }), oe$4(this, "restart", async () => {
        await this.restore(), await this.onRestart();
      }), oe$4(this, "checkPending", async () => {
        if (this.pending.size === 0 && (!this.initialized || !this.relayer.connected)) return;
        const i = [];
        this.pending.forEach((s) => {
          i.push(s);
        }), await this.batchSubscribe(i);
      }), oe$4(this, "registerEventListeners", () => {
        this.relayer.core.heartbeat.on(Lr$1.pulse, async () => {
          await this.checkPending();
        }), this.events.on(et$3.created, async (i) => {
          const s = et$3.created;
          this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, data: i }), await this.persist();
        }), this.events.on(et$3.deleted, async (i) => {
          const s = et$3.deleted;
          this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, data: i }), await this.persist();
        });
      }), this.relayer = e, this.logger = Me$4(r, this.name), this.clientId = "";
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.subscriptions.size;
    }
    get ids() {
      return Array.from(this.subscriptions.keys());
    }
    get values() {
      return Array.from(this.subscriptions.values());
    }
    get topics() {
      return this.topicMap.topics;
    }
    get hasAnyTopics() {
      return this.topicMap.topics.length > 0 || this.pending.size > 0 || this.cached.length > 0 || this.subscriptions.size > 0;
    }
    hasSubscription(e, r) {
      let i = false;
      try {
        i = this.getSubscription(e).topic === r;
      } catch {
      }
      return i;
    }
    reset() {
      this.cached = [], this.initialized = true;
    }
    onDisable() {
      this.values.length > 0 && (this.cached = this.values), this.subscriptions.clear(), this.topicMap.clear();
    }
    async unsubscribeByTopic(e, r) {
      const i = this.topicMap.get(e);
      await Promise.all(i.map(async (s) => await this.unsubscribeById(e, s, r)));
    }
    async unsubscribeById(e, r, i) {
      this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: r, opts: i } });
      try {
        const s = yn$2(i);
        await this.restartToComplete({ topic: e, id: r, relay: s }), await this.rpcUnsubscribe(e, r, s);
        const n = le$4("USER_DISCONNECTED", `${this.name}, ${e}`);
        await this.onUnsubscribe(e, r, n), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: r, opts: i } });
      } catch (s) {
        throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s), s;
      }
    }
    async rpcSubscribe(e, r, i) {
      var s;
      (!i || (i == null ? void 0 : i.transportType) === ue$5.relay) && await this.restartToComplete({ topic: e, id: e, relay: r });
      const n = { method: Wi$2(r.protocol).subscribe, params: { topic: e } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: n });
      const o = (s = i == null ? void 0 : i.internal) == null ? void 0 : s.throwOnFailedPublish;
      try {
        const a = await this.getSubscriptionId(e);
        if ((i == null ? void 0 : i.transportType) === ue$5.link_mode) return setTimeout(() => {
          (this.relayer.connected || this.relayer.connecting) && this.relayer.request(n).catch((u) => this.logger.warn(u));
        }, L$3.toMiliseconds(L$3.ONE_SECOND)), a;
        const c = new Promise(async (u) => {
          const l = (f) => {
            f.topic === e && (this.events.removeListener(et$3.created, l), u(f.id));
          };
          this.events.on(et$3.created, l);
          try {
            const f = await lr$1(new Promise((p, d) => {
              this.relayer.request(n).catch((g) => {
                this.logger.warn(g, g == null ? void 0 : g.message), d(g);
              }).then(p);
            }), this.initialSubscribeTimeout, `Subscribing to ${e} failed, please try again`);
            this.events.removeListener(et$3.created, l), u(f);
          } catch {
          }
        }), h = await lr$1(c, this.subscribeTimeout, `Subscribing to ${e} failed, please try again`);
        if (!h && o) throw new Error(`Subscribing to ${e} failed, please try again`);
        return h ? a : null;
      } catch (a) {
        if (this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(_e$5.connection_stalled), o) throw a;
      }
      return null;
    }
    async rpcBatchSubscribe(e) {
      if (!e.length) return;
      const r = e[0].relay, i = { method: Wi$2(r.protocol).batchSubscribe, params: { topics: e.map((s) => s.topic) } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i });
      try {
        await await lr$1(new Promise((s) => {
          this.relayer.request(i).catch((n) => this.logger.warn(n)).then(s);
        }), this.subscribeTimeout, "rpcBatchSubscribe failed, please try again");
      } catch {
        this.relayer.events.emit(_e$5.connection_stalled);
      }
    }
    async rpcBatchFetchMessages(e) {
      if (!e.length) return;
      const r = e[0].relay, i = { method: Wi$2(r.protocol).batchFetchMessages, params: { topics: e.map((n) => n.topic) } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i });
      let s;
      try {
        s = await await lr$1(new Promise((n, o) => {
          this.relayer.request(i).catch((a) => {
            this.logger.warn(a), o(a);
          }).then(n);
        }), this.subscribeTimeout, "rpcBatchFetchMessages failed, please try again");
      } catch {
        this.relayer.events.emit(_e$5.connection_stalled);
      }
      return s;
    }
    rpcUnsubscribe(e, r, i) {
      const s = { method: Wi$2(i.protocol).unsubscribe, params: { topic: e, id: r } };
      return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s }), this.relayer.request(s);
    }
    onSubscribe(e, r) {
      this.setSubscription(e, _o$2(Mi$2({}, r), { id: e })), this.pending.delete(r.topic);
    }
    onBatchSubscribe(e) {
      e.length && e.forEach((r) => {
        this.setSubscription(r.id, Mi$2({}, r)), this.pending.delete(r.topic);
      });
    }
    async onUnsubscribe(e, r, i) {
      this.events.removeAllListeners(r), this.hasSubscription(r, e) && this.deleteSubscription(r, i), await this.relayer.messages.del(e);
    }
    async setRelayerSubscriptions(e) {
      await this.relayer.core.storage.setItem(this.storageKey, e);
    }
    async getRelayerSubscriptions() {
      return await this.relayer.core.storage.getItem(this.storageKey);
    }
    setSubscription(e, r) {
      this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e, subscription: r }), this.addSubscription(e, r);
    }
    addSubscription(e, r) {
      this.subscriptions.set(e, Mi$2({}, r)), this.topicMap.set(r.topic, e), this.events.emit(et$3.created, r);
    }
    getSubscription(e) {
      this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e });
      const r = this.subscriptions.get(e);
      if (!r) {
        const { message: i } = j$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw new Error(i);
      }
      return r;
    }
    deleteSubscription(e, r) {
      this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e, reason: r });
      const i = this.getSubscription(e);
      this.subscriptions.delete(e), this.topicMap.delete(i.topic, e), this.events.emit(et$3.deleted, _o$2(Mi$2({}, i), { reason: r }));
    }
    async persist() {
      await this.setRelayerSubscriptions(this.values), this.events.emit(et$3.sync);
    }
    async onRestart() {
      if (this.cached.length) {
        const e = [...this.cached], r = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
        for (let i = 0; i < r; i++) {
          const s = e.splice(0, this.batchSubscribeTopicsLimit);
          await this.batchSubscribe(s);
        }
      }
      this.events.emit(et$3.resubscribed);
    }
    async restore() {
      try {
        const e = await this.getRelayerSubscriptions();
        if (typeof e > "u" || !e.length) return;
        if (this.subscriptions.size) {
          const { message: r } = j$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(r), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(r);
        }
        this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
      }
    }
    async batchSubscribe(e) {
      e.length && (await this.rpcBatchSubscribe(e), this.onBatchSubscribe(await Promise.all(e.map(async (r) => _o$2(Mi$2({}, r), { id: await this.getSubscriptionId(r.topic) })))));
    }
    async batchFetchMessages(e) {
      if (!e.length) return;
      this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);
      const r = await this.rpcBatchFetchMessages(e);
      r && r.messages && (await nv$1(L$3.toMiliseconds(L$3.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(r.messages));
    }
    async onConnect() {
      await this.restart(), this.reset();
    }
    onDisconnect() {
      this.onDisable();
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async restartToComplete(e) {
      !this.relayer.connected && !this.relayer.connecting && (this.cached.push(e), await this.relayer.transportOpen());
    }
    async getClientId() {
      return this.clientId || (this.clientId = await this.relayer.core.crypto.getClientId()), this.clientId;
    }
    async getSubscriptionId(e) {
      return Rt$4(e + await this.getClientId());
    }
  }
  var q$ = Object.defineProperty, Uu$1 = Object.getOwnPropertySymbols, z$ = Object.prototype.hasOwnProperty, H$ = Object.prototype.propertyIsEnumerable, ya$1 = (t, e, r) => e in t ? q$(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ku$1 = (t, e) => {
    for (var r in e || (e = {})) z$.call(e, r) && ya$1(t, r, e[r]);
    if (Uu$1) for (var r of Uu$1(e)) H$.call(e, r) && ya$1(t, r, e[r]);
    return t;
  }, X$5 = (t, e, r) => ya$1(t, typeof e != "symbol" ? e + "" : e, r);
  class V$ extends fI$1 {
    constructor(e) {
      super(e), X$5(this, "protocol", "wc"), X$5(this, "version", 2), X$5(this, "core"), X$5(this, "logger"), X$5(this, "events", new st$3.EventEmitter()), X$5(this, "provider"), X$5(this, "messages"), X$5(this, "subscriber"), X$5(this, "publisher"), X$5(this, "name", Ex), X$5(this, "transportExplicitlyClosed", false), X$5(this, "initialized", false), X$5(this, "connectionAttemptInProgress", false), X$5(this, "relayUrl"), X$5(this, "projectId"), X$5(this, "packageName"), X$5(this, "bundleId"), X$5(this, "hasExperiencedNetworkDisruption", false), X$5(this, "pingTimeout"), X$5(this, "heartBeatTimeout", L$3.toMiliseconds(L$3.THIRTY_SECONDS + L$3.FIVE_SECONDS)), X$5(this, "reconnectTimeout"), X$5(this, "connectPromise"), X$5(this, "reconnectInProgress", false), X$5(this, "requestsInFlight", []), X$5(this, "connectTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), X$5(this, "request", async (r) => {
        var i, s;
        this.logger.debug("Publishing Request Payload");
        const n = r.id || Cr$1().toString();
        await this.toEstablishConnection();
        try {
          this.logger.trace({ id: n, method: r.method, topic: (i = r.params) == null ? void 0 : i.topic }, "relayer.request - publishing...");
          const o = `${n}:${((s = r.params) == null ? void 0 : s.tag) || ""}`;
          this.requestsInFlight.push(o);
          const a = await this.provider.request(r);
          return this.requestsInFlight = this.requestsInFlight.filter((c) => c !== o), a;
        } catch (o) {
          throw this.logger.debug(`Failed to Publish Request: ${n}`), o;
        }
      }), X$5(this, "resetPingTimeout", () => {
        fn$1() && (clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var r, i, s, n;
          try {
            this.logger.debug({}, "pingTimeout: Connection stalled, terminating..."), (n = (s = (i = (r = this.provider) == null ? void 0 : r.connection) == null ? void 0 : i.socket) == null ? void 0 : s.terminate) == null || n.call(s);
          } catch (o) {
            this.logger.warn(o, o == null ? void 0 : o.message);
          }
        }, this.heartBeatTimeout));
      }), X$5(this, "onPayloadHandler", (r) => {
        this.onProviderPayload(r), this.resetPingTimeout();
      }), X$5(this, "onConnectHandler", () => {
        this.logger.warn({}, "Relayer connected 🛜"), this.startPingTimeout(), this.events.emit(_e$5.connect);
      }), X$5(this, "onDisconnectHandler", () => {
        this.logger.warn({}, "Relayer disconnected 🛑"), this.requestsInFlight = [], this.onProviderDisconnect();
      }), X$5(this, "onProviderErrorHandler", (r) => {
        this.logger.fatal(`Fatal socket error: ${r.message}`), this.events.emit(_e$5.error, r), this.logger.fatal("Fatal socket error received, closing transport"), this.transportClose();
      }), X$5(this, "registerProviderListeners", () => {
        this.provider.on(nt$4.payload, this.onPayloadHandler), this.provider.on(nt$4.connect, this.onConnectHandler), this.provider.on(nt$4.disconnect, this.onDisconnectHandler), this.provider.on(nt$4.error, this.onProviderErrorHandler);
      }), this.core = e.core, this.logger = typeof e.logger < "u" && typeof e.logger != "string" ? Me$4(e.logger, this.name) : _s$1(Nn$2({ level: e.logger || vx })), this.messages = new S$(this.logger, e.core), this.subscriber = new M$(this, this.logger), this.publisher = new T$(this, this.logger), this.relayUrl = (e == null ? void 0 : e.relayUrl) || cp$1, this.projectId = e.projectId, z1$1() ? this.packageName = yh$1() : H1$1() && (this.bundleId = yh$1()), this.provider = {};
    }
    async init() {
      this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), this.initialized = true, this.transportOpen().catch((e) => this.logger.warn(e, e == null ? void 0 : e.message));
    }
    get context() {
      return Ze$4(this.logger);
    }
    get connected() {
      var e, r, i;
      return ((i = (r = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : r.socket) == null ? void 0 : i.readyState) === 1 || false;
    }
    get connecting() {
      var e, r, i;
      return ((i = (r = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : r.socket) == null ? void 0 : i.readyState) === 0 || this.connectPromise !== void 0 || false;
    }
    async publish(e, r, i) {
      this.isInitialized(), await this.publisher.publish(e, r, i), await this.recordMessageEvent({ topic: e, message: r, publishedAt: Date.now(), transportType: ue$5.relay }, rn$4.outbound);
    }
    async subscribe(e, r) {
      var i, s, n;
      this.isInitialized(), (!(r != null && r.transportType) || (r == null ? void 0 : r.transportType) === "relay") && await this.toEstablishConnection();
      const o = typeof ((i = r == null ? void 0 : r.internal) == null ? void 0 : i.throwOnFailedPublish) > "u" ? true : (s = r == null ? void 0 : r.internal) == null ? void 0 : s.throwOnFailedPublish;
      let a = ((n = this.subscriber.topicMap.get(e)) == null ? void 0 : n[0]) || "", c;
      const h = (u) => {
        u.topic === e && (this.subscriber.off(et$3.created, h), c());
      };
      return await Promise.all([new Promise((u) => {
        c = u, this.subscriber.on(et$3.created, h);
      }), new Promise(async (u, l) => {
        a = await this.subscriber.subscribe(e, ku$1({ internal: { throwOnFailedPublish: o } }, r)).catch((f) => {
          o && l(f);
        }) || a, u();
      })]), a;
    }
    async unsubscribe(e, r) {
      this.isInitialized(), await this.subscriber.unsubscribe(e, r);
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    async transportDisconnect() {
      this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await lr$1(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
    }
    async transportClose() {
      this.transportExplicitlyClosed = true, await this.transportDisconnect();
    }
    async transportOpen(e) {
      if (!this.subscriber.hasAnyTopics) {
        this.logger.warn("Starting WS connection skipped because the client has no topics to work with.");
        return;
      }
      if (this.connectPromise ? (this.logger.debug({}, "Waiting for existing connection attempt to resolve..."), await this.connectPromise, this.logger.debug({}, "Existing connection attempt resolved")) : (this.connectPromise = new Promise(async (r, i) => {
        await this.connect(e).then(r).catch(i).finally(() => {
          this.connectPromise = void 0;
        });
      }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);
    }
    async restartTransport(e) {
      this.logger.debug({}, "Restarting transport..."), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
    }
    async confirmOnlineStateOrThrow() {
      if (!await ou$1()) throw new Error("No internet connection detected. Please restart your network and try again.");
    }
    async handleBatchMessageEvents(e) {
      if ((e == null ? void 0 : e.length) === 0) {
        this.logger.trace("Batch message events is empty. Ignoring...");
        return;
      }
      const r = e.sort((i, s) => i.publishedAt - s.publishedAt);
      this.logger.debug(`Batch of ${r.length} message events sorted`);
      for (const i of r) try {
        await this.onMessageEvent(i);
      } catch (s) {
        this.logger.warn(s, "Error while processing batch message event: " + (s == null ? void 0 : s.message));
      }
      this.logger.trace(`Batch of ${r.length} message events processed`);
    }
    async onLinkMessageEvent(e, r) {
      const { topic: i } = e;
      if (!r.sessionExists) {
        const s = we$4(L$3.FIVE_MINUTES), n = { topic: i, expiry: s, relay: { protocol: "irn" }, active: false };
        await this.core.pairing.pairings.set(i, n);
      }
      this.events.emit(_e$5.message, e), await this.recordMessageEvent(e, rn$4.inbound);
    }
    async connect(e) {
      await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
      let r = 1;
      for (; r < 6; ) {
        try {
          if (this.transportExplicitlyClosed) break;
          this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${r}...`), await this.createProvider(), await new Promise(async (i, s) => {
            const n = () => {
              s(new Error("Connection interrupted while trying to connect"));
            };
            this.provider.once(nt$4.disconnect, n), await lr$1(new Promise((o, a) => {
              this.provider.connect().then(o).catch(a);
            }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((o) => {
              s(o);
            }).finally(() => {
              this.provider.off(nt$4.disconnect, n), clearTimeout(this.reconnectTimeout);
            }), await new Promise(async (o, a) => {
              const c = () => {
                s(new Error("Connection interrupted while trying to subscribe"));
              };
              this.provider.once(nt$4.disconnect, c), await this.subscriber.start().then(o).catch(a).finally(() => {
                this.provider.off(nt$4.disconnect, c);
              });
            }), this.hasExperiencedNetworkDisruption = !1, i();
          });
        } catch (i) {
          await this.subscriber.stop();
          const s = i;
          this.logger.warn({}, s.message), this.hasExperiencedNetworkDisruption = true;
        } finally {
          this.connectionAttemptInProgress = false;
        }
        if (this.connected) {
          this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${r}`);
          break;
        }
        await new Promise((i) => setTimeout(i, L$3.toMiliseconds(r * 1))), r++;
      }
    }
    startPingTimeout() {
      var e, r, i, s, n;
      if (fn$1()) try {
        (r = (e = this.provider) == null ? void 0 : e.connection) != null && r.socket && ((n = (s = (i = this.provider) == null ? void 0 : i.connection) == null ? void 0 : s.socket) == null || n.on("ping", () => {
          this.resetPingTimeout();
        })), this.resetPingTimeout();
      } catch (o) {
        this.logger.warn(o, o == null ? void 0 : o.message);
      }
    }
    async createProvider() {
      this.provider.connection && this.unregisterProviderListeners();
      const e = await this.core.crypto.signJWT(this.relayUrl);
      this.provider = new pt$4(new ux(Y1$1({ sdkVersion: ua$1, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e, useOnCloseEvent: true, bundleId: this.bundleId, packageName: this.packageName }))), this.registerProviderListeners();
    }
    async recordMessageEvent(e, r) {
      const { topic: i, message: s } = e;
      await this.messages.set(i, s, r);
    }
    async shouldIgnoreMessageEvent(e) {
      const { topic: r, message: i } = e;
      if (!i || i.length === 0) return this.logger.warn(`Ignoring invalid/empty message: ${i}`), true;
      if (!await this.subscriber.isKnownTopic(r)) return this.logger.warn(`Ignoring message for unknown topic ${r}`), true;
      const s = this.messages.has(r, i);
      return s && this.logger.warn(`Ignoring duplicate message: ${i}`), s;
    }
    async onProviderPayload(e) {
      if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e }), cc$1(e)) {
        if (!e.method.endsWith(_x)) return;
        const r = e.params, { topic: i, message: s, publishedAt: n, attestation: o } = r.data, a = { topic: i, message: s, publishedAt: n, transportType: ue$5.relay, attestation: o };
        this.logger.debug("Emitting Relayer Payload"), this.logger.trace(ku$1({ type: "event", event: r.id }, a)), this.events.emit(r.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);
      } else Ln$2(e) && this.events.emit(_e$5.message_ack, e);
    }
    async onMessageEvent(e) {
      await this.shouldIgnoreMessageEvent(e) || (await this.recordMessageEvent(e, rn$4.inbound), this.events.emit(_e$5.message, e));
    }
    async acknowledgePayload(e) {
      const r = Un$2(e.id, true);
      await this.provider.connection.send(r);
    }
    unregisterProviderListeners() {
      this.provider.off(nt$4.payload, this.onPayloadHandler), this.provider.off(nt$4.connect, this.onConnectHandler), this.provider.off(nt$4.disconnect, this.onDisconnectHandler), this.provider.off(nt$4.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
    }
    async registerEventListeners() {
      let e = await ou$1();
      F3(async (r) => {
        e !== r && (e = r, r ? await this.transportOpen().catch((i) => this.logger.error(i, i == null ? void 0 : i.message)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
      }), this.core.heartbeat.on(Lr$1.pulse, async () => {
        if (!this.transportExplicitlyClosed && !this.connected && k3()) try {
          await this.confirmOnlineStateOrThrow(), await this.transportOpen();
        } catch (r) {
          this.logger.warn(r, r == null ? void 0 : r.message);
        }
      });
    }
    async onProviderDisconnect() {
      clearTimeout(this.pingTimeout), this.events.emit(_e$5.disconnect), this.connectionAttemptInProgress = false, !this.reconnectInProgress && (this.reconnectInProgress = true, await this.subscriber.stop(), this.subscriber.hasAnyTopics && (this.transportExplicitlyClosed || (this.reconnectTimeout = setTimeout(async () => {
        await this.transportOpen().catch((e) => this.logger.error(e, e == null ? void 0 : e.message)), this.reconnectTimeout = void 0, this.reconnectInProgress = false;
      }, L$3.toMiliseconds(Ix)))));
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async toEstablishConnection() {
      if (await this.confirmOnlineStateOrThrow(), !this.connected) {
        if (this.connectPromise) {
          await this.connectPromise;
          return;
        }
        await this.connect();
      }
    }
  }
  function K$(t, e) {
    return t === e || Number.isNaN(t) && Number.isNaN(e);
  }
  function Lu(t) {
    return Object.getOwnPropertySymbols(t).filter((e) => Object.prototype.propertyIsEnumerable.call(t, e));
  }
  function ju$1(t) {
    return t == null ? t === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(t);
  }
  const W$ = "[object RegExp]", G$ = "[object String]", Y$ = "[object Number]", J$ = "[object Boolean]", Mu = "[object Arguments]", Z$ = "[object Symbol]", Q$ = "[object Date]", X$ = "[object Map]", eS = "[object Set]", tS = "[object Array]", rS = "[object Function]", iS = "[object ArrayBuffer]", Io$2 = "[object Object]", sS = "[object Error]", nS = "[object DataView]", oS = "[object Uint8Array]", aS = "[object Uint8ClampedArray]", cS = "[object Uint16Array]", hS = "[object Uint32Array]", uS = "[object BigUint64Array]", lS = "[object Int8Array]", fS = "[object Int16Array]", dS = "[object Int32Array]", pS = "[object BigInt64Array]", gS = "[object Float32Array]", yS = "[object Float64Array]";
  function wS() {
  }
  function qu$1(t) {
    if (!t || typeof t != "object") return false;
    const e = Object.getPrototypeOf(t);
    return e === null || e === Object.prototype || Object.getPrototypeOf(e) === null ? Object.prototype.toString.call(t) === "[object Object]" : false;
  }
  function mS(t, e, r) {
    return Gi$1(t, e, void 0, void 0, void 0, void 0, r);
  }
  function Gi$1(t, e, r, i, s, n, o) {
    const a = o(t, e, r, i, s, n);
    if (a !== void 0) return a;
    if (typeof t == typeof e) switch (typeof t) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return t === e;
      case "number":
        return t === e || Object.is(t, e);
      case "function":
        return t === e;
      case "object":
        return is$1(t, e, n, o);
    }
    return is$1(t, e, n, o);
  }
  function is$1(t, e, r, i) {
    if (Object.is(t, e)) return true;
    let s = ju$1(t), n = ju$1(e);
    if (s === Mu && (s = Io$2), n === Mu && (n = Io$2), s !== n) return false;
    switch (s) {
      case G$:
        return t.toString() === e.toString();
      case Y$: {
        const c = t.valueOf(), h = e.valueOf();
        return K$(c, h);
      }
      case J$:
      case Q$:
      case Z$:
        return Object.is(t.valueOf(), e.valueOf());
      case W$:
        return t.source === e.source && t.flags === e.flags;
      case rS:
        return t === e;
    }
    r = r ?? /* @__PURE__ */ new Map();
    const o = r.get(t), a = r.get(e);
    if (o != null && a != null) return o === e;
    r.set(t, e), r.set(e, t);
    try {
      switch (s) {
        case X$: {
          if (t.size !== e.size) return !1;
          for (const [c, h] of t.entries()) if (!e.has(c) || !Gi$1(h, e.get(c), c, t, e, r, i)) return !1;
          return !0;
        }
        case eS: {
          if (t.size !== e.size) return !1;
          const c = Array.from(t.values()), h = Array.from(e.values());
          for (let u = 0; u < c.length; u++) {
            const l = c[u], f = h.findIndex((p) => Gi$1(l, p, void 0, t, e, r, i));
            if (f === -1) return !1;
            h.splice(f, 1);
          }
          return !0;
        }
        case tS:
        case oS:
        case aS:
        case cS:
        case hS:
        case uS:
        case lS:
        case fS:
        case dS:
        case pS:
        case gS:
        case yS: {
          if (typeof Buffer < "u" && Buffer.isBuffer(t) !== Buffer.isBuffer(e) || t.length !== e.length) return !1;
          for (let c = 0; c < t.length; c++) if (!Gi$1(t[c], e[c], c, t, e, r, i)) return !1;
          return !0;
        }
        case iS:
          return t.byteLength !== e.byteLength ? !1 : is$1(new Uint8Array(t), new Uint8Array(e), r, i);
        case nS:
          return t.byteLength !== e.byteLength || t.byteOffset !== e.byteOffset ? !1 : is$1(new Uint8Array(t), new Uint8Array(e), r, i);
        case sS:
          return t.name === e.name && t.message === e.message;
        case Io$2: {
          if (!(is$1(t.constructor, e.constructor, r, i) || qu$1(t) && qu$1(e))) return !1;
          const c = [...Object.keys(t), ...Lu(t)], h = [...Object.keys(e), ...Lu(e)];
          if (c.length !== h.length) return !1;
          for (let u = 0; u < c.length; u++) {
            const l = c[u], f = t[l];
            if (!Object.hasOwn(e, l)) return !1;
            const p = e[l];
            if (!Gi$1(f, p, l, t, e, r, i)) return !1;
          }
          return !0;
        }
        default:
          return !1;
      }
    } finally {
      r.delete(t), r.delete(e);
    }
  }
  function bS(t, e) {
    return mS(t, e, wS);
  }
  var vS = Object.defineProperty, zu$1 = Object.getOwnPropertySymbols, ES = Object.prototype.hasOwnProperty, _S = Object.prototype.propertyIsEnumerable, wa$1 = (t, e, r) => e in t ? vS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Hu$1 = (t, e) => {
    for (var r in e || (e = {})) ES.call(e, r) && wa$1(t, r, e[r]);
    if (zu$1) for (var r of zu$1(e)) _S.call(e, r) && wa$1(t, r, e[r]);
    return t;
  }, ze$5 = (t, e, r) => wa$1(t, typeof e != "symbol" ? e + "" : e, r);
  let Mr$1 = class Mr extends dI$1 {
    constructor(e, r, i, s = Nt$3, n = void 0) {
      super(e, r, i, s), this.core = e, this.logger = r, this.name = i, ze$5(this, "map", /* @__PURE__ */ new Map()), ze$5(this, "version", xx), ze$5(this, "cached", []), ze$5(this, "initialized", false), ze$5(this, "getKey"), ze$5(this, "storagePrefix", Nt$3), ze$5(this, "recentlyDeleted", []), ze$5(this, "recentlyDeletedLimit", 200), ze$5(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o) => {
          this.getKey && o !== null && !Oe$4(o) ? this.map.set(this.getKey(o), o) : f3(o) ? this.map.set(o.id, o) : d3(o) && this.map.set(o.topic, o);
        }), this.cached = [], this.initialized = true);
      }), ze$5(this, "set", async (o, a) => {
        this.isInitialized(), this.map.has(o) ? await this.update(o, a) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o, value: a }), this.map.set(o, a), await this.persist());
      }), ze$5(this, "get", (o) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o }), this.getData(o))), ze$5(this, "getAll", (o) => (this.isInitialized(), o ? this.values.filter((a) => Object.keys(o).every((c) => bS(a[c], o[c]))) : this.values)), ze$5(this, "update", async (o, a) => {
        this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o, update: a });
        const c = Hu$1(Hu$1({}, this.getData(o)), a);
        this.map.set(o, c), await this.persist();
      }), ze$5(this, "delete", async (o, a) => {
        this.isInitialized(), this.map.has(o) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o, reason: a }), this.map.delete(o), this.addToRecentlyDeleted(o), await this.persist());
      }), this.logger = Me$4(r, this.name), this.storagePrefix = s, this.getKey = n;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.map.size;
    }
    get keys() {
      return Array.from(this.map.keys());
    }
    get values() {
      return Array.from(this.map.values());
    }
    addToRecentlyDeleted(e) {
      this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
    }
    async setDataStore(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getDataStore() {
      return await this.core.storage.getItem(this.storageKey);
    }
    getData(e) {
      const r = this.map.get(e);
      if (!r) {
        if (this.recentlyDeleted.includes(e)) {
          const { message: s } = j$2("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e}`);
          throw this.logger.error(s), new Error(s);
        }
        const { message: i } = j$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw this.logger.error(i), new Error(i);
      }
      return r;
    }
    async persist() {
      await this.setDataStore(this.values);
    }
    async restore() {
      try {
        const e = await this.getDataStore();
        if (typeof e > "u" || !e.length) return;
        if (this.map.size) {
          const { message: r } = j$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(r), new Error(r);
        }
        this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  };
  var IS = Object.defineProperty, xS = (t, e, r) => e in t ? IS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, J$5 = (t, e, r) => xS(t, typeof e != "symbol" ? e + "" : e, r);
  class $S {
    constructor(e, r) {
      this.core = e, this.logger = r, J$5(this, "name", Ax), J$5(this, "version", Ox), J$5(this, "events", new Pa$1()), J$5(this, "pairings"), J$5(this, "initialized", false), J$5(this, "storagePrefix", Nt$3), J$5(this, "ignoredPayloadTypes", [Kt$4]), J$5(this, "registeredMethods", []), J$5(this, "init", async () => {
        this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
      }), J$5(this, "register", ({ methods: i }) => {
        this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i])];
      }), J$5(this, "create", async (i) => {
        this.isInitialized();
        const s = ra$1(), n = await this.core.crypto.setSymKey(s), o = we$4(L$3.FIVE_MINUTES), a = { protocol: ap$1 }, c = { topic: n, expiry: o, relay: a, active: false, methods: i == null ? void 0 : i.methods }, h = Zh$1({ protocol: this.core.protocol, version: this.core.version, topic: n, symKey: s, relay: a, expiryTimestamp: o, methods: i == null ? void 0 : i.methods });
        return this.events.emit($r$1.create, c), this.core.expirer.set(n, o), await this.pairings.set(n, c), await this.core.relayer.subscribe(n, { transportType: i == null ? void 0 : i.transportType }), { topic: n, uri: h };
      }), J$5(this, "pair", async (i) => {
        this.isInitialized();
        const s = this.core.eventClient.createEvent({ properties: { topic: i == null ? void 0 : i.uri, trace: [Ot$4.pairing_started] } });
        this.isValidPair(i, s);
        const { topic: n, symKey: o, relay: a, expiryTimestamp: c, methods: h } = Jh(i.uri);
        s.props.properties.topic = n, s.addTrace(Ot$4.pairing_uri_validation_success), s.addTrace(Ot$4.pairing_uri_not_expired);
        let u;
        if (this.pairings.keys.includes(n)) {
          if (u = this.pairings.get(n), s.addTrace(Ot$4.existing_pairing), u.active) throw s.setError(Ht$4.active_pairing_already_exists), new Error(`Pairing already exists: ${n}. Please try again with a new connection URI.`);
          s.addTrace(Ot$4.pairing_not_expired);
        }
        const l = c || we$4(L$3.FIVE_MINUTES), f = { topic: n, relay: a, expiry: l, active: false, methods: h };
        this.core.expirer.set(n, l), await this.pairings.set(n, f), s.addTrace(Ot$4.store_new_pairing), i.activatePairing && await this.activate({ topic: n }), this.events.emit($r$1.create, f), s.addTrace(Ot$4.emit_inactive_pairing), this.core.crypto.keychain.has(n) || await this.core.crypto.setSymKey(o, n), s.addTrace(Ot$4.subscribing_pairing_topic);
        try {
          await this.core.relayer.confirmOnlineStateOrThrow();
        } catch {
          s.setError(Ht$4.no_internet_connection);
        }
        try {
          await this.core.relayer.subscribe(n, { relay: a });
        } catch (p) {
          throw s.setError(Ht$4.subscribe_pairing_topic_failure), p;
        }
        return s.addTrace(Ot$4.subscribe_pairing_topic_success), f;
      }), J$5(this, "activate", async ({ topic: i }) => {
        this.isInitialized();
        const s = we$4(L$3.FIVE_MINUTES);
        this.core.expirer.set(i, s), await this.pairings.update(i, { active: true, expiry: s });
      }), J$5(this, "ping", async (i) => {
        this.isInitialized(), await this.isValidPing(i), this.logger.warn("ping() is deprecated and will be removed in the next major release.");
        const { topic: s } = i;
        if (this.pairings.keys.includes(s)) {
          const n = await this.sendRequest(s, "wc_pairingPing", {}), { done: o, resolve: a, reject: c } = _r$1();
          this.events.once(se$3("pairing_ping", n), ({ error: h }) => {
            h ? c(h) : a();
          }), await o();
        }
      }), J$5(this, "updateExpiry", async ({ topic: i, expiry: s }) => {
        this.isInitialized(), await this.pairings.update(i, { expiry: s });
      }), J$5(this, "updateMetadata", async ({ topic: i, metadata: s }) => {
        this.isInitialized(), await this.pairings.update(i, { peerMetadata: s });
      }), J$5(this, "getPairings", () => (this.isInitialized(), this.pairings.values)), J$5(this, "disconnect", async (i) => {
        this.isInitialized(), await this.isValidDisconnect(i);
        const { topic: s } = i;
        this.pairings.keys.includes(s) && (await this.sendRequest(s, "wc_pairingDelete", le$4("USER_DISCONNECTED")), await this.deletePairing(s));
      }), J$5(this, "formatUriFromPairing", (i) => {
        this.isInitialized();
        const { topic: s, relay: n, expiry: o, methods: a } = i, c = this.core.crypto.keychain.get(s);
        return Zh$1({ protocol: this.core.protocol, version: this.core.version, topic: s, symKey: c, relay: n, expiryTimestamp: o, methods: a });
      }), J$5(this, "sendRequest", async (i, s, n) => {
        const o = fr$1(s, n), a = await this.core.crypto.encode(i, o), c = Li$2[s].req;
        return this.core.history.set(i, o), this.core.relayer.publish(i, a, c), o.id;
      }), J$5(this, "sendResult", async (i, s, n) => {
        const o = Un$2(i, n), a = await this.core.crypto.encode(s, o), c = (await this.core.history.get(s, i)).request.method, h = Li$2[c].res;
        await this.core.relayer.publish(s, a, h), await this.core.history.resolve(o);
      }), J$5(this, "sendError", async (i, s, n) => {
        const o = kn$2(i, n), a = await this.core.crypto.encode(s, o), c = (await this.core.history.get(s, i)).request.method, h = Li$2[c] ? Li$2[c].res : Li$2.unregistered_method.res;
        await this.core.relayer.publish(s, a, h), await this.core.history.resolve(o);
      }), J$5(this, "deletePairing", async (i, s) => {
        await this.core.relayer.unsubscribe(i), await Promise.all([this.pairings.delete(i, le$4("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i), s ? Promise.resolve() : this.core.expirer.del(i)]);
      }), J$5(this, "cleanup", async () => {
        const i = this.pairings.getAll().filter((s) => or$1(s.expiry));
        await Promise.all(i.map((s) => this.deletePairing(s.topic)));
      }), J$5(this, "onRelayEventRequest", async (i) => {
        const { topic: s, payload: n } = i;
        switch (n.method) {
          case "wc_pairingPing":
            return await this.onPairingPingRequest(s, n);
          case "wc_pairingDelete":
            return await this.onPairingDeleteRequest(s, n);
          default:
            return await this.onUnknownRpcMethodRequest(s, n);
        }
      }), J$5(this, "onRelayEventResponse", async (i) => {
        const { topic: s, payload: n } = i, o = (await this.core.history.get(s, n.id)).request.method;
        switch (o) {
          case "wc_pairingPing":
            return this.onPairingPingResponse(s, n);
          default:
            return this.onUnknownRpcMethodResponse(o);
        }
      }), J$5(this, "onPairingPingRequest", async (i, s) => {
        const { id: n } = s;
        try {
          this.isValidPing({ topic: i }), await this.sendResult(n, i, !0), this.events.emit($r$1.ping, { id: n, topic: i });
        } catch (o) {
          await this.sendError(n, i, o), this.logger.error(o);
        }
      }), J$5(this, "onPairingPingResponse", (i, s) => {
        const { id: n } = s;
        setTimeout(() => {
          Ct$3(s) ? this.events.emit(se$3("pairing_ping", n), {}) : ct$3(s) && this.events.emit(se$3("pairing_ping", n), { error: s.error });
        }, 500);
      }), J$5(this, "onPairingDeleteRequest", async (i, s) => {
        const { id: n } = s;
        try {
          this.isValidDisconnect({ topic: i }), await this.deletePairing(i), this.events.emit($r$1.delete, { id: n, topic: i });
        } catch (o) {
          await this.sendError(n, i, o), this.logger.error(o);
        }
      }), J$5(this, "onUnknownRpcMethodRequest", async (i, s) => {
        const { id: n, method: o } = s;
        try {
          if (this.registeredMethods.includes(o)) return;
          const a = le$4("WC_METHOD_UNSUPPORTED", o);
          await this.sendError(n, i, a), this.logger.error(a);
        } catch (a) {
          await this.sendError(n, i, a), this.logger.error(a);
        }
      }), J$5(this, "onUnknownRpcMethodResponse", (i) => {
        this.registeredMethods.includes(i) || this.logger.error(le$4("WC_METHOD_UNSUPPORTED", i));
      }), J$5(this, "isValidPair", (i, s) => {
        var n;
        if (!Ke$4(i)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `pair() params: ${i}`);
          throw s.setError(Ht$4.malformed_pairing_uri), new Error(a);
        }
        if (!l3(i.uri)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `pair() uri: ${i.uri}`);
          throw s.setError(Ht$4.malformed_pairing_uri), new Error(a);
        }
        const o = Jh(i == null ? void 0 : i.uri);
        if (!((n = o == null ? void 0 : o.relay) != null && n.protocol)) {
          const { message: a } = j$2("MISSING_OR_INVALID", "pair() uri#relay-protocol");
          throw s.setError(Ht$4.malformed_pairing_uri), new Error(a);
        }
        if (!(o != null && o.symKey)) {
          const { message: a } = j$2("MISSING_OR_INVALID", "pair() uri#symKey");
          throw s.setError(Ht$4.malformed_pairing_uri), new Error(a);
        }
        if (o != null && o.expiryTimestamp && L$3.toMiliseconds(o == null ? void 0 : o.expiryTimestamp) < Date.now()) {
          s.setError(Ht$4.pairing_expired);
          const { message: a } = j$2("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
          throw new Error(a);
        }
      }), J$5(this, "isValidPing", async (i) => {
        if (!Ke$4(i)) {
          const { message: n } = j$2("MISSING_OR_INVALID", `ping() params: ${i}`);
          throw new Error(n);
        }
        const { topic: s } = i;
        await this.isValidPairingTopic(s);
      }), J$5(this, "isValidDisconnect", async (i) => {
        if (!Ke$4(i)) {
          const { message: n } = j$2("MISSING_OR_INVALID", `disconnect() params: ${i}`);
          throw new Error(n);
        }
        const { topic: s } = i;
        await this.isValidPairingTopic(s);
      }), J$5(this, "isValidPairingTopic", async (i) => {
        if (!ge$3(i, false)) {
          const { message: s } = j$2("MISSING_OR_INVALID", `pairing topic should be a string: ${i}`);
          throw new Error(s);
        }
        if (!this.pairings.keys.includes(i)) {
          const { message: s } = j$2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i}`);
          throw new Error(s);
        }
        if (or$1(this.pairings.get(i).expiry)) {
          await this.deletePairing(i);
          const { message: s } = j$2("EXPIRED", `pairing topic: ${i}`);
          throw new Error(s);
        }
      }), this.core = e, this.logger = Me$4(r, this.name), this.pairings = new Mr$1(this.core, this.logger, this.name, this.storagePrefix);
    }
    get context() {
      return Ze$4(this.logger);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    registerRelayerEvents() {
      this.core.relayer.on(_e$5.message, async (e) => {
        const { topic: r, message: i, transportType: s } = e;
        if (this.pairings.keys.includes(r) && s !== ue$5.link_mode && !this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i))) try {
          const n = await this.core.crypto.decode(r, i);
          cc$1(n) ? (this.core.history.set(r, n), await this.onRelayEventRequest({ topic: r, payload: n })) : Ln$2(n) && (await this.core.history.resolve(n), await this.onRelayEventResponse({ topic: r, payload: n }), this.core.history.delete(r, n.id)), await this.core.relayer.messages.ack(r, i);
        } catch (n) {
          this.logger.error(n);
        }
      });
    }
    registerExpirerEvents() {
      this.core.expirer.on(at$4.expired, async (e) => {
        const { topic: r } = ed$1(e.target);
        r && this.pairings.keys.includes(r) && (await this.deletePairing(r, true), this.events.emit($r$1.expire, { topic: r }));
      });
    }
  }
  var SS = Object.defineProperty, DS = (t, e, r) => e in t ? SS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Ae$4 = (t, e, r) => DS(t, typeof e != "symbol" ? e + "" : e, r);
  class AS extends hI$1 {
    constructor(e, r) {
      super(e, r), this.core = e, this.logger = r, Ae$4(this, "records", /* @__PURE__ */ new Map()), Ae$4(this, "events", new st$3.EventEmitter()), Ae$4(this, "name", Px), Ae$4(this, "version", Cx), Ae$4(this, "cached", []), Ae$4(this, "initialized", false), Ae$4(this, "storagePrefix", Nt$3), Ae$4(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i) => this.records.set(i.id, i)), this.cached = [], this.registerEventListeners(), this.initialized = true);
      }), Ae$4(this, "set", (i, s, n) => {
        if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i, request: s, chainId: n }), this.records.has(s.id)) return;
        const o = { id: s.id, topic: i, request: { method: s.method, params: s.params || null }, chainId: n, expiry: we$4(L$3.THIRTY_DAYS) };
        this.records.set(o.id, o), this.persist(), this.events.emit(wt$4.created, o);
      }), Ae$4(this, "resolve", async (i) => {
        if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i }), !this.records.has(i.id)) return;
        const s = await this.getRecord(i.id);
        typeof s.response > "u" && (s.response = ct$3(i) ? { error: i.error } : { result: i.result }, this.records.set(s.id, s), this.persist(), this.events.emit(wt$4.updated, s));
      }), Ae$4(this, "get", async (i, s) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i, id: s }), await this.getRecord(s))), Ae$4(this, "delete", (i, s) => {
        this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s }), this.values.forEach((n) => {
          if (n.topic === i) {
            if (typeof s < "u" && n.id !== s) return;
            this.records.delete(n.id), this.events.emit(wt$4.deleted, n);
          }
        }), this.persist();
      }), Ae$4(this, "exists", async (i, s) => (this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i : false)), Ae$4(this, "on", (i, s) => {
        this.events.on(i, s);
      }), Ae$4(this, "once", (i, s) => {
        this.events.once(i, s);
      }), Ae$4(this, "off", (i, s) => {
        this.events.off(i, s);
      }), Ae$4(this, "removeListener", (i, s) => {
        this.events.removeListener(i, s);
      }), this.logger = Me$4(r, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get size() {
      return this.records.size;
    }
    get keys() {
      return Array.from(this.records.keys());
    }
    get values() {
      return Array.from(this.records.values());
    }
    get pending() {
      const e = [];
      return this.values.forEach((r) => {
        if (typeof r.response < "u") return;
        const i = { topic: r.topic, request: fr$1(r.request.method, r.request.params, r.id), chainId: r.chainId };
        return e.push(i);
      }), e;
    }
    async setJsonRpcRecords(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getJsonRpcRecords() {
      return await this.core.storage.getItem(this.storageKey);
    }
    getRecord(e) {
      this.isInitialized();
      const r = this.records.get(e);
      if (!r) {
        const { message: i } = j$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw new Error(i);
      }
      return r;
    }
    async persist() {
      await this.setJsonRpcRecords(this.values), this.events.emit(wt$4.sync);
    }
    async restore() {
      try {
        const e = await this.getJsonRpcRecords();
        if (typeof e > "u" || !e.length) return;
        if (this.records.size) {
          const { message: r } = j$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(r), new Error(r);
        }
        this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
      }
    }
    registerEventListeners() {
      this.events.on(wt$4.created, (e) => {
        const r = wt$4.created;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, record: e });
      }), this.events.on(wt$4.updated, (e) => {
        const r = wt$4.updated;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, record: e });
      }), this.events.on(wt$4.deleted, (e) => {
        const r = wt$4.deleted;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, record: e });
      }), this.core.heartbeat.on(Lr$1.pulse, () => {
        this.cleanup();
      });
    }
    cleanup() {
      try {
        this.isInitialized();
        let e = !1;
        this.records.forEach((r) => {
          L$3.toMiliseconds(r.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${r.id}`), this.records.delete(r.id), this.events.emit(wt$4.deleted, r, !1), e = !0);
        }), e && this.persist();
      } catch (e) {
        this.logger.warn(e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var OS = Object.defineProperty, PS = (t, e, r) => e in t ? OS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ke$3 = (t, e, r) => PS(t, typeof e != "symbol" ? e + "" : e, r);
  class CS extends gI$1 {
    constructor(e, r) {
      super(e, r), this.core = e, this.logger = r, ke$3(this, "expirations", /* @__PURE__ */ new Map()), ke$3(this, "events", new st$3.EventEmitter()), ke$3(this, "name", Tx), ke$3(this, "version", Rx), ke$3(this, "cached", []), ke$3(this, "initialized", false), ke$3(this, "storagePrefix", Nt$3), ke$3(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i) => this.expirations.set(i.target, i)), this.cached = [], this.registerEventListeners(), this.initialized = true);
      }), ke$3(this, "has", (i) => {
        try {
          const s = this.formatTarget(i);
          return typeof this.getExpiration(s) < "u";
        } catch {
          return false;
        }
      }), ke$3(this, "set", (i, s) => {
        this.isInitialized();
        const n = this.formatTarget(i), o = { target: n, expiry: s };
        this.expirations.set(n, o), this.checkExpiry(n, o), this.events.emit(at$4.created, { target: n, expiration: o });
      }), ke$3(this, "get", (i) => {
        this.isInitialized();
        const s = this.formatTarget(i);
        return this.getExpiration(s);
      }), ke$3(this, "del", (i) => {
        if (this.isInitialized(), this.has(i)) {
          const s = this.formatTarget(i), n = this.getExpiration(s);
          this.expirations.delete(s), this.events.emit(at$4.deleted, { target: s, expiration: n });
        }
      }), ke$3(this, "on", (i, s) => {
        this.events.on(i, s);
      }), ke$3(this, "once", (i, s) => {
        this.events.once(i, s);
      }), ke$3(this, "off", (i, s) => {
        this.events.off(i, s);
      }), ke$3(this, "removeListener", (i, s) => {
        this.events.removeListener(i, s);
      }), this.logger = Me$4(r, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.expirations.size;
    }
    get keys() {
      return Array.from(this.expirations.keys());
    }
    get values() {
      return Array.from(this.expirations.values());
    }
    formatTarget(e) {
      if (typeof e == "string") return J1$1(e);
      if (typeof e == "number") return Z1$1(e);
      const { message: r } = j$2("UNKNOWN_TYPE", `Target type: ${typeof e}`);
      throw new Error(r);
    }
    async setExpirations(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getExpirations() {
      return await this.core.storage.getItem(this.storageKey);
    }
    async persist() {
      await this.setExpirations(this.values), this.events.emit(at$4.sync);
    }
    async restore() {
      try {
        const e = await this.getExpirations();
        if (typeof e > "u" || !e.length) return;
        if (this.expirations.size) {
          const { message: r } = j$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(r), new Error(r);
        }
        this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
      }
    }
    getExpiration(e) {
      const r = this.expirations.get(e);
      if (!r) {
        const { message: i } = j$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw this.logger.warn(i), new Error(i);
      }
      return r;
    }
    checkExpiry(e, r) {
      const { expiry: i } = r;
      L$3.toMiliseconds(i) - Date.now() <= 0 && this.expire(e, r);
    }
    expire(e, r) {
      this.expirations.delete(e), this.events.emit(at$4.expired, { target: e, expiration: r });
    }
    checkExpirations() {
      this.core.relayer.connected && this.expirations.forEach((e, r) => this.checkExpiry(r, e));
    }
    registerEventListeners() {
      this.core.heartbeat.on(Lr$1.pulse, () => this.checkExpirations()), this.events.on(at$4.created, (e) => {
        const r = at$4.created;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, data: e }), this.persist();
      }), this.events.on(at$4.expired, (e) => {
        const r = at$4.expired;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, data: e }), this.persist();
      }), this.events.on(at$4.deleted, (e) => {
        const r = at$4.deleted;
        this.logger.info(`Emitting ${r}`), this.logger.debug({ type: "event", event: r, data: e }), this.persist();
      });
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var TS = Object.defineProperty, RS = (t, e, r) => e in t ? TS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, pe$4 = (t, e, r) => RS(t, typeof e != "symbol" ? e + "" : e, r);
  class BS extends yI$1 {
    constructor(e, r, i) {
      super(e, r, i), this.core = e, this.logger = r, this.store = i, pe$4(this, "name", Bx), pe$4(this, "abortController"), pe$4(this, "isDevEnv"), pe$4(this, "verifyUrlV3", Nx), pe$4(this, "storagePrefix", Nt$3), pe$4(this, "version", op$1), pe$4(this, "publicKey"), pe$4(this, "fetchPromise"), pe$4(this, "init", async () => {
        var s;
        this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && L$3.toMiliseconds((s = this.publicKey) == null ? void 0 : s.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()));
      }), pe$4(this, "register", async (s) => {
        if (!_i$2() || this.isDevEnv) return;
        const n = window.location.origin, { id: o, decryptedId: a } = s, c = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${n}&id=${o}&decryptedId=${a}`;
        try {
          const h = Tr$1(), u = this.startAbortTimer(L$3.ONE_SECOND * 5), l = await new Promise((f, p) => {
            const d = () => {
              window.removeEventListener("message", m), h.body.removeChild(g), p("attestation aborted");
            };
            this.abortController.signal.addEventListener("abort", d);
            const g = h.createElement("iframe");
            g.src = c, g.style.display = "none", g.addEventListener("error", d, { signal: this.abortController.signal });
            const m = (_) => {
              if (_.data && typeof _.data == "string") try {
                const I = JSON.parse(_.data);
                if (I.type === "verify_attestation") {
                  if (Ho$1(I.attestation).payload.id !== o) return;
                  clearInterval(u), h.body.removeChild(g), this.abortController.signal.removeEventListener("abort", d), window.removeEventListener("message", m), f(I.attestation === null ? "" : I.attestation);
                }
              } catch (I) {
                this.logger.warn(I);
              }
            };
            h.body.appendChild(g), window.addEventListener("message", m, { signal: this.abortController.signal });
          });
          return this.logger.debug("jwt attestation", l), l;
        } catch (h) {
          this.logger.warn(h);
        }
        return "";
      }), pe$4(this, "resolve", async (s) => {
        if (this.isDevEnv) return "";
        const { attestationId: n, hash: o, encryptedId: a } = s;
        if (n === "") {
          this.logger.debug("resolve: attestationId is empty, skipping");
          return;
        }
        if (n) {
          if (Ho$1(n).payload.id !== a) return;
          const h = await this.isValidJwtAttestation(n);
          if (h) {
            if (!h.isVerified) {
              this.logger.warn("resolve: jwt attestation: origin url not verified");
              return;
            }
            return h;
          }
        }
        if (!o) return;
        const c = this.getVerifyUrl(s == null ? void 0 : s.verifyUrl);
        return this.fetchAttestation(o, c);
      }), pe$4(this, "fetchAttestation", async (s, n) => {
        this.logger.debug(`resolving attestation: ${s} from url: ${n}`);
        const o = this.startAbortTimer(L$3.ONE_SECOND * 5), a = await fetch(`${n}/attestation/${s}?v2Supported=true`, { signal: this.abortController.signal });
        return clearTimeout(o), a.status === 200 ? await a.json() : void 0;
      }), pe$4(this, "getVerifyUrl", (s) => {
        let n = s || rs$1;
        return Ux.includes(n) || (this.logger.info(`verify url: ${n}, not included in trusted list, assigning default: ${rs$1}`), n = rs$1), n;
      }), pe$4(this, "fetchPublicKey", async () => {
        try {
          this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
          const s = this.startAbortTimer(L$3.FIVE_SECONDS), n = await fetch(`${this.verifyUrlV3}/public-key`, { signal: this.abortController.signal });
          return clearTimeout(s), await n.json();
        } catch (s) {
          this.logger.warn(s);
        }
      }), pe$4(this, "persistPublicKey", async (s) => {
        this.logger.debug("persisting public key to local storage", s), await this.store.setItem(this.storeKey, s), this.publicKey = s;
      }), pe$4(this, "removePublicKey", async () => {
        this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
      }), pe$4(this, "isValidJwtAttestation", async (s) => {
        const n = await this.getPublicKey();
        try {
          if (n) return this.validateAttestation(s, n);
        } catch (a) {
          this.logger.error(a), this.logger.warn("error validating attestation");
        }
        const o = await this.fetchAndPersistPublicKey();
        try {
          if (o) return this.validateAttestation(s, o);
        } catch (a) {
          this.logger.error(a), this.logger.warn("error validating attestation");
        }
      }), pe$4(this, "getPublicKey", async () => this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey()), pe$4(this, "fetchAndPersistPublicKey", async () => {
        if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
        this.fetchPromise = new Promise(async (n) => {
          const o = await this.fetchPublicKey();
          o && (await this.persistPublicKey(o), n(o));
        });
        const s = await this.fetchPromise;
        return this.fetchPromise = void 0, s;
      }), pe$4(this, "validateAttestation", (s, n) => {
        const o = HE$1(s, n.publicKey), a = { hasExpired: L$3.toMiliseconds(o.exp) < Date.now(), payload: o };
        if (a.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
        return { origin: a.payload.origin, isScam: a.payload.isScam, isVerified: a.payload.isVerified };
      }), this.logger = Me$4(r, this.name), this.abortController = new AbortController(), this.isDevEnv = Ka(), this.init();
    }
    get storeKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
    }
    get context() {
      return Ze$4(this.logger);
    }
    startAbortTimer(e) {
      return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), L$3.toMiliseconds(e));
    }
  }
  var FS = Object.defineProperty, NS = (t, e, r) => e in t ? FS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Vu$1 = (t, e, r) => NS(t, typeof e != "symbol" ? e + "" : e, r);
  class US extends wI$1 {
    constructor(e, r) {
      super(e, r), this.projectId = e, this.logger = r, Vu$1(this, "context", kx), Vu$1(this, "registerDeviceToken", async (i) => {
        const { clientId: s, token: n, notificationType: o, enableEncrypted: a = false } = i, c = `${Lx}/${this.projectId}/clients`;
        await fetch(c, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: s, type: o, token: n, always_raw: a }) });
      }), this.logger = Me$4(r, this.context);
    }
  }
  var kS = Object.defineProperty, Ku$1 = Object.getOwnPropertySymbols, LS = Object.prototype.hasOwnProperty, jS = Object.prototype.propertyIsEnumerable, ma$1 = (t, e, r) => e in t ? kS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, qi$2 = (t, e) => {
    for (var r in e || (e = {})) LS.call(e, r) && ma$1(t, r, e[r]);
    if (Ku$1) for (var r of Ku$1(e)) jS.call(e, r) && ma$1(t, r, e[r]);
    return t;
  }, be$3 = (t, e, r) => ma$1(t, typeof e != "symbol" ? e + "" : e, r);
  class MS extends mI$1 {
    constructor(e, r, i = true) {
      super(e, r, i), this.core = e, this.logger = r, be$3(this, "context", Mx), be$3(this, "storagePrefix", Nt$3), be$3(this, "storageVersion", jx), be$3(this, "events", /* @__PURE__ */ new Map()), be$3(this, "shouldPersist", false), be$3(this, "init", async () => {
        if (!Ka()) try {
          const s = { eventId: mh(), timestamp: Date.now(), domain: this.getAppDomain(), props: { event: "INIT", type: "", properties: { client_id: await this.core.crypto.getClientId(), user_agent: Qf$1(this.core.relayer.protocol, this.core.relayer.version, ua$1) } } };
          await this.sendEvent([s]);
        } catch (s) {
          this.logger.warn(s);
        }
      }), be$3(this, "createEvent", (s) => {
        const { event: n = "ERROR", type: o = "", properties: { topic: a, trace: c } } = s, h = mh(), u = this.core.projectId || "", l = Date.now(), f = qi$2({ eventId: h, timestamp: l, props: { event: n, type: o, properties: { topic: a, trace: c } }, bundleId: u, domain: this.getAppDomain() }, this.setMethods(h));
        return this.telemetryEnabled && (this.events.set(h, f), this.shouldPersist = true), f;
      }), be$3(this, "getEvent", (s) => {
        const { eventId: n, topic: o } = s;
        if (n) return this.events.get(n);
        const a = Array.from(this.events.values()).find((c) => c.props.properties.topic === o);
        if (a) return qi$2(qi$2({}, a), this.setMethods(a.eventId));
      }), be$3(this, "deleteEvent", (s) => {
        const { eventId: n } = s;
        this.events.delete(n), this.shouldPersist = true;
      }), be$3(this, "setEventListeners", () => {
        this.core.heartbeat.on(Lr$1.pulse, async () => {
          this.shouldPersist && await this.persist(), this.events.forEach((s) => {
            L$3.fromMiliseconds(Date.now()) - L$3.fromMiliseconds(s.timestamp) > qx && (this.events.delete(s.eventId), this.shouldPersist = true);
          });
        });
      }), be$3(this, "setMethods", (s) => ({ addTrace: (n) => this.addTrace(s, n), setError: (n) => this.setError(s, n) })), be$3(this, "addTrace", (s, n) => {
        const o = this.events.get(s);
        o && (o.props.properties.trace.push(n), this.events.set(s, o), this.shouldPersist = true);
      }), be$3(this, "setError", (s, n) => {
        const o = this.events.get(s);
        o && (o.props.type = n, o.timestamp = Date.now(), this.events.set(s, o), this.shouldPersist = true);
      }), be$3(this, "persist", async () => {
        await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = false;
      }), be$3(this, "restore", async () => {
        try {
          const s = await this.core.storage.getItem(this.storageKey) || [];
          if (!s.length) return;
          s.forEach((n) => {
            this.events.set(n.eventId, qi$2(qi$2({}, n), this.setMethods(n.eventId)));
          });
        } catch (s) {
          this.logger.warn(s);
        }
      }), be$3(this, "submit", async () => {
        if (!this.telemetryEnabled || this.events.size === 0) return;
        const s = [];
        for (const [n, o] of this.events) o.props.type && s.push(o);
        if (s.length !== 0) try {
          if ((await this.sendEvent(s)).ok) for (const n of s) this.events.delete(n.eventId), this.shouldPersist = !0;
        } catch (n) {
          this.logger.warn(n);
        }
      }), be$3(this, "sendEvent", async (s) => {
        const n = this.getAppDomain() ? "" : "&sp=desktop";
        return await fetch(`${zx}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${ua$1}${n}`, { method: "POST", body: JSON.stringify(s) });
      }), be$3(this, "getAppDomain", () => Zf$1().url), this.logger = Me$4(r, this.context), this.telemetryEnabled = i, i ? this.restore().then(async () => {
        await this.submit(), this.setEventListeners();
      }) : this.persist();
    }
    get storageKey() {
      return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
    }
  }
  var qS = Object.defineProperty, Wu$1 = Object.getOwnPropertySymbols, zS = Object.prototype.hasOwnProperty, HS = Object.prototype.propertyIsEnumerable, ba$1 = (t, e, r) => e in t ? qS(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Gu$1 = (t, e) => {
    for (var r in e || (e = {})) zS.call(e, r) && ba$1(t, r, e[r]);
    if (Wu$1) for (var r of Wu$1(e)) HS.call(e, r) && ba$1(t, r, e[r]);
    return t;
  }, ae$5 = (t, e, r) => ba$1(t, typeof e != "symbol" ? e + "" : e, r);
  let VS = class Ep extends nI$1 {
    constructor(e) {
      var r;
      super(e), ae$5(this, "protocol", np$1), ae$5(this, "version", op$1), ae$5(this, "name", ha$1), ae$5(this, "relayUrl"), ae$5(this, "projectId"), ae$5(this, "customStoragePrefix"), ae$5(this, "events", new st$3.EventEmitter()), ae$5(this, "logger"), ae$5(this, "heartbeat"), ae$5(this, "relayer"), ae$5(this, "crypto"), ae$5(this, "storage"), ae$5(this, "history"), ae$5(this, "expirer"), ae$5(this, "pairing"), ae$5(this, "verify"), ae$5(this, "echoClient"), ae$5(this, "linkModeSupportedApps"), ae$5(this, "eventClient"), ae$5(this, "initialized", false), ae$5(this, "logChunkController"), ae$5(this, "on", (a, c) => this.events.on(a, c)), ae$5(this, "once", (a, c) => this.events.once(a, c)), ae$5(this, "off", (a, c) => this.events.off(a, c)), ae$5(this, "removeListener", (a, c) => this.events.removeListener(a, c)), ae$5(this, "dispatchEnvelope", ({ topic: a, message: c, sessionExists: h }) => {
        if (!a || !c) return;
        const u = { topic: a, message: c, publishedAt: Date.now(), transportType: ue$5.link_mode };
        this.relayer.onLinkMessageEvent(u, { sessionExists: h });
      });
      const i = this.getGlobalCore(e == null ? void 0 : e.customStoragePrefix);
      if (i) try {
        return this.customStoragePrefix = i.customStoragePrefix, this.logger = i.logger, this.heartbeat = i.heartbeat, this.crypto = i.crypto, this.history = i.history, this.expirer = i.expirer, this.storage = i.storage, this.relayer = i.relayer, this.pairing = i.pairing, this.verify = i.verify, this.echoClient = i.echoClient, this.linkModeSupportedApps = i.linkModeSupportedApps, this.eventClient = i.eventClient, this.initialized = i.initialized, this.logChunkController = i.logChunkController, i;
      } catch (a) {
        console.warn("Failed to copy global core", a);
      }
      this.projectId = e == null ? void 0 : e.projectId, this.relayUrl = (e == null ? void 0 : e.relayUrl) || cp$1, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : "";
      const s = Nn$2({ level: typeof (e == null ? void 0 : e.logger) == "string" && e.logger ? e.logger : lx.logger, name: ha$1 }), { logger: n, chunkLoggerController: o } = rI$1({ opts: s, maxSizeInBytes: e == null ? void 0 : e.maxLogBlobSizeInBytes, loggerOverride: e == null ? void 0 : e.logger });
      this.logChunkController = o, (r = this.logChunkController) != null && r.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
        var a, c;
        (a = this.logChunkController) != null && a.downloadLogsBlobInBrowser && ((c = this.logChunkController) == null || c.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
      }), this.logger = Me$4(n, this.name), this.heartbeat = new G3(), this.crypto = new m$(this, this.logger, e == null ? void 0 : e.keychain), this.history = new AS(this, this.logger), this.expirer = new CS(this, this.logger), this.storage = e != null && e.storage ? e.storage : new A_(Gu$1(Gu$1({}, fx), e == null ? void 0 : e.storageOptions)), this.relayer = new V$({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new $S(this, this.logger), this.verify = new BS(this, this.logger, this.storage), this.echoClient = new US(this.projectId || "", this.logger), this.linkModeSupportedApps = [], this.eventClient = new MS(this, this.logger, e == null ? void 0 : e.telemetryEnabled), this.setGlobalCore(this);
    }
    static async init(e) {
      const r = new Ep(e);
      await r.initialize();
      const i = await r.crypto.getClientId();
      return await r.storage.setItem($x, i), r;
    }
    get context() {
      return Ze$4(this.logger);
    }
    async start() {
      this.initialized || await this.initialize();
    }
    async getLogsBlob() {
      var e;
      return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({ clientId: await this.crypto.getClientId() });
    }
    async addLinkModeSupportedApp(e) {
      this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(Du, this.linkModeSupportedApps));
    }
    async initialize() {
      this.logger.trace("Initialized");
      try {
        await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.linkModeSupportedApps = await this.storage.getItem(Du) || [], this.initialized = !0, this.logger.info("Core Initialization Success");
      } catch (e) {
        throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
      }
    }
    getGlobalCore(e = "") {
      try {
        if (this.isGlobalCoreDisabled()) return;
        const r = `_walletConnectCore_${e}`, i = `${r}_count`;
        return globalThis[i] = (globalThis[i] || 0) + 1, globalThis[i] > 1 && console.warn(`WalletConnect Core is already initialized. This is probably a mistake and can lead to unexpected behavior. Init() was called ${globalThis[i]} times.`), globalThis[r];
      } catch (r) {
        console.warn("Failed to get global WalletConnect core", r);
        return;
      }
    }
    setGlobalCore(e) {
      var r;
      try {
        if (this.isGlobalCoreDisabled()) return;
        const i = `_walletConnectCore_${((r = e.opts) == null ? void 0 : r.customStoragePrefix) || ""}`;
        globalThis[i] = e;
      } catch (i) {
        console.warn("Failed to set global WalletConnect core", i);
      }
    }
    isGlobalCoreDisabled() {
      try {
        return typeof process < "u" && process.env.DISABLE_GLOBAL_CORE === "true";
      } catch {
        return true;
      }
    }
  };
  const KS = VS, _p$1 = "wc", Ip$1 = 2, xp$1 = "client", hc$1 = `${_p$1}@${Ip$1}:${xp$1}:`, xo$2 = { name: xp$1, logger: "error" }, Yu$1 = "WALLETCONNECT_DEEPLINK_CHOICE", WS = "proposal", Ju$1 = "Proposal expired", GS = "session", Qr = L$3.SEVEN_DAYS, YS = "engine", ve$3 = { wc_sessionPropose: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: L$3.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: L$3.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1119 } } }, $o$2 = { min: L$3.FIVE_MINUTES, max: L$3.SEVEN_DAYS }, At$2 = { idle: "IDLE", active: "ACTIVE" }, JS = { eth_sendTransaction: { key: "" }, eth_sendRawTransaction: { key: "" }, wallet_sendCalls: { key: "" }, solana_signTransaction: { key: "signature" }, solana_signAllTransactions: { key: "transactions" }, solana_signAndSendTransaction: { key: "signature" }, sui_signAndExecuteTransaction: { key: "digest" }, sui_signTransaction: { key: "" }, hedera_signAndExecuteTransaction: { key: "transactionId" }, hedera_executeTransaction: { key: "transactionId" }, near_signTransaction: { key: "" }, near_signTransactions: { key: "" }, tron_signTransaction: { key: "txID" }, xrpl_signTransaction: { key: "" }, xrpl_signTransactionFor: { key: "" }, algo_signTxn: { key: "" }, sendTransfer: { key: "txid" }, stacks_stxTransfer: { key: "txId" }, polkadot_signTransaction: { key: "" }, cosmos_signDirect: { key: "" } }, ZS = "request", QS = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"], XS = "wc", eD = "auth", tD = "authKeys", rD = "pairingTopics", iD = "requests", Mn$2 = `${XS}@${1.5}:${eD}:`, sn$3 = `${Mn$2}:PUB_KEY`;
  var sD = Object.defineProperty, nD = Object.defineProperties, oD = Object.getOwnPropertyDescriptors, Zu$1 = Object.getOwnPropertySymbols, aD = Object.prototype.hasOwnProperty, cD = Object.prototype.propertyIsEnumerable, va$1 = (t, e, r) => e in t ? sD(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, he$2 = (t, e) => {
    for (var r in e || (e = {})) aD.call(e, r) && va$1(t, r, e[r]);
    if (Zu$1) for (var r of Zu$1(e)) cD.call(e, r) && va$1(t, r, e[r]);
    return t;
  }, He$4 = (t, e) => nD(t, oD(e)), F$4 = (t, e, r) => va$1(t, typeof e != "symbol" ? e + "" : e, r);
  class hD extends _I$1 {
    constructor(e) {
      super(e), F$4(this, "name", YS), F$4(this, "events", new Pa$1()), F$4(this, "initialized", false), F$4(this, "requestQueue", { state: At$2.idle, queue: [] }), F$4(this, "sessionRequestQueue", { state: At$2.idle, queue: [] }), F$4(this, "requestQueueDelay", L$3.ONE_SECOND), F$4(this, "expectedPairingMethodMap", /* @__PURE__ */ new Map()), F$4(this, "recentlyDeletedMap", /* @__PURE__ */ new Map()), F$4(this, "recentlyDeletedLimit", 200), F$4(this, "relayMessageCache", []), F$4(this, "pendingSessions", /* @__PURE__ */ new Map()), F$4(this, "init", async () => {
        this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({ methods: Object.keys(ve$3) }), this.initialized = true, setTimeout(async () => {
          await this.processPendingMessageEvents(), this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
        }, L$3.toMiliseconds(this.requestQueueDelay)));
      }), F$4(this, "connect", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        const i = He$4(he$2({}, r), { requiredNamespaces: r.requiredNamespaces || {}, optionalNamespaces: r.optionalNamespaces || {} });
        await this.isValidConnect(i), i.optionalNamespaces = o3(i.requiredNamespaces, i.optionalNamespaces), i.requiredNamespaces = {};
        const { pairingTopic: s, requiredNamespaces: n, optionalNamespaces: o, sessionProperties: a, scopedProperties: c, relays: h } = i;
        let u = s, l, f = false;
        try {
          if (u) {
            const k = this.client.core.pairing.pairings.get(u);
            this.client.logger.warn("connect() with existing pairing topic is deprecated and will be removed in the next major release."), f = k.active;
          }
        } catch (k) {
          throw this.client.logger.error(`connect() -> pairing.get(${u}) failed`), k;
        }
        if (!u || !f) {
          const { topic: k, uri: U } = await this.client.core.pairing.create();
          u = k, l = U;
        }
        if (!u) {
          const { message: k } = j$2("NO_MATCHING_KEY", `connect() pairing topic: ${u}`);
          throw new Error(k);
        }
        const p = await this.client.core.crypto.generateKeyPair(), d = ve$3.wc_sessionPropose.req.ttl || L$3.FIVE_MINUTES, g = we$4(d), m = He$4(he$2(he$2({ requiredNamespaces: n, optionalNamespaces: o, relays: h ?? [{ protocol: ap$1 }], proposer: { publicKey: p, metadata: this.client.metadata }, expiryTimestamp: g, pairingTopic: u }, a && { sessionProperties: a }), c && { scopedProperties: c }), { id: Pt$4() }), _ = se$3("session_connect", m.id), { reject: I, resolve: E, done: P } = _r$1(d, Ju$1), A = ({ id: k }) => {
          k === m.id && (this.client.events.off("proposal_expire", A), this.pendingSessions.delete(m.id), this.events.emit(_, { error: { message: Ju$1, code: 0 } }));
        };
        return this.client.events.on("proposal_expire", A), this.events.once(_, ({ error: k, session: U }) => {
          this.client.events.off("proposal_expire", A), k ? I(k) : U && E(U);
        }), await this.sendRequest({ topic: u, method: "wc_sessionPropose", params: m, throwOnFailedPublish: true, clientRpcId: m.id }), await this.setProposal(m.id, m), { uri: l, approval: P };
      }), F$4(this, "pair", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          return await this.client.core.pairing.pair(r);
        } catch (i) {
          throw this.client.logger.error("pair() failed"), i;
        }
      }), F$4(this, "approve", async (r) => {
        var i, s, n;
        const o = this.client.core.eventClient.createEvent({ properties: { topic: (i = r == null ? void 0 : r.id) == null ? void 0 : i.toString(), trace: [mt$4.session_approve_started] } });
        try {
          this.isInitialized(), await this.confirmOnlineStateOrThrow();
        } catch (b) {
          throw o.setError(vr$1.no_internet_connection), b;
        }
        try {
          await this.isValidProposalId(r == null ? void 0 : r.id);
        } catch (b) {
          throw this.client.logger.error(`approve() -> proposal.get(${r == null ? void 0 : r.id}) failed`), o.setError(vr$1.proposal_not_found), b;
        }
        try {
          await this.isValidApprove(r);
        } catch (b) {
          throw this.client.logger.error("approve() -> isValidApprove() failed"), o.setError(vr$1.session_approve_namespace_validation_failure), b;
        }
        const { id: a, relayProtocol: c, namespaces: h, sessionProperties: u, scopedProperties: l, sessionConfig: f } = r, p = this.client.proposal.get(a);
        this.client.core.eventClient.deleteEvent({ eventId: o.eventId });
        const { pairingTopic: d, proposer: g, requiredNamespaces: m, optionalNamespaces: _ } = p;
        let I = (s = this.client.core.eventClient) == null ? void 0 : s.getEvent({ topic: d });
        I || (I = (n = this.client.core.eventClient) == null ? void 0 : n.createEvent({ type: mt$4.session_approve_started, properties: { topic: d, trace: [mt$4.session_approve_started, mt$4.session_namespaces_validation_success] } }));
        const E = await this.client.core.crypto.generateKeyPair(), P = g.publicKey, A = await this.client.core.crypto.generateSharedKey(E, P), k = he$2(he$2(he$2({ relay: { protocol: c ?? "irn" }, namespaces: h, controller: { publicKey: E, metadata: this.client.metadata }, expiry: we$4(Qr) }, u && { sessionProperties: u }), l && { scopedProperties: l }), f && { sessionConfig: f }), U = ue$5.relay;
        I.addTrace(mt$4.subscribing_session_topic);
        try {
          await this.client.core.relayer.subscribe(A, { transportType: U });
        } catch (b) {
          throw I.setError(vr$1.subscribe_session_topic_failure), b;
        }
        I.addTrace(mt$4.subscribe_session_topic_success);
        const R = He$4(he$2({}, k), { topic: A, requiredNamespaces: m, optionalNamespaces: _, pairingTopic: d, acknowledged: false, self: k.controller, peer: { publicKey: g.publicKey, metadata: g.metadata }, controller: E, transportType: ue$5.relay });
        await this.client.session.set(A, R), I.addTrace(mt$4.store_session);
        try {
          I.addTrace(mt$4.publishing_session_settle), await this.sendRequest({ topic: A, method: "wc_sessionSettle", params: k, throwOnFailedPublish: !0 }).catch((b) => {
            throw I == null || I.setError(vr$1.session_settle_publish_failure), b;
          }), I.addTrace(mt$4.session_settle_publish_success), I.addTrace(mt$4.publishing_session_approve), await this.sendResult({ id: a, topic: d, result: { relay: { protocol: c ?? "irn" }, responderPublicKey: E }, throwOnFailedPublish: !0 }).catch((b) => {
            throw I == null || I.setError(vr$1.session_approve_publish_failure), b;
          }), I.addTrace(mt$4.session_approve_publish_success);
        } catch (b) {
          throw this.client.logger.error(b), this.client.session.delete(A, le$4("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(A), b;
        }
        return this.client.core.eventClient.deleteEvent({ eventId: I.eventId }), await this.client.core.pairing.updateMetadata({ topic: d, metadata: g.metadata }), await this.deleteProposal(a), await this.client.core.pairing.activate({ topic: d }), await this.setExpiry(A, we$4(Qr)), { topic: A, acknowledged: () => Promise.resolve(this.client.session.get(A)) };
      }), F$4(this, "reject", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidReject(r);
        } catch (o) {
          throw this.client.logger.error("reject() -> isValidReject() failed"), o;
        }
        const { id: i, reason: s } = r;
        let n;
        try {
          n = this.client.proposal.get(i).pairingTopic;
        } catch (o) {
          throw this.client.logger.error(`reject() -> proposal.get(${i}) failed`), o;
        }
        n && await this.sendError({ id: i, topic: n, error: s, rpcOpts: ve$3.wc_sessionPropose.reject }), await this.deleteProposal(i);
      }), F$4(this, "update", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidUpdate(r);
        } catch (l) {
          throw this.client.logger.error("update() -> isValidUpdate() failed"), l;
        }
        const { topic: i, namespaces: s } = r, { done: n, resolve: o, reject: a } = _r$1(), c = Pt$4(), h = Cr$1().toString(), u = this.client.session.get(i).namespaces;
        return this.events.once(se$3("session_update", c), ({ error: l }) => {
          l ? a(l) : o();
        }), await this.client.session.update(i, { namespaces: s }), await this.sendRequest({ topic: i, method: "wc_sessionUpdate", params: { namespaces: s }, throwOnFailedPublish: true, clientRpcId: c, relayRpcId: h }).catch((l) => {
          this.client.logger.error(l), this.client.session.update(i, { namespaces: u }), a(l);
        }), { acknowledged: n };
      }), F$4(this, "extend", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidExtend(r);
        } catch (c) {
          throw this.client.logger.error("extend() -> isValidExtend() failed"), c;
        }
        const { topic: i } = r, s = Pt$4(), { done: n, resolve: o, reject: a } = _r$1();
        return this.events.once(se$3("session_extend", s), ({ error: c }) => {
          c ? a(c) : o();
        }), await this.setExpiry(i, we$4(Qr)), this.sendRequest({ topic: i, method: "wc_sessionExtend", params: {}, clientRpcId: s, throwOnFailedPublish: true }).catch((c) => {
          a(c);
        }), { acknowledged: n };
      }), F$4(this, "request", async (r) => {
        this.isInitialized();
        try {
          await this.isValidRequest(r);
        } catch (m) {
          throw this.client.logger.error("request() -> isValidRequest() failed"), m;
        }
        const { chainId: i, request: s, topic: n, expiry: o = ve$3.wc_sessionRequest.req.ttl } = r, a = this.client.session.get(n);
        (a == null ? void 0 : a.transportType) === ue$5.relay && await this.confirmOnlineStateOrThrow();
        const c = Pt$4(), h = Cr$1().toString(), { done: u, resolve: l, reject: f } = _r$1(o, "Request expired. Please try again.");
        this.events.once(se$3("session_request", c), ({ error: m, result: _ }) => {
          m ? f(m) : l(_);
        });
        const p = "wc_sessionRequest", d = this.getAppLinkIfEnabled(a.peer.metadata, a.transportType);
        if (d) return await this.sendRequest({ clientRpcId: c, relayRpcId: h, topic: n, method: p, params: { request: He$4(he$2({}, s), { expiryTimestamp: we$4(o) }), chainId: i }, expiry: o, throwOnFailedPublish: true, appLink: d }).catch((m) => f(m)), this.client.events.emit("session_request_sent", { topic: n, request: s, chainId: i, id: c }), await u();
        const g = { request: He$4(he$2({}, s), { expiryTimestamp: we$4(o) }), chainId: i };
        return await Promise.all([new Promise(async (m) => {
          await this.sendRequest({ clientRpcId: c, relayRpcId: h, topic: n, method: p, params: g, expiry: o, throwOnFailedPublish: true, tvf: this.getTVFParams(c, g) }).catch((_) => f(_)), this.client.events.emit("session_request_sent", { topic: n, request: s, chainId: i, id: c }), m();
        }), new Promise(async (m) => {
          var _;
          if (!((_ = a.sessionConfig) != null && _.disableDeepLink)) {
            const I = await tv$1(this.client.core.storage, Yu$1);
            await Q1$1({ id: c, topic: n, wcDeepLink: I });
          }
          m();
        }), u()]).then((m) => m[2]);
      }), F$4(this, "respond", async (r) => {
        this.isInitialized(), await this.isValidRespond(r);
        const { topic: i, response: s } = r, { id: n } = s, o = this.client.session.get(i);
        o.transportType === ue$5.relay && await this.confirmOnlineStateOrThrow();
        const a = this.getAppLinkIfEnabled(o.peer.metadata, o.transportType);
        Ct$3(s) ? await this.sendResult({ id: n, topic: i, result: s.result, throwOnFailedPublish: true, appLink: a }) : ct$3(s) && await this.sendError({ id: n, topic: i, error: s.error, appLink: a }), this.cleanupAfterResponse(r);
      }), F$4(this, "ping", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidPing(r);
        } catch (s) {
          throw this.client.logger.error("ping() -> isValidPing() failed"), s;
        }
        const { topic: i } = r;
        if (this.client.session.keys.includes(i)) {
          const s = Pt$4(), n = Cr$1().toString(), { done: o, resolve: a, reject: c } = _r$1();
          this.events.once(se$3("session_ping", s), ({ error: h }) => {
            h ? c(h) : a();
          }), await Promise.all([this.sendRequest({ topic: i, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: s, relayRpcId: n }), o()]);
        } else this.client.core.pairing.pairings.keys.includes(i) && (this.client.logger.warn("ping() on pairing topic is deprecated and will be removed in the next major release."), await this.client.core.pairing.ping({ topic: i }));
      }), F$4(this, "emit", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(r);
        const { topic: i, event: s, chainId: n } = r, o = Cr$1().toString(), a = Pt$4();
        await this.sendRequest({ topic: i, method: "wc_sessionEvent", params: { event: s, chainId: n }, throwOnFailedPublish: true, relayRpcId: o, clientRpcId: a });
      }), F$4(this, "disconnect", async (r) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(r);
        const { topic: i } = r;
        if (this.client.session.keys.includes(i)) await this.sendRequest({ topic: i, method: "wc_sessionDelete", params: le$4("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: i, emitEvent: false });
        else if (this.client.core.pairing.pairings.keys.includes(i)) await this.client.core.pairing.disconnect({ topic: i });
        else {
          const { message: s } = j$2("MISMATCHED_TOPIC", `Session or pairing topic not found: ${i}`);
          throw new Error(s);
        }
      }), F$4(this, "find", (r) => (this.isInitialized(), this.client.session.getAll().filter((i) => h3(i, r)))), F$4(this, "getPendingSessionRequests", () => this.client.pendingRequest.getAll()), F$4(this, "authenticate", async (r, i) => {
        var s;
        this.isInitialized(), this.isValidAuthenticate(r);
        const n = i && this.client.core.linkModeSupportedApps.includes(i) && ((s = this.client.metadata.redirect) == null ? void 0 : s.linkMode), o = n ? ue$5.link_mode : ue$5.relay;
        o === ue$5.relay && await this.confirmOnlineStateOrThrow();
        const { chains: a, statement: c = "", uri: h, domain: u, nonce: l, type: f, exp: p, nbf: d, methods: g = [], expiry: m } = r, _ = [...r.resources || []], { topic: I, uri: E } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"], transportType: o });
        this.client.logger.info({ message: "Generated new pairing", pairing: { topic: I, uri: E } });
        const P = await this.client.core.crypto.generateKeyPair(), A = Xs$1(P);
        if (await Promise.all([this.client.auth.authKeys.set(sn$3, { responseTopic: A, publicKey: P }), this.client.auth.pairingTopics.set(A, { topic: A, pairingTopic: I })]), await this.client.core.relayer.subscribe(A, { transportType: o }), this.client.logger.info(`sending request to new pairing topic: ${I}`), g.length > 0) {
          const { namespace: x } = gi$2(a[0]);
          let O = y2(x, "request", g);
          Qs$1(_) && (O = m2(O, _.pop())), _.push(O);
        }
        const k = m && m > ve$3.wc_sessionAuthenticate.req.ttl ? m : ve$3.wc_sessionAuthenticate.req.ttl, U = { authPayload: { type: f ?? "caip122", chains: a, statement: c, aud: h, domain: u, version: "1", nonce: l, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: p, nbf: d, resources: _ }, requester: { publicKey: P, metadata: this.client.metadata }, expiryTimestamp: we$4(k) }, R = { eip155: { chains: a, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...g])], events: ["chainChanged", "accountsChanged"] } }, b = { requiredNamespaces: {}, optionalNamespaces: R, relays: [{ protocol: "irn" }], pairingTopic: I, proposer: { publicKey: P, metadata: this.client.metadata }, expiryTimestamp: we$4(ve$3.wc_sessionPropose.req.ttl), id: Pt$4() }, { done: C, resolve: S, reject: D } = _r$1(k, "Request expired"), T = Pt$4(), N = se$3("session_connect", b.id), y = se$3("session_request", T), w = async ({ error: x, session: O }) => {
          this.events.off(y, v), x ? D(x) : O && S({ session: O });
        }, v = async (x) => {
          var O, B, q;
          if (await this.deletePendingAuthRequest(T, { message: "fulfilled", code: 0 }), x.error) {
            const Y = le$4("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
            return x.error.code === Y.code ? void 0 : (this.events.off(N, w), D(x.error.message));
          }
          await this.deleteProposal(b.id), this.events.off(N, w);
          const { cacaos: H, responder: M } = x.result, V = [], K = [];
          for (const Y of H) {
            await Oh$1({ cacao: Y, projectId: this.client.core.projectId }) || (this.client.logger.error(Y, "Signature verification failed"), D(le$4("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
            const { p: fe } = Y, xe = Qs$1(fe.resources), wr = [Wo$2(fe.iss)], $s = dn$2(fe.iss);
            if (xe) {
              const zr = Ph$1(xe), qn = Ch$1(xe);
              V.push(...zr), wr.push(...qn);
            }
            for (const zr of wr) K.push(`${zr}:${$s}`);
          }
          const ie = await this.client.core.crypto.generateSharedKey(P, M.publicKey);
          let re;
          V.length > 0 && (re = { topic: ie, acknowledged: true, self: { publicKey: P, metadata: this.client.metadata }, peer: M, controller: M.publicKey, expiry: we$4(Qr), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: I, namespaces: tu$1([...new Set(V)], [...new Set(K)]), transportType: o }, await this.client.core.relayer.subscribe(ie, { transportType: o }), await this.client.session.set(ie, re), I && await this.client.core.pairing.updateMetadata({ topic: I, metadata: M.metadata }), re = this.client.session.get(ie)), (O = this.client.metadata.redirect) != null && O.linkMode && (B = M.metadata.redirect) != null && B.linkMode && (q = M.metadata.redirect) != null && q.universal && i && (this.client.core.addLinkModeSupportedApp(M.metadata.redirect.universal), this.client.session.update(ie, { transportType: ue$5.link_mode })), S({ auths: H, session: re });
        };
        this.events.once(N, w), this.events.once(y, v);
        let $;
        try {
          if (n) {
            const x = fr$1("wc_sessionAuthenticate", U, T);
            this.client.core.history.set(I, x);
            const O = await this.client.core.crypto.encode("", x, { type: vs$1, encoding: ur$1 });
            $ = Ls$1(i, I, O);
          } else await Promise.all([this.sendRequest({ topic: I, method: "wc_sessionAuthenticate", params: U, expiry: r.expiry, throwOnFailedPublish: !0, clientRpcId: T }), this.sendRequest({ topic: I, method: "wc_sessionPropose", params: b, expiry: ve$3.wc_sessionPropose.req.ttl, throwOnFailedPublish: !0, clientRpcId: b.id })]);
        } catch (x) {
          throw this.events.off(N, w), this.events.off(y, v), x;
        }
        return await this.setProposal(b.id, b), await this.setAuthRequest(T, { request: He$4(he$2({}, U), { verifyContext: {} }), pairingTopic: I, transportType: o }), { uri: $ ?? E, response: C };
      }), F$4(this, "approveSessionAuthenticate", async (r) => {
        const { id: i, auths: s } = r, n = this.client.core.eventClient.createEvent({ properties: { topic: i.toString(), trace: [Er$1.authenticated_session_approve_started] } });
        try {
          this.isInitialized();
        } catch (m) {
          throw n.setError(ji$2.no_internet_connection), m;
        }
        const o = this.getPendingAuthRequest(i);
        if (!o) throw n.setError(ji$2.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${i}`);
        const a = o.transportType || ue$5.relay;
        a === ue$5.relay && await this.confirmOnlineStateOrThrow();
        const c = o.requester.publicKey, h = await this.client.core.crypto.generateKeyPair(), u = Xs$1(c), l = { type: Kt$4, receiverPublicKey: c, senderPublicKey: h }, f = [], p = [];
        for (const m of s) {
          if (!await Oh$1({ cacao: m, projectId: this.client.core.projectId })) {
            n.setError(ji$2.invalid_cacao);
            const A = le$4("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
            throw await this.sendError({ id: i, topic: u, error: A, encodeOpts: l }), new Error(A.message);
          }
          n.addTrace(Er$1.cacaos_verified);
          const { p: _ } = m, I = Qs$1(_.resources), E = [Wo$2(_.iss)], P = dn$2(_.iss);
          if (I) {
            const A = Ph$1(I), k = Ch$1(I);
            f.push(...A), E.push(...k);
          }
          for (const A of E) p.push(`${A}:${P}`);
        }
        const d = await this.client.core.crypto.generateSharedKey(h, c);
        n.addTrace(Er$1.create_authenticated_session_topic);
        let g;
        if ((f == null ? void 0 : f.length) > 0) {
          g = { topic: d, acknowledged: true, self: { publicKey: h, metadata: this.client.metadata }, peer: { publicKey: c, metadata: o.requester.metadata }, controller: c, expiry: we$4(Qr), authentication: s, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: o.pairingTopic, namespaces: tu$1([...new Set(f)], [...new Set(p)]), transportType: a }, n.addTrace(Er$1.subscribing_authenticated_session_topic);
          try {
            await this.client.core.relayer.subscribe(d, { transportType: a });
          } catch (m) {
            throw n.setError(ji$2.subscribe_authenticated_session_topic_failure), m;
          }
          n.addTrace(Er$1.subscribe_authenticated_session_topic_success), await this.client.session.set(d, g), n.addTrace(Er$1.store_authenticated_session), await this.client.core.pairing.updateMetadata({ topic: o.pairingTopic, metadata: o.requester.metadata });
        }
        n.addTrace(Er$1.publishing_authenticated_session_approve);
        try {
          await this.sendResult({ topic: u, id: i, result: { cacaos: s, responder: { publicKey: h, metadata: this.client.metadata } }, encodeOpts: l, throwOnFailedPublish: !0, appLink: this.getAppLinkIfEnabled(o.requester.metadata, a) });
        } catch (m) {
          throw n.setError(ji$2.authenticated_session_approve_publish_failure), m;
        }
        return await this.client.auth.requests.delete(i, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: o.pairingTopic }), this.client.core.eventClient.deleteEvent({ eventId: n.eventId }), { session: g };
      }), F$4(this, "rejectSessionAuthenticate", async (r) => {
        this.isInitialized();
        const { id: i, reason: s } = r, n = this.getPendingAuthRequest(i);
        if (!n) throw new Error(`Could not find pending auth request with id ${i}`);
        n.transportType === ue$5.relay && await this.confirmOnlineStateOrThrow();
        const o = n.requester.publicKey, a = await this.client.core.crypto.generateKeyPair(), c = Xs$1(o), h = { type: Kt$4, receiverPublicKey: o, senderPublicKey: a };
        await this.sendError({ id: i, topic: c, error: s, encodeOpts: h, rpcOpts: ve$3.wc_sessionAuthenticate.reject, appLink: this.getAppLinkIfEnabled(n.requester.metadata, n.transportType) }), await this.client.auth.requests.delete(i, { message: "rejected", code: 0 }), await this.deleteProposal(i);
      }), F$4(this, "formatAuthMessage", (r) => {
        this.isInitialized();
        const { request: i, iss: s } = r;
        return gd$1(i, s);
      }), F$4(this, "processRelayMessageCache", () => {
        setTimeout(async () => {
          if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
            const r = this.relayMessageCache.shift();
            r && await this.onRelayMessage(r);
          } catch (r) {
            this.client.logger.error(r);
          }
        }, 50);
      }), F$4(this, "cleanupDuplicatePairings", async (r) => {
        if (r.pairingTopic) try {
          const i = this.client.core.pairing.pairings.get(r.pairingTopic), s = this.client.core.pairing.pairings.getAll().filter((n) => {
            var o, a;
            return ((o = n.peerMetadata) == null ? void 0 : o.url) && ((a = n.peerMetadata) == null ? void 0 : a.url) === r.peer.metadata.url && n.topic && n.topic !== i.topic;
          });
          if (s.length === 0) return;
          this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`), await Promise.all(s.map((n) => this.client.core.pairing.disconnect({ topic: n.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
        } catch (i) {
          this.client.logger.error(i);
        }
      }), F$4(this, "deleteSession", async (r) => {
        var i;
        const { topic: s, expirerHasDeleted: n = false, emitEvent: o = true, id: a = 0 } = r, { self: c } = this.client.session.get(s);
        await this.client.core.relayer.unsubscribe(s), await this.client.session.delete(s, le$4("USER_DISCONNECTED")), this.addToRecentlyDeleted(s, "session"), this.client.core.crypto.keychain.has(c.publicKey) && await this.client.core.crypto.deleteKeyPair(c.publicKey), this.client.core.crypto.keychain.has(s) && await this.client.core.crypto.deleteSymKey(s), n || this.client.core.expirer.del(s), this.client.core.storage.removeItem(Yu$1).catch((h) => this.client.logger.warn(h)), this.getPendingSessionRequests().forEach((h) => {
          h.topic === s && this.deletePendingSessionRequest(h.id, le$4("USER_DISCONNECTED"));
        }), s === ((i = this.sessionRequestQueue.queue[0]) == null ? void 0 : i.topic) && (this.sessionRequestQueue.state = At$2.idle), o && this.client.events.emit("session_delete", { id: a, topic: s });
      }), F$4(this, "deleteProposal", async (r, i) => {
        if (i) try {
          const s = this.client.proposal.get(r), n = this.client.core.eventClient.getEvent({ topic: s.pairingTopic });
          n == null || n.setError(vr$1.proposal_expired);
        } catch {
        }
        await Promise.all([this.client.proposal.delete(r, le$4("USER_DISCONNECTED")), i ? Promise.resolve() : this.client.core.expirer.del(r)]), this.addToRecentlyDeleted(r, "proposal");
      }), F$4(this, "deletePendingSessionRequest", async (r, i, s = false) => {
        await Promise.all([this.client.pendingRequest.delete(r, i), s ? Promise.resolve() : this.client.core.expirer.del(r)]), this.addToRecentlyDeleted(r, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((n) => n.id !== r), s && (this.sessionRequestQueue.state = At$2.idle, this.client.events.emit("session_request_expire", { id: r }));
      }), F$4(this, "deletePendingAuthRequest", async (r, i, s = false) => {
        await Promise.all([this.client.auth.requests.delete(r, i), s ? Promise.resolve() : this.client.core.expirer.del(r)]);
      }), F$4(this, "setExpiry", async (r, i) => {
        this.client.session.keys.includes(r) && (this.client.core.expirer.set(r, i), await this.client.session.update(r, { expiry: i }));
      }), F$4(this, "setProposal", async (r, i) => {
        this.client.core.expirer.set(r, we$4(ve$3.wc_sessionPropose.req.ttl)), await this.client.proposal.set(r, i);
      }), F$4(this, "setAuthRequest", async (r, i) => {
        const { request: s, pairingTopic: n, transportType: o = ue$5.relay } = i;
        this.client.core.expirer.set(r, s.expiryTimestamp), await this.client.auth.requests.set(r, { authPayload: s.authPayload, requester: s.requester, expiryTimestamp: s.expiryTimestamp, id: r, pairingTopic: n, verifyContext: s.verifyContext, transportType: o });
      }), F$4(this, "setPendingSessionRequest", async (r) => {
        const { id: i, topic: s, params: n, verifyContext: o } = r, a = n.request.expiryTimestamp || we$4(ve$3.wc_sessionRequest.req.ttl);
        this.client.core.expirer.set(i, a), await this.client.pendingRequest.set(i, { id: i, topic: s, params: n, verifyContext: o });
      }), F$4(this, "sendRequest", async (r) => {
        const { topic: i, method: s, params: n, expiry: o, relayRpcId: a, clientRpcId: c, throwOnFailedPublish: h, appLink: u, tvf: l } = r, f = fr$1(s, n, c);
        let p;
        const d = !!u;
        try {
          const _ = d ? ur$1 : _t$4;
          p = await this.client.core.crypto.encode(i, f, { encoding: _ });
        } catch (_) {
          throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${i} failed`), _;
        }
        let g;
        if (QS.includes(s)) {
          const _ = Rt$4(JSON.stringify(f)), I = Rt$4(p);
          g = await this.client.core.verify.register({ id: I, decryptedId: _ });
        }
        const m = ve$3[s].req;
        if (m.attestation = g, o && (m.ttl = o), a && (m.id = a), this.client.core.history.set(i, f), d) {
          const _ = Ls$1(u, i, p);
          await global.Linking.openURL(_, this.client.name);
        } else {
          const _ = ve$3[s].req;
          o && (_.ttl = o), a && (_.id = a), _.tvf = He$4(he$2({}, l), { correlationId: f.id }), h ? (_.internal = He$4(he$2({}, _.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(i, p, _)) : this.client.core.relayer.publish(i, p, _).catch((I) => this.client.logger.error(I));
        }
        return f.id;
      }), F$4(this, "sendResult", async (r) => {
        const { id: i, topic: s, result: n, throwOnFailedPublish: o, encodeOpts: a, appLink: c } = r, h = Un$2(i, n);
        let u;
        const l = c && typeof (global == null ? void 0 : global.Linking) < "u";
        try {
          const d = l ? ur$1 : _t$4;
          u = await this.client.core.crypto.encode(s, h, He$4(he$2({}, a || {}), { encoding: d }));
        } catch (d) {
          throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`), d;
        }
        let f, p;
        try {
          f = await this.client.core.history.get(s, i);
          const d = f.request;
          try {
            p = this.getTVFParams(i, d.params, n);
          } catch (g) {
            this.client.logger.warn(`sendResult() -> getTVFParams() failed: ${g == null ? void 0 : g.message}`);
          }
        } catch (d) {
          throw this.client.logger.error(`sendResult() -> history.get(${s}, ${i}) failed`), d;
        }
        if (l) {
          const d = Ls$1(c, s, u);
          await global.Linking.openURL(d, this.client.name);
        } else {
          const d = f.request.method, g = ve$3[d].res;
          g.tvf = He$4(he$2({}, p), { correlationId: i }), o ? (g.internal = He$4(he$2({}, g.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s, u, g)) : this.client.core.relayer.publish(s, u, g).catch((m) => this.client.logger.error(m));
        }
        await this.client.core.history.resolve(h);
      }), F$4(this, "sendError", async (r) => {
        const { id: i, topic: s, error: n, encodeOpts: o, rpcOpts: a, appLink: c } = r, h = kn$2(i, n);
        let u;
        const l = c && typeof (global == null ? void 0 : global.Linking) < "u";
        try {
          const p = l ? ur$1 : _t$4;
          u = await this.client.core.crypto.encode(s, h, He$4(he$2({}, o || {}), { encoding: p }));
        } catch (p) {
          throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`), p;
        }
        let f;
        try {
          f = await this.client.core.history.get(s, i);
        } catch (p) {
          throw this.client.logger.error(`sendError() -> history.get(${s}, ${i}) failed`), p;
        }
        if (l) {
          const p = Ls$1(c, s, u);
          await global.Linking.openURL(p, this.client.name);
        } else {
          const p = f.request.method, d = a || ve$3[p].res;
          this.client.core.relayer.publish(s, u, d);
        }
        await this.client.core.history.resolve(h);
      }), F$4(this, "cleanup", async () => {
        const r = [], i = [];
        this.client.session.getAll().forEach((s) => {
          let n = false;
          or$1(s.expiry) && (n = true), this.client.core.crypto.keychain.has(s.topic) || (n = true), n && r.push(s.topic);
        }), this.client.proposal.getAll().forEach((s) => {
          or$1(s.expiryTimestamp) && i.push(s.id);
        }), await Promise.all([...r.map((s) => this.deleteSession({ topic: s })), ...i.map((s) => this.deleteProposal(s))]);
      }), F$4(this, "onProviderMessageEvent", async (r) => {
        !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(r) : await this.onRelayMessage(r);
      }), F$4(this, "onRelayEventRequest", async (r) => {
        this.requestQueue.queue.push(r), await this.processRequestsQueue();
      }), F$4(this, "processRequestsQueue", async () => {
        if (this.requestQueue.state === At$2.active) {
          this.client.logger.info("Request queue already active, skipping...");
          return;
        }
        for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
          this.requestQueue.state = At$2.active;
          const r = this.requestQueue.queue.shift();
          if (r) try {
            await this.processRequest(r);
          } catch (i) {
            this.client.logger.warn(i);
          }
        }
        this.requestQueue.state = At$2.idle;
      }), F$4(this, "processRequest", async (r) => {
        const { topic: i, payload: s, attestation: n, transportType: o, encryptedId: a } = r, c = s.method;
        if (!this.shouldIgnorePairingRequest({ topic: i, requestMethod: c })) switch (c) {
          case "wc_sessionPropose":
            return await this.onSessionProposeRequest({ topic: i, payload: s, attestation: n, encryptedId: a });
          case "wc_sessionSettle":
            return await this.onSessionSettleRequest(i, s);
          case "wc_sessionUpdate":
            return await this.onSessionUpdateRequest(i, s);
          case "wc_sessionExtend":
            return await this.onSessionExtendRequest(i, s);
          case "wc_sessionPing":
            return await this.onSessionPingRequest(i, s);
          case "wc_sessionDelete":
            return await this.onSessionDeleteRequest(i, s);
          case "wc_sessionRequest":
            return await this.onSessionRequest({ topic: i, payload: s, attestation: n, encryptedId: a, transportType: o });
          case "wc_sessionEvent":
            return await this.onSessionEventRequest(i, s);
          case "wc_sessionAuthenticate":
            return await this.onSessionAuthenticateRequest({ topic: i, payload: s, attestation: n, encryptedId: a, transportType: o });
          default:
            return this.client.logger.info(`Unsupported request method ${c}`);
        }
      }), F$4(this, "onRelayEventResponse", async (r) => {
        const { topic: i, payload: s, transportType: n } = r, o = (await this.client.core.history.get(i, s.id)).request.method;
        switch (o) {
          case "wc_sessionPropose":
            return this.onSessionProposeResponse(i, s, n);
          case "wc_sessionSettle":
            return this.onSessionSettleResponse(i, s);
          case "wc_sessionUpdate":
            return this.onSessionUpdateResponse(i, s);
          case "wc_sessionExtend":
            return this.onSessionExtendResponse(i, s);
          case "wc_sessionPing":
            return this.onSessionPingResponse(i, s);
          case "wc_sessionRequest":
            return this.onSessionRequestResponse(i, s);
          case "wc_sessionAuthenticate":
            return this.onSessionAuthenticateResponse(i, s);
          default:
            return this.client.logger.info(`Unsupported response method ${o}`);
        }
      }), F$4(this, "onRelayEventUnknownPayload", (r) => {
        const { topic: i } = r, { message: s } = j$2("MISSING_OR_INVALID", `Decoded payload on topic ${i} is not identifiable as a JSON-RPC request or a response.`);
        throw new Error(s);
      }), F$4(this, "shouldIgnorePairingRequest", (r) => {
        const { topic: i, requestMethod: s } = r, n = this.expectedPairingMethodMap.get(i);
        return !n || n.includes(s) ? false : !!(n.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
      }), F$4(this, "onSessionProposeRequest", async (r) => {
        const { topic: i, payload: s, attestation: n, encryptedId: o } = r, { params: a, id: c } = s;
        try {
          const h = this.client.core.eventClient.getEvent({ topic: i });
          this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), h == null || h.setError(Ht$4.proposal_listener_not_found)), this.isValidConnect(he$2({}, s.params));
          const u = a.expiryTimestamp || we$4(ve$3.wc_sessionPropose.req.ttl), l = he$2({ id: c, pairingTopic: i, expiryTimestamp: u, attestation: n, encryptedId: o }, a);
          await this.setProposal(c, l);
          const f = await this.getVerifyContext({ attestationId: n, hash: Rt$4(JSON.stringify(s)), encryptedId: o, metadata: l.proposer.metadata });
          h == null || h.addTrace(Ot$4.emit_session_proposal), this.client.events.emit("session_proposal", { id: c, params: l, verifyContext: f });
        } catch (h) {
          await this.sendError({ id: c, topic: i, error: h, rpcOpts: ve$3.wc_sessionPropose.autoReject }), this.client.logger.error(h);
        }
      }), F$4(this, "onSessionProposeResponse", async (r, i, s) => {
        const { id: n } = i;
        if (Ct$3(i)) {
          const { result: o } = i;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: o });
          const a = this.client.proposal.get(n);
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: a });
          const c = a.proposer.publicKey;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: c });
          const h = o.responderPublicKey;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: h });
          const u = await this.client.core.crypto.generateSharedKey(c, h);
          this.pendingSessions.set(n, { sessionTopic: u, pairingTopic: r, proposalId: n, publicKey: c });
          const l = await this.client.core.relayer.subscribe(u, { transportType: s });
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: l }), await this.client.core.pairing.activate({ topic: r });
        } else if (ct$3(i)) {
          await this.deleteProposal(n);
          const o = se$3("session_connect", n);
          if (this.events.listenerCount(o) === 0) throw new Error(`emitting ${o} without any listeners, 954`);
          this.events.emit(o, { error: i.error });
        }
      }), F$4(this, "onSessionSettleRequest", async (r, i) => {
        const { id: s, params: n } = i;
        try {
          this.isValidSessionSettleRequest(n);
          const { relay: o, controller: a, expiry: c, namespaces: h, sessionProperties: u, scopedProperties: l, sessionConfig: f } = i.params, p = [...this.pendingSessions.values()].find((m) => m.sessionTopic === r);
          if (!p) return this.client.logger.error(`Pending session not found for topic ${r}`);
          const d = this.client.proposal.get(p.proposalId), g = He$4(he$2(he$2(he$2({ topic: r, relay: o, expiry: c, namespaces: h, acknowledged: !0, pairingTopic: p.pairingTopic, requiredNamespaces: d.requiredNamespaces, optionalNamespaces: d.optionalNamespaces, controller: a.publicKey, self: { publicKey: p.publicKey, metadata: this.client.metadata }, peer: { publicKey: a.publicKey, metadata: a.metadata } }, u && { sessionProperties: u }), l && { scopedProperties: l }), f && { sessionConfig: f }), { transportType: ue$5.relay });
          await this.client.session.set(g.topic, g), await this.setExpiry(g.topic, g.expiry), await this.client.core.pairing.updateMetadata({ topic: p.pairingTopic, metadata: g.peer.metadata }), this.client.events.emit("session_connect", { session: g }), this.events.emit(se$3("session_connect", p.proposalId), { session: g }), this.pendingSessions.delete(p.proposalId), this.deleteProposal(p.proposalId, !1), this.cleanupDuplicatePairings(g), await this.sendResult({ id: i.id, topic: r, result: !0 });
        } catch (o) {
          await this.sendError({ id: s, topic: r, error: o }), this.client.logger.error(o);
        }
      }), F$4(this, "onSessionSettleResponse", async (r, i) => {
        const { id: s } = i;
        Ct$3(i) ? (await this.client.session.update(r, { acknowledged: true }), this.events.emit(se$3("session_approve", s), {})) : ct$3(i) && (await this.client.session.delete(r, le$4("USER_DISCONNECTED")), this.events.emit(se$3("session_approve", s), { error: i.error }));
      }), F$4(this, "onSessionUpdateRequest", async (r, i) => {
        const { params: s, id: n } = i;
        try {
          const o = `${r}_session_update`, a = ki$2.get(o);
          if (a && this.isRequestOutOfSync(a, n)) {
            this.client.logger.warn(`Discarding out of sync request - ${n}`), this.sendError({ id: n, topic: r, error: le$4("INVALID_UPDATE_REQUEST") });
            return;
          }
          this.isValidUpdate(he$2({ topic: r }, s));
          try {
            ki$2.set(o, n), await this.client.session.update(r, { namespaces: s.namespaces }), await this.sendResult({ id: n, topic: r, result: !0 });
          } catch (c) {
            throw ki$2.delete(o), c;
          }
          this.client.events.emit("session_update", { id: n, topic: r, params: s });
        } catch (o) {
          await this.sendError({ id: n, topic: r, error: o }), this.client.logger.error(o);
        }
      }), F$4(this, "isRequestOutOfSync", (r, i) => i.toString().slice(0, -3) < r.toString().slice(0, -3)), F$4(this, "onSessionUpdateResponse", (r, i) => {
        const { id: s } = i, n = se$3("session_update", s);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(i) ? this.events.emit(se$3("session_update", s), {}) : ct$3(i) && this.events.emit(se$3("session_update", s), { error: i.error });
      }), F$4(this, "onSessionExtendRequest", async (r, i) => {
        const { id: s } = i;
        try {
          this.isValidExtend({ topic: r }), await this.setExpiry(r, we$4(Qr)), await this.sendResult({ id: s, topic: r, result: !0 }), this.client.events.emit("session_extend", { id: s, topic: r });
        } catch (n) {
          await this.sendError({ id: s, topic: r, error: n }), this.client.logger.error(n);
        }
      }), F$4(this, "onSessionExtendResponse", (r, i) => {
        const { id: s } = i, n = se$3("session_extend", s);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(i) ? this.events.emit(se$3("session_extend", s), {}) : ct$3(i) && this.events.emit(se$3("session_extend", s), { error: i.error });
      }), F$4(this, "onSessionPingRequest", async (r, i) => {
        const { id: s } = i;
        try {
          this.isValidPing({ topic: r }), await this.sendResult({ id: s, topic: r, result: !0, throwOnFailedPublish: !0 }), this.client.events.emit("session_ping", { id: s, topic: r });
        } catch (n) {
          await this.sendError({ id: s, topic: r, error: n }), this.client.logger.error(n);
        }
      }), F$4(this, "onSessionPingResponse", (r, i) => {
        const { id: s } = i, n = se$3("session_ping", s);
        setTimeout(() => {
          if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners 2176`);
          Ct$3(i) ? this.events.emit(se$3("session_ping", s), {}) : ct$3(i) && this.events.emit(se$3("session_ping", s), { error: i.error });
        }, 500);
      }), F$4(this, "onSessionDeleteRequest", async (r, i) => {
        const { id: s } = i;
        try {
          this.isValidDisconnect({ topic: r, reason: i.params }), Promise.all([new Promise((n) => {
            this.client.core.relayer.once(_e$5.publish, async () => {
              n(await this.deleteSession({ topic: r, id: s }));
            });
          }), this.sendResult({ id: s, topic: r, result: !0 }), this.cleanupPendingSentRequestsForTopic({ topic: r, error: le$4("USER_DISCONNECTED") })]).catch((n) => this.client.logger.error(n));
        } catch (n) {
          this.client.logger.error(n);
        }
      }), F$4(this, "onSessionRequest", async (r) => {
        var i, s, n;
        const { topic: o, payload: a, attestation: c, encryptedId: h, transportType: u } = r, { id: l, params: f } = a;
        try {
          await this.isValidRequest(he$2({ topic: o }, f));
          const p = this.client.session.get(o), d = await this.getVerifyContext({ attestationId: c, hash: Rt$4(JSON.stringify(fr$1("wc_sessionRequest", f, l))), encryptedId: h, metadata: p.peer.metadata, transportType: u }), g = { id: l, topic: o, params: f, verifyContext: d };
          await this.setPendingSessionRequest(g), u === ue$5.link_mode && (i = p.peer.metadata.redirect) != null && i.universal && this.client.core.addLinkModeSupportedApp((s = p.peer.metadata.redirect) == null ? void 0 : s.universal), (n = this.client.signConfig) != null && n.disableRequestQueue ? this.emitSessionRequest(g) : (this.addSessionRequestToSessionRequestQueue(g), this.processSessionRequestQueue());
        } catch (p) {
          await this.sendError({ id: l, topic: o, error: p }), this.client.logger.error(p);
        }
      }), F$4(this, "onSessionRequestResponse", (r, i) => {
        const { id: s } = i, n = se$3("session_request", s);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(i) ? this.events.emit(se$3("session_request", s), { result: i.result }) : ct$3(i) && this.events.emit(se$3("session_request", s), { error: i.error });
      }), F$4(this, "onSessionEventRequest", async (r, i) => {
        const { id: s, params: n } = i;
        try {
          const o = `${r}_session_event_${n.event.name}`, a = ki$2.get(o);
          if (a && this.isRequestOutOfSync(a, s)) {
            this.client.logger.info(`Discarding out of sync request - ${s}`);
            return;
          }
          this.isValidEmit(he$2({ topic: r }, n)), this.client.events.emit("session_event", { id: s, topic: r, params: n }), ki$2.set(o, s);
        } catch (o) {
          await this.sendError({ id: s, topic: r, error: o }), this.client.logger.error(o);
        }
      }), F$4(this, "onSessionAuthenticateResponse", (r, i) => {
        const { id: s } = i;
        this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: r, payload: i }), Ct$3(i) ? this.events.emit(se$3("session_request", s), { result: i.result }) : ct$3(i) && this.events.emit(se$3("session_request", s), { error: i.error });
      }), F$4(this, "onSessionAuthenticateRequest", async (r) => {
        var i;
        const { topic: s, payload: n, attestation: o, encryptedId: a, transportType: c } = r;
        try {
          const { requester: h, authPayload: u, expiryTimestamp: l } = n.params, f = await this.getVerifyContext({ attestationId: o, hash: Rt$4(JSON.stringify(n)), encryptedId: a, metadata: h.metadata, transportType: c }), p = { requester: h, pairingTopic: s, id: n.id, authPayload: u, verifyContext: f, expiryTimestamp: l };
          await this.setAuthRequest(n.id, { request: p, pairingTopic: s, transportType: c }), c === ue$5.link_mode && (i = h.metadata.redirect) != null && i.universal && this.client.core.addLinkModeSupportedApp(h.metadata.redirect.universal), this.client.events.emit("session_authenticate", { topic: s, params: n.params, id: n.id, verifyContext: f });
        } catch (h) {
          this.client.logger.error(h);
          const u = n.params.requester.publicKey, l = await this.client.core.crypto.generateKeyPair(), f = this.getAppLinkIfEnabled(n.params.requester.metadata, c), p = { type: Kt$4, receiverPublicKey: u, senderPublicKey: l };
          await this.sendError({ id: n.id, topic: s, error: h, encodeOpts: p, rpcOpts: ve$3.wc_sessionAuthenticate.autoReject, appLink: f });
        }
      }), F$4(this, "addSessionRequestToSessionRequestQueue", (r) => {
        this.sessionRequestQueue.queue.push(r);
      }), F$4(this, "cleanupAfterResponse", (r) => {
        this.deletePendingSessionRequest(r.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
          this.sessionRequestQueue.state = At$2.idle, this.processSessionRequestQueue();
        }, L$3.toMiliseconds(this.requestQueueDelay));
      }), F$4(this, "cleanupPendingSentRequestsForTopic", ({ topic: r, error: i }) => {
        const s = this.client.core.history.pending;
        s.length > 0 && s.filter((n) => n.topic === r && n.request.method === "wc_sessionRequest").forEach((n) => {
          const o = n.request.id, a = se$3("session_request", o);
          if (this.events.listenerCount(a) === 0) throw new Error(`emitting ${a} without any listeners`);
          this.events.emit(se$3("session_request", n.request.id), { error: i });
        });
      }), F$4(this, "processSessionRequestQueue", () => {
        if (this.sessionRequestQueue.state === At$2.active) {
          this.client.logger.info("session request queue is already active.");
          return;
        }
        const r = this.sessionRequestQueue.queue[0];
        if (!r) {
          this.client.logger.info("session request queue is empty.");
          return;
        }
        try {
          this.sessionRequestQueue.state = At$2.active, this.emitSessionRequest(r);
        } catch (i) {
          this.client.logger.error(i);
        }
      }), F$4(this, "emitSessionRequest", (r) => {
        this.client.events.emit("session_request", r);
      }), F$4(this, "onPairingCreated", (r) => {
        if (r.methods && this.expectedPairingMethodMap.set(r.topic, r.methods), r.active) return;
        const i = this.client.proposal.getAll().find((s) => s.pairingTopic === r.topic);
        i && this.onSessionProposeRequest({ topic: r.topic, payload: fr$1("wc_sessionPropose", He$4(he$2({}, i), { requiredNamespaces: i.requiredNamespaces, optionalNamespaces: i.optionalNamespaces, relays: i.relays, proposer: i.proposer, sessionProperties: i.sessionProperties, scopedProperties: i.scopedProperties }), i.id), attestation: i.attestation, encryptedId: i.encryptedId });
      }), F$4(this, "isValidConnect", async (r) => {
        if (!Ke$4(r)) {
          const { message: h } = j$2("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(r)}`);
          throw new Error(h);
        }
        const { pairingTopic: i, requiredNamespaces: s, optionalNamespaces: n, sessionProperties: o, scopedProperties: a, relays: c } = r;
        if (Oe$4(i) || await this.isValidPairingTopic(i), !E3(c)) {
          const { message: h } = j$2("MISSING_OR_INVALID", `connect() relays: ${c}`);
          throw new Error(h);
        }
        if (!Oe$4(s) && pr$1(s) !== 0) {
          const h = "requiredNamespaces are deprecated and are automatically assigned to optionalNamespaces";
          ["fatal", "error", "silent"].includes(this.client.logger.level) ? console.warn(h) : this.client.logger.warn(h), this.validateNamespaces(s, "requiredNamespaces");
        }
        if (!Oe$4(n) && pr$1(n) !== 0 && this.validateNamespaces(n, "optionalNamespaces"), Oe$4(o) || this.validateSessionProps(o, "sessionProperties"), !Oe$4(a)) {
          this.validateSessionProps(a, "scopedProperties");
          const h = Object.keys(s || {}).concat(Object.keys(n || {}));
          if (!Object.keys(a).every((u) => h.includes(u))) throw new Error(`Scoped properties must be a subset of required/optional namespaces, received: ${JSON.stringify(a)}, required/optional namespaces: ${JSON.stringify(h)}`);
        }
      }), F$4(this, "validateNamespaces", (r, i) => {
        const s = v3(r, "connect()", i);
        if (s) throw new Error(s.message);
      }), F$4(this, "isValidApprove", async (r) => {
        if (!Ke$4(r)) throw new Error(j$2("MISSING_OR_INVALID", `approve() params: ${r}`).message);
        const { id: i, namespaces: s, relayProtocol: n, sessionProperties: o, scopedProperties: a } = r;
        this.checkRecentlyDeleted(i), await this.isValidProposalId(i);
        const c = this.client.proposal.get(i), h = go$2(s, "approve()");
        if (h) throw new Error(h.message);
        const u = su$1(c.requiredNamespaces, s, "approve()");
        if (u) throw new Error(u.message);
        if (!ge$3(n, true)) {
          const { message: l } = j$2("MISSING_OR_INVALID", `approve() relayProtocol: ${n}`);
          throw new Error(l);
        }
        if (Oe$4(o) || this.validateSessionProps(o, "sessionProperties"), !Oe$4(a)) {
          this.validateSessionProps(a, "scopedProperties");
          const l = new Set(Object.keys(s));
          if (!Object.keys(a).every((f) => l.has(f))) throw new Error(`Scoped properties must be a subset of approved namespaces, received: ${JSON.stringify(a)}, approved namespaces: ${Array.from(l).join(", ")}`);
        }
      }), F$4(this, "isValidReject", async (r) => {
        if (!Ke$4(r)) {
          const { message: n } = j$2("MISSING_OR_INVALID", `reject() params: ${r}`);
          throw new Error(n);
        }
        const { id: i, reason: s } = r;
        if (this.checkRecentlyDeleted(i), await this.isValidProposalId(i), !I3(s)) {
          const { message: n } = j$2("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(s)}`);
          throw new Error(n);
        }
      }), F$4(this, "isValidSessionSettleRequest", (r) => {
        if (!Ke$4(r)) {
          const { message: h } = j$2("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${r}`);
          throw new Error(h);
        }
        const { relay: i, controller: s, namespaces: n, expiry: o } = r;
        if (!Kd$1(i)) {
          const { message: h } = j$2("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
          throw new Error(h);
        }
        const a = p3(s, "onSessionSettleRequest()");
        if (a) throw new Error(a.message);
        const c = go$2(n, "onSessionSettleRequest()");
        if (c) throw new Error(c.message);
        if (or$1(o)) {
          const { message: h } = j$2("EXPIRED", "onSessionSettleRequest()");
          throw new Error(h);
        }
      }), F$4(this, "isValidUpdate", async (r) => {
        if (!Ke$4(r)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `update() params: ${r}`);
          throw new Error(c);
        }
        const { topic: i, namespaces: s } = r;
        this.checkRecentlyDeleted(i), await this.isValidSessionTopic(i);
        const n = this.client.session.get(i), o = go$2(s, "update()");
        if (o) throw new Error(o.message);
        const a = su$1(n.requiredNamespaces, s, "update()");
        if (a) throw new Error(a.message);
      }), F$4(this, "isValidExtend", async (r) => {
        if (!Ke$4(r)) {
          const { message: s } = j$2("MISSING_OR_INVALID", `extend() params: ${r}`);
          throw new Error(s);
        }
        const { topic: i } = r;
        this.checkRecentlyDeleted(i), await this.isValidSessionTopic(i);
      }), F$4(this, "isValidRequest", async (r) => {
        if (!Ke$4(r)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `request() params: ${r}`);
          throw new Error(c);
        }
        const { topic: i, request: s, chainId: n, expiry: o } = r;
        this.checkRecentlyDeleted(i), await this.isValidSessionTopic(i);
        const { namespaces: a } = this.client.session.get(i);
        if (!iu$1(a, n)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `request() chainId: ${n}`);
          throw new Error(c);
        }
        if (!x3(s)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `request() ${JSON.stringify(s)}`);
          throw new Error(c);
        }
        if (!D3(a, n, s.method)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `request() method: ${s.method}`);
          throw new Error(c);
        }
        if (o && !C3(o, $o$2)) {
          const { message: c } = j$2("MISSING_OR_INVALID", `request() expiry: ${o}. Expiry must be a number (in seconds) between ${$o$2.min} and ${$o$2.max}`);
          throw new Error(c);
        }
      }), F$4(this, "isValidRespond", async (r) => {
        var i;
        if (!Ke$4(r)) {
          const { message: o } = j$2("MISSING_OR_INVALID", `respond() params: ${r}`);
          throw new Error(o);
        }
        const { topic: s, response: n } = r;
        try {
          await this.isValidSessionTopic(s);
        } catch (o) {
          throw (i = r == null ? void 0 : r.response) != null && i.id && this.cleanupAfterResponse(r), o;
        }
        if (!$3(n)) {
          const { message: o } = j$2("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(n)}`);
          throw new Error(o);
        }
      }), F$4(this, "isValidPing", async (r) => {
        if (!Ke$4(r)) {
          const { message: s } = j$2("MISSING_OR_INVALID", `ping() params: ${r}`);
          throw new Error(s);
        }
        const { topic: i } = r;
        await this.isValidSessionOrPairingTopic(i);
      }), F$4(this, "isValidEmit", async (r) => {
        if (!Ke$4(r)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `emit() params: ${r}`);
          throw new Error(a);
        }
        const { topic: i, event: s, chainId: n } = r;
        await this.isValidSessionTopic(i);
        const { namespaces: o } = this.client.session.get(i);
        if (!iu$1(o, n)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `emit() chainId: ${n}`);
          throw new Error(a);
        }
        if (!S3(s)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s)}`);
          throw new Error(a);
        }
        if (!A3(o, n, s.name)) {
          const { message: a } = j$2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s)}`);
          throw new Error(a);
        }
      }), F$4(this, "isValidDisconnect", async (r) => {
        if (!Ke$4(r)) {
          const { message: s } = j$2("MISSING_OR_INVALID", `disconnect() params: ${r}`);
          throw new Error(s);
        }
        const { topic: i } = r;
        await this.isValidSessionOrPairingTopic(i);
      }), F$4(this, "isValidAuthenticate", (r) => {
        const { chains: i, uri: s, domain: n, nonce: o } = r;
        if (!Array.isArray(i) || i.length === 0) throw new Error("chains is required and must be a non-empty array");
        if (!ge$3(s, false)) throw new Error("uri is required parameter");
        if (!ge$3(n, false)) throw new Error("domain is required parameter");
        if (!ge$3(o, false)) throw new Error("nonce is required parameter");
        if ([...new Set(i.map((c) => gi$2(c).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
        const { namespace: a } = gi$2(i[0]);
        if (a !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
      }), F$4(this, "getVerifyContext", async (r) => {
        const { attestationId: i, hash: s, encryptedId: n, metadata: o, transportType: a } = r, c = { verified: { verifyUrl: o.verifyUrl || rs$1, validation: "UNKNOWN", origin: o.url || "" } };
        try {
          if (a === ue$5.link_mode) {
            const u = this.getAppLinkIfEnabled(o, a);
            return c.verified.validation = u && new URL(u).origin === new URL(o.url).origin ? "VALID" : "INVALID", c;
          }
          const h = await this.client.core.verify.resolve({ attestationId: i, hash: s, encryptedId: n, verifyUrl: o.verifyUrl });
          h && (c.verified.origin = h.origin, c.verified.isScam = h.isScam, c.verified.validation = h.origin === new URL(o.url).origin ? "VALID" : "INVALID");
        } catch (h) {
          this.client.logger.warn(h);
        }
        return this.client.logger.debug(`Verify context: ${JSON.stringify(c)}`), c;
      }), F$4(this, "validateSessionProps", (r, i) => {
        Object.values(r).forEach((s, n) => {
          if (s == null) {
            const { message: o } = j$2("MISSING_OR_INVALID", `${i} must contain an existing value for each key. Received: ${s} for key ${Object.keys(r)[n]}`);
            throw new Error(o);
          }
        });
      }), F$4(this, "getPendingAuthRequest", (r) => {
        const i = this.client.auth.requests.get(r);
        return typeof i == "object" ? i : void 0;
      }), F$4(this, "addToRecentlyDeleted", (r, i) => {
        if (this.recentlyDeletedMap.set(r, i), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
          let s = 0;
          const n = this.recentlyDeletedLimit / 2;
          for (const o of this.recentlyDeletedMap.keys()) {
            if (s++ >= n) break;
            this.recentlyDeletedMap.delete(o);
          }
        }
      }), F$4(this, "checkRecentlyDeleted", (r) => {
        const i = this.recentlyDeletedMap.get(r);
        if (i) {
          const { message: s } = j$2("MISSING_OR_INVALID", `Record was recently deleted - ${i}: ${r}`);
          throw new Error(s);
        }
      }), F$4(this, "isLinkModeEnabled", (r, i) => {
        var s, n, o, a, c, h, u, l, f;
        return !r || i !== ue$5.link_mode ? false : ((n = (s = this.client.metadata) == null ? void 0 : s.redirect) == null ? void 0 : n.linkMode) === true && ((a = (o = this.client.metadata) == null ? void 0 : o.redirect) == null ? void 0 : a.universal) !== void 0 && ((h = (c = this.client.metadata) == null ? void 0 : c.redirect) == null ? void 0 : h.universal) !== "" && ((u = r == null ? void 0 : r.redirect) == null ? void 0 : u.universal) !== void 0 && ((l = r == null ? void 0 : r.redirect) == null ? void 0 : l.universal) !== "" && ((f = r == null ? void 0 : r.redirect) == null ? void 0 : f.linkMode) === true && this.client.core.linkModeSupportedApps.includes(r.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < "u";
      }), F$4(this, "getAppLinkIfEnabled", (r, i) => {
        var s;
        return this.isLinkModeEnabled(r, i) ? (s = r == null ? void 0 : r.redirect) == null ? void 0 : s.universal : void 0;
      }), F$4(this, "handleLinkModeMessage", ({ url: r }) => {
        if (!r || !r.includes("wc_ev") || !r.includes("topic")) return;
        const i = wh$1(r, "topic") || "", s = decodeURIComponent(wh$1(r, "wc_ev") || ""), n = this.client.session.keys.includes(i);
        n && this.client.session.update(i, { transportType: ue$5.link_mode }), this.client.core.dispatchEnvelope({ topic: i, message: s, sessionExists: n });
      }), F$4(this, "registerLinkModeListeners", async () => {
        var r;
        if (Ka() || yr$1() && (r = this.client.metadata.redirect) != null && r.linkMode) {
          const i = global == null ? void 0 : global.Linking;
          if (typeof i < "u") {
            i.addEventListener("url", this.handleLinkModeMessage, this.client.name);
            const s = await i.getInitialURL();
            s && setTimeout(() => {
              this.handleLinkModeMessage({ url: s });
            }, 50);
          }
        }
      }), F$4(this, "getTVFParams", (r, i, s) => {
        var n, o, a;
        if (!((n = i.request) != null && n.method)) return {};
        const c = { correlationId: r, rpcMethods: [i.request.method], chainId: i.chainId };
        try {
          const h = this.extractTxHashesFromResult(i.request, s);
          c.txHashes = h, c.contractAddresses = this.isValidContractData(i.request.params) ? [(a = (o = i.request.params) == null ? void 0 : o[0]) == null ? void 0 : a.to] : [];
        } catch (h) {
          this.client.logger.warn("Error getting TVF params", h);
        }
        return c;
      }), F$4(this, "isValidContractData", (r) => {
        var i;
        if (!r) return false;
        try {
          const s = (r == null ? void 0 : r.data) || ((i = r == null ? void 0 : r[0]) == null ? void 0 : i.data);
          if (!s.startsWith("0x")) return !1;
          const n = s.slice(2);
          return /^[0-9a-fA-F]*$/.test(n) ? n.length % 2 === 0 : !1;
        } catch {
        }
        return false;
      }), F$4(this, "extractTxHashesFromResult", (r, i) => {
        var s;
        try {
          if (!i) return [];
          const n = r.method, o = JS[n];
          if (n === "sui_signTransaction") return [e2(i.transactionBytes)];
          if (n === "near_signTransaction") return [$h$1(i)];
          if (n === "near_signTransactions") return i.map((c) => $h$1(c));
          if (n === "xrpl_signTransactionFor" || n === "xrpl_signTransaction") return [(s = i.tx_json) == null ? void 0 : s.hash];
          if (n === "polkadot_signTransaction") return [K3({ transaction: r.params.transactionPayload, signature: i.signature })];
          if (n === "algo_signTxn") return lt$4(i) ? i.map((c) => Sh$1(c)) : [Sh$1(i)];
          if (n === "cosmos_signDirect") return [r2(i)];
          if (typeof i == "string") return [i];
          const a = i[o.key];
          if (lt$4(a)) return n === "solana_signAllTransactions" ? a.map((c) => Xv$1(c)) : a;
          if (typeof a == "string") return [a];
        } catch (n) {
          this.client.logger.warn("Error extracting tx hashes from result", n);
        }
        return [];
      });
    }
    async processPendingMessageEvents() {
      try {
        const e = this.client.session.keys, r = this.client.core.relayer.messages.getWithoutAck(e);
        for (const [i, s] of Object.entries(r)) for (const n of s) try {
          await this.onProviderMessageEvent({ topic: i, message: n, publishedAt: Date.now() });
        } catch {
          this.client.logger.warn(`Error processing pending message event for topic: ${i}, message: ${n}`);
        }
      } catch (e) {
        this.client.logger.warn("processPendingMessageEvents failed", e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = j$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async confirmOnlineStateOrThrow() {
      await this.client.core.relayer.confirmOnlineStateOrThrow();
    }
    registerRelayerEvents() {
      this.client.core.relayer.on(_e$5.message, (e) => {
        this.onProviderMessageEvent(e);
      });
    }
    async onRelayMessage(e) {
      const { topic: r, message: i, attestation: s, transportType: n } = e, { publicKey: o } = this.client.auth.authKeys.keys.includes(sn$3) ? this.client.auth.authKeys.get(sn$3) : { publicKey: void 0 };
      try {
        const a = await this.client.core.crypto.decode(r, i, { receiverPublicKey: o, encoding: n === ue$5.link_mode ? ur$1 : _t$4 });
        cc$1(a) ? (this.client.core.history.set(r, a), await this.onRelayEventRequest({ topic: r, payload: a, attestation: s, transportType: n, encryptedId: Rt$4(i) })) : Ln$2(a) ? (await this.client.core.history.resolve(a), await this.onRelayEventResponse({ topic: r, payload: a, transportType: n }), this.client.core.history.delete(r, a.id)) : await this.onRelayEventUnknownPayload({ topic: r, payload: a, transportType: n }), await this.client.core.relayer.messages.ack(r, i);
      } catch (a) {
        this.client.logger.error(a);
      }
    }
    registerExpirerEvents() {
      this.client.core.expirer.on(at$4.expired, async (e) => {
        const { topic: r, id: i } = ed$1(e.target);
        if (i && this.client.pendingRequest.keys.includes(i)) return await this.deletePendingSessionRequest(i, j$2("EXPIRED"), true);
        if (i && this.client.auth.requests.keys.includes(i)) return await this.deletePendingAuthRequest(i, j$2("EXPIRED"), true);
        r ? this.client.session.keys.includes(r) && (await this.deleteSession({ topic: r, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: r })) : i && (await this.deleteProposal(i, true), this.client.events.emit("proposal_expire", { id: i }));
      });
    }
    registerPairingEvents() {
      this.client.core.pairing.events.on($r$1.create, (e) => this.onPairingCreated(e)), this.client.core.pairing.events.on($r$1.delete, (e) => {
        this.addToRecentlyDeleted(e.topic, "pairing");
      });
    }
    isValidPairingTopic(e) {
      if (!ge$3(e, false)) {
        const { message: r } = j$2("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
        throw new Error(r);
      }
      if (!this.client.core.pairing.pairings.keys.includes(e)) {
        const { message: r } = j$2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
        throw new Error(r);
      }
      if (or$1(this.client.core.pairing.pairings.get(e).expiry)) {
        const { message: r } = j$2("EXPIRED", `pairing topic: ${e}`);
        throw new Error(r);
      }
    }
    async isValidSessionTopic(e) {
      if (!ge$3(e, false)) {
        const { message: r } = j$2("MISSING_OR_INVALID", `session topic should be a string: ${e}`);
        throw new Error(r);
      }
      if (this.checkRecentlyDeleted(e), !this.client.session.keys.includes(e)) {
        const { message: r } = j$2("NO_MATCHING_KEY", `session topic doesn't exist: ${e}`);
        throw new Error(r);
      }
      if (or$1(this.client.session.get(e).expiry)) {
        await this.deleteSession({ topic: e });
        const { message: r } = j$2("EXPIRED", `session topic: ${e}`);
        throw new Error(r);
      }
      if (!this.client.core.crypto.keychain.has(e)) {
        const { message: r } = j$2("MISSING_OR_INVALID", `session topic does not exist in keychain: ${e}`);
        throw await this.deleteSession({ topic: e }), new Error(r);
      }
    }
    async isValidSessionOrPairingTopic(e) {
      if (this.checkRecentlyDeleted(e), this.client.session.keys.includes(e)) await this.isValidSessionTopic(e);
      else if (this.client.core.pairing.pairings.keys.includes(e)) this.isValidPairingTopic(e);
      else if (ge$3(e, false)) {
        const { message: r } = j$2("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${e}`);
        throw new Error(r);
      } else {
        const { message: r } = j$2("MISSING_OR_INVALID", `session or pairing topic should be a string: ${e}`);
        throw new Error(r);
      }
    }
    async isValidProposalId(e) {
      if (!_3(e)) {
        const { message: r } = j$2("MISSING_OR_INVALID", `proposal id should be a number: ${e}`);
        throw new Error(r);
      }
      if (!this.client.proposal.keys.includes(e)) {
        const { message: r } = j$2("NO_MATCHING_KEY", `proposal id doesn't exist: ${e}`);
        throw new Error(r);
      }
      if (or$1(this.client.proposal.get(e).expiryTimestamp)) {
        await this.deleteProposal(e);
        const { message: r } = j$2("EXPIRED", `proposal id: ${e}`);
        throw new Error(r);
      }
    }
  }
  class uD extends Mr$1 {
    constructor(e, r) {
      super(e, r, WS, hc$1), this.core = e, this.logger = r;
    }
  }
  let lD = class extends Mr$1 {
    constructor(e, r) {
      super(e, r, GS, hc$1), this.core = e, this.logger = r;
    }
  };
  class fD extends Mr$1 {
    constructor(e, r) {
      super(e, r, ZS, hc$1, (i) => i.id), this.core = e, this.logger = r;
    }
  }
  class dD extends Mr$1 {
    constructor(e, r) {
      super(e, r, tD, Mn$2, () => sn$3), this.core = e, this.logger = r;
    }
  }
  class pD extends Mr$1 {
    constructor(e, r) {
      super(e, r, rD, Mn$2), this.core = e, this.logger = r;
    }
  }
  class gD extends Mr$1 {
    constructor(e, r) {
      super(e, r, iD, Mn$2, (i) => i.id), this.core = e, this.logger = r;
    }
  }
  var yD = Object.defineProperty, wD = (t, e, r) => e in t ? yD(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, So$2 = (t, e, r) => wD(t, typeof e != "symbol" ? e + "" : e, r);
  class mD {
    constructor(e, r) {
      this.core = e, this.logger = r, So$2(this, "authKeys"), So$2(this, "pairingTopics"), So$2(this, "requests"), this.authKeys = new dD(this.core, this.logger), this.pairingTopics = new pD(this.core, this.logger), this.requests = new gD(this.core, this.logger);
    }
    async init() {
      await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
    }
  }
  var bD = Object.defineProperty, vD = (t, e, r) => e in t ? bD(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Z$3 = (t, e, r) => vD(t, typeof e != "symbol" ? e + "" : e, r);
  let ED = class $p extends EI$1 {
    constructor(e) {
      super(e), Z$3(this, "protocol", _p$1), Z$3(this, "version", Ip$1), Z$3(this, "name", xo$2.name), Z$3(this, "metadata"), Z$3(this, "core"), Z$3(this, "logger"), Z$3(this, "events", new st$3.EventEmitter()), Z$3(this, "engine"), Z$3(this, "session"), Z$3(this, "proposal"), Z$3(this, "pendingRequest"), Z$3(this, "auth"), Z$3(this, "signConfig"), Z$3(this, "on", (i, s) => this.events.on(i, s)), Z$3(this, "once", (i, s) => this.events.once(i, s)), Z$3(this, "off", (i, s) => this.events.off(i, s)), Z$3(this, "removeListener", (i, s) => this.events.removeListener(i, s)), Z$3(this, "removeAllListeners", (i) => this.events.removeAllListeners(i)), Z$3(this, "connect", async (i) => {
        try {
          return await this.engine.connect(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "pair", async (i) => {
        try {
          return await this.engine.pair(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "approve", async (i) => {
        try {
          return await this.engine.approve(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "reject", async (i) => {
        try {
          return await this.engine.reject(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "update", async (i) => {
        try {
          return await this.engine.update(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "extend", async (i) => {
        try {
          return await this.engine.extend(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "request", async (i) => {
        try {
          return await this.engine.request(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "respond", async (i) => {
        try {
          return await this.engine.respond(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "ping", async (i) => {
        try {
          return await this.engine.ping(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "emit", async (i) => {
        try {
          return await this.engine.emit(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "disconnect", async (i) => {
        try {
          return await this.engine.disconnect(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "find", (i) => {
        try {
          return this.engine.find(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "getPendingSessionRequests", () => {
        try {
          return this.engine.getPendingSessionRequests();
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), Z$3(this, "authenticate", async (i, s) => {
        try {
          return await this.engine.authenticate(i, s);
        } catch (n) {
          throw this.logger.error(n.message), n;
        }
      }), Z$3(this, "formatAuthMessage", (i) => {
        try {
          return this.engine.formatAuthMessage(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "approveSessionAuthenticate", async (i) => {
        try {
          return await this.engine.approveSessionAuthenticate(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), Z$3(this, "rejectSessionAuthenticate", async (i) => {
        try {
          return await this.engine.rejectSessionAuthenticate(i);
        } catch (s) {
          throw this.logger.error(s.message), s;
        }
      }), this.name = (e == null ? void 0 : e.name) || xo$2.name, this.metadata = K1$1(e == null ? void 0 : e.metadata), this.signConfig = e == null ? void 0 : e.signConfig;
      const r = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : _s$1(Nn$2({ level: (e == null ? void 0 : e.logger) || xo$2.logger }));
      this.core = (e == null ? void 0 : e.core) || new KS(e), this.logger = Me$4(r, this.name), this.session = new lD(this.core, this.logger), this.proposal = new uD(this.core, this.logger), this.pendingRequest = new fD(this.core, this.logger), this.engine = new hD(this), this.auth = new mD(this.core, this.logger);
    }
    static async init(e) {
      const r = new $p(e);
      return await r.initialize(), r;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get pairing() {
      return this.core.pairing.pairings;
    }
    async initialize() {
      this.logger.trace("Initialized");
      try {
        await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info("SignClient Initialization Success"), setTimeout(() => {
          this.engine.processRelayMessageCache();
        }, L$3.toMiliseconds(L$3.ONE_SECOND));
      } catch (e) {
        throw this.logger.info("SignClient Initialization Failure"), this.logger.error(e.message), e;
      }
    }
  };
  var Ea$1 = { exports: {} };
  (function(t, e) {
    var r = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof Tt$4 < "u" && Tt$4, i = function() {
      function n() {
        this.fetch = false, this.DOMException = r.DOMException;
      }
      return n.prototype = r, new n();
    }();
    ((function(n) {
      (function(o) {
        var a = typeof n < "u" && n || typeof self < "u" && self || // eslint-disable-next-line no-undef
        typeof Tt$4 < "u" && Tt$4 || {}, c = {
          searchParams: "URLSearchParams" in a,
          iterable: "Symbol" in a && "iterator" in Symbol,
          blob: "FileReader" in a && "Blob" in a && function() {
            try {
              return new Blob(), !0;
            } catch {
              return false;
            }
          }(),
          formData: "FormData" in a,
          arrayBuffer: "ArrayBuffer" in a
        };
        function h(y) {
          return y && DataView.prototype.isPrototypeOf(y);
        }
        if (c.arrayBuffer)
          var u = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ], l = ArrayBuffer.isView || function(y) {
            return y && u.indexOf(Object.prototype.toString.call(y)) > -1;
          };
        function f(y) {
          if (typeof y != "string" && (y = String(y)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(y) || y === "")
            throw new TypeError('Invalid character in header field name: "' + y + '"');
          return y.toLowerCase();
        }
        function p(y) {
          return typeof y != "string" && (y = String(y)), y;
        }
        function d(y) {
          var w = {
            next: function() {
              var v = y.shift();
              return { done: v === void 0, value: v };
            }
          };
          return c.iterable && (w[Symbol.iterator] = function() {
            return w;
          }), w;
        }
        function g(y) {
          this.map = {}, y instanceof g ? y.forEach(function(w, v) {
            this.append(v, w);
          }, this) : Array.isArray(y) ? y.forEach(function(w) {
            if (w.length != 2)
              throw new TypeError("Headers constructor: expected name/value pair to be length 2, found" + w.length);
            this.append(w[0], w[1]);
          }, this) : y && Object.getOwnPropertyNames(y).forEach(function(w) {
            this.append(w, y[w]);
          }, this);
        }
        g.prototype.append = function(y, w) {
          y = f(y), w = p(w);
          var v = this.map[y];
          this.map[y] = v ? v + ", " + w : w;
        }, g.prototype.delete = function(y) {
          delete this.map[f(y)];
        }, g.prototype.get = function(y) {
          return y = f(y), this.has(y) ? this.map[y] : null;
        }, g.prototype.has = function(y) {
          return this.map.hasOwnProperty(f(y));
        }, g.prototype.set = function(y, w) {
          this.map[f(y)] = p(w);
        }, g.prototype.forEach = function(y, w) {
          for (var v in this.map)
            this.map.hasOwnProperty(v) && y.call(w, this.map[v], v, this);
        }, g.prototype.keys = function() {
          var y = [];
          return this.forEach(function(w, v) {
            y.push(v);
          }), d(y);
        }, g.prototype.values = function() {
          var y = [];
          return this.forEach(function(w) {
            y.push(w);
          }), d(y);
        }, g.prototype.entries = function() {
          var y = [];
          return this.forEach(function(w, v) {
            y.push([v, w]);
          }), d(y);
        }, c.iterable && (g.prototype[Symbol.iterator] = g.prototype.entries);
        function m(y) {
          if (!y._noBody) {
            if (y.bodyUsed)
              return Promise.reject(new TypeError("Already read"));
            y.bodyUsed = true;
          }
        }
        function _(y) {
          return new Promise(function(w, v) {
            y.onload = function() {
              w(y.result);
            }, y.onerror = function() {
              v(y.error);
            };
          });
        }
        function I(y) {
          var w = new FileReader(), v = _(w);
          return w.readAsArrayBuffer(y), v;
        }
        function E(y) {
          var w = new FileReader(), v = _(w), $ = /charset=([A-Za-z0-9_-]+)/.exec(y.type), x = $ ? $[1] : "utf-8";
          return w.readAsText(y, x), v;
        }
        function P(y) {
          for (var w = new Uint8Array(y), v = new Array(w.length), $ = 0; $ < w.length; $++)
            v[$] = String.fromCharCode(w[$]);
          return v.join("");
        }
        function A(y) {
          if (y.slice)
            return y.slice(0);
          var w = new Uint8Array(y.byteLength);
          return w.set(new Uint8Array(y)), w.buffer;
        }
        function k() {
          return this.bodyUsed = false, this._initBody = function(y) {
            this.bodyUsed = this.bodyUsed, this._bodyInit = y, y ? typeof y == "string" ? this._bodyText = y : c.blob && Blob.prototype.isPrototypeOf(y) ? this._bodyBlob = y : c.formData && FormData.prototype.isPrototypeOf(y) ? this._bodyFormData = y : c.searchParams && URLSearchParams.prototype.isPrototypeOf(y) ? this._bodyText = y.toString() : c.arrayBuffer && c.blob && h(y) ? (this._bodyArrayBuffer = A(y.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : c.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(y) || l(y)) ? this._bodyArrayBuffer = A(y) : this._bodyText = y = Object.prototype.toString.call(y) : (this._noBody = true, this._bodyText = ""), this.headers.get("content-type") || (typeof y == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : c.searchParams && URLSearchParams.prototype.isPrototypeOf(y) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, c.blob && (this.blob = function() {
            var y = m(this);
            if (y)
              return y;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }), this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              var y = m(this);
              return y || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(
                this._bodyArrayBuffer.buffer.slice(
                  this._bodyArrayBuffer.byteOffset,
                  this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                )
              ) : Promise.resolve(this._bodyArrayBuffer));
            } else {
              if (c.blob)
                return this.blob().then(I);
              throw new Error("could not read as ArrayBuffer");
            }
          }, this.text = function() {
            var y = m(this);
            if (y)
              return y;
            if (this._bodyBlob)
              return E(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(P(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, c.formData && (this.formData = function() {
            return this.text().then(C);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        var U = ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"];
        function R(y) {
          var w = y.toUpperCase();
          return U.indexOf(w) > -1 ? w : y;
        }
        function b(y, w) {
          if (!(this instanceof b))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          w = w || {};
          var v = w.body;
          if (y instanceof b) {
            if (y.bodyUsed)
              throw new TypeError("Already read");
            this.url = y.url, this.credentials = y.credentials, w.headers || (this.headers = new g(y.headers)), this.method = y.method, this.mode = y.mode, this.signal = y.signal, !v && y._bodyInit != null && (v = y._bodyInit, y.bodyUsed = true);
          } else
            this.url = String(y);
          if (this.credentials = w.credentials || this.credentials || "same-origin", (w.headers || !this.headers) && (this.headers = new g(w.headers)), this.method = R(w.method || this.method || "GET"), this.mode = w.mode || this.mode || null, this.signal = w.signal || this.signal || function() {
            if ("AbortController" in a) {
              var O = new AbortController();
              return O.signal;
            }
          }(), this.referrer = null, (this.method === "GET" || this.method === "HEAD") && v)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          if (this._initBody(v), (this.method === "GET" || this.method === "HEAD") && (w.cache === "no-store" || w.cache === "no-cache")) {
            var $ = /([?&])_=[^&]*/;
            if ($.test(this.url))
              this.url = this.url.replace($, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
            else {
              var x = /\?/;
              this.url += (x.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
            }
          }
        }
        b.prototype.clone = function() {
          return new b(this, { body: this._bodyInit });
        };
        function C(y) {
          var w = new FormData();
          return y.trim().split("&").forEach(function(v) {
            if (v) {
              var $ = v.split("="), x = $.shift().replace(/\+/g, " "), O = $.join("=").replace(/\+/g, " ");
              w.append(decodeURIComponent(x), decodeURIComponent(O));
            }
          }), w;
        }
        function S(y) {
          var w = new g(), v = y.replace(/\r?\n[\t ]+/g, " ");
          return v.split("\r").map(function($) {
            return $.indexOf(`
`) === 0 ? $.substr(1, $.length) : $;
          }).forEach(function($) {
            var x = $.split(":"), O = x.shift().trim();
            if (O) {
              var B = x.join(":").trim();
              try {
                w.append(O, B);
              } catch (q) {
                console.warn("Response " + q.message);
              }
            }
          }), w;
        }
        k.call(b.prototype);
        function D(y, w) {
          if (!(this instanceof D))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          if (w || (w = {}), this.type = "default", this.status = w.status === void 0 ? 200 : w.status, this.status < 200 || this.status > 599)
            throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
          this.ok = this.status >= 200 && this.status < 300, this.statusText = w.statusText === void 0 ? "" : "" + w.statusText, this.headers = new g(w.headers), this.url = w.url || "", this._initBody(y);
        }
        k.call(D.prototype), D.prototype.clone = function() {
          return new D(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new g(this.headers),
            url: this.url
          });
        }, D.error = function() {
          var y = new D(null, { status: 200, statusText: "" });
          return y.ok = false, y.status = 0, y.type = "error", y;
        };
        var T = [301, 302, 303, 307, 308];
        D.redirect = function(y, w) {
          if (T.indexOf(w) === -1)
            throw new RangeError("Invalid status code");
          return new D(null, { status: w, headers: { location: y } });
        }, o.DOMException = a.DOMException;
        try {
          new o.DOMException();
        } catch {
          o.DOMException = function(w, v) {
            this.message = w, this.name = v;
            var $ = Error(w);
            this.stack = $.stack;
          }, o.DOMException.prototype = Object.create(Error.prototype), o.DOMException.prototype.constructor = o.DOMException;
        }
        function N(y, w) {
          return new Promise(function(v, $) {
            var x = new b(y, w);
            if (x.signal && x.signal.aborted)
              return $(new o.DOMException("Aborted", "AbortError"));
            var O = new XMLHttpRequest();
            function B() {
              O.abort();
            }
            O.onload = function() {
              var M = {
                statusText: O.statusText,
                headers: S(O.getAllResponseHeaders() || "")
              };
              x.url.indexOf("file://") === 0 && (O.status < 200 || O.status > 599) ? M.status = 200 : M.status = O.status, M.url = "responseURL" in O ? O.responseURL : M.headers.get("X-Request-URL");
              var V = "response" in O ? O.response : O.responseText;
              setTimeout(function() {
                v(new D(V, M));
              }, 0);
            }, O.onerror = function() {
              setTimeout(function() {
                $(new TypeError("Network request failed"));
              }, 0);
            }, O.ontimeout = function() {
              setTimeout(function() {
                $(new TypeError("Network request timed out"));
              }, 0);
            }, O.onabort = function() {
              setTimeout(function() {
                $(new o.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function q(M) {
              try {
                return M === "" && a.location.href ? a.location.href : M;
              } catch {
                return M;
              }
            }
            if (O.open(x.method, q(x.url), true), x.credentials === "include" ? O.withCredentials = true : x.credentials === "omit" && (O.withCredentials = false), "responseType" in O && (c.blob ? O.responseType = "blob" : c.arrayBuffer && (O.responseType = "arraybuffer")), w && typeof w.headers == "object" && !(w.headers instanceof g || a.Headers && w.headers instanceof a.Headers)) {
              var H = [];
              Object.getOwnPropertyNames(w.headers).forEach(function(M) {
                H.push(f(M)), O.setRequestHeader(M, p(w.headers[M]));
              }), x.headers.forEach(function(M, V) {
                H.indexOf(V) === -1 && O.setRequestHeader(V, M);
              });
            } else
              x.headers.forEach(function(M, V) {
                O.setRequestHeader(V, M);
              });
            x.signal && (x.signal.addEventListener("abort", B), O.onreadystatechange = function() {
              O.readyState === 4 && x.signal.removeEventListener("abort", B);
            }), O.send(typeof x._bodyInit > "u" ? null : x._bodyInit);
          });
        }
        return N.polyfill = true, a.fetch || (a.fetch = N, a.Headers = g, a.Request = b, a.Response = D), o.Headers = g, o.Request = b, o.Response = D, o.fetch = N, Object.defineProperty(o, "__esModule", { value: true }), o;
      })({});
    }))(i), i.fetch.ponyfill = true, delete i.fetch.polyfill;
    var s = r.fetch ? r : i;
    e = s.fetch, e.default = s.fetch, e.fetch = s.fetch, e.Headers = s.Headers, e.Request = s.Request, e.Response = s.Response, t.exports = e;
  })(Ea$1, Ea$1.exports);
  var _D = Ea$1.exports;
  const Qu$1 = /* @__PURE__ */ Aa$1(_D);
  var ID = Object.defineProperty, xD = Object.defineProperties, $D = Object.getOwnPropertyDescriptors, Xu$1 = Object.getOwnPropertySymbols, SD = Object.prototype.hasOwnProperty, DD = Object.prototype.propertyIsEnumerable, el$1 = (t, e, r) => e in t ? ID(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, tl$1 = (t, e) => {
    for (var r in e || (e = {})) SD.call(e, r) && el$1(t, r, e[r]);
    if (Xu$1) for (var r of Xu$1(e)) DD.call(e, r) && el$1(t, r, e[r]);
    return t;
  }, rl$1 = (t, e) => xD(t, $D(e));
  const AD = { Accept: "application/json", "Content-Type": "application/json" }, OD = "POST", il$1 = { headers: AD, method: OD }, sl$1 = 10;
  let xt$4 = class xt {
    constructor(e, r = false) {
      if (this.url = e, this.disableProviderPing = r, this.events = new st$3.EventEmitter(), this.isAvailable = false, this.registering = false, !Eu$1(e)) throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);
      this.url = e, this.disableProviderPing = r;
    }
    get connected() {
      return this.isAvailable;
    }
    get connecting() {
      return this.registering;
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    async open(e = this.url) {
      await this.register(e);
    }
    async close() {
      if (!this.isAvailable) throw new Error("Connection already closed");
      this.onClose();
    }
    async send(e) {
      this.isAvailable || await this.register();
      try {
        const r = Wt$4(e), i = await (await Qu$1(this.url, rl$1(tl$1({}, il$1), { body: r }))).json();
        this.onPayload({ data: i });
      } catch (r) {
        this.onError(e.id, r);
      }
    }
    async register(e = this.url) {
      if (!Eu$1(e)) throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);
      if (this.registering) {
        const r = this.events.getMaxListeners();
        return (this.events.listenerCount("register_error") >= r || this.events.listenerCount("open") >= r) && this.events.setMaxListeners(r + 1), new Promise((i, s) => {
          this.events.once("register_error", (n) => {
            this.resetMaxListeners(), s(n);
          }), this.events.once("open", () => {
            if (this.resetMaxListeners(), typeof this.isAvailable > "u") return s(new Error("HTTP connection is missing or invalid"));
            i();
          });
        });
      }
      this.url = e, this.registering = true;
      try {
        if (!this.disableProviderPing) {
          const r = Wt$4({ id: 1, jsonrpc: "2.0", method: "test", params: [] });
          await Qu$1(e, rl$1(tl$1({}, il$1), { body: r }));
        }
        this.onOpen();
      } catch (r) {
        const i = this.parseError(r);
        throw this.events.emit("register_error", i), this.onClose(), i;
      }
    }
    onOpen() {
      this.isAvailable = true, this.registering = false, this.events.emit("open");
    }
    onClose() {
      this.isAvailable = false, this.registering = false, this.events.emit("close");
    }
    onPayload(e) {
      if (typeof e.data > "u") return;
      const r = typeof e.data == "string" ? Br(e.data) : e.data;
      this.events.emit("payload", r);
    }
    onError(e, r) {
      const i = this.parseError(r), s = i.message || i.toString(), n = kn$2(e, s);
      this.events.emit("payload", n);
    }
    parseError(e, r = this.url) {
      return ep$1(e, r, "HTTP");
    }
    resetMaxListeners() {
      this.events.getMaxListeners() > sl$1 && this.events.setMaxListeners(sl$1);
    }
  };
  const nl$1 = "error", PD = "wss://relay.walletconnect.org", CD = "wc", TD = "universal_provider", Hs$1 = `${CD}@2:${TD}:`, Sp$1 = "https://rpc.walletconnect.org/v1/", li$1 = "generic", RD = `${Sp$1}bundler`, gt$3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
  function uc$1(t) {
    return t == null || typeof t != "object" && typeof t != "function";
  }
  function Dp$1(t) {
    return Object.getOwnPropertySymbols(t).filter((e) => Object.prototype.propertyIsEnumerable.call(t, e));
  }
  function Ap$1(t) {
    return t == null ? t === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(t);
  }
  const BD = "[object RegExp]", Op$1 = "[object String]", Pp$1 = "[object Number]", Cp$1 = "[object Boolean]", Tp$1 = "[object Arguments]", FD = "[object Symbol]", ND = "[object Date]", UD = "[object Map]", kD = "[object Set]", LD = "[object Array]", jD = "[object ArrayBuffer]", MD = "[object Object]", qD = "[object DataView]", zD = "[object Uint8Array]", HD = "[object Uint8ClampedArray]", VD = "[object Uint16Array]", KD = "[object Uint32Array]", WD = "[object Int8Array]", GD = "[object Int16Array]", YD = "[object Int32Array]", JD = "[object Float32Array]", ZD = "[object Float64Array]";
  function lc$1(t) {
    return ArrayBuffer.isView(t) && !(t instanceof DataView);
  }
  function QD(t, e) {
    return di$2(t, void 0, t, /* @__PURE__ */ new Map(), e);
  }
  function di$2(t, e, r, i = /* @__PURE__ */ new Map(), s = void 0) {
    const n = s == null ? void 0 : s(t, e, r, i);
    if (n != null) return n;
    if (uc$1(t)) return t;
    if (i.has(t)) return i.get(t);
    if (Array.isArray(t)) {
      const o = new Array(t.length);
      i.set(t, o);
      for (let a = 0; a < t.length; a++) o[a] = di$2(t[a], a, r, i, s);
      return Object.hasOwn(t, "index") && (o.index = t.index), Object.hasOwn(t, "input") && (o.input = t.input), o;
    }
    if (t instanceof Date) return new Date(t.getTime());
    if (t instanceof RegExp) {
      const o = new RegExp(t.source, t.flags);
      return o.lastIndex = t.lastIndex, o;
    }
    if (t instanceof Map) {
      const o = /* @__PURE__ */ new Map();
      i.set(t, o);
      for (const [a, c] of t) o.set(a, di$2(c, a, r, i, s));
      return o;
    }
    if (t instanceof Set) {
      const o = /* @__PURE__ */ new Set();
      i.set(t, o);
      for (const a of t) o.add(di$2(a, void 0, r, i, s));
      return o;
    }
    if (typeof Buffer < "u" && Buffer.isBuffer(t)) return t.subarray();
    if (lc$1(t)) {
      const o = new (Object.getPrototypeOf(t)).constructor(t.length);
      i.set(t, o);
      for (let a = 0; a < t.length; a++) o[a] = di$2(t[a], a, r, i, s);
      return o;
    }
    if (t instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && t instanceof SharedArrayBuffer) return t.slice(0);
    if (t instanceof DataView) {
      const o = new DataView(t.buffer.slice(0), t.byteOffset, t.byteLength);
      return i.set(t, o), Sr$1(o, t, r, i, s), o;
    }
    if (typeof File < "u" && t instanceof File) {
      const o = new File([t], t.name, { type: t.type });
      return i.set(t, o), Sr$1(o, t, r, i, s), o;
    }
    if (t instanceof Blob) {
      const o = new Blob([t], { type: t.type });
      return i.set(t, o), Sr$1(o, t, r, i, s), o;
    }
    if (t instanceof Error) {
      const o = new t.constructor();
      return i.set(t, o), o.message = t.message, o.name = t.name, o.stack = t.stack, o.cause = t.cause, Sr$1(o, t, r, i, s), o;
    }
    if (typeof t == "object" && XD(t)) {
      const o = Object.create(Object.getPrototypeOf(t));
      return i.set(t, o), Sr$1(o, t, r, i, s), o;
    }
    return t;
  }
  function Sr$1(t, e, r = t, i, s) {
    const n = [...Object.keys(e), ...Dp$1(e)];
    for (let o = 0; o < n.length; o++) {
      const a = n[o], c = Object.getOwnPropertyDescriptor(t, a);
      (c == null || c.writable) && (t[a] = di$2(e[a], a, r, i, s));
    }
  }
  function XD(t) {
    switch (Ap$1(t)) {
      case Tp$1:
      case LD:
      case jD:
      case qD:
      case Cp$1:
      case ND:
      case JD:
      case ZD:
      case WD:
      case GD:
      case YD:
      case UD:
      case Pp$1:
      case MD:
      case BD:
      case kD:
      case Op$1:
      case FD:
      case zD:
      case HD:
      case VD:
      case KD:
        return true;
      default:
        return false;
    }
  }
  function eA(t, e) {
    return QD(t, (r, i, s, n) => {
      if (typeof t == "object") switch (Object.prototype.toString.call(t)) {
        case Pp$1:
        case Op$1:
        case Cp$1: {
          const o = new t.constructor(t == null ? void 0 : t.valueOf());
          return Sr$1(o, t), o;
        }
        case Tp$1: {
          const o = {};
          return Sr$1(o, t), o.length = t.length, o[Symbol.iterator] = t[Symbol.iterator], o;
        }
        default:
          return;
      }
    });
  }
  function ol$1(t) {
    return eA(t);
  }
  function al$1(t) {
    return t !== null && typeof t == "object" && Ap$1(t) === "[object Arguments]";
  }
  function cl$1(t) {
    return typeof t == "object" && t !== null;
  }
  function tA() {
  }
  function rA(t) {
    return lc$1(t);
  }
  function iA(t) {
    var r;
    if (typeof t != "object" || t == null) return false;
    if (Object.getPrototypeOf(t) === null) return true;
    if (Object.prototype.toString.call(t) !== "[object Object]") {
      const i = t[Symbol.toStringTag];
      return i == null || !((r = Object.getOwnPropertyDescriptor(t, Symbol.toStringTag)) != null && r.writable) ? false : t.toString() === `[object ${i}]`;
    }
    let e = t;
    for (; Object.getPrototypeOf(e) !== null; ) e = Object.getPrototypeOf(e);
    return Object.getPrototypeOf(t) === e;
  }
  function sA(t) {
    if (uc$1(t)) return t;
    if (Array.isArray(t) || lc$1(t) || t instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && t instanceof SharedArrayBuffer) return t.slice(0);
    const e = Object.getPrototypeOf(t), r = e.constructor;
    if (t instanceof Date || t instanceof Map || t instanceof Set) return new r(t);
    if (t instanceof RegExp) {
      const i = new r(t);
      return i.lastIndex = t.lastIndex, i;
    }
    if (t instanceof DataView) return new r(t.buffer.slice(0));
    if (t instanceof Error) {
      const i = new r(t.message);
      return i.stack = t.stack, i.name = t.name, i.cause = t.cause, i;
    }
    if (typeof File < "u" && t instanceof File) return new r([t], t.name, { type: t.type, lastModified: t.lastModified });
    if (typeof t == "object") {
      const i = Object.create(e);
      return Object.assign(i, t);
    }
    return t;
  }
  function nA(t, ...e) {
    const r = e.slice(0, -1), i = e[e.length - 1];
    let s = t;
    for (let n = 0; n < r.length; n++) {
      const o = r[n];
      s = _a$1(s, o, i, /* @__PURE__ */ new Map());
    }
    return s;
  }
  function _a$1(t, e, r, i) {
    if (uc$1(t) && (t = Object(t)), e == null || typeof e != "object") return t;
    if (i.has(e)) return sA(i.get(e));
    if (i.set(e, t), Array.isArray(e)) {
      e = e.slice();
      for (let n = 0; n < e.length; n++) e[n] = e[n] ?? void 0;
    }
    const s = [...Object.keys(e), ...Dp$1(e)];
    for (let n = 0; n < s.length; n++) {
      const o = s[n];
      let a = e[o], c = t[o];
      if (al$1(a) && (a = { ...a }), al$1(c) && (c = { ...c }), typeof Buffer < "u" && Buffer.isBuffer(a) && (a = ol$1(a)), Array.isArray(a)) if (typeof c == "object" && c != null) {
        const u = [], l = Reflect.ownKeys(c);
        for (let f = 0; f < l.length; f++) {
          const p = l[f];
          u[p] = c[p];
        }
        c = u;
      } else c = [];
      const h = r(c, a, o, t, e, i);
      h != null ? t[o] = h : Array.isArray(a) || cl$1(c) && cl$1(a) ? t[o] = _a$1(c, a, r, i) : c == null && iA(a) ? t[o] = _a$1({}, a, r, i) : c == null && rA(a) ? t[o] = ol$1(a) : (c === void 0 || a !== void 0) && (t[o] = a);
    }
    return t;
  }
  function oA(t, ...e) {
    return nA(t, ...e, tA);
  }
  var aA = Object.defineProperty, cA = Object.defineProperties, hA$1 = Object.getOwnPropertyDescriptors, hl$1 = Object.getOwnPropertySymbols, uA$1 = Object.prototype.hasOwnProperty, lA$1 = Object.prototype.propertyIsEnumerable, ul$1 = (t, e, r) => e in t ? aA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Vs$1 = (t, e) => {
    for (var r in e || (e = {})) uA$1.call(e, r) && ul$1(t, r, e[r]);
    if (hl$1) for (var r of hl$1(e)) lA$1.call(e, r) && ul$1(t, r, e[r]);
    return t;
  }, fA = (t, e) => cA(t, hA$1(e));
  function it$4(t, e, r) {
    var i;
    const s = gi$2(t);
    return ((i = e.rpcMap) == null ? void 0 : i[s.reference]) || `${Sp$1}?chainId=${s.namespace}:${s.reference}&projectId=${r}`;
  }
  function qr$1(t) {
    return t.includes(":") ? t.split(":")[1] : t;
  }
  function Rp$1(t) {
    return t.map((e) => `${e.split(":")[0]}:${e.split(":")[1]}`);
  }
  function dA$1(t, e) {
    const r = Object.keys(e.namespaces).filter((s) => s.includes(t));
    if (!r.length) return [];
    const i = [];
    return r.forEach((s) => {
      const n = e.namespaces[s].accounts;
      i.push(...n);
    }), i;
  }
  function Ks$1(t = {}, e = {}) {
    const r = ll$1(t), i = ll$1(e);
    return oA(r, i);
  }
  function ll$1(t) {
    var e, r, i, s, n;
    const o = {};
    if (!pr$1(t)) return o;
    for (const [a, c] of Object.entries(t)) {
      const h = Bn$2(a) ? [a] : c.chains, u = c.methods || [], l = c.events || [], f = c.rpcMap || {}, p = fi$2(a);
      o[p] = fA(Vs$1(Vs$1({}, o[p]), c), { chains: Bt$4(h, (e = o[p]) == null ? void 0 : e.chains), methods: Bt$4(u, (r = o[p]) == null ? void 0 : r.methods), events: Bt$4(l, (i = o[p]) == null ? void 0 : i.events) }), (pr$1(f) || pr$1(((s = o[p]) == null ? void 0 : s.rpcMap) || {})) && (o[p].rpcMap = Vs$1(Vs$1({}, f), (n = o[p]) == null ? void 0 : n.rpcMap));
    }
    return o;
  }
  function fl$1(t) {
    return t.includes(":") ? t.split(":")[2] : t;
  }
  function dl$1(t) {
    const e = {};
    for (const [r, i] of Object.entries(t)) {
      const s = i.methods || [], n = i.events || [], o = i.accounts || [], a = Bn$2(r) ? [r] : i.chains ? i.chains : Rp$1(i.accounts);
      e[r] = { chains: a, methods: s, events: n, accounts: o };
    }
    return e;
  }
  function Do$1(t) {
    return typeof t == "number" ? t : t.includes("0x") ? parseInt(t, 16) : (t = t.includes(":") ? t.split(":")[1] : t, isNaN(Number(t)) ? t : Number(t));
  }
  const Bp$1 = {}, te$3 = (t) => Bp$1[t], Ao$1 = (t, e) => {
    Bp$1[t] = e;
  };
  var pA$1 = Object.defineProperty, gA = (t, e, r) => e in t ? pA$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Xr$1 = (t, e, r) => gA(t, typeof e != "symbol" ? e + "" : e, r);
  class yA {
    constructor(e) {
      Xr$1(this, "name", "polkadot"), Xr$1(this, "client"), Xr$1(this, "httpProviders"), Xr$1(this, "events"), Xr$1(this, "namespace"), Xr$1(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = qr$1(r);
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var wA = Object.defineProperty, mA = Object.defineProperties, bA = Object.getOwnPropertyDescriptors, pl$1 = Object.getOwnPropertySymbols, vA$1 = Object.prototype.hasOwnProperty, EA$1 = Object.prototype.propertyIsEnumerable, Ia$1 = (t, e, r) => e in t ? wA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, gl$1 = (t, e) => {
    for (var r in e || (e = {})) vA$1.call(e, r) && Ia$1(t, r, e[r]);
    if (pl$1) for (var r of pl$1(e)) EA$1.call(e, r) && Ia$1(t, r, e[r]);
    return t;
  }, yl$1 = (t, e) => mA(t, bA(e)), ei$1 = (t, e, r) => Ia$1(t, typeof e != "symbol" ? e + "" : e, r);
  let _A$1 = class _A {
    constructor(e) {
      ei$1(this, "name", "eip155"), ei$1(this, "client"), ei$1(this, "chainId"), ei$1(this, "namespace"), ei$1(this, "httpProviders"), ei$1(this, "events"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
    }
    async request(e) {
      switch (e.request.method) {
        case "eth_requestAccounts":
          return this.getAccounts();
        case "eth_accounts":
          return this.getAccounts();
        case "wallet_switchEthereumChain":
          return await this.handleSwitchChain(e);
        case "eth_chainId":
          return parseInt(this.getDefaultChain());
        case "wallet_getCapabilities":
          return await this.getCapabilities(e);
        case "wallet_getCallsStatus":
          return await this.getCallStatus(e);
      }
      return this.namespace.methods.includes(e.request.method) ? await this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(parseInt(e), r), this.chainId = parseInt(e), this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId.toString();
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    createHttpProvider(e, r) {
      const i = r || it$4(`${this.name}:${e}`, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = parseInt(qr$1(r));
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    getHttpProvider() {
      const e = this.chainId, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    async handleSwitchChain(e) {
      var r, i;
      let s = e.request.params ? (r = e.request.params[0]) == null ? void 0 : r.chainId : "0x0";
      s = s.startsWith("0x") ? s : `0x${s}`;
      const n = parseInt(s, 16);
      if (this.isChainApproved(n)) this.setDefaultChain(`${n}`);
      else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({ topic: e.topic, request: { method: e.request.method, params: [{ chainId: s }] }, chainId: (i = this.namespace.chains) == null ? void 0 : i[0] }), this.setDefaultChain(`${n}`);
      else throw new Error(`Failed to switch to chain 'eip155:${n}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
      return null;
    }
    isChainApproved(e) {
      return this.namespace.chains.includes(`${this.name}:${e}`);
    }
    async getCapabilities(e) {
      var r, i, s, n, o;
      const a = (i = (r = e.request) == null ? void 0 : r.params) == null ? void 0 : i[0], c = ((n = (s = e.request) == null ? void 0 : s.params) == null ? void 0 : n[1]) || [], h = `${a}${c.join(",")}`;
      if (!a) throw new Error("Missing address parameter in `wallet_getCapabilities` request");
      const u = this.client.session.get(e.topic), l = ((o = u == null ? void 0 : u.sessionProperties) == null ? void 0 : o.capabilities) || {};
      if (l != null && l[h]) return l == null ? void 0 : l[h];
      const f = await this.client.request(e);
      try {
        await this.client.session.update(e.topic, { sessionProperties: yl$1(gl$1({}, u.sessionProperties || {}), { capabilities: yl$1(gl$1({}, l || {}), { [h]: f }) }) });
      } catch (p) {
        console.warn("Failed to update session with capabilities", p);
      }
      return f;
    }
    async getCallStatus(e) {
      var r, i;
      const s = this.client.session.get(e.topic), n = (r = s.sessionProperties) == null ? void 0 : r.bundler_name;
      if (n) {
        const a = this.getBundlerUrl(e.chainId, n);
        try {
          return await this.getUserOperationReceipt(a, e);
        } catch (c) {
          console.warn("Failed to fetch call status from bundler", c, a);
        }
      }
      const o = (i = s.sessionProperties) == null ? void 0 : i.bundler_url;
      if (o) try {
        return await this.getUserOperationReceipt(o, e);
      } catch (a) {
        console.warn("Failed to fetch call status from custom bundler", a, o);
      }
      if (this.namespace.methods.includes(e.request.method)) return await this.client.request(e);
      throw new Error("Fetching call status not approved by the wallet.");
    }
    async getUserOperationReceipt(e, r) {
      var i;
      const s = new URL(e), n = await fetch(s, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(fr$1("eth_getUserOperationReceipt", [(i = r.request.params) == null ? void 0 : i[0]])) });
      if (!n.ok) throw new Error(`Failed to fetch user operation receipt - ${n.status}`);
      return await n.json();
    }
    getBundlerUrl(e, r) {
      return `${RD}?projectId=${this.client.core.projectId}&chainId=${e}&bundler=${r}`;
    }
  };
  var IA$1 = Object.defineProperty, xA = (t, e, r) => e in t ? IA$1(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ti$2 = (t, e, r) => xA(t, typeof e != "symbol" ? e + "" : e, r);
  class $A {
    constructor(e) {
      ti$2(this, "name", "solana"), ti$2(this, "client"), ti$2(this, "httpProviders"), ti$2(this, "events"), ti$2(this, "namespace"), ti$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = qr$1(r);
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var SA = Object.defineProperty, DA = (t, e, r) => e in t ? SA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ri$2 = (t, e, r) => DA(t, typeof e != "symbol" ? e + "" : e, r);
  let AA$1 = class AA {
    constructor(e) {
      ri$2(this, "name", "cosmos"), ri$2(this, "client"), ri$2(this, "httpProviders"), ri$2(this, "events"), ri$2(this, "namespace"), ri$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = qr$1(r);
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  };
  var OA = Object.defineProperty, PA = (t, e, r) => e in t ? OA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ii$2 = (t, e, r) => PA(t, typeof e != "symbol" ? e + "" : e, r);
  let CA$1 = class CA {
    constructor(e) {
      ii$2(this, "name", "algorand"), ii$2(this, "client"), ii$2(this, "httpProviders"), ii$2(this, "events"), ii$2(this, "namespace"), ii$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      if (!this.httpProviders[e]) {
        const i = r || it$4(`${this.name}:${e}`, this.namespace, this.client.core.projectId);
        if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, i);
      }
      this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        e[r] = this.createHttpProvider(r, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      return typeof i > "u" ? void 0 : new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  };
  var TA = Object.defineProperty, RA = (t, e, r) => e in t ? TA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, si$1 = (t, e, r) => RA(t, typeof e != "symbol" ? e + "" : e, r);
  class BA {
    constructor(e) {
      si$1(this, "name", "cip34"), si$1(this, "client"), si$1(this, "httpProviders"), si$1(this, "events"), si$1(this, "namespace"), si$1(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        const i = this.getCardanoRPCUrl(r), s = qr$1(r);
        e[s] = this.createHttpProvider(s, i);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    getCardanoRPCUrl(e) {
      const r = this.namespace.rpcMap;
      if (r) return r[e];
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || this.getCardanoRPCUrl(e);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var FA = Object.defineProperty, NA$1 = (t, e, r) => e in t ? FA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ni$2 = (t, e, r) => NA$1(t, typeof e != "symbol" ? e + "" : e, r);
  class UA {
    constructor(e) {
      ni$2(this, "name", "elrond"), ni$2(this, "client"), ni$2(this, "httpProviders"), ni$2(this, "events"), ni$2(this, "namespace"), ni$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = qr$1(r);
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var kA = Object.defineProperty, LA = (t, e, r) => e in t ? kA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, oi$2 = (t, e, r) => LA(t, typeof e != "symbol" ? e + "" : e, r);
  class jA {
    constructor(e) {
      oi$2(this, "name", "multiversx"), oi$2(this, "client"), oi$2(this, "httpProviders"), oi$2(this, "events"), oi$2(this, "namespace"), oi$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        const s = qr$1(r);
        e[s] = this.createHttpProvider(s, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var MA = Object.defineProperty, qA = (t, e, r) => e in t ? MA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ai$2 = (t, e, r) => qA(t, typeof e != "symbol" ? e + "" : e, r);
  class zA {
    constructor(e) {
      ai$2(this, "name", "near"), ai$2(this, "client"), ai$2(this, "httpProviders"), ai$2(this, "events"), ai$2(this, "namespace"), ai$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      if (this.chainId = e, !this.httpProviders[e]) {
        const i = r || it$4(`${this.name}:${e}`, this.namespace);
        if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, i);
      }
      this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        var i;
        e[r] = this.createHttpProvider(r, (i = this.namespace.rpcMap) == null ? void 0 : i[r]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace);
      return typeof i > "u" ? void 0 : new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var HA = Object.defineProperty, VA = (t, e, r) => e in t ? HA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, ci$2 = (t, e, r) => VA(t, typeof e != "symbol" ? e + "" : e, r);
  class KA {
    constructor(e) {
      ci$2(this, "name", "tezos"), ci$2(this, "client"), ci$2(this, "httpProviders"), ci$2(this, "events"), ci$2(this, "namespace"), ci$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, r) {
      if (this.chainId = e, !this.httpProviders[e]) {
        const i = r || it$4(`${this.name}:${e}`, this.namespace);
        if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, i);
      }
      this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((r) => {
        e[r] = this.createHttpProvider(r);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace);
      return typeof i > "u" ? void 0 : new pt$4(new xt$4(i));
    }
  }
  var WA = Object.defineProperty, GA = (t, e, r) => e in t ? WA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, hi$2 = (t, e, r) => GA(t, typeof e != "symbol" ? e + "" : e, r);
  class YA {
    constructor(e) {
      hi$2(this, "name", li$1), hi$2(this, "client"), hi$2(this, "httpProviders"), hi$2(this, "events"), hi$2(this, "namespace"), hi$2(this, "chainId"), this.namespace = e.namespace, this.events = te$3("events"), this.client = te$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace.chains = [...new Set((this.namespace.chains || []).concat(e.chains || []))], this.namespace.accounts = [...new Set((this.namespace.accounts || []).concat(e.accounts || []))], this.namespace.methods = [...new Set((this.namespace.methods || []).concat(e.methods || []))], this.namespace.events = [...new Set((this.namespace.events || []).concat(e.events || []))], this.httpProviders = this.createHttpProviders();
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider(e.chainId).request(e.request);
    }
    setDefaultChain(e, r) {
      this.httpProviders[e] || this.setHttpProvider(e, r), this.chainId = e, this.events.emit(gt$3.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((r) => r.split(":")[1] === this.chainId.toString()).map((r) => r.split(":")[2]))] : [];
    }
    createHttpProviders() {
      var e, r;
      const i = {};
      return (r = (e = this.namespace) == null ? void 0 : e.accounts) == null || r.forEach((s) => {
        const n = gi$2(s);
        i[`${n.namespace}:${n.reference}`] = this.createHttpProvider(s);
      }), i;
    }
    getHttpProvider(e) {
      const r = this.httpProviders[e];
      if (typeof r > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return r;
    }
    setHttpProvider(e, r) {
      const i = this.createHttpProvider(e, r);
      i && (this.httpProviders[e] = i);
    }
    createHttpProvider(e, r) {
      const i = r || it$4(e, this.namespace, this.client.core.projectId);
      if (!i) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(i, te$3("disableProviderPing")));
    }
  }
  var JA = Object.defineProperty, ZA = Object.defineProperties, QA = Object.getOwnPropertyDescriptors, wl$1 = Object.getOwnPropertySymbols, XA = Object.prototype.hasOwnProperty, eO = Object.prototype.propertyIsEnumerable, xa$1 = (t, e, r) => e in t ? JA(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Ws$1 = (t, e) => {
    for (var r in e || (e = {})) XA.call(e, r) && xa$1(t, r, e[r]);
    if (wl$1) for (var r of wl$1(e)) eO.call(e, r) && xa$1(t, r, e[r]);
    return t;
  }, Oo$1 = (t, e) => ZA(t, QA(e)), ot$5 = (t, e, r) => xa$1(t, typeof e != "symbol" ? e + "" : e, r);
  let tO = class Fp {
    constructor(e) {
      ot$5(this, "client"), ot$5(this, "namespaces"), ot$5(this, "optionalNamespaces"), ot$5(this, "sessionProperties"), ot$5(this, "scopedProperties"), ot$5(this, "events", new Pa$1()), ot$5(this, "rpcProviders", {}), ot$5(this, "session"), ot$5(this, "providerOpts"), ot$5(this, "logger"), ot$5(this, "uri"), ot$5(this, "disableProviderPing", false), this.providerOpts = e, this.logger = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : _s$1(Nn$2({ level: (e == null ? void 0 : e.logger) || nl$1 })), this.disableProviderPing = (e == null ? void 0 : e.disableProviderPing) || false;
    }
    static async init(e) {
      const r = new Fp(e);
      return await r.initialize(), r;
    }
    async request(e, r, i) {
      const [s, n] = this.validateChain(r);
      if (!this.session) throw new Error("Please call connect() before request()");
      return await this.getProvider(s).request({ request: Ws$1({}, e), chainId: `${s}:${n}`, topic: this.session.topic, expiry: i });
    }
    sendAsync(e, r, i, s) {
      const n = (/* @__PURE__ */ new Date()).getTime();
      this.request(e, i, s).then((o) => r(null, Un$2(n, o))).catch((o) => r(o, void 0));
    }
    async enable() {
      if (!this.client) throw new Error("Sign Client not initialized");
      return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties, scopedProperties: this.scopedProperties }), await this.requestAccounts();
    }
    async disconnect() {
      var e;
      if (!this.session) throw new Error("Please call connect() before enable()");
      await this.client.disconnect({ topic: (e = this.session) == null ? void 0 : e.topic, reason: le$4("USER_DISCONNECTED") }), await this.cleanup();
    }
    async connect(e) {
      if (!this.client) throw new Error("Sign Client not initialized");
      if (this.setNamespaces(e), await this.cleanupPendingPairings(), !e.skipPairing) return await this.pair(e.pairingTopic);
    }
    async authenticate(e, r) {
      if (!this.client) throw new Error("Sign Client not initialized");
      this.setNamespaces(e), await this.cleanupPendingPairings();
      const { uri: i, response: s } = await this.client.authenticate(e, r);
      i && (this.uri = i, this.events.emit("display_uri", i));
      const n = await s();
      if (this.session = n.session, this.session) {
        const o = dl$1(this.session.namespaces);
        this.namespaces = Ks$1(this.namespaces, o), await this.persist("namespaces", this.namespaces), this.onConnect();
      }
      return n;
    }
    on(e, r) {
      this.events.on(e, r);
    }
    once(e, r) {
      this.events.once(e, r);
    }
    removeListener(e, r) {
      this.events.removeListener(e, r);
    }
    off(e, r) {
      this.events.off(e, r);
    }
    get isWalletConnect() {
      return true;
    }
    async pair(e) {
      const { uri: r, approval: i } = await this.client.connect({ pairingTopic: e, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties, scopedProperties: this.scopedProperties });
      r && (this.uri = r, this.events.emit("display_uri", r));
      const s = await i();
      this.session = s;
      const n = dl$1(s.namespaces);
      return this.namespaces = Ks$1(this.namespaces, n), await this.persist("namespaces", this.namespaces), await this.persist("optionalNamespaces", this.optionalNamespaces), this.onConnect(), this.session;
    }
    setDefaultChain(e, r) {
      try {
        if (!this.session) return;
        const [i, s] = this.validateChain(e), n = this.getProvider(i);
        n.name === li$1 ? n.setDefaultChain(`${i}:${s}`, r) : n.setDefaultChain(s, r);
      } catch (i) {
        if (!/Please call connect/.test(i.message)) throw i;
      }
    }
    async cleanupPendingPairings(e = {}) {
      this.logger.info("Cleaning up inactive pairings...");
      const r = this.client.pairing.getAll();
      if (lt$4(r)) {
        for (const i of r) e.deletePairings ? this.client.core.expirer.set(i.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(i.topic);
        this.logger.info(`Inactive pairings cleared: ${r.length}`);
      }
    }
    abortPairingAttempt() {
      this.logger.warn("abortPairingAttempt is deprecated. This is now a no-op.");
    }
    async checkStorage() {
      this.namespaces = await this.getFromStore("namespaces") || {}, this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.session && this.createProviders();
    }
    async initialize() {
      this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
    }
    async createClient() {
      var e, r;
      if (this.client = this.providerOpts.client || await ED.init({ core: this.providerOpts.core, logger: this.providerOpts.logger || nl$1, relayUrl: this.providerOpts.relayUrl || PD, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, storage: this.providerOpts.storage, name: this.providerOpts.name, customStoragePrefix: this.providerOpts.customStoragePrefix, telemetryEnabled: this.providerOpts.telemetryEnabled }), this.providerOpts.session) try {
        this.session = this.client.session.get(this.providerOpts.session.topic);
      } catch (i) {
        throw this.logger.error("Failed to get session", i), new Error(`The provided session: ${(r = (e = this.providerOpts) == null ? void 0 : e.session) == null ? void 0 : r.topic} doesn't exist in the Sign client`);
      }
      else {
        const i = this.client.session.getAll();
        this.session = i[0];
      }
      this.logger.trace("SignClient Initialized");
    }
    createProviders() {
      if (!this.client) throw new Error("Sign Client not initialized");
      if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
      const e = [...new Set(Object.keys(this.session.namespaces).map((r) => fi$2(r)))];
      Ao$1("client", this.client), Ao$1("events", this.events), Ao$1("disableProviderPing", this.disableProviderPing), e.forEach((r) => {
        if (!this.session) return;
        const i = dA$1(r, this.session), s = Rp$1(i), n = Ks$1(this.namespaces, this.optionalNamespaces), o = Oo$1(Ws$1({}, n[r]), { accounts: i, chains: s });
        switch (r) {
          case "eip155":
            this.rpcProviders[r] = new _A$1({ namespace: o });
            break;
          case "algorand":
            this.rpcProviders[r] = new CA$1({ namespace: o });
            break;
          case "solana":
            this.rpcProviders[r] = new $A({ namespace: o });
            break;
          case "cosmos":
            this.rpcProviders[r] = new AA$1({ namespace: o });
            break;
          case "polkadot":
            this.rpcProviders[r] = new yA({ namespace: o });
            break;
          case "cip34":
            this.rpcProviders[r] = new BA({ namespace: o });
            break;
          case "elrond":
            this.rpcProviders[r] = new UA({ namespace: o });
            break;
          case "multiversx":
            this.rpcProviders[r] = new jA({ namespace: o });
            break;
          case "near":
            this.rpcProviders[r] = new zA({ namespace: o });
            break;
          case "tezos":
            this.rpcProviders[r] = new KA({ namespace: o });
            break;
          default:
            this.rpcProviders[li$1] ? this.rpcProviders[li$1].updateNamespace(o) : this.rpcProviders[li$1] = new YA({ namespace: o });
        }
      });
    }
    registerEventListeners() {
      if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
      this.client.on("session_ping", (e) => {
        var r;
        const { topic: i } = e;
        i === ((r = this.session) == null ? void 0 : r.topic) && this.events.emit("session_ping", e);
      }), this.client.on("session_event", (e) => {
        var r;
        const { params: i, topic: s } = e;
        if (s !== ((r = this.session) == null ? void 0 : r.topic)) return;
        const { event: n } = i;
        if (n.name === "accountsChanged") {
          const o = n.data;
          o && lt$4(o) && this.events.emit("accountsChanged", o.map(fl$1));
        } else if (n.name === "chainChanged") {
          const o = i.chainId, a = i.event.data, c = fi$2(o), h = Do$1(o) !== Do$1(a) ? `${c}:${Do$1(a)}` : o;
          this.onChainChanged(h);
        } else this.events.emit(n.name, n.data);
        this.events.emit("session_event", e);
      }), this.client.on("session_update", ({ topic: e, params: r }) => {
        var i, s;
        if (e !== ((i = this.session) == null ? void 0 : i.topic)) return;
        const { namespaces: n } = r, o = (s = this.client) == null ? void 0 : s.session.get(e);
        this.session = Oo$1(Ws$1({}, o), { namespaces: n }), this.onSessionUpdate(), this.events.emit("session_update", { topic: e, params: r });
      }), this.client.on("session_delete", async (e) => {
        var r;
        e.topic === ((r = this.session) == null ? void 0 : r.topic) && (await this.cleanup(), this.events.emit("session_delete", e), this.events.emit("disconnect", Oo$1(Ws$1({}, le$4("USER_DISCONNECTED")), { data: e.topic })));
      }), this.on(gt$3.DEFAULT_CHAIN_CHANGED, (e) => {
        this.onChainChanged(e, true);
      });
    }
    getProvider(e) {
      return this.rpcProviders[e] || this.rpcProviders[li$1];
    }
    onSessionUpdate() {
      Object.keys(this.rpcProviders).forEach((e) => {
        var r;
        this.getProvider(e).updateNamespace((r = this.session) == null ? void 0 : r.namespaces[e]);
      });
    }
    setNamespaces(e) {
      const { namespaces: r = {}, optionalNamespaces: i = {}, sessionProperties: s, scopedProperties: n } = e;
      this.optionalNamespaces = Ks$1(r, i), this.sessionProperties = s, this.scopedProperties = n;
    }
    validateChain(e) {
      const [r, i] = (e == null ? void 0 : e.split(":")) || ["", ""];
      if (!this.namespaces || !Object.keys(this.namespaces).length) return [r, i];
      if (r && !Object.keys(this.namespaces || {}).map((o) => fi$2(o)).includes(r)) throw new Error(`Namespace '${r}' is not configured. Please call connect() first with namespace config.`);
      if (r && i) return [r, i];
      const s = fi$2(Object.keys(this.namespaces)[0]), n = this.rpcProviders[s].getDefaultChain();
      return [s, n];
    }
    async requestAccounts() {
      const [e] = this.validateChain();
      return await this.getProvider(e).requestAccounts();
    }
    async onChainChanged(e, r = false) {
      if (!this.namespaces) return;
      const [i, s] = this.validateChain(e);
      if (!s) return;
      this.updateNamespaceChain(i, s), this.events.emit("chainChanged", s);
      const n = this.getProvider(i).getDefaultChain();
      r || this.getProvider(i).setDefaultChain(s), this.emitAccountsChangedOnChainChange({ namespace: i, previousChainId: n, newChainId: e }), await this.persist("namespaces", this.namespaces);
    }
    emitAccountsChangedOnChainChange({ namespace: e, previousChainId: r, newChainId: i }) {
      var s, n;
      try {
        if (r === i) return;
        const o = (n = (s = this.session) == null ? void 0 : s.namespaces[e]) == null ? void 0 : n.accounts;
        if (!o) return;
        const a = o.filter((c) => c.includes(`${i}:`)).map(fl$1);
        if (!lt$4(a)) return;
        this.events.emit("accountsChanged", a);
      } catch (o) {
        this.logger.warn("Failed to emit accountsChanged on chain change", o);
      }
    }
    updateNamespaceChain(e, r) {
      if (!this.namespaces) return;
      const i = this.namespaces[e] ? e : `${e}:${r}`, s = { chains: [], methods: [], events: [], defaultChain: r };
      this.namespaces[i] ? this.namespaces[i] && (this.namespaces[i].defaultChain = r) : this.namespaces[i] = s;
    }
    onConnect() {
      this.createProviders(), this.events.emit("connect", { session: this.session });
    }
    async cleanup() {
      this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, await this.deleteFromStore("namespaces"), await this.deleteFromStore("optionalNamespaces"), await this.deleteFromStore("sessionProperties"), this.session = void 0, await this.cleanupPendingPairings({ deletePairings: true }), await this.cleanupStorage();
    }
    async persist(e, r) {
      var i;
      const s = ((i = this.session) == null ? void 0 : i.topic) || "";
      await this.client.core.storage.setItem(`${Hs$1}/${e}${s}`, r);
    }
    async getFromStore(e) {
      var r;
      const i = ((r = this.session) == null ? void 0 : r.topic) || "";
      return await this.client.core.storage.getItem(`${Hs$1}/${e}${i}`);
    }
    async deleteFromStore(e) {
      var r;
      const i = ((r = this.session) == null ? void 0 : r.topic) || "";
      await this.client.core.storage.removeItem(`${Hs$1}/${e}${i}`);
    }
    async cleanupStorage() {
      var e;
      try {
        if (((e = this.client) == null ? void 0 : e.session.length) > 0) return;
        const r = await this.client.core.storage.getKeys();
        for (const i of r) i.startsWith(Hs$1) && await this.client.core.storage.removeItem(i);
      } catch (r) {
        this.logger.warn("Failed to cleanup storage", r);
      }
    }
  };
  const rO = tO, iO = "wc", sO = "ethereum_provider", nO = `${iO}@2:${sO}:`, oO = "https://rpc.walletconnect.org/v1/", $a$1 = ["eth_sendTransaction", "personal_sign"], aO = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "eth_sendTransaction", "personal_sign", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode", "wallet_sendCalls", "wallet_getCapabilities", "wallet_getCallsStatus", "wallet_showCallsStatus"], Sa$1 = ["chainChanged", "accountsChanged"], cO = ["chainChanged", "accountsChanged", "message", "disconnect", "connect"], hO = async () => {
    const { createAppKit: t } = await Promise.resolve().then(function () { return coreDT8g9mFm; }).then((e) => e.X);
    return t;
  };
  var uO = Object.defineProperty, lO = Object.defineProperties, fO = Object.getOwnPropertyDescriptors, ml$1 = Object.getOwnPropertySymbols, dO = Object.prototype.hasOwnProperty, pO = Object.prototype.propertyIsEnumerable, Da$1 = (t, e, r) => e in t ? uO(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Ir$1 = (t, e) => {
    for (var r in e || (e = {})) dO.call(e, r) && Da$1(t, r, e[r]);
    if (ml$1) for (var r of ml$1(e)) pO.call(e, r) && Da$1(t, r, e[r]);
    return t;
  }, zi$2 = (t, e) => lO(t, fO(e)), Xe$3 = (t, e, r) => Da$1(t, typeof e != "symbol" ? e + "" : e, r);
  function vn$2(t) {
    return Number(t[0].split(":")[1]);
  }
  function Gs$1(t) {
    return `0x${t.toString(16)}`;
  }
  function gO(t) {
    const { chains: e, optionalChains: r, methods: i, optionalMethods: s, events: n, optionalEvents: o, rpcMap: a } = t;
    if (!lt$4(e)) throw new Error("Invalid chains");
    const c = { chains: e, methods: i || $a$1, events: n || Sa$1, rpcMap: Ir$1({}, e.length ? { [vn$2(e)]: a[vn$2(e)] } : {}) }, h = n == null ? void 0 : n.filter((p) => !Sa$1.includes(p)), u = i == null ? void 0 : i.filter((p) => !$a$1.includes(p));
    if (!r && !o && !s && !(h != null && h.length) && !(u != null && u.length)) return { required: e.length ? c : void 0 };
    const l = (h == null ? void 0 : h.length) && (u == null ? void 0 : u.length) || !r, f = { chains: [...new Set(l ? c.chains.concat(r || []) : r)], methods: [...new Set(c.methods.concat(s != null && s.length ? s : aO))], events: [...new Set(c.events.concat(o != null && o.length ? o : cO))], rpcMap: a };
    return { required: e.length ? c : void 0, optional: r.length ? f : void 0 };
  }
  class fc {
    constructor() {
      Xe$3(this, "events", new st$3.EventEmitter()), Xe$3(this, "namespace", "eip155"), Xe$3(this, "accounts", []), Xe$3(this, "signer"), Xe$3(this, "chainId", 1), Xe$3(this, "modal"), Xe$3(this, "rpc"), Xe$3(this, "STORAGE_KEY", nO), Xe$3(this, "on", (e, r) => (this.events.on(e, r), this)), Xe$3(this, "once", (e, r) => (this.events.once(e, r), this)), Xe$3(this, "removeListener", (e, r) => (this.events.removeListener(e, r), this)), Xe$3(this, "off", (e, r) => (this.events.off(e, r), this)), Xe$3(this, "parseAccount", (e) => this.isCompatibleChainId(e) ? this.parseAccountId(e).address : e), this.signer = {}, this.rpc = {};
    }
    static async init(e) {
      const r = new fc();
      return await r.initialize(e), r;
    }
    async request(e, r) {
      return await this.signer.request(e, this.formatChainId(this.chainId), r);
    }
    sendAsync(e, r, i) {
      this.signer.sendAsync(e, r, this.formatChainId(this.chainId), i);
    }
    get connected() {
      return this.signer.client ? this.signer.client.core.relayer.connected : false;
    }
    get connecting() {
      return this.signer.client ? this.signer.client.core.relayer.connecting : false;
    }
    async enable() {
      return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
    }
    async connect(e) {
      var r;
      if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
      this.loadConnectOpts(e);
      const { required: i, optional: s } = gO(this.rpc);
      try {
        const n = await new Promise(async (a, c) => {
          var h, u;
          this.rpc.showQrModal && ((h = this.modal) == null || h.open(), (u = this.modal) == null || u.subscribeState((f) => {
            !f.open && !this.signer.session && (this.signer.abortPairingAttempt(), c(new Error("Connection request reset. Please try again.")));
          }));
          const l = e != null && e.scopedProperties ? { [this.namespace]: e.scopedProperties } : void 0;
          await this.signer.connect(zi$2(Ir$1({ namespaces: Ir$1({}, i && { [this.namespace]: i }) }, s && { optionalNamespaces: { [this.namespace]: s } }), { pairingTopic: e == null ? void 0 : e.pairingTopic, scopedProperties: l })).then((f) => {
            a(f);
          }).catch((f) => {
            var p;
            (p = this.modal) == null || p.showErrorMessage("Unable to connect"), c(new Error(f.message));
          });
        });
        if (!n) return;
        const o = fh$1(n.namespaces, [this.namespace]);
        this.setChainIds(this.rpc.chains.length ? this.rpc.chains : o), this.setAccounts(o), this.events.emit("connect", { chainId: Gs$1(this.chainId) });
      } catch (n) {
        throw this.signer.logger.error(n), n;
      } finally {
        (r = this.modal) == null || r.close();
      }
    }
    async authenticate(e, r) {
      var i;
      if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
      this.loadConnectOpts({ chains: e == null ? void 0 : e.chains });
      try {
        const s = await new Promise(async (o, a) => {
          var c, h;
          this.rpc.showQrModal && ((c = this.modal) == null || c.open(), (h = this.modal) == null || h.subscribeState((u) => {
            !u.open && !this.signer.session && (this.signer.abortPairingAttempt(), a(new Error("Connection request reset. Please try again.")));
          })), await this.signer.authenticate(zi$2(Ir$1({}, e), { chains: this.rpc.chains }), r).then((u) => {
            o(u);
          }).catch((u) => {
            var l;
            (l = this.modal) == null || l.showErrorMessage("Unable to connect"), a(new Error(u.message));
          });
        }), n = s.session;
        if (n) {
          const o = fh$1(n.namespaces, [this.namespace]);
          this.setChainIds(this.rpc.chains.length ? this.rpc.chains : o), this.setAccounts(o), this.events.emit("connect", { chainId: Gs$1(this.chainId) });
        }
        return s;
      } catch (s) {
        throw this.signer.logger.error(s), s;
      } finally {
        (i = this.modal) == null || i.close();
      }
    }
    async disconnect() {
      this.session && await this.signer.disconnect(), this.reset();
    }
    get isWalletConnect() {
      return true;
    }
    get session() {
      return this.signer.session;
    }
    registerEventListeners() {
      this.signer.on("session_event", (e) => {
        const { params: r } = e, { event: i } = r;
        i.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i.data), this.events.emit("accountsChanged", this.accounts)) : i.name === "chainChanged" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit("session_event", e);
      }), this.signer.on("accountsChanged", (e) => {
        this.accounts = this.parseAccounts(e), this.events.emit("accountsChanged", this.accounts);
      }), this.signer.on("chainChanged", (e) => {
        const r = parseInt(e);
        this.chainId = r, this.events.emit("chainChanged", Gs$1(this.chainId)), this.persist();
      }), this.signer.on("session_update", (e) => {
        this.events.emit("session_update", e);
      }), this.signer.on("session_delete", (e) => {
        this.reset(), this.events.emit("session_delete", e), this.events.emit("disconnect", zi$2(Ir$1({}, le$4("USER_DISCONNECTED")), { data: e.topic, name: "USER_DISCONNECTED" }));
      }), this.signer.on("display_uri", (e) => {
        this.events.emit("display_uri", e);
      });
    }
    switchEthereumChain(e) {
      this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: e.toString(16) }] });
    }
    isCompatibleChainId(e) {
      return typeof e == "string" ? e.startsWith(`${this.namespace}:`) : false;
    }
    formatChainId(e) {
      return `${this.namespace}:${e}`;
    }
    parseChainId(e) {
      return Number(e.split(":")[1]);
    }
    setChainIds(e) {
      const r = e.filter((i) => this.isCompatibleChainId(i)).map((i) => this.parseChainId(i));
      r.length && (this.chainId = r[0], this.events.emit("chainChanged", Gs$1(this.chainId)), this.persist());
    }
    setChainId(e) {
      if (this.isCompatibleChainId(e)) {
        const r = this.parseChainId(e);
        this.chainId = r, this.switchEthereumChain(r);
      }
    }
    parseAccountId(e) {
      const [r, i, s] = e.split(":");
      return { chainId: `${r}:${i}`, address: s };
    }
    setAccounts(e) {
      this.accounts = e.filter((r) => this.parseChainId(this.parseAccountId(r).chainId) === this.chainId).map((r) => this.parseAccountId(r).address), this.events.emit("accountsChanged", this.accounts);
    }
    getRpcConfig(e) {
      var r, i;
      const s = (r = e == null ? void 0 : e.chains) != null ? r : [], n = (i = e == null ? void 0 : e.optionalChains) != null ? i : [], o = s.concat(n);
      if (!o.length) throw new Error("No chains specified in either `chains` or `optionalChains`");
      const a = s.length ? (e == null ? void 0 : e.methods) || $a$1 : [], c = s.length ? (e == null ? void 0 : e.events) || Sa$1 : [], h = (e == null ? void 0 : e.optionalMethods) || [], u = (e == null ? void 0 : e.optionalEvents) || [], l = (e == null ? void 0 : e.rpcMap) || this.buildRpcMap(o, e.projectId), f = (e == null ? void 0 : e.qrModalOptions) || void 0;
      return { chains: s == null ? void 0 : s.map((p) => this.formatChainId(p)), optionalChains: n.map((p) => this.formatChainId(p)), methods: a, events: c, optionalMethods: h, optionalEvents: u, rpcMap: l, showQrModal: !!(e != null && e.showQrModal), qrModalOptions: f, projectId: e.projectId, metadata: e.metadata };
    }
    buildRpcMap(e, r) {
      const i = {};
      return e.forEach((s) => {
        i[s] = this.getRpcUrl(s, r);
      }), i;
    }
    async initialize(e) {
      if (this.rpc = this.getRpcConfig(e), this.chainId = this.rpc.chains.length ? vn$2(this.rpc.chains) : vn$2(this.rpc.optionalChains), this.signer = await rO.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: e.disableProviderPing, relayUrl: e.relayUrl, storage: e.storage, storageOptions: e.storageOptions, customStoragePrefix: e.customStoragePrefix, telemetryEnabled: e.telemetryEnabled, logger: e.logger }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
        let r;
        try {
          const i = await hO(), { convertWCMToAppKitOptions: s } = await Promise.resolve().then(function() {
            return SO;
          }), n = s(zi$2(Ir$1({}, this.rpc.qrModalOptions), { chains: [.../* @__PURE__ */ new Set([...this.rpc.chains, ...this.rpc.optionalChains])], metadata: this.rpc.metadata, projectId: this.rpc.projectId }));
          if (!n.networks.length) throw new Error("No networks found for WalletConnect·");
          r = i(zi$2(Ir$1({}, n), { universalProvider: this.signer, manualWCControl: !0 }));
        } catch (i) {
          throw console.warn(i), new Error("To use QR modal, please install @reown/appkit package");
        }
        if (r) try {
          this.modal = r;
        } catch (i) {
          throw this.signer.logger.error(i), new Error("Could not generate WalletConnectModal Instance");
        }
      }
    }
    loadConnectOpts(e) {
      if (!e) return;
      const { chains: r, optionalChains: i, rpcMap: s } = e;
      r && lt$4(r) && (this.rpc.chains = r.map((n) => this.formatChainId(n)), r.forEach((n) => {
        this.rpc.rpcMap[n] = (s == null ? void 0 : s[n]) || this.getRpcUrl(n);
      })), i && lt$4(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i == null ? void 0 : i.map((n) => this.formatChainId(n)), i.forEach((n) => {
        this.rpc.rpcMap[n] = (s == null ? void 0 : s[n]) || this.getRpcUrl(n);
      }));
    }
    getRpcUrl(e, r) {
      var i;
      return ((i = this.rpc.rpcMap) == null ? void 0 : i[e]) || `${oO}?chainId=eip155:${e}&projectId=${r || this.rpc.projectId}`;
    }
    async loadPersistedSession() {
      if (this.session) try {
        const e = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), r = this.session.namespaces[`${this.namespace}:${e}`] ? this.session.namespaces[`${this.namespace}:${e}`] : this.session.namespaces[this.namespace];
        this.setChainIds(e ? [this.formatChainId(e)] : r == null ? void 0 : r.accounts), this.setAccounts(r == null ? void 0 : r.accounts);
      } catch (e) {
        this.signer.logger.error("Failed to load persisted session, clearing state..."), this.signer.logger.error(e), await this.disconnect().catch((r) => this.signer.logger.warn(r));
      }
    }
    reset() {
      this.chainId = 1, this.accounts = [];
    }
    persist() {
      this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
    }
    parseAccounts(e) {
      return typeof e == "string" || e instanceof String ? [this.parseAccount(e)] : e.map((r) => this.parseAccount(r));
    }
  }
  const yO = fc;
  var wO = Object.defineProperty, mO = Object.defineProperties, bO = Object.getOwnPropertyDescriptors, bl$1 = Object.getOwnPropertySymbols, vO = Object.prototype.hasOwnProperty, EO = Object.prototype.propertyIsEnumerable, vl$1 = (t, e, r) => e in t ? wO(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r, Np$1 = (t, e) => {
    for (var r in e || (e = {})) vO.call(e, r) && vl$1(t, r, e[r]);
    if (bl$1) for (var r of bl$1(e)) EO.call(e, r) && vl$1(t, r, e[r]);
    return t;
  }, _O = (t, e) => mO(t, bO(e));
  function IO(t) {
    if (t) return { "--w3m-font-family": t["--wcm-font-family"], "--w3m-accent": t["--wcm-accent-color"], "--w3m-color-mix": t["--wcm-background-color"], "--w3m-z-index": t["--wcm-z-index"] ? Number(t["--wcm-z-index"]) : void 0, "--w3m-qr-color": t["--wcm-accent-color"], "--w3m-font-size-master": t["--wcm-text-medium-regular-size"], "--w3m-border-radius-master": t["--wcm-container-border-radius"], "--w3m-color-mix-strength": 0 };
  }
  const xO = (t) => {
    const [e, r] = t.split(":");
    return Up$1({ id: r, caipNetworkId: t, chainNamespace: e, name: "", nativeCurrency: { name: "", symbol: "", decimals: 8 }, rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } } });
  };
  function $O(t) {
    var e, r, i, s, n, o, a;
    const c = (e = t.chains) == null ? void 0 : e.map(xO).filter(Boolean);
    if (c.length === 0) throw new Error("At least one chain must be specified");
    const h = c.find((l) => {
      var f;
      return l.id === ((f = t.defaultChain) == null ? void 0 : f.id);
    }), u = { projectId: t.projectId, networks: c, themeMode: t.themeMode, themeVariables: IO(t.themeVariables), chainImages: t.chainImages, connectorImages: t.walletImages, defaultNetwork: h, metadata: _O(Np$1({}, t.metadata), { name: ((r = t.metadata) == null ? void 0 : r.name) || "WalletConnect", description: ((i = t.metadata) == null ? void 0 : i.description) || "Connect to WalletConnect-compatible wallets", url: ((s = t.metadata) == null ? void 0 : s.url) || "https://walletconnect.org", icons: ((n = t.metadata) == null ? void 0 : n.icons) || ["https://walletconnect.org/walletconnect-logo.png"] }), showWallets: true, featuredWalletIds: t.explorerRecommendedWalletIds === "NONE" ? [] : Array.isArray(t.explorerRecommendedWalletIds) ? t.explorerRecommendedWalletIds : [], excludeWalletIds: t.explorerExcludedWalletIds === "ALL" ? [] : Array.isArray(t.explorerExcludedWalletIds) ? t.explorerExcludedWalletIds : [], enableEIP6963: false, enableInjected: false, enableCoinbase: true, enableWalletConnect: true, features: { email: false, socials: false } };
    if ((o = t.mobileWallets) != null && o.length || (a = t.desktopWallets) != null && a.length) {
      const l = [...(t.mobileWallets || []).map((d) => ({ id: d.id, name: d.name, links: d.links })), ...(t.desktopWallets || []).map((d) => ({ id: d.id, name: d.name, links: { native: d.links.native, universal: d.links.universal } }))], f = [...u.featuredWalletIds || [], ...u.excludeWalletIds || []], p = l.filter((d) => !f.includes(d.id));
      p.length && (u.customWallets = p);
    }
    return u;
  }
  function Up$1(t) {
    return Np$1({ formatters: void 0, fees: void 0, serializers: void 0 }, t);
  }
  var SO = Object.freeze({ __proto__: null, convertWCMToAppKitOptions: $O, defineChain: Up$1 });
  class DO {
    constructor(e) {
      Si$2(this, "_eventHandlers", {});
      Si$2(this, "provider", null);
      Si$2(this, "walletConnectInitialized", false);
      Si$2(this, "requestId", 0);
      this.config = e, (async () => {
        await this.initializeProvider(), await this.connectWallet();
      })();
    }
    on(e, r) {
      this._eventHandlers[e] || (this._eventHandlers[e] = []), this._eventHandlers[e].push(r);
    }
    _emit(e, r) {
      this._eventHandlers[e] && this._eventHandlers[e].forEach((i) => i(r));
    }
    _showOverlay(e) {
      window.parent.postMessage({
        type: "arena-overlay",
        visible: e
      }, "*");
    }
    async initializeProvider() {
      this.walletConnectInitialized || (this.provider = await yO.init({
        projectId: this.config.projectId,
        metadata: this.config.metadata,
        showQrModal: false,
        chains: [43114],
        methods: ["eth_sendTransaction", "eth_signTransaction", "eth_sign"],
        events: ["chainChanged", "accountsChanged"]
      }), this.walletConnectInitialized || (this.provider.on("display_uri", async (e) => {
        this._showOverlay(true), await this.sendRequest("requestWalletConnection", { uri: e });
      }), this.provider.on("connect", (e) => {
        var i;
        const r = (i = this.provider) == null ? void 0 : i.accounts[0];
        this._emit("walletChanged", { address: r }), this._showOverlay(false);
      }), this.provider.on("disconnect", (e) => {
        console.log("Wallet disconnected:", e.message), this._emit("walletChanged", { address: null }), this._showOverlay(false);
      }), this.walletConnectInitialized = true));
    }
    async connectWallet() {
      try {
        if (!this.provider)
          throw new Error("Provider not initialized");
        await this.provider.connect();
      } catch (e) {
        console.error("Connection error:", e), this._showOverlay(false);
      }
    }
    async sendRequest(e, r = {}) {
      return new Promise((i, s) => {
        const n = ++this.requestId, o = (a) => {
          a.data.id === n && (window.removeEventListener("message", o), a.data.error ? s(a.data.error) : i(a.data.result));
        };
        window.addEventListener("message", o), window.parent.postMessage(
          {
            type: "arena-request",
            id: n,
            method: e,
            params: r
          },
          "*"
        );
      });
    }
  }
  window.ArenaAppStoreSdk = DO;

  // Patch for browser global usage
  if (typeof window !== 'undefined') {
    window.ArenaAppStoreSdk = DO;
  }

  function Ae$3(n, e, t, r) {
    if (typeof n.setBigUint64 == "function")
      return n.setBigUint64(e, t, r);
    const i = BigInt(32), s = BigInt(4294967295), c = Number(t >> i & s), f = Number(t & s), o = r ? 4 : 0, l = r ? 0 : 4;
    n.setUint32(e + o, c, r), n.setUint32(e + l, f, r);
  }
  function Ie$4(n, e, t) {
    return n & e ^ ~n & t;
  }
  function Ne$4(n, e, t) {
    return n & e ^ n & t ^ e & t;
  }
  let Oe$3 = class Oe extends xy$1 {
    constructor(e, t, r, i) {
      super(), this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = i, this.buffer = new Uint8Array(e), this.view = PO(this.buffer);
    }
    update(e) {
      Uc$1(this), e = ql$1(e), os(e);
      const { view: t, buffer: r, blockLen: i } = this, s = e.length;
      for (let c = 0; c < s; ) {
        const f = Math.min(i - this.pos, s - c);
        if (f === i) {
          const o = PO(e);
          for (; i <= s - c; c += i)
            this.process(o, c);
          continue;
        }
        r.set(e.subarray(c, c + f), this.pos), this.pos += f, c += f, this.pos === i && (this.process(t, 0), this.pos = 0);
      }
      return this.length += e.length, this.roundClean(), this;
    }
    digestInto(e) {
      Uc$1(this), my$1(e, this), this.finished = true;
      const { buffer: t, view: r, blockLen: i, isLE: s } = this;
      let { pos: c } = this;
      t[c++] = 128, Ml$1(this.buffer.subarray(c)), this.padOffset > i - c && (this.process(r, 0), c = 0);
      for (let h = c; h < i; h++)
        t[h] = 0;
      Ae$3(r, i - 8, BigInt(this.length * 8), s), this.process(r, 0);
      const f = PO(e), o = this.outputLen;
      if (o % 4)
        throw new Error("_sha2: outputLen should be aligned to 32bit");
      const l = o / 4, g = this.get();
      if (l > g.length)
        throw new Error("_sha2: outputLen bigger than state");
      for (let h = 0; h < l; h++)
        f.setUint32(4 * h, g[h], s);
    }
    digest() {
      const { buffer: e, outputLen: t } = this;
      this.digestInto(e);
      const r = e.slice(0, t);
      return this.destroy(), r;
    }
    _cloneInto(e) {
      e || (e = new this.constructor()), e.set(...this.get());
      const { blockLen: t, buffer: r, length: i, finished: s, destroyed: c, pos: f } = this;
      return e.destroyed = c, e.finished = s, e.length = i, e.pos = f, i % t && e.buffer.set(r), e;
    }
    clone() {
      return this._cloneInto();
    }
  };
  const J$4 = /* @__PURE__ */ Uint32Array.from([
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ]), qe$3 = /* @__PURE__ */ Uint32Array.from([
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
  ]), tt$3 = /* @__PURE__ */ new Uint32Array(64);
  let He$3 = class He extends Oe$3 {
    constructor(e = 32) {
      super(64, e, 8, false), this.A = J$4[0] | 0, this.B = J$4[1] | 0, this.C = J$4[2] | 0, this.D = J$4[3] | 0, this.E = J$4[4] | 0, this.F = J$4[5] | 0, this.G = J$4[6] | 0, this.H = J$4[7] | 0;
    }
    get() {
      const { A: e, B: t, C: r, D: i, E: s, F: c, G: f, H: o } = this;
      return [e, t, r, i, s, c, f, o];
    }
    // prettier-ignore
    set(e, t, r, i, s, c, f, o) {
      this.A = e | 0, this.B = t | 0, this.C = r | 0, this.D = i | 0, this.E = s | 0, this.F = c | 0, this.G = f | 0, this.H = o | 0;
    }
    process(e, t) {
      for (let h = 0; h < 16; h++, t += 4)
        tt$3[h] = e.getUint32(t, false);
      for (let h = 16; h < 64; h++) {
        const B = tt$3[h - 15], q = tt$3[h - 2], _ = CO(B, 7) ^ CO(B, 18) ^ B >>> 3, p = CO(q, 17) ^ CO(q, 19) ^ q >>> 10;
        tt$3[h] = p + tt$3[h - 7] + _ + tt$3[h - 16] | 0;
      }
      let { A: r, B: i, C: s, D: c, E: f, F: o, G: l, H: g } = this;
      for (let h = 0; h < 64; h++) {
        const B = CO(f, 6) ^ CO(f, 11) ^ CO(f, 25), q = g + B + Ie$4(f, o, l) + qe$3[h] + tt$3[h] | 0, p = (CO(r, 2) ^ CO(r, 13) ^ CO(r, 22)) + Ne$4(r, i, s) | 0;
        g = l, l = o, o = f, f = c + q | 0, c = s, s = i, i = r, r = q + p | 0;
      }
      r = r + this.A | 0, i = i + this.B | 0, s = s + this.C | 0, c = c + this.D | 0, f = f + this.E | 0, o = o + this.F | 0, l = l + this.G | 0, g = g + this.H | 0, this.set(r, i, s, c, f, o, l, g);
    }
    roundClean() {
      Ml$1(tt$3);
    }
    destroy() {
      this.set(0, 0, 0, 0, 0, 0, 0, 0), Ml$1(this.buffer);
    }
  };
  const Le$3 = /* @__PURE__ */ $y$1(() => new He$3());
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Ct$2 = /* @__PURE__ */ BigInt(0), Rt$3 = /* @__PURE__ */ BigInt(1);
  function wt$3(n) {
    return n instanceof Uint8Array || ArrayBuffer.isView(n) && n.constructor.name === "Uint8Array";
  }
  function Vt$2(n) {
    if (!wt$3(n))
      throw new Error("Uint8Array expected");
  }
  function dt$4(n, e) {
    if (typeof e != "boolean")
      throw new Error(n + " boolean expected, got " + e);
  }
  function pt$3(n) {
    const e = n.toString(16);
    return e.length & 1 ? "0" + e : e;
  }
  function ee$3(n) {
    if (typeof n != "string")
      throw new Error("hex string expected, got " + typeof n);
    return n === "" ? Ct$2 : BigInt("0x" + n);
  }
  const ne$4 = (
    // @ts-ignore
    typeof Uint8Array.from([]).toHex == "function" && typeof Uint8Array.fromHex == "function"
  ), Ue$4 = /* @__PURE__ */ Array.from({ length: 256 }, (n, e) => e.toString(16).padStart(2, "0"));
  function ht$4(n) {
    if (Vt$2(n), ne$4)
      return n.toHex();
    let e = "";
    for (let t = 0; t < n.length; t++)
      e += Ue$4[n[t]];
    return e;
  }
  const $$2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
  function jt$1(n) {
    if (n >= $$2._0 && n <= $$2._9)
      return n - $$2._0;
    if (n >= $$2.A && n <= $$2.F)
      return n - ($$2.A - 10);
    if (n >= $$2.a && n <= $$2.f)
      return n - ($$2.a - 10);
  }
  function yt$3(n) {
    if (typeof n != "string")
      throw new Error("hex string expected, got " + typeof n);
    if (ne$4)
      return Uint8Array.fromHex(n);
    const e = n.length, t = e / 2;
    if (e % 2)
      throw new Error("hex string expected, got unpadded hex of length " + e);
    const r = new Uint8Array(t);
    for (let i = 0, s = 0; i < t; i++, s += 2) {
      const c = jt$1(n.charCodeAt(s)), f = jt$1(n.charCodeAt(s + 1));
      if (c === void 0 || f === void 0) {
        const o = n[s] + n[s + 1];
        throw new Error('hex string expected, got non-hex character "' + o + '" at index ' + s);
      }
      r[i] = c * 16 + f;
    }
    return r;
  }
  function ot$4(n) {
    return ee$3(ht$4(n));
  }
  function re$2(n) {
    return Vt$2(n), ee$3(ht$4(Uint8Array.from(n).reverse()));
  }
  function gt$2(n, e) {
    return yt$3(n.toString(16).padStart(e * 2, "0"));
  }
  function oe$3(n, e) {
    return gt$2(n, e).reverse();
  }
  function K$4(n, e, t) {
    let r;
    if (typeof e == "string")
      try {
        r = yt$3(e);
      } catch (s) {
        throw new Error(n + " must be hex string or Uint8Array, cause: " + s);
      }
    else if (wt$3(e))
      r = Uint8Array.from(e);
    else
      throw new Error(n + " must be hex string or Uint8Array");
    const i = r.length;
    if (typeof t == "number" && i !== t)
      throw new Error(n + " of length " + t + " expected, got " + i);
    return r;
  }
  function xt$3(...n) {
    let e = 0;
    for (let r = 0; r < n.length; r++) {
      const i = n[r];
      Vt$2(i), e += i.length;
    }
    const t = new Uint8Array(e);
    for (let r = 0, i = 0; r < n.length; r++) {
      const s = n[r];
      t.set(s, i), i += s.length;
    }
    return t;
  }
  const It$2 = (n) => typeof n == "bigint" && Ct$2 <= n;
  function Mt$3(n, e, t) {
    return It$2(n) && It$2(e) && It$2(t) && e <= n && n < t;
  }
  function ft$2(n, e, t, r) {
    if (!Mt$3(e, t, r))
      throw new Error("expected valid " + n + ": " + t + " <= n < " + r + ", got " + e);
  }
  function _e$4(n) {
    let e;
    for (e = 0; n > Ct$2; n >>= Rt$3, e += 1)
      ;
    return e;
  }
  const Et$1 = (n) => (Rt$3 << BigInt(n)) - Rt$3, Nt$2 = (n) => new Uint8Array(n), Kt$3 = (n) => Uint8Array.from(n);
  function Re$3(n, e, t) {
    if (typeof n != "number" || n < 2)
      throw new Error("hashLen must be a number");
    if (typeof e != "number" || e < 2)
      throw new Error("qByteLen must be a number");
    if (typeof t != "function")
      throw new Error("hmacFn must be a function");
    let r = Nt$2(n), i = Nt$2(n), s = 0;
    const c = () => {
      r.fill(1), i.fill(0), s = 0;
    }, f = (...h) => t(i, r, ...h), o = (h = Nt$2(0)) => {
      i = f(Kt$3([0]), h), r = f(), h.length !== 0 && (i = f(Kt$3([1]), h), r = f());
    }, l = () => {
      if (s++ >= 1e3)
        throw new Error("drbg: tried 1000 values");
      let h = 0;
      const B = [];
      for (; h < e; ) {
        r = f();
        const q = r.slice();
        B.push(q), h += r.length;
      }
      return xt$3(...B);
    };
    return (h, B) => {
      c(), o(h);
      let q;
      for (; !(q = B(l())); )
        o();
      return c(), q;
    };
  }
  const Ze$3 = {
    bigint: (n) => typeof n == "bigint",
    function: (n) => typeof n == "function",
    boolean: (n) => typeof n == "boolean",
    string: (n) => typeof n == "string",
    stringOrUint8Array: (n) => typeof n == "string" || wt$3(n),
    isSafeInteger: (n) => Number.isSafeInteger(n),
    array: (n) => Array.isArray(n),
    field: (n, e) => e.Fp.isValid(n),
    hash: (n) => typeof n == "function" && Number.isSafeInteger(n.outputLen)
  };
  function Bt$3(n, e, t = {}) {
    const r = (i, s, c) => {
      const f = Ze$3[s];
      if (typeof f != "function")
        throw new Error("invalid validator function");
      const o = n[i];
      if (!(c && o === void 0) && !f(o, n))
        throw new Error("param " + String(i) + " is invalid. Expected " + s + ", got " + o);
    };
    for (const [i, s] of Object.entries(e))
      r(i, s, false);
    for (const [i, s] of Object.entries(t))
      r(i, s, true);
    return n;
  }
  function Pt$3(n) {
    const e = /* @__PURE__ */ new WeakMap();
    return (t, ...r) => {
      const i = e.get(t);
      if (i !== void 0)
        return i;
      const s = n(t, ...r);
      return e.set(t, s), s;
    };
  }
  let ie$3 = class ie extends xy$1 {
    constructor(e, t) {
      super(), this.finished = false, this.destroyed = false, OO(e);
      const r = ql$1(t);
      if (this.iHash = e.create(), typeof this.iHash.update != "function")
        throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const i = this.blockLen, s = new Uint8Array(i);
      s.set(r.length > i ? e.create().update(r).digest() : r);
      for (let c = 0; c < s.length; c++)
        s[c] ^= 54;
      this.iHash.update(s), this.oHash = e.create();
      for (let c = 0; c < s.length; c++)
        s[c] ^= 106;
      this.oHash.update(s), Ml$1(s);
    }
    update(e) {
      return Uc$1(this), this.iHash.update(e), this;
    }
    digestInto(e) {
      Uc$1(this), os(e, this.outputLen), this.finished = true, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
    }
    digest() {
      const e = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(e), e;
    }
    _cloneInto(e) {
      e || (e = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: t, iHash: r, finished: i, destroyed: s, blockLen: c, outputLen: f } = this;
      return e = e, e.finished = i, e.destroyed = s, e.blockLen = c, e.outputLen = f, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e;
    }
    clone() {
      return this._cloneInto();
    }
    destroy() {
      this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
    }
  };
  const se$2 = (n, e, t) => new ie$3(n, e).update(t).digest();
  se$2.create = (n, e) => new ie$3(n, e);
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Y$2 = BigInt(0), C$3 = BigInt(1), rt$3 = /* @__PURE__ */ BigInt(2), Te$3 = /* @__PURE__ */ BigInt(3), ce$3 = /* @__PURE__ */ BigInt(4), fe$3 = /* @__PURE__ */ BigInt(5), ae$4 = /* @__PURE__ */ BigInt(8);
  function M$4(n, e) {
    const t = n % e;
    return t >= Y$2 ? t : e + t;
  }
  function j$1(n, e, t) {
    let r = n;
    for (; e-- > Y$2; )
      r *= r, r %= t;
    return r;
  }
  function Zt$3(n, e) {
    if (n === Y$2)
      throw new Error("invert: expected non-zero number");
    if (e <= Y$2)
      throw new Error("invert: expected positive modulus, got " + e);
    let t = M$4(n, e), r = e, i = Y$2, s = C$3;
    for (; t !== Y$2; ) {
      const f = r / t, o = r % t, l = i - s * f;
      r = t, t = o, i = s, s = l;
    }
    if (r !== C$3)
      throw new Error("invert: does not exist");
    return M$4(i, e);
  }
  function ue$4(n, e) {
    const t = (n.ORDER + C$3) / ce$3, r = n.pow(e, t);
    if (!n.eql(n.sqr(r), e))
      throw new Error("Cannot find square root");
    return r;
  }
  function ke$2(n, e) {
    const t = (n.ORDER - fe$3) / ae$4, r = n.mul(e, rt$3), i = n.pow(r, t), s = n.mul(e, i), c = n.mul(n.mul(s, rt$3), i), f = n.mul(s, n.sub(c, n.ONE));
    if (!n.eql(n.sqr(f), e))
      throw new Error("Cannot find square root");
    return f;
  }
  function ze$4(n) {
    if (n < BigInt(3))
      throw new Error("sqrt is not defined for small field");
    let e = n - C$3, t = 0;
    for (; e % rt$3 === Y$2; )
      e /= rt$3, t++;
    let r = rt$3;
    const i = Yt$3(n);
    for (; Dt$3(i, r) === 1; )
      if (r++ > 1e3)
        throw new Error("Cannot find square root: probably non-prime P");
    if (t === 1)
      return ue$4;
    let s = i.pow(r, e);
    const c = (e + C$3) / rt$3;
    return function(o, l) {
      if (o.is0(l))
        return l;
      if (Dt$3(o, l) !== 1)
        throw new Error("Cannot find square root");
      let g = t, h = o.mul(o.ONE, s), B = o.pow(l, e), q = o.pow(l, c);
      for (; !o.eql(B, o.ONE); ) {
        if (o.is0(B))
          return o.ZERO;
        let _ = 1, p = o.sqr(B);
        for (; !o.eql(p, o.ONE); )
          if (_++, p = o.sqr(p), _ === g)
            throw new Error("Cannot find square root");
        const k = C$3 << BigInt(g - _ - 1), R = o.pow(h, k);
        g = _, h = o.sqr(R), B = o.mul(B, h), q = o.mul(q, R);
      }
      return q;
    };
  }
  function Ce$2(n) {
    return n % ce$3 === Te$3 ? ue$4 : n % ae$4 === fe$3 ? ke$2 : ze$4(n);
  }
  const Ve$3 = [
    "create",
    "isValid",
    "is0",
    "neg",
    "inv",
    "sqrt",
    "sqr",
    "eql",
    "add",
    "sub",
    "mul",
    "pow",
    "div",
    "addN",
    "subN",
    "mulN",
    "sqrN"
  ];
  function Me$3(n) {
    const e = {
      ORDER: "bigint",
      MASK: "bigint",
      BYTES: "isSafeInteger",
      BITS: "isSafeInteger"
    }, t = Ve$3.reduce((r, i) => (r[i] = "function", r), e);
    return Bt$3(n, t);
  }
  function Ye$3(n, e, t) {
    if (t < Y$2)
      throw new Error("invalid exponent, negatives unsupported");
    if (t === Y$2)
      return n.ONE;
    if (t === C$3)
      return e;
    let r = n.ONE, i = e;
    for (; t > Y$2; )
      t & C$3 && (r = n.mul(r, i)), i = n.sqr(i), t >>= C$3;
    return r;
  }
  function le$3(n, e, t = false) {
    const r = new Array(e.length).fill(t ? n.ZERO : void 0), i = e.reduce((c, f, o) => n.is0(f) ? c : (r[o] = c, n.mul(c, f)), n.ONE), s = n.inv(i);
    return e.reduceRight((c, f, o) => n.is0(f) ? c : (r[o] = n.mul(c, r[o]), n.mul(c, f)), s), r;
  }
  function Dt$3(n, e) {
    const t = (n.ORDER - C$3) / rt$3, r = n.pow(e, t), i = n.eql(r, n.ONE), s = n.eql(r, n.ZERO), c = n.eql(r, n.neg(n.ONE));
    if (!i && !s && !c)
      throw new Error("invalid Legendre symbol result");
    return i ? 1 : s ? 0 : -1;
  }
  function de$2(n, e) {
    e !== void 0 && nn$4(e);
    const t = e !== void 0 ? e : n.toString(2).length, r = Math.ceil(t / 8);
    return { nBitLength: t, nByteLength: r };
  }
  function Yt$3(n, e, t = false, r = {}) {
    if (n <= Y$2)
      throw new Error("invalid field: expected ORDER > 0, got " + n);
    const { nBitLength: i, nByteLength: s } = de$2(n, e);
    if (s > 2048)
      throw new Error("invalid field: expected ORDER of <= 2048 bytes");
    let c;
    const f = Object.freeze({
      ORDER: n,
      isLE: t,
      BITS: i,
      BYTES: s,
      MASK: Et$1(i),
      ZERO: Y$2,
      ONE: C$3,
      create: (o) => M$4(o, n),
      isValid: (o) => {
        if (typeof o != "bigint")
          throw new Error("invalid field element: expected bigint, got " + typeof o);
        return Y$2 <= o && o < n;
      },
      is0: (o) => o === Y$2,
      isOdd: (o) => (o & C$3) === C$3,
      neg: (o) => M$4(-o, n),
      eql: (o, l) => o === l,
      sqr: (o) => M$4(o * o, n),
      add: (o, l) => M$4(o + l, n),
      sub: (o, l) => M$4(o - l, n),
      mul: (o, l) => M$4(o * l, n),
      pow: (o, l) => Ye$3(f, o, l),
      div: (o, l) => M$4(o * Zt$3(l, n), n),
      // Same as above, but doesn't normalize
      sqrN: (o) => o * o,
      addN: (o, l) => o + l,
      subN: (o, l) => o - l,
      mulN: (o, l) => o * l,
      inv: (o) => Zt$3(o, n),
      sqrt: r.sqrt || ((o) => (c || (c = Ce$2(n)), c(f, o))),
      toBytes: (o) => t ? oe$3(o, s) : gt$2(o, s),
      fromBytes: (o) => {
        if (o.length !== s)
          throw new Error("Field.fromBytes: expected " + s + " bytes, got " + o.length);
        return t ? re$2(o) : ot$4(o);
      },
      // TODO: we don't need it here, move out to separate fn
      invertBatch: (o) => le$3(f, o),
      // We can't move this out because Fp6, Fp12 implement it
      // and it's unclear what to return in there.
      cmov: (o, l, g) => g ? l : o
    });
    return Object.freeze(f);
  }
  function he$1(n) {
    if (typeof n != "bigint")
      throw new Error("field order must be bigint");
    const e = n.toString(2).length;
    return Math.ceil(e / 8);
  }
  function we$3(n) {
    const e = he$1(n);
    return e + Math.ceil(e / 2);
  }
  function je$4(n, e, t = false) {
    const r = n.length, i = he$1(e), s = we$3(e);
    if (r < 16 || r < s || r > 1024)
      throw new Error("expected " + s + "-1024 bytes of input, got " + r);
    const c = t ? re$2(n) : ot$4(n), f = M$4(c, e - C$3) + C$3;
    return t ? oe$3(f, i) : gt$2(f, i);
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Gt$3 = BigInt(0), Tt$3 = BigInt(1);
  function Ot$3(n, e) {
    const t = e.negate();
    return n ? t : e;
  }
  function ge$2(n, e) {
    if (!Number.isSafeInteger(n) || n <= 0 || n > e)
      throw new Error("invalid window size, expected [1.." + e + "], got W=" + n);
  }
  function qt$2(n, e) {
    ge$2(n, e);
    const t = Math.ceil(e / n) + 1, r = 2 ** (n - 1), i = 2 ** n, s = Et$1(n), c = BigInt(n);
    return { windows: t, windowSize: r, mask: s, maxNumber: i, shiftBy: c };
  }
  function Wt$3(n, e, t) {
    const { windowSize: r, mask: i, maxNumber: s, shiftBy: c } = t;
    let f = Number(n & i), o = n >> c;
    f > r && (f -= s, o += Tt$3);
    const l = e * r, g = l + Math.abs(f) - 1, h = f === 0, B = f < 0, q = e % 2 !== 0;
    return { nextN: o, offset: g, isZero: h, isNeg: B, isNegF: q, offsetF: l };
  }
  function Ke$3(n, e) {
    if (!Array.isArray(n))
      throw new Error("array expected");
    n.forEach((t, r) => {
      if (!(t instanceof e))
        throw new Error("invalid point at index " + r);
    });
  }
  function Pe$4(n, e) {
    if (!Array.isArray(n))
      throw new Error("array of scalars expected");
    n.forEach((t, r) => {
      if (!e.isValid(t))
        throw new Error("invalid scalar at index " + r);
    });
  }
  const Ht$3 = /* @__PURE__ */ new WeakMap(), pe$3 = /* @__PURE__ */ new WeakMap();
  function Lt$3(n) {
    return pe$3.get(n) || 1;
  }
  function De$4(n, e) {
    return {
      constTimeNegate: Ot$3,
      hasPrecomputes(t) {
        return Lt$3(t) !== 1;
      },
      // non-const time multiplication ladder
      unsafeLadder(t, r, i = n.ZERO) {
        let s = t;
        for (; r > Gt$3; )
          r & Tt$3 && (i = i.add(s)), s = s.double(), r >>= Tt$3;
        return i;
      },
      /**
       * Creates a wNAF precomputation window. Used for caching.
       * Default window size is set by `utils.precompute()` and is equal to 8.
       * Number of precomputed points depends on the curve size:
       * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
       * - 𝑊 is the window size
       * - 𝑛 is the bitlength of the curve order.
       * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
       * @param elm Point instance
       * @param W window size
       * @returns precomputed point tables flattened to a single array
       */
      precomputeWindow(t, r) {
        const { windows: i, windowSize: s } = qt$2(r, e), c = [];
        let f = t, o = f;
        for (let l = 0; l < i; l++) {
          o = f, c.push(o);
          for (let g = 1; g < s; g++)
            o = o.add(f), c.push(o);
          f = o.double();
        }
        return c;
      },
      /**
       * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
       * @param W window size
       * @param precomputes precomputed tables
       * @param n scalar (we don't check here, but should be less than curve order)
       * @returns real and fake (for const-time) points
       */
      wNAF(t, r, i) {
        let s = n.ZERO, c = n.BASE;
        const f = qt$2(t, e);
        for (let o = 0; o < f.windows; o++) {
          const { nextN: l, offset: g, isZero: h, isNeg: B, isNegF: q, offsetF: _ } = Wt$3(i, o, f);
          i = l, h ? c = c.add(Ot$3(q, r[_])) : s = s.add(Ot$3(B, r[g]));
        }
        return { p: s, f: c };
      },
      /**
       * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.
       * @param W window size
       * @param precomputes precomputed tables
       * @param n scalar (we don't check here, but should be less than curve order)
       * @param acc accumulator point to add result of multiplication
       * @returns point
       */
      wNAFUnsafe(t, r, i, s = n.ZERO) {
        const c = qt$2(t, e);
        for (let f = 0; f < c.windows && i !== Gt$3; f++) {
          const { nextN: o, offset: l, isZero: g, isNeg: h } = Wt$3(i, f, c);
          if (i = o, !g) {
            const B = r[l];
            s = s.add(h ? B.negate() : B);
          }
        }
        return s;
      },
      getPrecomputes(t, r, i) {
        let s = Ht$3.get(r);
        return s || (s = this.precomputeWindow(r, t), t !== 1 && Ht$3.set(r, i(s))), s;
      },
      wNAFCached(t, r, i) {
        const s = Lt$3(t);
        return this.wNAF(s, this.getPrecomputes(s, t, i), r);
      },
      wNAFCachedUnsafe(t, r, i, s) {
        const c = Lt$3(t);
        return c === 1 ? this.unsafeLadder(t, r, s) : this.wNAFUnsafe(c, this.getPrecomputes(c, t, i), r, s);
      },
      // We calculate precomputes for elliptic curve point multiplication
      // using windowed method. This specifies window size and
      // stores precomputed values. Usually only base point would be precomputed.
      setWindowSize(t, r) {
        ge$2(r, e), pe$3.set(t, r), Ht$3.delete(t);
      }
    };
  }
  function Ge$3(n, e, t, r) {
    Ke$3(t, n), Pe$4(r, e);
    const i = t.length, s = r.length;
    if (i !== s)
      throw new Error("arrays of points and scalars must have equal length");
    const c = n.ZERO, f = _e$4(BigInt(i));
    let o = 1;
    f > 12 ? o = f - 3 : f > 4 ? o = f - 2 : f > 0 && (o = 2);
    const l = Et$1(o), g = new Array(Number(l) + 1).fill(c), h = Math.floor((e.BITS - 1) / o) * o;
    let B = c;
    for (let q = h; q >= 0; q -= o) {
      g.fill(c);
      for (let p = 0; p < s; p++) {
        const k = r[p], R = Number(k >> BigInt(q) & l);
        g[R] = g[R].add(t[p]);
      }
      let _ = c;
      for (let p = g.length - 1, k = c; p > 0; p--)
        k = k.add(g[p]), _ = _.add(k);
      if (B = B.add(_), q !== 0)
        for (let p = 0; p < o; p++)
          B = B.double();
    }
    return B;
  }
  function me$3(n) {
    return Me$3(n.Fp), Bt$3(n, {
      n: "bigint",
      h: "bigint",
      Gx: "field",
      Gy: "field"
    }, {
      nBitLength: "isSafeInteger",
      nByteLength: "isSafeInteger"
    }), Object.freeze({
      ...de$2(n.n, n.nBitLength),
      ...n,
      p: n.Fp.ORDER
    });
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function $t$3(n) {
    n.lowS !== void 0 && dt$4("lowS", n.lowS), n.prehash !== void 0 && dt$4("prehash", n.prehash);
  }
  function We$3(n) {
    const e = me$3(n);
    Bt$3(e, {
      a: "field",
      b: "field"
    }, {
      allowInfinityPoint: "boolean",
      allowedPrivateKeyLengths: "array",
      clearCofactor: "function",
      fromBytes: "function",
      isTorsionFree: "function",
      toBytes: "function",
      wrapPrivateKey: "boolean"
    });
    const { endo: t, Fp: r, a: i } = e;
    if (t) {
      if (!r.eql(i, r.ZERO))
        throw new Error("invalid endo: CURVE.a must be 0");
      if (typeof t != "object" || typeof t.beta != "bigint" || typeof t.splitScalar != "function")
        throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');
    }
    return Object.freeze({ ...e });
  }
  let $e$3 = class $e extends Error {
    constructor(e = "") {
      super(e);
    }
  };
  const F$3 = {
    // asn.1 DER encoding utils
    Err: $e$3,
    // Basic building block is TLV (Tag-Length-Value)
    _tlv: {
      encode: (n, e) => {
        const { Err: t } = F$3;
        if (n < 0 || n > 256)
          throw new t("tlv.encode: wrong tag");
        if (e.length & 1)
          throw new t("tlv.encode: unpadded data");
        const r = e.length / 2, i = pt$3(r);
        if (i.length / 2 & 128)
          throw new t("tlv.encode: long form length too big");
        const s = r > 127 ? pt$3(i.length / 2 | 128) : "";
        return pt$3(n) + s + i + e;
      },
      // v - value, l - left bytes (unparsed)
      decode(n, e) {
        const { Err: t } = F$3;
        let r = 0;
        if (n < 0 || n > 256)
          throw new t("tlv.encode: wrong tag");
        if (e.length < 2 || e[r++] !== n)
          throw new t("tlv.decode: wrong tlv");
        const i = e[r++], s = !!(i & 128);
        let c = 0;
        if (!s)
          c = i;
        else {
          const o = i & 127;
          if (!o)
            throw new t("tlv.decode(long): indefinite length not supported");
          if (o > 4)
            throw new t("tlv.decode(long): byte length is too big");
          const l = e.subarray(r, r + o);
          if (l.length !== o)
            throw new t("tlv.decode: length bytes not complete");
          if (l[0] === 0)
            throw new t("tlv.decode(long): zero leftmost byte");
          for (const g of l)
            c = c << 8 | g;
          if (r += o, c < 128)
            throw new t("tlv.decode(long): not minimal encoding");
        }
        const f = e.subarray(r, r + c);
        if (f.length !== c)
          throw new t("tlv.decode: wrong value length");
        return { v: f, l: e.subarray(r + c) };
      }
    },
    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,
    // since we always use positive integers here. It must always be empty:
    // - add zero byte if exists
    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)
    _int: {
      encode(n) {
        const { Err: e } = F$3;
        if (n < X$4)
          throw new e("integer: negative integers are not allowed");
        let t = pt$3(n);
        if (Number.parseInt(t[0], 16) & 8 && (t = "00" + t), t.length & 1)
          throw new e("unexpected DER parsing assertion: unpadded hex");
        return t;
      },
      decode(n) {
        const { Err: e } = F$3;
        if (n[0] & 128)
          throw new e("invalid signature integer: negative");
        if (n[0] === 0 && !(n[1] & 128))
          throw new e("invalid signature integer: unnecessary leading zero");
        return ot$4(n);
      }
    },
    toSig(n) {
      const { Err: e, _int: t, _tlv: r } = F$3, i = K$4("signature", n), { v: s, l: c } = r.decode(48, i);
      if (c.length)
        throw new e("invalid signature: left bytes after parsing");
      const { v: f, l: o } = r.decode(2, s), { v: l, l: g } = r.decode(2, o);
      if (g.length)
        throw new e("invalid signature: left bytes after parsing");
      return { r: t.decode(f), s: t.decode(l) };
    },
    hexFromSig(n) {
      const { _tlv: e, _int: t } = F$3, r = e.encode(2, t.encode(n.r)), i = e.encode(2, t.encode(n.s)), s = r + i;
      return e.encode(48, s);
    }
  };
  function Ut$3(n, e) {
    return ht$4(gt$2(n, e));
  }
  const X$4 = BigInt(0), Z$2 = BigInt(1);
  BigInt(2);
  const _t$3 = BigInt(3), Fe$3 = BigInt(4);
  function Xe$2(n) {
    const e = We$3(n), { Fp: t } = e, r = Yt$3(e.n, e.nBitLength), i = e.toBytes || ((A, a, w) => {
      const b = a.toAffine();
      return xt$3(Uint8Array.from([4]), t.toBytes(b.x), t.toBytes(b.y));
    }), s = e.fromBytes || ((A) => {
      const a = A.subarray(1), w = t.fromBytes(a.subarray(0, t.BYTES)), b = t.fromBytes(a.subarray(t.BYTES, 2 * t.BYTES));
      return { x: w, y: b };
    });
    function c(A) {
      const { a, b: w } = e, b = t.sqr(A), v = t.mul(b, A);
      return t.add(t.add(v, t.mul(A, a)), w);
    }
    function f(A, a) {
      const w = t.sqr(a), b = c(A);
      return t.eql(w, b);
    }
    if (!f(e.Gx, e.Gy))
      throw new Error("bad curve params: generator point");
    const o = t.mul(t.pow(e.a, _t$3), Fe$3), l = t.mul(t.sqr(e.b), BigInt(27));
    if (t.is0(t.add(o, l)))
      throw new Error("bad curve params: a or b");
    function g(A) {
      return Mt$3(A, Z$2, e.n);
    }
    function h(A) {
      const { allowedPrivateKeyLengths: a, nByteLength: w, wrapPrivateKey: b, n: v } = e;
      if (a && typeof A != "bigint") {
        if (wt$3(A) && (A = ht$4(A)), typeof A != "string" || !a.includes(A.length))
          throw new Error("invalid private key");
        A = A.padStart(w * 2, "0");
      }
      let O;
      try {
        O = typeof A == "bigint" ? A : ot$4(K$4("private key", A, w));
      } catch {
        throw new Error("invalid private key, expected hex or " + w + " bytes, got " + typeof A);
      }
      return b && (O = M$4(O, v)), ft$2("private key", O, Z$2, v), O;
    }
    function B(A) {
      if (!(A instanceof p))
        throw new Error("ProjectivePoint expected");
    }
    const q = Pt$3((A, a) => {
      const { px: w, py: b, pz: v } = A;
      if (t.eql(v, t.ONE))
        return { x: w, y: b };
      const O = A.is0();
      a == null && (a = O ? t.ONE : t.inv(v));
      const L = t.mul(w, a), H = t.mul(b, a), y = t.mul(v, a);
      if (O)
        return { x: t.ZERO, y: t.ZERO };
      if (!t.eql(y, t.ONE))
        throw new Error("invZ was invalid");
      return { x: L, y: H };
    }), _ = Pt$3((A) => {
      if (A.is0()) {
        if (e.allowInfinityPoint && !t.is0(A.py))
          return;
        throw new Error("bad point: ZERO");
      }
      const { x: a, y: w } = A.toAffine();
      if (!t.isValid(a) || !t.isValid(w))
        throw new Error("bad point: x or y not FE");
      if (!f(a, w))
        throw new Error("bad point: equation left != right");
      if (!A.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
      return true;
    });
    class p {
      constructor(a, w, b) {
        if (a == null || !t.isValid(a))
          throw new Error("x required");
        if (w == null || !t.isValid(w) || t.is0(w))
          throw new Error("y required");
        if (b == null || !t.isValid(b))
          throw new Error("z required");
        this.px = a, this.py = w, this.pz = b, Object.freeze(this);
      }
      // Does not validate if the point is on-curve.
      // Use fromHex instead, or call assertValidity() later.
      static fromAffine(a) {
        const { x: w, y: b } = a || {};
        if (!a || !t.isValid(w) || !t.isValid(b))
          throw new Error("invalid affine point");
        if (a instanceof p)
          throw new Error("projective point not allowed");
        const v = (O) => t.eql(O, t.ZERO);
        return v(w) && v(b) ? p.ZERO : new p(w, b, t.ONE);
      }
      get x() {
        return this.toAffine().x;
      }
      get y() {
        return this.toAffine().y;
      }
      /**
       * Takes a bunch of Projective Points but executes only one
       * inversion on all of them. Inversion is very slow operation,
       * so this improves performance massively.
       * Optimization: converts a list of projective points to a list of identical points with Z=1.
       */
      static normalizeZ(a) {
        const w = le$3(t, a.map((b) => b.pz));
        return a.map((b, v) => b.toAffine(w[v])).map(p.fromAffine);
      }
      /**
       * Converts hash string or Uint8Array to Point.
       * @param hex short/long ECDSA hex
       */
      static fromHex(a) {
        const w = p.fromAffine(s(K$4("pointHex", a)));
        return w.assertValidity(), w;
      }
      // Multiplies generator point by privateKey.
      static fromPrivateKey(a) {
        return p.BASE.multiply(h(a));
      }
      // Multiscalar Multiplication
      static msm(a, w) {
        return Ge$3(p, r, a, w);
      }
      // "Private method", don't use it directly
      _setWindowSize(a) {
        D.setWindowSize(this, a);
      }
      // A point on curve is valid if it conforms to equation.
      assertValidity() {
        _(this);
      }
      hasEvenY() {
        const { y: a } = this.toAffine();
        if (t.isOdd)
          return !t.isOdd(a);
        throw new Error("Field doesn't support isOdd");
      }
      /**
       * Compare one point to another.
       */
      equals(a) {
        B(a);
        const { px: w, py: b, pz: v } = this, { px: O, py: L, pz: H } = a, y = t.eql(t.mul(w, H), t.mul(O, v)), N = t.eql(t.mul(b, H), t.mul(L, v));
        return y && N;
      }
      /**
       * Flips point to one corresponding to (x, -y) in Affine coordinates.
       */
      negate() {
        return new p(this.px, t.neg(this.py), this.pz);
      }
      // Renes-Costello-Batina exception-free doubling formula.
      // There is 30% faster Jacobian formula, but it is not complete.
      // https://eprint.iacr.org/2015/1060, algorithm 3
      // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
      double() {
        const { a, b: w } = e, b = t.mul(w, _t$3), { px: v, py: O, pz: L } = this;
        let H = t.ZERO, y = t.ZERO, N = t.ZERO, x = t.mul(v, v), T = t.mul(O, O), d = t.mul(L, L), u = t.mul(v, O);
        return u = t.add(u, u), N = t.mul(v, L), N = t.add(N, N), H = t.mul(a, N), y = t.mul(b, d), y = t.add(H, y), H = t.sub(T, y), y = t.add(T, y), y = t.mul(H, y), H = t.mul(u, H), N = t.mul(b, N), d = t.mul(a, d), u = t.sub(x, d), u = t.mul(a, u), u = t.add(u, N), N = t.add(x, x), x = t.add(N, x), x = t.add(x, d), x = t.mul(x, u), y = t.add(y, x), d = t.mul(O, L), d = t.add(d, d), x = t.mul(d, u), H = t.sub(H, x), N = t.mul(d, T), N = t.add(N, N), N = t.add(N, N), new p(H, y, N);
      }
      // Renes-Costello-Batina exception-free addition formula.
      // There is 30% faster Jacobian formula, but it is not complete.
      // https://eprint.iacr.org/2015/1060, algorithm 1
      // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
      add(a) {
        B(a);
        const { px: w, py: b, pz: v } = this, { px: O, py: L, pz: H } = a;
        let y = t.ZERO, N = t.ZERO, x = t.ZERO;
        const T = e.a, d = t.mul(e.b, _t$3);
        let u = t.mul(w, O), m = t.mul(b, L), I = t.mul(v, H), E = t.add(w, b), S = t.add(O, L);
        E = t.mul(E, S), S = t.add(u, m), E = t.sub(E, S), S = t.add(w, v);
        let U = t.add(O, H);
        return S = t.mul(S, U), U = t.add(u, I), S = t.sub(S, U), U = t.add(b, v), y = t.add(L, H), U = t.mul(U, y), y = t.add(m, I), U = t.sub(U, y), x = t.mul(T, S), y = t.mul(d, I), x = t.add(y, x), y = t.sub(m, x), x = t.add(m, x), N = t.mul(y, x), m = t.add(u, u), m = t.add(m, u), I = t.mul(T, I), S = t.mul(d, S), m = t.add(m, I), I = t.sub(u, I), I = t.mul(T, I), S = t.add(S, I), u = t.mul(m, S), N = t.add(N, u), u = t.mul(U, S), y = t.mul(E, y), y = t.sub(y, u), u = t.mul(E, m), x = t.mul(U, x), x = t.add(x, u), new p(y, N, x);
      }
      subtract(a) {
        return this.add(a.negate());
      }
      is0() {
        return this.equals(p.ZERO);
      }
      wNAF(a) {
        return D.wNAFCached(this, a, p.normalizeZ);
      }
      /**
       * Non-constant-time multiplication. Uses double-and-add algorithm.
       * It's faster, but should only be used when you don't care about
       * an exposed private key e.g. sig verification, which works over *public* keys.
       */
      multiplyUnsafe(a) {
        const { endo: w, n: b } = e;
        ft$2("scalar", a, X$4, b);
        const v = p.ZERO;
        if (a === X$4)
          return v;
        if (this.is0() || a === Z$2)
          return this;
        if (!w || D.hasPrecomputes(this))
          return D.wNAFCachedUnsafe(this, a, p.normalizeZ);
        let { k1neg: O, k1: L, k2neg: H, k2: y } = w.splitScalar(a), N = v, x = v, T = this;
        for (; L > X$4 || y > X$4; )
          L & Z$2 && (N = N.add(T)), y & Z$2 && (x = x.add(T)), T = T.double(), L >>= Z$2, y >>= Z$2;
        return O && (N = N.negate()), H && (x = x.negate()), x = new p(t.mul(x.px, w.beta), x.py, x.pz), N.add(x);
      }
      /**
       * Constant time multiplication.
       * Uses wNAF method. Windowed method may be 10% faster,
       * but takes 2x longer to generate and consumes 2x memory.
       * Uses precomputes when available.
       * Uses endomorphism for Koblitz curves.
       * @param scalar by which the point would be multiplied
       * @returns New point
       */
      multiply(a) {
        const { endo: w, n: b } = e;
        ft$2("scalar", a, Z$2, b);
        let v, O;
        if (w) {
          const { k1neg: L, k1: H, k2neg: y, k2: N } = w.splitScalar(a);
          let { p: x, f: T } = this.wNAF(H), { p: d, f: u } = this.wNAF(N);
          x = D.constTimeNegate(L, x), d = D.constTimeNegate(y, d), d = new p(t.mul(d.px, w.beta), d.py, d.pz), v = x.add(d), O = T.add(u);
        } else {
          const { p: L, f: H } = this.wNAF(a);
          v = L, O = H;
        }
        return p.normalizeZ([v, O])[0];
      }
      /**
       * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
       * Not using Strauss-Shamir trick: precomputation tables are faster.
       * The trick could be useful if both P and Q are not G (not in our case).
       * @returns non-zero affine point
       */
      multiplyAndAddUnsafe(a, w, b) {
        const v = p.BASE, O = (H, y) => y === X$4 || y === Z$2 || !H.equals(v) ? H.multiplyUnsafe(y) : H.multiply(y), L = O(this, w).add(O(a, b));
        return L.is0() ? void 0 : L;
      }
      // Converts Projective point to affine (x, y) coordinates.
      // Can accept precomputed Z^-1 - for example, from invertBatch.
      // (x, y, z) ∋ (x=x/z, y=y/z)
      toAffine(a) {
        return q(this, a);
      }
      isTorsionFree() {
        const { h: a, isTorsionFree: w } = e;
        if (a === Z$2)
          return true;
        if (w)
          return w(p, this);
        throw new Error("isTorsionFree() has not been declared for the elliptic curve");
      }
      clearCofactor() {
        const { h: a, clearCofactor: w } = e;
        return a === Z$2 ? this : w ? w(p, this) : this.multiplyUnsafe(e.h);
      }
      toRawBytes(a = true) {
        return dt$4("isCompressed", a), this.assertValidity(), i(p, this, a);
      }
      toHex(a = true) {
        return dt$4("isCompressed", a), ht$4(this.toRawBytes(a));
      }
    }
    p.BASE = new p(e.Gx, e.Gy, t.ONE), p.ZERO = new p(t.ZERO, t.ONE, t.ZERO);
    const { endo: k, nBitLength: R } = e, D = De$4(p, k ? Math.ceil(R / 2) : R);
    return {
      CURVE: e,
      ProjectivePoint: p,
      normPrivateKeyToScalar: h,
      weierstrassEquation: c,
      isWithinCurveOrder: g
    };
  }
  function Qe$2(n) {
    const e = me$3(n);
    return Bt$3(e, {
      hash: "hash",
      hmac: "function",
      randomBytes: "function"
    }, {
      bits2int: "function",
      bits2int_modN: "function",
      lowS: "boolean"
    }), Object.freeze({ lowS: true, ...e });
  }
  function Je$3(n) {
    const e = Qe$2(n), { Fp: t, n: r, nByteLength: i, nBitLength: s } = e, c = t.BYTES + 1, f = 2 * t.BYTES + 1;
    function o(d) {
      return M$4(d, r);
    }
    function l(d) {
      return Zt$3(d, r);
    }
    const { ProjectivePoint: g, normPrivateKeyToScalar: h, weierstrassEquation: B, isWithinCurveOrder: q } = Xe$2({
      ...e,
      toBytes(d, u, m) {
        const I = u.toAffine(), E = t.toBytes(I.x), S = xt$3;
        return dt$4("isCompressed", m), m ? S(Uint8Array.from([u.hasEvenY() ? 2 : 3]), E) : S(Uint8Array.from([4]), E, t.toBytes(I.y));
      },
      fromBytes(d) {
        const u = d.length, m = d[0], I = d.subarray(1);
        if (u === c && (m === 2 || m === 3)) {
          const E = ot$4(I);
          if (!Mt$3(E, Z$2, t.ORDER))
            throw new Error("Point is not on curve");
          const S = B(E);
          let U;
          try {
            U = t.sqrt(S);
          } catch (P) {
            const V = P instanceof Error ? ": " + P.message : "";
            throw new Error("Point is not on curve" + V);
          }
          const z = (U & Z$2) === Z$2;
          return (m & 1) === 1 !== z && (U = t.neg(U)), { x: E, y: U };
        } else if (u === f && m === 4) {
          const E = t.fromBytes(I.subarray(0, t.BYTES)), S = t.fromBytes(I.subarray(t.BYTES, 2 * t.BYTES));
          return { x: E, y: S };
        } else {
          const E = c, S = f;
          throw new Error("invalid Point, expected length of " + E + ", or uncompressed " + S + ", got " + u);
        }
      }
    });
    function _(d) {
      const u = r >> Z$2;
      return d > u;
    }
    function p(d) {
      return _(d) ? o(-d) : d;
    }
    const k = (d, u, m) => ot$4(d.slice(u, m));
    class R {
      constructor(u, m, I) {
        ft$2("r", u, Z$2, r), ft$2("s", m, Z$2, r), this.r = u, this.s = m, I != null && (this.recovery = I), Object.freeze(this);
      }
      // pair (bytes of r, bytes of s)
      static fromCompact(u) {
        const m = i;
        return u = K$4("compactSignature", u, m * 2), new R(k(u, 0, m), k(u, m, 2 * m));
      }
      // DER encoded ECDSA signature
      // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
      static fromDER(u) {
        const { r: m, s: I } = F$3.toSig(K$4("DER", u));
        return new R(m, I);
      }
      /**
       * @todo remove
       * @deprecated
       */
      assertValidity() {
      }
      addRecoveryBit(u) {
        return new R(this.r, this.s, u);
      }
      recoverPublicKey(u) {
        const { r: m, s: I, recovery: E } = this, S = v(K$4("msgHash", u));
        if (E == null || ![0, 1, 2, 3].includes(E))
          throw new Error("recovery id invalid");
        const U = E === 2 || E === 3 ? m + e.n : m;
        if (U >= t.ORDER)
          throw new Error("recovery id 2 or 3 invalid");
        const z = E & 1 ? "03" : "02", W = g.fromHex(z + Ut$3(U, t.BYTES)), P = l(U), V = o(-S * P), it = o(I * P), Q = g.BASE.multiplyAndAddUnsafe(W, V, it);
        if (!Q)
          throw new Error("point at infinify");
        return Q.assertValidity(), Q;
      }
      // Signatures should be low-s, to prevent malleability.
      hasHighS() {
        return _(this.s);
      }
      normalizeS() {
        return this.hasHighS() ? new R(this.r, o(-this.s), this.recovery) : this;
      }
      // DER-encoded
      toDERRawBytes() {
        return yt$3(this.toDERHex());
      }
      toDERHex() {
        return F$3.hexFromSig(this);
      }
      // padded bytes of r, then padded bytes of s
      toCompactRawBytes() {
        return yt$3(this.toCompactHex());
      }
      toCompactHex() {
        const u = i;
        return Ut$3(this.r, u) + Ut$3(this.s, u);
      }
    }
    const D = {
      isValidPrivateKey(d) {
        try {
          return h(d), !0;
        } catch {
          return false;
        }
      },
      normPrivateKeyToScalar: h,
      /**
       * Produces cryptographically secure private key from random of size
       * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
       */
      randomPrivateKey: () => {
        const d = we$3(e.n);
        return je$4(e.randomBytes(d), e.n);
      },
      /**
       * Creates precompute table for an arbitrary EC point. Makes point "cached".
       * Allows to massively speed-up `point.multiply(scalar)`.
       * @returns cached point
       * @example
       * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
       * fast.multiply(privKey); // much faster ECDH now
       */
      precompute(d = 8, u = g.BASE) {
        return u._setWindowSize(d), u.multiply(BigInt(3)), u;
      }
    };
    function A(d, u = true) {
      return g.fromPrivateKey(d).toRawBytes(u);
    }
    function a(d) {
      if (typeof d == "bigint")
        return false;
      if (d instanceof g)
        return true;
      const m = K$4("key", d).length, I = t.BYTES, E = I + 1, S = 2 * I + 1;
      if (!(e.allowedPrivateKeyLengths || i === E))
        return m === E || m === S;
    }
    function w(d, u, m = true) {
      if (a(d) === true)
        throw new Error("first arg must be private key");
      if (a(u) === false)
        throw new Error("second arg must be public key");
      return g.fromHex(u).multiply(h(d)).toRawBytes(m);
    }
    const b = e.bits2int || function(d) {
      if (d.length > 8192)
        throw new Error("input is too large");
      const u = ot$4(d), m = d.length * 8 - s;
      return m > 0 ? u >> BigInt(m) : u;
    }, v = e.bits2int_modN || function(d) {
      return o(b(d));
    }, O = Et$1(s);
    function L(d) {
      return ft$2("num < 2^" + s, d, X$4, O), gt$2(d, i);
    }
    function H(d, u, m = y) {
      if (["recovered", "canonical"].some((et) => et in m))
        throw new Error("sign() legacy options not supported");
      const { hash: I, randomBytes: E } = e;
      let { lowS: S, prehash: U, extraEntropy: z } = m;
      S == null && (S = true), d = K$4("msgHash", d), $t$3(m), U && (d = K$4("prehashed msgHash", I(d)));
      const W = v(d), P = h(u), V = [L(P), L(W)];
      if (z != null && z !== false) {
        const et = z === true ? E(t.BYTES) : z;
        V.push(K$4("extraEntropy", et));
      }
      const it = xt$3(...V), Q = W;
      function vt(et) {
        const st = b(et);
        if (!q(st))
          return;
        const St = l(st), at = g.BASE.multiply(st).toAffine(), nt = o(at.x);
        if (nt === X$4)
          return;
        const ut = o(St * o(Q + nt * P));
        if (ut === X$4)
          return;
        let lt = (at.x === nt ? 0 : 2) | Number(at.y & Z$2), ct = ut;
        return S && _(ut) && (ct = p(ut), lt ^= 1), new R(nt, ct, lt);
      }
      return { seed: it, k2sig: vt };
    }
    const y = { lowS: e.lowS, prehash: false }, N = { lowS: e.lowS, prehash: false };
    function x(d, u, m = y) {
      const { seed: I, k2sig: E } = H(d, u, m), S = e;
      return Re$3(S.hash.outputLen, S.nByteLength, S.hmac)(I, E);
    }
    g.BASE._setWindowSize(8);
    function T(d, u, m, I = N) {
      var lt;
      const E = d;
      u = K$4("msgHash", u), m = K$4("publicKey", m);
      const { lowS: S, prehash: U, format: z } = I;
      if ($t$3(I), "strict" in I)
        throw new Error("options.strict was renamed to lowS");
      if (z !== void 0 && z !== "compact" && z !== "der")
        throw new Error("format must be compact or der");
      const W = typeof E == "string" || wt$3(E), P = !W && !z && typeof E == "object" && E !== null && typeof E.r == "bigint" && typeof E.s == "bigint";
      if (!W && !P)
        throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");
      let V, it;
      try {
        if (P && (V = new R(E.r, E.s)), W) {
          try {
            z !== "compact" && (V = R.fromDER(E));
          } catch (ct) {
            if (!(ct instanceof F$3.Err))
              throw ct;
          }
          !V && z !== "der" && (V = R.fromCompact(E));
        }
        it = g.fromHex(m);
      } catch {
        return false;
      }
      if (!V || S && V.hasHighS())
        return false;
      U && (u = e.hash(u));
      const { r: Q, s: vt } = V, et = v(u), st = l(vt), St = o(et * st), at = o(Q * st), nt = (lt = g.BASE.multiplyAndAddUnsafe(it, St, at)) == null ? void 0 : lt.toAffine();
      return nt ? o(nt.x) === Q : false;
    }
    return {
      CURVE: e,
      getPublicKey: A,
      getSharedSecret: w,
      sign: x,
      verify: T,
      ProjectivePoint: g,
      Signature: R,
      utils: D
    };
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function tn$3(n) {
    return {
      hash: n,
      hmac: (e, ...t) => se$2(n, e, TO(...t)),
      randomBytes: RO
    };
  }
  function en$3(n, e) {
    const t = (r) => Je$3({ ...n, ...tn$3(r) });
    return { ...t(e), create: t };
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const be$2 = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"), Ft$3 = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), nn$3 = BigInt(0), rn$3 = BigInt(1), kt$1 = BigInt(2), Xt$3 = (n, e) => (n + e / kt$1) / e;
  function on$3(n) {
    const e = be$2, t = BigInt(3), r = BigInt(6), i = BigInt(11), s = BigInt(22), c = BigInt(23), f = BigInt(44), o = BigInt(88), l = n * n * n % e, g = l * l * n % e, h = j$1(g, t, e) * g % e, B = j$1(h, t, e) * g % e, q = j$1(B, kt$1, e) * l % e, _ = j$1(q, i, e) * q % e, p = j$1(_, s, e) * _ % e, k = j$1(p, f, e) * p % e, R = j$1(k, o, e) * k % e, D = j$1(R, f, e) * p % e, A = j$1(D, t, e) * g % e, a = j$1(A, c, e) * _ % e, w = j$1(a, r, e) * l % e, b = j$1(w, kt$1, e);
    if (!zt$3.eql(zt$3.sqr(b), n))
      throw new Error("Cannot find square root");
    return b;
  }
  const zt$3 = Yt$3(be$2, void 0, void 0, { sqrt: on$3 }), cn$2 = en$3({
    a: nn$3,
    b: BigInt(7),
    Fp: zt$3,
    n: Ft$3,
    Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
    Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
    h: BigInt(1),
    lowS: true,
    // Allow only low-S signatures by default in sign() and verify()
    endo: {
      // Endomorphism, see above
      beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
      splitScalar: (n) => {
        const e = Ft$3, t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), r = -rn$3 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), s = t, c = BigInt("0x100000000000000000000000000000000"), f = Xt$3(s * n, e), o = Xt$3(-r * n, e);
        let l = M$4(n - f * t - o * i, e), g = M$4(-f * r - o * s, e);
        const h = l > c, B = g > c;
        if (h && (l = e - l), B && (g = e - g), l > c || g > c)
          throw new Error("splitScalar: Endomorphism failed, k=" + n);
        return { k1neg: h, k1: l, k2neg: B, k2: g };
      }
    }
  }, Le$3);

  var secp256k1DA3kncZk = /*#__PURE__*/Object.freeze({
    __proto__: null,
    secp256k1: cn$2
  });

  const Gs = (t, e, s) => JSON.stringify(t, (r, i) => typeof i == "bigint" ? i.toString() : i, s);
  function Zh(t, e) {
    let s = t.toString();
    const r = s.startsWith("-");
    r && (s = s.slice(1)), s = s.padStart(e, "0");
    let [i, n] = [
      s.slice(0, s.length - e),
      s.slice(s.length - e)
    ];
    return n = n.replace(/(0+)$/, ""), `${r ? "-" : ""}${i || "0"}${n ? `.${n}` : ""}`;
  }
  const Ya = (t) => t;
  let Ni$1 = class Ni extends Rr$1 {
    constructor({ body: e, cause: s, details: r, headers: i, status: n, url: o }) {
      super("HTTP request failed.", {
        cause: s,
        details: r,
        metaMessages: [
          n && `Status: ${n}`,
          `URL: ${Ya(o)}`,
          e && `Request body: ${Gs(e)}`
        ].filter(Boolean),
        name: "HttpRequestError"
      }), Object.defineProperty(this, "body", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "headers", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "status", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "url", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.body = e, this.headers = i, this.status = n, this.url = o;
    }
  };
  class Fu extends Rr$1 {
    constructor({ body: e, error: s, url: r }) {
      super("RPC Request failed.", {
        cause: s,
        details: s.message,
        metaMessages: [`URL: ${Ya(r)}`, `Request body: ${Gs(e)}`],
        name: "RpcRequestError"
      }), Object.defineProperty(this, "code", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "data", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.code = s.code, this.data = s.data;
    }
  }
  class yc extends Rr$1 {
    constructor({ body: e, url: s }) {
      super("The request took too long to respond.", {
        details: "The request timed out.",
        metaMessages: [`URL: ${Ya(s)}`, `Request body: ${Gs(e)}`],
        name: "TimeoutError"
      });
    }
  }
  const Qh = -1;
  let pt$2 = class pt extends Rr$1 {
    constructor(e, { code: s, docsPath: r, metaMessages: i, name: n, shortMessage: o }) {
      super(o, {
        cause: e,
        docsPath: r,
        metaMessages: i || (e == null ? void 0 : e.metaMessages),
        name: n || "RpcError"
      }), Object.defineProperty(this, "code", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.name = n || e.name, this.code = e instanceof Fu ? e.code : s ?? Qh;
    }
  };
  let It$1 = class It extends pt$2 {
    constructor(e, s) {
      super(e, s), Object.defineProperty(this, "data", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.data = s.data;
    }
  };
  let Li$1 = class Li extends pt$2 {
    constructor(e) {
      super(e, {
        code: Li.code,
        name: "ParseRpcError",
        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
      });
    }
  };
  Object.defineProperty(Li$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32700
  });
  let Mi$1 = class Mi extends pt$2 {
    constructor(e) {
      super(e, {
        code: Mi.code,
        name: "InvalidRequestRpcError",
        shortMessage: "JSON is not a valid request object."
      });
    }
  };
  Object.defineProperty(Mi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32600
  });
  let Bi$1 = class Bi extends pt$2 {
    constructor(e, { method: s } = {}) {
      super(e, {
        code: Bi.code,
        name: "MethodNotFoundRpcError",
        shortMessage: `The method${s ? ` "${s}"` : ""} does not exist / is not available.`
      });
    }
  };
  Object.defineProperty(Bi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32601
  });
  let Fi$1 = class Fi extends pt$2 {
    constructor(e) {
      super(e, {
        code: Fi.code,
        name: "InvalidParamsRpcError",
        shortMessage: [
          "Invalid parameters were provided to the RPC method.",
          "Double check you have provided the correct parameters."
        ].join(`
`)
      });
    }
  };
  Object.defineProperty(Fi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32602
  });
  class Fr extends pt$2 {
    constructor(e) {
      super(e, {
        code: Fr.code,
        name: "InternalRpcError",
        shortMessage: "An internal error was received."
      });
    }
  }
  Object.defineProperty(Fr, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32603
  });
  let ji$1 = class ji extends pt$2 {
    constructor(e) {
      super(e, {
        code: ji.code,
        name: "InvalidInputRpcError",
        shortMessage: [
          "Missing or invalid parameters.",
          "Double check you have provided the correct parameters."
        ].join(`
`)
      });
    }
  };
  Object.defineProperty(ji$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32e3
  });
  let qi$1 = class qi extends pt$2 {
    constructor(e) {
      super(e, {
        code: qi.code,
        name: "ResourceNotFoundRpcError",
        shortMessage: "Requested resource not found."
      }), Object.defineProperty(this, "name", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "ResourceNotFoundRpcError"
      });
    }
  };
  Object.defineProperty(qi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32001
  });
  let Wi$1 = class Wi extends pt$2 {
    constructor(e) {
      super(e, {
        code: Wi.code,
        name: "ResourceUnavailableRpcError",
        shortMessage: "Requested resource not available."
      });
    }
  };
  Object.defineProperty(Wi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32002
  });
  class jr extends pt$2 {
    constructor(e) {
      super(e, {
        code: jr.code,
        name: "TransactionRejectedRpcError",
        shortMessage: "Transaction creation failed."
      });
    }
  }
  Object.defineProperty(jr, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32003
  });
  class Hs extends pt$2 {
    constructor(e, { method: s } = {}) {
      super(e, {
        code: Hs.code,
        name: "MethodNotSupportedRpcError",
        shortMessage: `Method${s ? ` "${s}"` : ""} is not supported.`
      });
    }
  }
  Object.defineProperty(Hs, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32004
  });
  class qr extends pt$2 {
    constructor(e) {
      super(e, {
        code: qr.code,
        name: "LimitExceededRpcError",
        shortMessage: "Request exceeds defined limit."
      });
    }
  }
  Object.defineProperty(qr, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32005
  });
  let zi$1 = class zi extends pt$2 {
    constructor(e) {
      super(e, {
        code: zi.code,
        name: "JsonRpcVersionUnsupportedError",
        shortMessage: "Version of JSON-RPC protocol is not supported."
      });
    }
  };
  Object.defineProperty(zi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32006
  });
  class Js extends It$1 {
    constructor(e) {
      super(e, {
        code: Js.code,
        name: "UserRejectedRequestError",
        shortMessage: "User rejected the request."
      });
    }
  }
  Object.defineProperty(Js, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4001
  });
  class Hi extends It$1 {
    constructor(e) {
      super(e, {
        code: Hi.code,
        name: "UnauthorizedProviderError",
        shortMessage: "The requested method and/or account has not been authorized by the user."
      });
    }
  }
  Object.defineProperty(Hi, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4100
  });
  class Ki extends It$1 {
    constructor(e, { method: s } = {}) {
      super(e, {
        code: Ki.code,
        name: "UnsupportedProviderMethodError",
        shortMessage: `The Provider does not support the requested method${s ? ` " ${s}"` : ""}.`
      });
    }
  }
  Object.defineProperty(Ki, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4200
  });
  let Vi$1 = class Vi extends It$1 {
    constructor(e) {
      super(e, {
        code: Vi.code,
        name: "ProviderDisconnectedError",
        shortMessage: "The Provider is disconnected from all chains."
      });
    }
  };
  Object.defineProperty(Vi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4900
  });
  class Gi extends It$1 {
    constructor(e) {
      super(e, {
        code: Gi.code,
        name: "ChainDisconnectedError",
        shortMessage: "The Provider is not connected to the requested chain."
      });
    }
  }
  Object.defineProperty(Gi, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4901
  });
  class Ji extends It$1 {
    constructor(e) {
      super(e, {
        code: Ji.code,
        name: "SwitchChainError",
        shortMessage: "An error occurred when attempting to switch chain."
      });
    }
  }
  Object.defineProperty(Ji, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4902
  });
  class Yi extends It$1 {
    constructor(e) {
      super(e, {
        code: Yi.code,
        name: "UnsupportedNonOptionalCapabilityError",
        shortMessage: "This Wallet does not support a capability that was not marked as optional."
      });
    }
  }
  Object.defineProperty(Yi, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5700
  });
  let Xi$1 = class Xi extends It$1 {
    constructor(e) {
      super(e, {
        code: Xi.code,
        name: "UnsupportedChainIdError",
        shortMessage: "This Wallet does not support the requested chain ID."
      });
    }
  };
  Object.defineProperty(Xi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5710
  });
  let Zi$1 = class Zi extends It$1 {
    constructor(e) {
      super(e, {
        code: Zi.code,
        name: "DuplicateIdError",
        shortMessage: "There is already a bundle submitted with this ID."
      });
    }
  };
  Object.defineProperty(Zi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5720
  });
  let Qi$1 = class Qi extends It$1 {
    constructor(e) {
      super(e, {
        code: Qi.code,
        name: "UnknownBundleIdError",
        shortMessage: "This bundle id is unknown / has not been submitted"
      });
    }
  };
  Object.defineProperty(Qi$1, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5730
  });
  let en$2 = class en extends It$1 {
    constructor(e) {
      super(e, {
        code: en.code,
        name: "BundleTooLargeError",
        shortMessage: "The call bundle is too large for the Wallet to process."
      });
    }
  };
  Object.defineProperty(en$2, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5740
  });
  let tn$2 = class tn extends It$1 {
    constructor(e) {
      super(e, {
        code: tn.code,
        name: "AtomicReadyWalletRejectedUpgradeError",
        shortMessage: "The Wallet can support atomicity after an upgrade, but the user rejected the upgrade."
      });
    }
  };
  Object.defineProperty(tn$2, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5750
  });
  let sn$2 = class sn extends It$1 {
    constructor(e) {
      super(e, {
        code: sn.code,
        name: "AtomicityNotSupportedError",
        shortMessage: "The wallet does not support atomic execution but the request requires it."
      });
    }
  };
  Object.defineProperty(sn$2, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5760
  });
  class ep extends pt$2 {
    constructor(e) {
      super(e, {
        name: "UnknownRpcError",
        shortMessage: "An unknown RPC error occurred."
      });
    }
  }
  class Xa extends Rr$1 {
    constructor({ cause: e, message: s } = {}) {
      var i;
      const r = (i = s == null ? void 0 : s.replace("execution reverted: ", "")) == null ? void 0 : i.replace("execution reverted", "");
      super(`Execution reverted ${r ? `with reason: ${r}` : "for an unknown reason"}.`, {
        cause: e,
        name: "ExecutionRevertedError"
      });
    }
  }
  Object.defineProperty(Xa, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 3
  });
  Object.defineProperty(Xa, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /execution reverted/
  });
  function tp() {
    let t = () => {
    }, e = () => {
    };
    return { promise: new Promise((r, i) => {
      t = r, e = i;
    }), resolve: t, reject: e };
  }
  const No = /* @__PURE__ */ new Map();
  function sp({ fn: t, id: e, shouldSplitBatch: s, wait: r = 0, sort: i }) {
    const n = async () => {
      const u = c();
      o();
      const d = u.map(({ args: h }) => h);
      d.length !== 0 && t(d).then((h) => {
        i && Array.isArray(h) && h.sort(i);
        for (let p = 0; p < u.length; p++) {
          const { resolve: g } = u[p];
          g == null || g([h[p], h]);
        }
      }).catch((h) => {
        for (let p = 0; p < u.length; p++) {
          const { reject: g } = u[p];
          g == null || g(h);
        }
      });
    }, o = () => No.delete(e), a = () => c().map(({ args: u }) => u), c = () => No.get(e) || [], l = (u) => No.set(e, [...c(), u]);
    return {
      flush: o,
      async schedule(u) {
        const { promise: d, resolve: h, reject: p } = tp();
        return (s == null ? void 0 : s([...a(), u])) && n(), c().length > 0 ? (l({ args: u, resolve: h, reject: p }), d) : (l({ args: u, resolve: h, reject: p }), setTimeout(n, r), d);
      }
    };
  }
  async function ju(t) {
    return new Promise((e) => setTimeout(e, t));
  }
  const ca = 256;
  let Pn$1 = ca, On$1;
  function rp(t = 11) {
    if (!On$1 || Pn$1 + t > ca * 2) {
      On$1 = "", Pn$1 = 0;
      for (let e = 0; e < ca; e++)
        On$1 += (256 + Math.random() * 256 | 0).toString(16).substring(1);
    }
    return On$1.substring(Pn$1, Pn$1++ + t);
  }
  const Tn$1 = /* @__PURE__ */ new Ny$1(8192);
  function ip(t, { enabled: e = true, id: s }) {
    if (!e || !s)
      return t();
    if (Tn$1.get(s))
      return Tn$1.get(s);
    const r = t().finally(() => Tn$1.delete(s));
    return Tn$1.set(s, r), r;
  }
  function np(t, { delay: e = 100, retryCount: s = 2, shouldRetry: r = () => true } = {}) {
    return new Promise((i, n) => {
      const o = async ({ count: a = 0 } = {}) => {
        const c = async ({ error: l }) => {
          const u = typeof e == "function" ? e({ count: a, error: l }) : e;
          u && await ju(u), o({ count: a + 1 });
        };
        try {
          const l = await t();
          i(l);
        } catch (l) {
          if (a < s && await r({ count: a, error: l }))
            return c({ error: l });
          n(l);
        }
      };
      o();
    });
  }
  function op(t, e = {}) {
    return async (s, r = {}) => {
      var d;
      const { dedupe: i = false, methods: n, retryDelay: o = 150, retryCount: a = 3, uid: c } = {
        ...e,
        ...r
      }, { method: l } = s;
      if ((d = n == null ? void 0 : n.exclude) != null && d.includes(l))
        throw new Hs(new Error("method not supported"), {
          method: l
        });
      if (n != null && n.include && !n.include.includes(l))
        throw new Hs(new Error("method not supported"), {
          method: l
        });
      const u = i ? oy$1(`${c}.${Gs(s)}`) : void 0;
      return ip(() => np(async () => {
        try {
          return await t(s);
        } catch (h) {
          const p = h;
          switch (p.code) {
            case Li$1.code:
              throw new Li$1(p);
            case Mi$1.code:
              throw new Mi$1(p);
            case Bi$1.code:
              throw new Bi$1(p, { method: s.method });
            case Fi$1.code:
              throw new Fi$1(p);
            case Fr.code:
              throw new Fr(p);
            case ji$1.code:
              throw new ji$1(p);
            case qi$1.code:
              throw new qi$1(p);
            case Wi$1.code:
              throw new Wi$1(p);
            case jr.code:
              throw new jr(p);
            case Hs.code:
              throw new Hs(p, {
                method: s.method
              });
            case qr.code:
              throw new qr(p);
            case zi$1.code:
              throw new zi$1(p);
            case Js.code:
              throw new Js(p);
            case Hi.code:
              throw new Hi(p);
            case Ki.code:
              throw new Ki(p);
            case Vi$1.code:
              throw new Vi$1(p);
            case Gi.code:
              throw new Gi(p);
            case Ji.code:
              throw new Ji(p);
            case Yi.code:
              throw new Yi(p);
            case Xi$1.code:
              throw new Xi$1(p);
            case Zi$1.code:
              throw new Zi$1(p);
            case Qi$1.code:
              throw new Qi$1(p);
            case en$2.code:
              throw new en$2(p);
            case tn$2.code:
              throw new tn$2(p);
            case sn$2.code:
              throw new sn$2(p);
            case 5e3:
              throw new Js(p);
            default:
              throw h instanceof Rr$1 ? h : new ep(p);
          }
        }
      }, {
        delay: ({ count: h, error: p }) => {
          var g;
          if (p && p instanceof Ni$1) {
            const f = (g = p == null ? void 0 : p.headers) == null ? void 0 : g.get("Retry-After");
            if (f != null && f.match(/\d/))
              return Number.parseInt(f) * 1e3;
          }
          return ~~(1 << h) * o;
        },
        retryCount: a,
        shouldRetry: ({ error: h }) => ap(h)
      }), { enabled: i, id: u });
    };
  }
  function ap(t) {
    return "code" in t && typeof t.code == "number" ? t.code === -1 || t.code === qr.code || t.code === Fr.code : t instanceof Ni$1 && t.status ? t.status === 403 || t.status === 408 || t.status === 413 || t.status === 429 || t.status === 500 || t.status === 502 || t.status === 503 || t.status === 504 : true;
  }
  function qu({ key: t, methods: e, name: s, request: r, retryCount: i = 3, retryDelay: n = 150, timeout: o, type: a }, c) {
    const l = rp();
    return {
      config: {
        key: t,
        methods: e,
        name: s,
        request: r,
        retryCount: i,
        retryDelay: n,
        timeout: o,
        type: a
      },
      request: op(r, { methods: e, retryCount: i, retryDelay: n, uid: l }),
      value: c
    };
  }
  function bc(t, e = {}) {
    const { key: s = "fallback", name: r = "Fallback", rank: i = false, shouldThrow: n = cp, retryCount: o, retryDelay: a } = e;
    return ({ chain: c, pollingInterval: l = 4e3, timeout: u, ...d }) => {
      let h = t, p = () => {
      };
      const g = qu({
        key: s,
        name: r,
        async request({ method: f, params: w }) {
          let y;
          const b = async (v = 0) => {
            const C = h[v]({
              ...d,
              chain: c,
              retryCount: 0,
              timeout: u
            });
            try {
              const S = await C.request({
                method: f,
                params: w
              });
              return p({
                method: f,
                params: w,
                response: S,
                transport: C,
                status: "success"
              }), S;
            } catch (S) {
              if (p({
                error: S,
                method: f,
                params: w,
                transport: C,
                status: "error"
              }), n(S) || v === h.length - 1 || (y ?? (y = h.slice(v + 1).some((A) => {
                const { include: N, exclude: R } = A({ chain: c }).config.methods || {};
                return N ? N.includes(f) : R ? !R.includes(f) : true;
              })), !y))
                throw S;
              return b(v + 1);
            }
          };
          return b();
        },
        retryCount: o,
        retryDelay: a,
        type: "fallback"
      }, {
        onResponse: (f) => p = f,
        transports: h.map((f) => f({ chain: c, retryCount: 0 }))
      });
      if (i) {
        const f = typeof i == "object" ? i : {};
        lp({
          chain: c,
          interval: f.interval ?? l,
          onTransports: (w) => h = w,
          ping: f.ping,
          sampleCount: f.sampleCount,
          timeout: f.timeout,
          transports: h,
          weights: f.weights
        });
      }
      return g;
    };
  }
  function cp(t) {
    return !!("code" in t && typeof t.code == "number" && (t.code === jr.code || t.code === Js.code || Xa.nodeMessage.test(t.message) || t.code === 5e3));
  }
  function lp({ chain: t, interval: e = 4e3, onTransports: s, ping: r, sampleCount: i = 10, timeout: n = 1e3, transports: o, weights: a = {} }) {
    const { stability: c = 0.7, latency: l = 0.3 } = a, u = [], d = async () => {
      const h = await Promise.all(o.map(async (f) => {
        const w = f({ chain: t, retryCount: 0, timeout: n }), y = Date.now();
        let b, v;
        try {
          await (r ? r({ transport: w }) : w.request({ method: "net_listening" })), v = 1;
        } catch {
          v = 0;
        } finally {
          b = Date.now();
        }
        return { latency: b - y, success: v };
      }));
      u.push(h), u.length > i && u.shift();
      const p = Math.max(...u.map((f) => Math.max(...f.map(({ latency: w }) => w)))), g = o.map((f, w) => {
        const y = u.map((A) => A[w].latency), v = 1 - y.reduce((A, N) => A + N, 0) / y.length / p, C = u.map((A) => A[w].success), S = C.reduce((A, N) => A + N, 0) / C.length;
        return S === 0 ? [0, w] : [
          l * v + c * S,
          w
        ];
      }).sort((f, w) => w[0] - f[0]);
      s(g.map(([, f]) => o[f])), await ju(e), d();
    };
    d();
  }
  class up extends Rr$1 {
    constructor() {
      super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
        docsPath: "/docs/clients/intro",
        name: "UrlRequiredError"
      });
    }
  }
  function dp(t, { errorInstance: e = new Error("timed out"), timeout: s, signal: r }) {
    return new Promise((i, n) => {
      (async () => {
        let o;
        try {
          const a = new AbortController();
          s > 0 && (o = setTimeout(() => {
            r && a.abort();
          }, s)), i(await t({ signal: (a == null ? void 0 : a.signal) || null }));
        } catch (a) {
          (a == null ? void 0 : a.name) === "AbortError" && n(e), n(a);
        } finally {
          clearTimeout(o);
        }
      })();
    });
  }
  function hp() {
    return {
      current: 0,
      take() {
        return this.current++;
      },
      reset() {
        this.current = 0;
      }
    };
  }
  const vc = /* @__PURE__ */ hp();
  function pp(t, e = {}) {
    return {
      async request(s) {
        var d;
        const { body: r, onRequest: i = e.onRequest, onResponse: n = e.onResponse, timeout: o = e.timeout ?? 1e4 } = s, a = {
          ...e.fetchOptions ?? {},
          ...s.fetchOptions ?? {}
        }, { headers: c, method: l, signal: u } = a;
        try {
          const h = await dp(async ({ signal: g }) => {
            const f = {
              ...a,
              body: Array.isArray(r) ? Gs(r.map((v) => ({
                jsonrpc: "2.0",
                id: v.id ?? vc.take(),
                ...v
              }))) : Gs({
                jsonrpc: "2.0",
                id: r.id ?? vc.take(),
                ...r
              }),
              headers: {
                "Content-Type": "application/json",
                ...c
              },
              method: l || "POST",
              signal: u || (o > 0 ? g : null)
            }, w = new Request(t, f), y = await (i == null ? void 0 : i(w, f)) ?? { ...f, url: t };
            return await fetch(y.url ?? t, y);
          }, {
            errorInstance: new yc({ body: r, url: t }),
            timeout: o,
            signal: !0
          });
          n && await n(h);
          let p;
          if ((d = h.headers.get("Content-Type")) != null && d.startsWith("application/json"))
            p = await h.json();
          else {
            p = await h.text();
            try {
              p = JSON.parse(p || "{}");
            } catch (g) {
              if (h.ok)
                throw g;
              p = { error: p };
            }
          }
          if (!h.ok)
            throw new Ni$1({
              body: r,
              details: Gs(p.error) || h.statusText,
              headers: h.headers,
              status: h.status,
              url: t
            });
          return p;
        } catch (h) {
          throw h instanceof Ni$1 || h instanceof yc ? h : new Ni$1({
            body: r,
            cause: h,
            url: t
          });
        }
      }
    };
  }
  function xn$1(t, e = {}) {
    const { batch: s, fetchOptions: r, key: i = "http", methods: n, name: o = "HTTP JSON-RPC", onFetchRequest: a, onFetchResponse: c, retryDelay: l, raw: u } = e;
    return ({ chain: d, retryCount: h, timeout: p }) => {
      const { batchSize: g = 1e3, wait: f = 0 } = typeof s == "object" ? s : {}, w = e.retryCount ?? h, y = p ?? e.timeout ?? 1e4, b = t || (d == null ? void 0 : d.rpcUrls.default.http[0]);
      if (!b)
        throw new up();
      const v = pp(b, {
        fetchOptions: r,
        onRequest: a,
        onResponse: c,
        timeout: y
      });
      return qu({
        key: i,
        methods: n,
        name: o,
        async request({ method: C, params: S }) {
          const A = { method: C, params: S }, { schedule: N } = sp({
            id: b,
            wait: f,
            shouldSplitBatch(I) {
              return I.length > g;
            },
            fn: (I) => v.request({
              body: I
            }),
            sort: (I, L) => I.id - L.id
          }), R = async (I) => s ? N(I) : [
            await v.request({
              body: I
            })
          ], [{ error: E, result: $ }] = await R(A);
          if (u)
            return { error: E, result: $ };
          if (E)
            throw new Fu({
              body: A,
              error: E,
              url: b
            });
          return $;
        },
        retryCount: w,
        retryDelay: l,
        timeout: y,
        type: "http"
      }, {
        fetchOptions: r,
        url: b
      });
    };
  }
  const z$3 = {
    WC_NAME_SUFFIX: ".reown.id",
    WC_NAME_SUFFIX_LEGACY: ".wcn.id",
    BLOCKCHAIN_API_RPC_URL: "https://rpc.walletconnect.org",
    PULSE_API_URL: "https://pulse.walletconnect.org",
    W3M_API_URL: "https://api.web3modal.org",
    CONNECTOR_ID: {
      WALLET_CONNECT: "walletConnect",
      INJECTED: "injected",
      WALLET_STANDARD: "announced",
      COINBASE: "coinbaseWallet",
      COINBASE_SDK: "coinbaseWalletSDK",
      SAFE: "safe",
      LEDGER: "ledger",
      OKX: "okx",
      EIP6963: "eip6963",
      AUTH: "ID_AUTH"
    },
    CONNECTOR_NAMES: {
      AUTH: "Auth"
    },
    AUTH_CONNECTOR_SUPPORTED_CHAINS: ["eip155", "solana"],
    LIMITS: {
      PENDING_TRANSACTIONS: 99
    },
    CHAIN: {
      EVM: "eip155",
      SOLANA: "solana",
      POLKADOT: "polkadot",
      BITCOIN: "bip122"
    },
    CHAIN_NAME_MAP: {
      eip155: "EVM Networks",
      solana: "Solana",
      polkadot: "Polkadot",
      bip122: "Bitcoin",
      cosmos: "Cosmos"
    },
    ADAPTER_TYPES: {
      BITCOIN: "bitcoin",
      SOLANA: "solana",
      WAGMI: "wagmi",
      ETHERS: "ethers",
      ETHERS5: "ethers5"
    },
    USDT_CONTRACT_ADDRESSES: [
      "0xdac17f958d2ee523a2206206994597c13d831ec7",
      "0xc2132d05d31c914a87c6611c10748aeb04b58e8f",
      "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7",
      "0x919C1c267BC06a7039e03fcc2eF738525769109c",
      "0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e",
      "0x55d398326f99059fF775485246999027B3197955",
      "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9"
    ],
    HTTP_STATUS_CODES: {
      SERVICE_UNAVAILABLE: 503,
      FORBIDDEN: 403
    },
    UNSUPPORTED_NETWORK_NAME: "Unknown Network",
    SECURE_SITE_SDK_ORIGIN: (typeof process < "u" && typeof process.env < "u" ? process.env.NEXT_PUBLIC_SECURE_SITE_ORIGIN : void 0) || "https://secure.walletconnect.org"
  }, Wu = {
    caipNetworkIdToNumber(t) {
      return t ? Number(t.split(":")[1]) : void 0;
    },
    parseEvmChainId(t) {
      return typeof t == "string" ? this.caipNetworkIdToNumber(t) : t;
    },
    getNetworksByNamespace(t, e) {
      return (t == null ? void 0 : t.filter((s) => s.chainNamespace === e)) || [];
    },
    getFirstNetworkByNamespace(t, e) {
      return this.getNetworksByNamespace(t, e)[0];
    },
    getNetworkNameByCaipNetworkId(t, e) {
      var i;
      if (!e)
        return;
      const s = t.find((n) => n.caipNetworkId === e);
      if (s)
        return s.name;
      const [r] = e.split(":");
      return ((i = z$3.CHAIN_NAME_MAP) == null ? void 0 : i[r]) || void 0;
    }
  };
  var fp = 20, gp = 1, ti$1 = 1e6, mp = 1e6, wp = -7, yp = 21, bp = false, gn$1 = "[big.js] ", or = gn$1 + "Invalid ", fo$1 = or + "decimal places", vp = or + "rounding mode", zu = gn$1 + "Division by zero", ge$1 = {}, Yt$2 = void 0, Ep = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
  function Hu() {
    function t(e) {
      var s = this;
      if (!(s instanceof t)) return e === Yt$2 ? Hu() : new t(e);
      if (e instanceof t)
        s.s = e.s, s.e = e.e, s.c = e.c.slice();
      else {
        if (typeof e != "string") {
          if (t.strict === true && typeof e != "bigint")
            throw TypeError(or + "value");
          e = e === 0 && 1 / e < 0 ? "-0" : String(e);
        }
        Cp(s, e);
      }
      s.constructor = t;
    }
    return t.prototype = ge$1, t.DP = fp, t.RM = gp, t.NE = wp, t.PE = yp, t.strict = bp, t.roundDown = 0, t.roundHalfUp = 1, t.roundHalfEven = 2, t.roundUp = 3, t;
  }
  function Cp(t, e) {
    var s, r, i;
    if (!Ep.test(e))
      throw Error(or + "number");
    for (t.s = e.charAt(0) == "-" ? (e = e.slice(1), -1) : 1, (s = e.indexOf(".")) > -1 && (e = e.replace(".", "")), (r = e.search(/e/i)) > 0 ? (s < 0 && (s = r), s += +e.slice(r + 1), e = e.substring(0, r)) : s < 0 && (s = e.length), i = e.length, r = 0; r < i && e.charAt(r) == "0"; ) ++r;
    if (r == i)
      t.c = [t.e = 0];
    else {
      for (; i > 0 && e.charAt(--i) == "0"; ) ;
      for (t.e = s - r - 1, t.c = [], s = 0; r <= i; ) t.c[s++] = +e.charAt(r++);
    }
    return t;
  }
  function ar(t, e, s, r) {
    var i = t.c;
    if (s === Yt$2 && (s = t.constructor.RM), s !== 0 && s !== 1 && s !== 2 && s !== 3)
      throw Error(vp);
    if (e < 1)
      r = s === 3 && (r || !!i[0]) || e === 0 && (s === 1 && i[0] >= 5 || s === 2 && (i[0] > 5 || i[0] === 5 && (r || i[1] !== Yt$2))), i.length = 1, r ? (t.e = t.e - e + 1, i[0] = 1) : i[0] = t.e = 0;
    else if (e < i.length) {
      if (r = s === 1 && i[e] >= 5 || s === 2 && (i[e] > 5 || i[e] === 5 && (r || i[e + 1] !== Yt$2 || i[e - 1] & 1)) || s === 3 && (r || !!i[0]), i.length = e, r) {
        for (; ++i[--e] > 9; )
          if (i[e] = 0, e === 0) {
            ++t.e, i.unshift(1);
            break;
          }
      }
      for (e = i.length; !i[--e]; ) i.pop();
    }
    return t;
  }
  function cr(t, e, s) {
    var r = t.e, i = t.c.join(""), n = i.length;
    if (e)
      i = i.charAt(0) + (n > 1 ? "." + i.slice(1) : "") + (r < 0 ? "e" : "e+") + r;
    else if (r < 0) {
      for (; ++r; ) i = "0" + i;
      i = "0." + i;
    } else if (r > 0)
      if (++r > n)
        for (r -= n; r--; ) i += "0";
      else r < n && (i = i.slice(0, r) + "." + i.slice(r));
    else n > 1 && (i = i.charAt(0) + "." + i.slice(1));
    return t.s < 0 && s ? "-" + i : i;
  }
  ge$1.abs = function() {
    var t = new this.constructor(this);
    return t.s = 1, t;
  };
  ge$1.cmp = function(t) {
    var e, s = this, r = s.c, i = (t = new s.constructor(t)).c, n = s.s, o = t.s, a = s.e, c = t.e;
    if (!r[0] || !i[0]) return r[0] ? n : i[0] ? -o : 0;
    if (n != o) return n;
    if (e = n < 0, a != c) return a > c ^ e ? 1 : -1;
    for (o = (a = r.length) < (c = i.length) ? a : c, n = -1; ++n < o; )
      if (r[n] != i[n]) return r[n] > i[n] ^ e ? 1 : -1;
    return a == c ? 0 : a > c ^ e ? 1 : -1;
  };
  ge$1.div = function(t) {
    var e = this, s = e.constructor, r = e.c, i = (t = new s(t)).c, n = e.s == t.s ? 1 : -1, o = s.DP;
    if (o !== ~~o || o < 0 || o > ti$1)
      throw Error(fo$1);
    if (!i[0])
      throw Error(zu);
    if (!r[0])
      return t.s = n, t.c = [t.e = 0], t;
    var a, c, l, u, d, h = i.slice(), p = a = i.length, g = r.length, f = r.slice(0, a), w = f.length, y = t, b = y.c = [], v = 0, C = o + (y.e = e.e - t.e) + 1;
    for (y.s = n, n = C < 0 ? 0 : C, h.unshift(0); w++ < a; ) f.push(0);
    do {
      for (l = 0; l < 10; l++) {
        if (a != (w = f.length))
          u = a > w ? 1 : -1;
        else
          for (d = -1, u = 0; ++d < a; )
            if (i[d] != f[d]) {
              u = i[d] > f[d] ? 1 : -1;
              break;
            }
        if (u < 0) {
          for (c = w == a ? i : h; w; ) {
            if (f[--w] < c[w]) {
              for (d = w; d && !f[--d]; ) f[d] = 9;
              --f[d], f[w] += 10;
            }
            f[w] -= c[w];
          }
          for (; !f[0]; ) f.shift();
        } else
          break;
      }
      b[v++] = u ? l : ++l, f[0] && u ? f[w] = r[p] || 0 : f = [r[p]];
    } while ((p++ < g || f[0] !== Yt$2) && n--);
    return !b[0] && v != 1 && (b.shift(), y.e--, C--), v > C && ar(y, C, s.RM, f[0] !== Yt$2), y;
  };
  ge$1.eq = function(t) {
    return this.cmp(t) === 0;
  };
  ge$1.gt = function(t) {
    return this.cmp(t) > 0;
  };
  ge$1.gte = function(t) {
    return this.cmp(t) > -1;
  };
  ge$1.lt = function(t) {
    return this.cmp(t) < 0;
  };
  ge$1.lte = function(t) {
    return this.cmp(t) < 1;
  };
  ge$1.minus = ge$1.sub = function(t) {
    var e, s, r, i, n = this, o = n.constructor, a = n.s, c = (t = new o(t)).s;
    if (a != c)
      return t.s = -c, n.plus(t);
    var l = n.c.slice(), u = n.e, d = t.c, h = t.e;
    if (!l[0] || !d[0])
      return d[0] ? t.s = -c : l[0] ? t = new o(n) : t.s = 1, t;
    if (a = u - h) {
      for ((i = a < 0) ? (a = -a, r = l) : (h = u, r = d), r.reverse(), c = a; c--; ) r.push(0);
      r.reverse();
    } else
      for (s = ((i = l.length < d.length) ? l : d).length, a = c = 0; c < s; c++)
        if (l[c] != d[c]) {
          i = l[c] < d[c];
          break;
        }
    if (i && (r = l, l = d, d = r, t.s = -t.s), (c = (s = d.length) - (e = l.length)) > 0) for (; c--; ) l[e++] = 0;
    for (c = e; s > a; ) {
      if (l[--s] < d[s]) {
        for (e = s; e && !l[--e]; ) l[e] = 9;
        --l[e], l[s] += 10;
      }
      l[s] -= d[s];
    }
    for (; l[--c] === 0; ) l.pop();
    for (; l[0] === 0; )
      l.shift(), --h;
    return l[0] || (t.s = 1, l = [h = 0]), t.c = l, t.e = h, t;
  };
  ge$1.mod = function(t) {
    var e, s = this, r = s.constructor, i = s.s, n = (t = new r(t)).s;
    if (!t.c[0])
      throw Error(zu);
    return s.s = t.s = 1, e = t.cmp(s) == 1, s.s = i, t.s = n, e ? new r(s) : (i = r.DP, n = r.RM, r.DP = r.RM = 0, s = s.div(t), r.DP = i, r.RM = n, this.minus(s.times(t)));
  };
  ge$1.neg = function() {
    var t = new this.constructor(this);
    return t.s = -t.s, t;
  };
  ge$1.plus = ge$1.add = function(t) {
    var e, s, r, i = this, n = i.constructor;
    if (t = new n(t), i.s != t.s)
      return t.s = -t.s, i.minus(t);
    var o = i.e, a = i.c, c = t.e, l = t.c;
    if (!a[0] || !l[0])
      return l[0] || (a[0] ? t = new n(i) : t.s = i.s), t;
    if (a = a.slice(), e = o - c) {
      for (e > 0 ? (c = o, r = l) : (e = -e, r = a), r.reverse(); e--; ) r.push(0);
      r.reverse();
    }
    for (a.length - l.length < 0 && (r = l, l = a, a = r), e = l.length, s = 0; e; a[e] %= 10) s = (a[--e] = a[e] + l[e] + s) / 10 | 0;
    for (s && (a.unshift(s), ++c), e = a.length; a[--e] === 0; ) a.pop();
    return t.c = a, t.e = c, t;
  };
  ge$1.pow = function(t) {
    var e = this, s = new e.constructor("1"), r = s, i = t < 0;
    if (t !== ~~t || t < -1e6 || t > mp)
      throw Error(or + "exponent");
    for (i && (t = -t); t & 1 && (r = r.times(e)), t >>= 1, !!t; )
      e = e.times(e);
    return i ? s.div(r) : r;
  };
  ge$1.prec = function(t, e) {
    if (t !== ~~t || t < 1 || t > ti$1)
      throw Error(or + "precision");
    return ar(new this.constructor(this), t, e);
  };
  ge$1.round = function(t, e) {
    if (t === Yt$2) t = 0;
    else if (t !== ~~t || t < -1e6 || t > ti$1)
      throw Error(fo$1);
    return ar(new this.constructor(this), t + this.e + 1, e);
  };
  ge$1.sqrt = function() {
    var t, e, s, r = this, i = r.constructor, n = r.s, o = r.e, a = new i("0.5");
    if (!r.c[0]) return new i(r);
    if (n < 0)
      throw Error(gn$1 + "No square root");
    n = Math.sqrt(+cr(r, true, true)), n === 0 || n === 1 / 0 ? (e = r.c.join(""), e.length + o & 1 || (e += "0"), n = Math.sqrt(e), o = ((o + 1) / 2 | 0) - (o < 0 || o & 1), t = new i((n == 1 / 0 ? "5e" : (n = n.toExponential()).slice(0, n.indexOf("e") + 1)) + o)) : t = new i(n + ""), o = t.e + (i.DP += 4);
    do
      s = t, t = a.times(s.plus(r.div(s)));
    while (s.c.slice(0, o).join("") !== t.c.slice(0, o).join(""));
    return ar(t, (i.DP -= 4) + t.e + 1, i.RM);
  };
  ge$1.times = ge$1.mul = function(t) {
    var e, s = this, r = s.constructor, i = s.c, n = (t = new r(t)).c, o = i.length, a = n.length, c = s.e, l = t.e;
    if (t.s = s.s == t.s ? 1 : -1, !i[0] || !n[0])
      return t.c = [t.e = 0], t;
    for (t.e = c + l, o < a && (e = i, i = n, n = e, l = o, o = a, a = l), e = new Array(l = o + a); l--; ) e[l] = 0;
    for (c = a; c--; ) {
      for (a = 0, l = o + c; l > c; )
        a = e[l] + n[c] * i[l - c - 1] + a, e[l--] = a % 10, a = a / 10 | 0;
      e[l] = a;
    }
    for (a ? ++t.e : e.shift(), c = e.length; !e[--c]; ) e.pop();
    return t.c = e, t;
  };
  ge$1.toExponential = function(t, e) {
    var s = this, r = s.c[0];
    if (t !== Yt$2) {
      if (t !== ~~t || t < 0 || t > ti$1)
        throw Error(fo$1);
      for (s = ar(new s.constructor(s), ++t, e); s.c.length < t; ) s.c.push(0);
    }
    return cr(s, true, !!r);
  };
  ge$1.toFixed = function(t, e) {
    var s = this, r = s.c[0];
    if (t !== Yt$2) {
      if (t !== ~~t || t < 0 || t > ti$1)
        throw Error(fo$1);
      for (s = ar(new s.constructor(s), t + s.e + 1, e), t = t + s.e + 1; s.c.length < t; ) s.c.push(0);
    }
    return cr(s, false, !!r);
  };
  ge$1[Symbol.for("nodejs.util.inspect.custom")] = ge$1.toJSON = ge$1.toString = function() {
    var t = this, e = t.constructor;
    return cr(t, t.e <= e.NE || t.e >= e.PE, !!t.c[0]);
  };
  ge$1.toNumber = function() {
    var t = +cr(this, true, true);
    if (this.constructor.strict === true && !this.eq(t.toString()))
      throw Error(gn$1 + "Imprecise conversion");
    return t;
  };
  ge$1.toPrecision = function(t, e) {
    var s = this, r = s.constructor, i = s.c[0];
    if (t !== Yt$2) {
      if (t !== ~~t || t < 1 || t > ti$1)
        throw Error(or + "precision");
      for (s = ar(new r(s), t, e); s.c.length < t; ) s.c.push(0);
    }
    return cr(s, t <= s.e || s.e <= r.NE || s.e >= r.PE, !!i);
  };
  ge$1.valueOf = function() {
    var t = this, e = t.constructor;
    if (e.strict === true)
      throw Error(gn$1 + "valueOf disallowed");
    return cr(t, t.e <= e.NE || t.e >= e.PE, true);
  };
  var ci$1 = Hu();
  const Ip = {
    bigNumber(t) {
      return t ? new ci$1(t) : new ci$1(0);
    },
    multiply(t, e) {
      if (t === void 0 || e === void 0)
        return new ci$1(0);
      const s = new ci$1(t), r = new ci$1(e);
      return s.times(r);
    },
    formatNumberToLocalString(t, e = 2) {
      return t === void 0 ? "0.00" : typeof t == "number" ? t.toLocaleString("en-US", {
        maximumFractionDigits: e,
        minimumFractionDigits: e
      }) : parseFloat(t).toLocaleString("en-US", {
        maximumFractionDigits: e,
        minimumFractionDigits: e
      });
    },
    parseLocalStringToNumber(t) {
      return t === void 0 ? 0 : parseFloat(t.replace(/,/gu, ""));
    }
  }, Ap = [
    {
      type: "function",
      name: "transfer",
      stateMutability: "nonpayable",
      inputs: [
        {
          name: "_to",
          type: "address"
        },
        {
          name: "_value",
          type: "uint256"
        }
      ],
      outputs: [
        {
          name: "",
          type: "bool"
        }
      ]
    },
    {
      type: "function",
      name: "transferFrom",
      stateMutability: "nonpayable",
      inputs: [
        {
          name: "_from",
          type: "address"
        },
        {
          name: "_to",
          type: "address"
        },
        {
          name: "_value",
          type: "uint256"
        }
      ],
      outputs: [
        {
          name: "",
          type: "bool"
        }
      ]
    }
  ], Np = [
    {
      type: "function",
      name: "approve",
      stateMutability: "nonpayable",
      inputs: [
        { name: "spender", type: "address" },
        { name: "amount", type: "uint256" }
      ],
      outputs: [{ type: "bool" }]
    }
  ], _p = [
    {
      type: "function",
      name: "transfer",
      stateMutability: "nonpayable",
      inputs: [
        {
          name: "recipient",
          type: "address"
        },
        {
          name: "amount",
          type: "uint256"
        }
      ],
      outputs: []
    },
    {
      type: "function",
      name: "transferFrom",
      stateMutability: "nonpayable",
      inputs: [
        {
          name: "sender",
          type: "address"
        },
        {
          name: "recipient",
          type: "address"
        },
        {
          name: "amount",
          type: "uint256"
        }
      ],
      outputs: [
        {
          name: "",
          type: "bool"
        }
      ]
    }
  ], Sp = {
    getERC20Abi: (t) => z$3.USDT_CONTRACT_ADDRESSES.includes(t) ? _p : Ap,
    getSwapAbi: () => Np
  }, ps = {
    validateCaipAddress(t) {
      var e;
      if (((e = t.split(":")) == null ? void 0 : e.length) !== 3)
        throw new Error("Invalid CAIP Address");
      return t;
    },
    parseCaipAddress(t) {
      const e = t.split(":");
      if (e.length !== 3)
        throw new Error(`Invalid CAIP-10 address: ${t}`);
      const [s, r, i] = e;
      if (!s || !r || !i)
        throw new Error(`Invalid CAIP-10 address: ${t}`);
      return {
        chainNamespace: s,
        chainId: r,
        address: i
      };
    },
    parseCaipNetworkId(t) {
      const e = t.split(":");
      if (e.length !== 2)
        throw new Error(`Invalid CAIP-2 network id: ${t}`);
      const [s, r] = e;
      if (!s || !r)
        throw new Error(`Invalid CAIP-2 network id: ${t}`);
      return {
        chainNamespace: s,
        chainId: r
      };
    }
  }, ee$2 = {
    WALLET_ID: "@appkit/wallet_id",
    WALLET_NAME: "@appkit/wallet_name",
    SOLANA_WALLET: "@appkit/solana_wallet",
    SOLANA_CAIP_CHAIN: "@appkit/solana_caip_chain",
    ACTIVE_CAIP_NETWORK_ID: "@appkit/active_caip_network_id",
    CONNECTED_SOCIAL: "@appkit/connected_social",
    CONNECTED_SOCIAL_USERNAME: "@appkit-wallet/SOCIAL_USERNAME",
    RECENT_WALLETS: "@appkit/recent_wallets",
    DEEPLINK_CHOICE: "WALLETCONNECT_DEEPLINK_CHOICE",
    ACTIVE_NAMESPACE: "@appkit/active_namespace",
    CONNECTED_NAMESPACES: "@appkit/connected_namespaces",
    CONNECTION_STATUS: "@appkit/connection_status",
    SIWX_AUTH_TOKEN: "@appkit/siwx-auth-token",
    SIWX_NONCE_TOKEN: "@appkit/siwx-nonce-token",
    TELEGRAM_SOCIAL_PROVIDER: "@appkit/social_provider",
    NATIVE_BALANCE_CACHE: "@appkit/native_balance_cache",
    PORTFOLIO_CACHE: "@appkit/portfolio_cache",
    ENS_CACHE: "@appkit/ens_cache",
    IDENTITY_CACHE: "@appkit/identity_cache",
    PREFERRED_ACCOUNT_TYPES: "@appkit/preferred_account_types",
    CONNECTIONS: "@appkit/connections"
  };
  function _o$1(t) {
    if (!t)
      throw new Error("Namespace is required for CONNECTED_CONNECTOR_ID");
    return `@appkit/${t}:connected_connector_id`;
  }
  const Z$1 = {
    setItem(t, e) {
      bi$1() && e !== void 0 && localStorage.setItem(t, e);
    },
    getItem(t) {
      if (bi$1())
        return localStorage.getItem(t) || void 0;
    },
    removeItem(t) {
      bi$1() && localStorage.removeItem(t);
    },
    clear() {
      bi$1() && localStorage.clear();
    }
  };
  function bi$1() {
    return typeof window < "u" && typeof localStorage < "u";
  }
  function Is(t, e) {
    return e === "light" ? {
      "--w3m-accent": (t == null ? void 0 : t["--w3m-accent"]) || "hsla(231, 100%, 70%, 1)",
      "--w3m-background": "#fff"
    } : {
      "--w3m-accent": (t == null ? void 0 : t["--w3m-accent"]) || "hsla(230, 100%, 67%, 1)",
      "--w3m-background": "#121313"
    };
  }
  const Pp = Symbol(), Ec = Object.getPrototypeOf, la = /* @__PURE__ */ new WeakMap(), Op = (t) => t && (la.has(t) ? la.get(t) : Ec(t) === Object.prototype || Ec(t) === Array.prototype), Tp = (t) => Op(t) && t[Pp] || null, Cc = (t, e = true) => {
    la.set(t, e);
  }, ro$1 = {}, So$1 = (t) => typeof t == "object" && t !== null, bs = /* @__PURE__ */ new WeakMap(), vi = /* @__PURE__ */ new WeakSet(), xp = (t = Object.is, e = (l, u) => new Proxy(l, u), s = (l) => So$1(l) && !vi.has(l) && (Array.isArray(l) || !(Symbol.iterator in l)) && !(l instanceof WeakMap) && !(l instanceof WeakSet) && !(l instanceof Error) && !(l instanceof Number) && !(l instanceof Date) && !(l instanceof String) && !(l instanceof RegExp) && !(l instanceof ArrayBuffer), r = (l) => {
    switch (l.status) {
      case "fulfilled":
        return l.value;
      case "rejected":
        throw l.reason;
      default:
        throw l;
    }
  }, i = /* @__PURE__ */ new WeakMap(), n = (l, u, d = r) => {
    const h = i.get(l);
    if ((h == null ? void 0 : h[0]) === u)
      return h[1];
    const p = Array.isArray(l) ? [] : Object.create(Object.getPrototypeOf(l));
    return Cc(p, true), i.set(l, [u, p]), Reflect.ownKeys(l).forEach((g) => {
      if (Object.getOwnPropertyDescriptor(p, g))
        return;
      const f = Reflect.get(l, g), { enumerable: w } = Reflect.getOwnPropertyDescriptor(
        l,
        g
      ), y = {
        value: f,
        enumerable: w,
        // This is intentional to avoid copying with proxy-compare.
        // It's still non-writable, so it avoids assigning a value.
        configurable: true
      };
      if (vi.has(f))
        Cc(f, false);
      else if (f instanceof Promise)
        delete y.value, y.get = () => d(f);
      else if (bs.has(f)) {
        const [b, v] = bs.get(
          f
        );
        y.value = n(
          b,
          v(),
          d
        );
      }
      Object.defineProperty(p, g, y);
    }), Object.preventExtensions(p);
  }, o = /* @__PURE__ */ new WeakMap(), a = [1, 1], c = (l) => {
    if (!So$1(l))
      throw new Error("object required");
    const u = o.get(l);
    if (u)
      return u;
    let d = a[0];
    const h = /* @__PURE__ */ new Set(), p = (E, $ = ++a[0]) => {
      d !== $ && (d = $, h.forEach((I) => I(E, $)));
    };
    let g = a[1];
    const f = (E = ++a[1]) => (g !== E && !h.size && (g = E, y.forEach(([$]) => {
      const I = $[1](E);
      I > d && (d = I);
    })), d), w = (E) => ($, I) => {
      const L = [...$];
      L[1] = [E, ...L[1]], p(L, I);
    }, y = /* @__PURE__ */ new Map(), b = (E, $) => {
      if ((ro$1 ? "production" : void 0) !== "production" && y.has(E))
        throw new Error("prop listener already exists");
      if (h.size) {
        const I = $[3](w(E));
        y.set(E, [$, I]);
      } else
        y.set(E, [$]);
    }, v = (E) => {
      var $;
      const I = y.get(E);
      I && (y.delete(E), ($ = I[1]) == null || $.call(I));
    }, C = (E) => (h.add(E), h.size === 1 && y.forEach(([I, L], H) => {
      if ((ro$1 ? "production" : void 0) !== "production" && L)
        throw new Error("remove already exists");
      const _ = I[3](w(H));
      y.set(H, [I, _]);
    }), () => {
      h.delete(E), h.size === 0 && y.forEach(([I, L], H) => {
        L && (L(), y.set(H, [I]));
      });
    }), S = Array.isArray(l) ? [] : Object.create(Object.getPrototypeOf(l)), N = e(S, {
      deleteProperty(E, $) {
        const I = Reflect.get(E, $);
        v($);
        const L = Reflect.deleteProperty(E, $);
        return L && p(["delete", [$], I]), L;
      },
      set(E, $, I, L) {
        const H = Reflect.has(E, $), _ = Reflect.get(E, $, L);
        if (H && (t(_, I) || o.has(I) && t(_, o.get(I))))
          return true;
        v($), So$1(I) && (I = Tp(I) || I);
        let x = I;
        if (I instanceof Promise)
          I.then((O) => {
            I.status = "fulfilled", I.value = O, p(["resolve", [$], O]);
          }).catch((O) => {
            I.status = "rejected", I.reason = O, p(["reject", [$], O]);
          });
        else {
          !bs.has(I) && s(I) && (x = c(I));
          const O = !vi.has(x) && bs.get(x);
          O && b($, O);
        }
        return Reflect.set(E, $, x, L), p(["set", [$], I, _]), true;
      }
    });
    o.set(l, N);
    const R = [
      S,
      f,
      n,
      C
    ];
    return bs.set(N, R), Reflect.ownKeys(l).forEach((E) => {
      const $ = Object.getOwnPropertyDescriptor(
        l,
        E
      );
      "value" in $ && (N[E] = l[E], delete $.value, delete $.writable), Object.defineProperty(S, E, $);
    }), N;
  }) => [
    // public functions
    c,
    // shared state
    bs,
    vi,
    // internal things
    t,
    e,
    s,
    r,
    i,
    n,
    o,
    a
  ], [kp] = xp();
  function _e$3(t = {}) {
    return kp(t);
  }
  function Qe$1(t, e, s) {
    const r = bs.get(t);
    (ro$1 ? "production" : void 0) !== "production" && !r && console.warn("Please use proxy object");
    let i;
    const n = [], o = r[3];
    let a = false;
    const l = o((u) => {
      n.push(u), i || (i = Promise.resolve().then(() => {
        i = void 0, a && e(n.splice(0));
      }));
    });
    return a = true, () => {
      a = false, l();
    };
  }
  function rn$2(t, e) {
    const s = bs.get(t);
    (ro$1 ? "production" : void 0) !== "production" && !s && console.warn("Please use proxy object");
    const [r, i, n] = s;
    return n(r, i(), e);
  }
  function Zs(t) {
    return vi.add(t), t;
  }
  function et$2(t, e, s, r) {
    let i = t[e];
    return Qe$1(
      t,
      () => {
        const n = t[e];
        Object.is(i, n) || s(i = n);
      }
    );
  }
  function $p(t) {
    const e = _e$3({
      data: Array.from([]),
      has(s) {
        return this.data.some((r) => r[0] === s);
      },
      set(s, r) {
        const i = this.data.find((n) => n[0] === s);
        return i ? i[1] = r : this.data.push([s, r]), this;
      },
      get(s) {
        var r;
        return (r = this.data.find((i) => i[0] === s)) == null ? void 0 : r[1];
      },
      delete(s) {
        const r = this.data.findIndex((i) => i[0] === s);
        return r === -1 ? false : (this.data.splice(r, 1), true);
      },
      clear() {
        this.data.splice(0);
      },
      get size() {
        return this.data.length;
      },
      toJSON() {
        return new Map(this.data);
      },
      forEach(s) {
        this.data.forEach((r) => {
          s(r[1], r[0], this);
        });
      },
      keys() {
        return this.data.map((s) => s[0]).values();
      },
      values() {
        return this.data.map((s) => s[1]).values();
      },
      entries() {
        return new Map(this.data).entries();
      },
      get [Symbol.toStringTag]() {
        return "Map";
      },
      [Symbol.iterator]() {
        return this.entries();
      }
    });
    return Object.defineProperties(e, {
      data: {
        enumerable: false
      },
      size: {
        enumerable: false
      },
      toJSON: {
        enumerable: false
      }
    }), Object.seal(e), e;
  }
  typeof process < "u" && typeof process.env < "u" && process.env.NEXT_PUBLIC_SECURE_SITE_ORIGIN;
  const Ku = [
    {
      label: "Coinbase",
      name: "coinbase",
      feeRange: "1-2%",
      url: "",
      supportedChains: ["eip155"]
    },
    {
      label: "Meld.io",
      name: "meld",
      feeRange: "1-2%",
      url: "https://meldcrypto.com",
      supportedChains: ["eip155", "solana"]
    }
  ], Rp = "WXETMuFUQmqqybHuRkSgxv:25B8LJHSfpG6LVjR2ytU5Cwh7Z4Sch2ocoU", Ee$3 = {
    FOUR_MINUTES_MS: 24e4,
    TEN_SEC_MS: 1e4,
    ONE_SEC_MS: 1e3,
    BALANCE_SUPPORTED_CHAINS: ["eip155", "solana"],
    NAMES_SUPPORTED_CHAIN_NAMESPACES: ["eip155"],
    NATIVE_TOKEN_ADDRESS: {
      eip155: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
      solana: "So11111111111111111111111111111111111111111",
      polkadot: "0x",
      bip122: "0x",
      cosmos: "0x"
    },
    CONVERT_SLIPPAGE_TOLERANCE: 1,
    CONNECT_LABELS: {
      MOBILE: "Open and continue in the wallet app"
    },
    SEND_SUPPORTED_NAMESPACES: ["eip155", "solana"],
    DEFAULT_REMOTE_FEATURES: {
      swaps: ["1inch"],
      onramp: ["coinbase", "meld"],
      email: true,
      socials: [
        "google",
        "x",
        "discord",
        "farcaster",
        "github",
        "apple",
        "facebook"
      ],
      activity: true,
      reownBranding: true
    },
    DEFAULT_REMOTE_FEATURES_DISABLED: {
      email: false,
      socials: false,
      swaps: false,
      onramp: false,
      activity: false,
      reownBranding: false
    },
    DEFAULT_FEATURES: {
      receive: true,
      send: true,
      emailShowWallets: true,
      connectorTypeOrder: [
        "walletConnect",
        "recent",
        "injected",
        "featured",
        "custom",
        "external",
        "recommended"
      ],
      analytics: true,
      allWallets: true,
      legalCheckbox: false,
      smartSessions: false,
      collapseWallets: false,
      walletFeaturesOrder: ["onramp", "swaps", "receive", "send"],
      connectMethodsOrder: void 0,
      pay: false
    },
    DEFAULT_ACCOUNT_TYPES: {
      bip122: "payment",
      eip155: "smartAccount",
      polkadot: "eoa",
      solana: "eoa"
    },
    ADAPTER_TYPES: {
      UNIVERSAL: "universal"
    }
  }, q$1 = {
    // Cache expiry in milliseconds
    cacheExpiry: {
      portfolio: 3e4,
      nativeBalance: 3e4,
      ens: 3e5,
      identity: 3e5
    },
    isCacheExpired(t, e) {
      return Date.now() - t > e;
    },
    getActiveNetworkProps() {
      const t = q$1.getActiveNamespace(), e = q$1.getActiveCaipNetworkId(), s = e ? e.split(":")[1] : void 0, r = s ? isNaN(Number(s)) ? s : Number(s) : void 0;
      return {
        namespace: t,
        caipNetworkId: e,
        chainId: r
      };
    },
    setWalletConnectDeepLink({ name: t, href: e }) {
      try {
        Z$1.setItem(ee$2.DEEPLINK_CHOICE, JSON.stringify({ href: e, name: t }));
      } catch {
        console.info("Unable to set WalletConnect deep link");
      }
    },
    getWalletConnectDeepLink() {
      try {
        const t = Z$1.getItem(ee$2.DEEPLINK_CHOICE);
        if (t)
          return JSON.parse(t);
      } catch {
        console.info("Unable to get WalletConnect deep link");
      }
    },
    deleteWalletConnectDeepLink() {
      try {
        Z$1.removeItem(ee$2.DEEPLINK_CHOICE);
      } catch {
        console.info("Unable to delete WalletConnect deep link");
      }
    },
    setActiveNamespace(t) {
      try {
        Z$1.setItem(ee$2.ACTIVE_NAMESPACE, t);
      } catch {
        console.info("Unable to set active namespace");
      }
    },
    setActiveCaipNetworkId(t) {
      try {
        Z$1.setItem(ee$2.ACTIVE_CAIP_NETWORK_ID, t), q$1.setActiveNamespace(t.split(":")[0]);
      } catch {
        console.info("Unable to set active caip network id");
      }
    },
    getActiveCaipNetworkId() {
      try {
        return Z$1.getItem(ee$2.ACTIVE_CAIP_NETWORK_ID);
      } catch {
        console.info("Unable to get active caip network id");
        return;
      }
    },
    deleteActiveCaipNetworkId() {
      try {
        Z$1.removeItem(ee$2.ACTIVE_CAIP_NETWORK_ID);
      } catch {
        console.info("Unable to delete active caip network id");
      }
    },
    deleteConnectedConnectorId(t) {
      try {
        const e = _o$1(t);
        Z$1.removeItem(e);
      } catch {
        console.info("Unable to delete connected connector id");
      }
    },
    setAppKitRecent(t) {
      try {
        const e = q$1.getRecentWallets();
        e.find((r) => r.id === t.id) || (e.unshift(t), e.length > 2 && e.pop(), Z$1.setItem(ee$2.RECENT_WALLETS, JSON.stringify(e)));
      } catch {
        console.info("Unable to set AppKit recent");
      }
    },
    getRecentWallets() {
      try {
        const t = Z$1.getItem(ee$2.RECENT_WALLETS);
        return t ? JSON.parse(t) : [];
      } catch {
        console.info("Unable to get AppKit recent");
      }
      return [];
    },
    setConnectedConnectorId(t, e) {
      try {
        const s = _o$1(t);
        Z$1.setItem(s, e);
      } catch {
        console.info("Unable to set Connected Connector Id");
      }
    },
    getActiveNamespace() {
      try {
        return Z$1.getItem(ee$2.ACTIVE_NAMESPACE);
      } catch {
        console.info("Unable to get active namespace");
      }
    },
    getConnectedConnectorId(t) {
      if (t)
        try {
          const e = _o$1(t);
          return Z$1.getItem(e);
        } catch {
          console.info("Unable to get connected connector id in namespace ", t);
        }
    },
    setConnectedSocialProvider(t) {
      try {
        Z$1.setItem(ee$2.CONNECTED_SOCIAL, t);
      } catch {
        console.info("Unable to set connected social provider");
      }
    },
    getConnectedSocialProvider() {
      try {
        return Z$1.getItem(ee$2.CONNECTED_SOCIAL);
      } catch {
        console.info("Unable to get connected social provider");
      }
    },
    deleteConnectedSocialProvider() {
      try {
        Z$1.removeItem(ee$2.CONNECTED_SOCIAL);
      } catch {
        console.info("Unable to delete connected social provider");
      }
    },
    getConnectedSocialUsername() {
      try {
        return Z$1.getItem(ee$2.CONNECTED_SOCIAL_USERNAME);
      } catch {
        console.info("Unable to get connected social username");
      }
    },
    getStoredActiveCaipNetworkId() {
      var s;
      const t = Z$1.getItem(ee$2.ACTIVE_CAIP_NETWORK_ID);
      return (s = t == null ? void 0 : t.split(":")) == null ? void 0 : s[1];
    },
    setConnectionStatus(t) {
      try {
        Z$1.setItem(ee$2.CONNECTION_STATUS, t);
      } catch {
        console.info("Unable to set connection status");
      }
    },
    getConnectionStatus() {
      try {
        return Z$1.getItem(ee$2.CONNECTION_STATUS);
      } catch {
        return;
      }
    },
    getConnectedNamespaces() {
      try {
        const t = Z$1.getItem(ee$2.CONNECTED_NAMESPACES);
        return t != null && t.length ? t.split(",") : [];
      } catch {
        return [];
      }
    },
    setConnectedNamespaces(t) {
      try {
        const e = Array.from(new Set(t));
        Z$1.setItem(ee$2.CONNECTED_NAMESPACES, e.join(","));
      } catch {
        console.info("Unable to set namespaces in storage");
      }
    },
    addConnectedNamespace(t) {
      try {
        const e = q$1.getConnectedNamespaces();
        e.includes(t) || (e.push(t), q$1.setConnectedNamespaces(e));
      } catch {
        console.info("Unable to add connected namespace");
      }
    },
    removeConnectedNamespace(t) {
      try {
        const e = q$1.getConnectedNamespaces(), s = e.indexOf(t);
        s > -1 && (e.splice(s, 1), q$1.setConnectedNamespaces(e));
      } catch {
        console.info("Unable to remove connected namespace");
      }
    },
    getTelegramSocialProvider() {
      try {
        return Z$1.getItem(ee$2.TELEGRAM_SOCIAL_PROVIDER);
      } catch {
        return console.info("Unable to get telegram social provider"), null;
      }
    },
    setTelegramSocialProvider(t) {
      try {
        Z$1.setItem(ee$2.TELEGRAM_SOCIAL_PROVIDER, t);
      } catch {
        console.info("Unable to set telegram social provider");
      }
    },
    removeTelegramSocialProvider() {
      try {
        Z$1.removeItem(ee$2.TELEGRAM_SOCIAL_PROVIDER);
      } catch {
        console.info("Unable to remove telegram social provider");
      }
    },
    getBalanceCache() {
      let t = {};
      try {
        const e = Z$1.getItem(ee$2.PORTFOLIO_CACHE);
        t = e ? JSON.parse(e) : {};
      } catch {
        console.info("Unable to get balance cache");
      }
      return t;
    },
    removeAddressFromBalanceCache(t) {
      try {
        const e = q$1.getBalanceCache();
        Z$1.setItem(ee$2.PORTFOLIO_CACHE, JSON.stringify({ ...e, [t]: void 0 }));
      } catch {
        console.info("Unable to remove address from balance cache", t);
      }
    },
    getBalanceCacheForCaipAddress(t) {
      try {
        const s = q$1.getBalanceCache()[t];
        if (s && !this.isCacheExpired(s.timestamp, this.cacheExpiry.portfolio))
          return s.balance;
        q$1.removeAddressFromBalanceCache(t);
      } catch {
        console.info("Unable to get balance cache for address", t);
      }
    },
    updateBalanceCache(t) {
      try {
        const e = q$1.getBalanceCache();
        e[t.caipAddress] = t, Z$1.setItem(ee$2.PORTFOLIO_CACHE, JSON.stringify(e));
      } catch {
        console.info("Unable to update balance cache", t);
      }
    },
    getNativeBalanceCache() {
      let t = {};
      try {
        const e = Z$1.getItem(ee$2.NATIVE_BALANCE_CACHE);
        t = e ? JSON.parse(e) : {};
      } catch {
        console.info("Unable to get balance cache");
      }
      return t;
    },
    removeAddressFromNativeBalanceCache(t) {
      try {
        const e = q$1.getBalanceCache();
        Z$1.setItem(ee$2.NATIVE_BALANCE_CACHE, JSON.stringify({ ...e, [t]: void 0 }));
      } catch {
        console.info("Unable to remove address from balance cache", t);
      }
    },
    getNativeBalanceCacheForCaipAddress(t) {
      try {
        const s = q$1.getNativeBalanceCache()[t];
        if (s && !this.isCacheExpired(s.timestamp, this.cacheExpiry.nativeBalance))
          return s;
        console.info("Discarding cache for address", t), q$1.removeAddressFromBalanceCache(t);
      } catch {
        console.info("Unable to get balance cache for address", t);
      }
    },
    updateNativeBalanceCache(t) {
      try {
        const e = q$1.getNativeBalanceCache();
        e[t.caipAddress] = t, Z$1.setItem(ee$2.NATIVE_BALANCE_CACHE, JSON.stringify(e));
      } catch {
        console.info("Unable to update balance cache", t);
      }
    },
    getEnsCache() {
      let t = {};
      try {
        const e = Z$1.getItem(ee$2.ENS_CACHE);
        t = e ? JSON.parse(e) : {};
      } catch {
        console.info("Unable to get ens name cache");
      }
      return t;
    },
    getEnsFromCacheForAddress(t) {
      try {
        const s = q$1.getEnsCache()[t];
        if (s && !this.isCacheExpired(s.timestamp, this.cacheExpiry.ens))
          return s.ens;
        q$1.removeEnsFromCache(t);
      } catch {
        console.info("Unable to get ens name from cache", t);
      }
    },
    updateEnsCache(t) {
      try {
        const e = q$1.getEnsCache();
        e[t.address] = t, Z$1.setItem(ee$2.ENS_CACHE, JSON.stringify(e));
      } catch {
        console.info("Unable to update ens name cache", t);
      }
    },
    removeEnsFromCache(t) {
      try {
        const e = q$1.getEnsCache();
        Z$1.setItem(ee$2.ENS_CACHE, JSON.stringify({ ...e, [t]: void 0 }));
      } catch {
        console.info("Unable to remove ens name from cache", t);
      }
    },
    getIdentityCache() {
      let t = {};
      try {
        const e = Z$1.getItem(ee$2.IDENTITY_CACHE);
        t = e ? JSON.parse(e) : {};
      } catch {
        console.info("Unable to get identity cache");
      }
      return t;
    },
    getIdentityFromCacheForAddress(t) {
      try {
        const s = q$1.getIdentityCache()[t];
        if (s && !this.isCacheExpired(s.timestamp, this.cacheExpiry.identity))
          return s.identity;
        q$1.removeIdentityFromCache(t);
      } catch {
        console.info("Unable to get identity from cache", t);
      }
    },
    updateIdentityCache(t) {
      try {
        const e = q$1.getIdentityCache();
        e[t.address] = {
          identity: t.identity,
          timestamp: t.timestamp
        }, Z$1.setItem(ee$2.IDENTITY_CACHE, JSON.stringify(e));
      } catch {
        console.info("Unable to update identity cache", t);
      }
    },
    removeIdentityFromCache(t) {
      try {
        const e = q$1.getIdentityCache();
        Z$1.setItem(ee$2.IDENTITY_CACHE, JSON.stringify({ ...e, [t]: void 0 }));
      } catch {
        console.info("Unable to remove identity from cache", t);
      }
    },
    clearAddressCache() {
      try {
        Z$1.removeItem(ee$2.PORTFOLIO_CACHE), Z$1.removeItem(ee$2.NATIVE_BALANCE_CACHE), Z$1.removeItem(ee$2.ENS_CACHE), Z$1.removeItem(ee$2.IDENTITY_CACHE);
      } catch {
        console.info("Unable to clear address cache");
      }
    },
    setPreferredAccountTypes(t) {
      try {
        Z$1.setItem(ee$2.PREFERRED_ACCOUNT_TYPES, JSON.stringify(t));
      } catch {
        console.info("Unable to set preferred account types", t);
      }
    },
    getPreferredAccountTypes() {
      try {
        const t = Z$1.getItem(ee$2.PREFERRED_ACCOUNT_TYPES);
        return t ? JSON.parse(t) : {};
      } catch {
        console.info("Unable to get preferred account types");
      }
      return {};
    },
    setConnections(t, e) {
      try {
        const s = {
          ...q$1.getConnections(),
          [e]: t
        };
        Z$1.setItem(ee$2.CONNECTIONS, JSON.stringify(s));
      } catch (s) {
        console.error("Unable to sync connections to storage", s);
      }
    },
    getConnections() {
      try {
        const t = Z$1.getItem(ee$2.CONNECTIONS);
        return t ? JSON.parse(t) : {};
      } catch (t) {
        return console.error("Unable to get connections from storage", t), {};
      }
    }
  }, X$3 = {
    isMobile() {
      var t;
      return this.isClient() ? !!(typeof (window == null ? void 0 : window.matchMedia) == "function" && ((t = window == null ? void 0 : window.matchMedia("(pointer:coarse)")) != null && t.matches) || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)) : false;
    },
    checkCaipNetwork(t, e = "") {
      return t == null ? void 0 : t.caipNetworkId.toLocaleLowerCase().includes(e.toLowerCase());
    },
    isAndroid() {
      if (!this.isMobile())
        return false;
      const t = window == null ? void 0 : window.navigator.userAgent.toLowerCase();
      return X$3.isMobile() && t.includes("android");
    },
    isIos() {
      if (!this.isMobile())
        return false;
      const t = window == null ? void 0 : window.navigator.userAgent.toLowerCase();
      return t.includes("iphone") || t.includes("ipad");
    },
    isSafari() {
      return this.isClient() ? (window == null ? void 0 : window.navigator.userAgent.toLowerCase()).includes("safari") : false;
    },
    isClient() {
      return typeof window < "u";
    },
    isPairingExpired(t) {
      return t ? t - Date.now() <= Ee$3.TEN_SEC_MS : true;
    },
    isAllowedRetry(t, e = Ee$3.ONE_SEC_MS) {
      return Date.now() - t >= e;
    },
    copyToClopboard(t) {
      navigator.clipboard.writeText(t);
    },
    isIframe() {
      try {
        return (window == null ? void 0 : window.self) !== (window == null ? void 0 : window.top);
      } catch {
        return false;
      }
    },
    isSafeApp() {
      var t, e;
      if (X$3.isClient() && window.self !== window.top)
        try {
          const s = (e = (t = window == null ? void 0 : window.location) == null ? void 0 : t.ancestorOrigins) == null ? void 0 : e[0], r = "https://app.safe.global";
          if (s) {
            const i = new URL(s), n = new URL(r);
            return i.hostname === n.hostname;
          }
        } catch {
          return false;
        }
      return false;
    },
    getPairingExpiry() {
      return Date.now() + Ee$3.FOUR_MINUTES_MS;
    },
    getNetworkId(t) {
      return t == null ? void 0 : t.split(":")[1];
    },
    getPlainAddress(t) {
      return t == null ? void 0 : t.split(":")[2];
    },
    async wait(t) {
      return new Promise((e) => {
        setTimeout(e, t);
      });
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    debounce(t, e = 500) {
      let s;
      return (...r) => {
        function i() {
          t(...r);
        }
        s && clearTimeout(s), s = setTimeout(i, e);
      };
    },
    isHttpUrl(t) {
      return t.startsWith("http://") || t.startsWith("https://");
    },
    formatNativeUrl(t, e, s = null) {
      if (X$3.isHttpUrl(t))
        return this.formatUniversalUrl(t, e);
      let r = t, i = s;
      r.includes("://") || (r = t.replaceAll("/", "").replaceAll(":", ""), r = `${r}://`), r.endsWith("/") || (r = `${r}/`), i && !(i != null && i.endsWith("/")) && (i = `${i}/`), this.isTelegram() && this.isAndroid() && (e = encodeURIComponent(e));
      const n = encodeURIComponent(e);
      return {
        redirect: `${r}wc?uri=${n}`,
        redirectUniversalLink: i ? `${i}wc?uri=${n}` : void 0,
        href: r
      };
    },
    formatUniversalUrl(t, e) {
      if (!X$3.isHttpUrl(t))
        return this.formatNativeUrl(t, e);
      let s = t;
      s.endsWith("/") || (s = `${s}/`);
      const r = encodeURIComponent(e);
      return {
        redirect: `${s}wc?uri=${r}`,
        href: s
      };
    },
    getOpenTargetForPlatform(t) {
      return t === "popupWindow" ? t : this.isTelegram() ? q$1.getTelegramSocialProvider() ? "_top" : "_blank" : t;
    },
    openHref(t, e, s) {
      window == null || window.open(t, this.getOpenTargetForPlatform(e), s || "noreferrer noopener");
    },
    returnOpenHref(t, e, s) {
      return window == null ? void 0 : window.open(t, this.getOpenTargetForPlatform(e), s || "noreferrer noopener");
    },
    isTelegram() {
      return typeof window < "u" && // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (!!window.TelegramWebviewProxy || // eslint-disable-next-line @typescript-eslint/no-explicit-any
      !!window.Telegram || // eslint-disable-next-line @typescript-eslint/no-explicit-any
      !!window.TelegramWebviewProxyProto);
    },
    isPWA() {
      var s, r, i;
      if (typeof window > "u")
        return false;
      const t = (r = (s = window.matchMedia) == null ? void 0 : s.call(window, "(display-mode: standalone)")) == null ? void 0 : r.matches, e = (i = window == null ? void 0 : window.navigator) == null ? void 0 : i.standalone;
      return !!(t || e);
    },
    async preloadImage(t) {
      const e = new Promise((s, r) => {
        const i = new Image();
        i.onload = s, i.onerror = r, i.crossOrigin = "anonymous", i.src = t;
      });
      return Promise.race([e, X$3.wait(2e3)]);
    },
    formatBalance(t, e) {
      let s = "0.000";
      if (typeof t == "string") {
        const r = Number(t);
        if (r) {
          const i = Math.floor(r * 1e3) / 1e3;
          i && (s = i.toString());
        }
      }
      return `${s}${e ? ` ${e}` : ""}`;
    },
    formatBalance2(t, e) {
      var r;
      let s;
      if (t === "0")
        s = "0";
      else if (typeof t == "string") {
        const i = Number(t);
        i && (s = (r = i.toString().match(/^-?\d+(?:\.\d{0,3})?/u)) == null ? void 0 : r[0]);
      }
      return {
        value: s ?? "0",
        rest: s === "0" ? "000" : "",
        symbol: e
      };
    },
    getApiUrl() {
      return z$3.W3M_API_URL;
    },
    getBlockchainApiUrl() {
      return z$3.BLOCKCHAIN_API_RPC_URL;
    },
    getAnalyticsUrl() {
      return z$3.PULSE_API_URL;
    },
    getUUID() {
      return crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (t) => {
        const e = Math.random() * 16 | 0;
        return (t === "x" ? e : e & 3 | 8).toString(16);
      });
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    parseError(t) {
      var e, s;
      return typeof t == "string" ? t : typeof ((s = (e = t == null ? void 0 : t.issues) == null ? void 0 : e[0]) == null ? void 0 : s.message) == "string" ? t.issues[0].message : t instanceof Error ? t.message : "Unknown error";
    },
    sortRequestedNetworks(t, e = []) {
      const s = {};
      return e && t && (t.forEach((r, i) => {
        s[r] = i;
      }), e.sort((r, i) => {
        const n = s[r.id], o = s[i.id];
        return n !== void 0 && o !== void 0 ? n - o : n !== void 0 ? -1 : o !== void 0 ? 1 : 0;
      })), e;
    },
    calculateBalance(t) {
      let e = 0;
      for (const s of t)
        e += s.value ?? 0;
      return e;
    },
    formatTokenBalance(t) {
      const e = t.toFixed(2), [s, r] = e.split(".");
      return { dollars: s, pennies: r };
    },
    isAddress(t, e = "eip155") {
      switch (e) {
        case "eip155":
          if (/^(?:0x)?[0-9a-f]{40}$/iu.test(t)) {
            if (/^(?:0x)?[0-9a-f]{40}$/iu.test(t) || /^(?:0x)?[0-9A-F]{40}$/iu.test(t))
              return true;
          } else return false;
          return false;
        case "solana":
          return /[1-9A-HJ-NP-Za-km-z]{32,44}$/iu.test(t);
        default:
          return false;
      }
    },
    uniqueBy(t, e) {
      const s = /* @__PURE__ */ new Set();
      return t.filter((r) => {
        const i = r[e];
        return s.has(i) ? false : (s.add(i), true);
      });
    },
    generateSdkVersion(t, e, s) {
      const i = t.length === 0 ? Ee$3.ADAPTER_TYPES.UNIVERSAL : t.map((n) => n.adapterType).join(",");
      return `${e}-${i}-${s}`;
    },
    // eslint-disable-next-line max-params
    createAccount(t, e, s, r, i) {
      return {
        namespace: t,
        address: e,
        type: s,
        publicKey: r,
        path: i
      };
    },
    isCaipAddress(t) {
      if (typeof t != "string")
        return false;
      const e = t.split(":"), s = e[0];
      return e.filter(Boolean).length === 3 && s in z$3.CHAIN_NAME_MAP;
    },
    isMac() {
      const t = window == null ? void 0 : window.navigator.userAgent.toLowerCase();
      return t.includes("macintosh") && !t.includes("safari");
    },
    formatTelegramSocialLoginUrl(t) {
      const e = `--${encodeURIComponent(window == null ? void 0 : window.location.href)}`, s = "state=";
      if (new URL(t).host === "auth.magic.link") {
        const i = "provider_authorization_url=", n = t.substring(t.indexOf(i) + i.length), o = this.injectIntoUrl(decodeURIComponent(n), s, e);
        return t.replace(n, encodeURIComponent(o));
      }
      return this.injectIntoUrl(t, s, e);
    },
    injectIntoUrl(t, e, s) {
      const r = t.indexOf(e);
      if (r === -1)
        throw new Error(`${e} parameter not found in the URL: ${t}`);
      const i = t.indexOf("&", r), n = e.length, o = i !== -1 ? i : t.length, a = t.substring(0, r + n), c = t.substring(r + n, o), l = t.substring(i), u = c + s;
      return a + u + l;
    }
  };
  async function li(...t) {
    const e = await fetch(...t);
    if (!e.ok)
      throw new Error(`HTTP status code: ${e.status}`, {
        cause: e
      });
    return e;
  }
  let mn$1 = class mn {
    constructor({ baseUrl: e, clientId: s }) {
      this.baseUrl = e, this.clientId = s;
    }
    async get({ headers: e, signal: s, cache: r, ...i }) {
      const n = this.createUrl(i);
      return (await li(n, { method: "GET", headers: e, signal: s, cache: r })).json();
    }
    async getBlob({ headers: e, signal: s, ...r }) {
      const i = this.createUrl(r);
      return (await li(i, { method: "GET", headers: e, signal: s })).blob();
    }
    async post({ body: e, headers: s, signal: r, ...i }) {
      const n = this.createUrl(i);
      return (await li(n, {
        method: "POST",
        headers: s,
        body: e ? JSON.stringify(e) : void 0,
        signal: r
      })).json();
    }
    async put({ body: e, headers: s, signal: r, ...i }) {
      const n = this.createUrl(i);
      return (await li(n, {
        method: "PUT",
        headers: s,
        body: e ? JSON.stringify(e) : void 0,
        signal: r
      })).json();
    }
    async delete({ body: e, headers: s, signal: r, ...i }) {
      const n = this.createUrl(i);
      return (await li(n, {
        method: "DELETE",
        headers: s,
        body: e ? JSON.stringify(e) : void 0,
        signal: r
      })).json();
    }
    createUrl({ path: e, params: s }) {
      const r = new URL(e, this.baseUrl);
      return s && Object.entries(s).forEach(([i, n]) => {
        n && r.searchParams.append(i, n);
      }), this.clientId && r.searchParams.append("clientId", this.clientId), r;
    }
  };
  const Up = {
    getFeatureValue(t, e) {
      const s = e == null ? void 0 : e[t];
      return s === void 0 ? Ee$3.DEFAULT_FEATURES[t] : s;
    },
    filterSocialsByPlatform(t) {
      if (!t || !t.length)
        return t;
      if (X$3.isTelegram()) {
        if (X$3.isIos())
          return t.filter((e) => e !== "google");
        if (X$3.isMac())
          return t.filter((e) => e !== "x");
        if (X$3.isAndroid())
          return t.filter((e) => !["facebook", "x"].includes(e));
      }
      return t;
    }
  }, V$2 = _e$3({
    features: Ee$3.DEFAULT_FEATURES,
    projectId: "",
    sdkType: "appkit",
    sdkVersion: "html-wagmi-undefined",
    defaultAccountTypes: Ee$3.DEFAULT_ACCOUNT_TYPES,
    enableNetworkSwitch: true,
    experimental_preferUniversalLinks: false,
    remoteFeatures: {}
  }), T$2 = {
    state: V$2,
    subscribeKey(t, e) {
      return et$2(V$2, t, e);
    },
    setOptions(t) {
      Object.assign(V$2, t);
    },
    setRemoteFeatures(t) {
      var s;
      if (!t)
        return;
      const e = { ...V$2.remoteFeatures, ...t };
      V$2.remoteFeatures = e, (s = V$2.remoteFeatures) != null && s.socials && (V$2.remoteFeatures.socials = Up.filterSocialsByPlatform(V$2.remoteFeatures.socials));
    },
    setFeatures(t) {
      if (!t)
        return;
      V$2.features || (V$2.features = Ee$3.DEFAULT_FEATURES);
      const e = { ...V$2.features, ...t };
      V$2.features = e;
    },
    setProjectId(t) {
      V$2.projectId = t;
    },
    setCustomRpcUrls(t) {
      V$2.customRpcUrls = t;
    },
    setAllWallets(t) {
      V$2.allWallets = t;
    },
    setIncludeWalletIds(t) {
      V$2.includeWalletIds = t;
    },
    setExcludeWalletIds(t) {
      V$2.excludeWalletIds = t;
    },
    setFeaturedWalletIds(t) {
      V$2.featuredWalletIds = t;
    },
    setTokens(t) {
      V$2.tokens = t;
    },
    setTermsConditionsUrl(t) {
      V$2.termsConditionsUrl = t;
    },
    setPrivacyPolicyUrl(t) {
      V$2.privacyPolicyUrl = t;
    },
    setCustomWallets(t) {
      V$2.customWallets = t;
    },
    setIsSiweEnabled(t) {
      V$2.isSiweEnabled = t;
    },
    setIsUniversalProvider(t) {
      V$2.isUniversalProvider = t;
    },
    setSdkVersion(t) {
      V$2.sdkVersion = t;
    },
    setMetadata(t) {
      V$2.metadata = t;
    },
    setDisableAppend(t) {
      V$2.disableAppend = t;
    },
    setEIP6963Enabled(t) {
      V$2.enableEIP6963 = t;
    },
    setDebug(t) {
      V$2.debug = t;
    },
    setEnableWalletConnect(t) {
      V$2.enableWalletConnect = t;
    },
    setEnableWalletGuide(t) {
      V$2.enableWalletGuide = t;
    },
    setEnableAuthLogger(t) {
      V$2.enableAuthLogger = t;
    },
    setEnableWallets(t) {
      V$2.enableWallets = t;
    },
    setPreferUniversalLinks(t) {
      V$2.experimental_preferUniversalLinks = t;
    },
    setHasMultipleAddresses(t) {
      V$2.hasMultipleAddresses = t;
    },
    setSIWX(t) {
      V$2.siwx = t;
    },
    setConnectMethodsOrder(t) {
      V$2.features = {
        ...V$2.features,
        connectMethodsOrder: t
      };
    },
    setWalletFeaturesOrder(t) {
      V$2.features = {
        ...V$2.features,
        walletFeaturesOrder: t
      };
    },
    setSocialsOrder(t) {
      V$2.remoteFeatures = {
        ...V$2.remoteFeatures,
        socials: t
      };
    },
    setCollapseWallets(t) {
      V$2.features = {
        ...V$2.features,
        collapseWallets: t
      };
    },
    setEnableEmbedded(t) {
      V$2.enableEmbedded = t;
    },
    setAllowUnsupportedChain(t) {
      V$2.allowUnsupportedChain = t;
    },
    setManualWCControl(t) {
      V$2.manualWCControl = t;
    },
    setEnableNetworkSwitch(t) {
      V$2.enableNetworkSwitch = t;
    },
    setDefaultAccountTypes(t = {}) {
      Object.entries(t).forEach(([e, s]) => {
        s && (V$2.defaultAccountTypes[e] = s);
      });
    },
    setUniversalProviderConfigOverride(t) {
      V$2.universalProviderConfigOverride = t;
    },
    getUniversalProviderConfigOverride() {
      return V$2.universalProviderConfigOverride;
    },
    getSnapshot() {
      return rn$2(V$2);
    }
  }, Dp = Object.freeze({
    enabled: true,
    events: []
  }), Lp = new mn$1({ baseUrl: X$3.getAnalyticsUrl(), clientId: null }), Mp = 5, Bp = 60 * 1e3, fs = _e$3({
    ...Dp
  }), Fp = {
    state: fs,
    subscribeKey(t, e) {
      return et$2(fs, t, e);
    },
    async sendError(t, e) {
      if (!fs.enabled)
        return;
      const s = Date.now();
      if (fs.events.filter((n) => {
        const o = new Date(n.properties.timestamp || "").getTime();
        return s - o < Bp;
      }).length >= Mp)
        return;
      const i = {
        type: "error",
        event: e,
        properties: {
          errorType: t.name,
          errorMessage: t.message,
          stackTrace: t.stack,
          timestamp: (/* @__PURE__ */ new Date()).toISOString()
        }
      };
      fs.events.push(i);
      try {
        if (typeof window > "u")
          return;
        const { projectId: n, sdkType: o, sdkVersion: a } = T$2.state;
        await Lp.post({
          path: "/e",
          params: {
            projectId: n,
            st: o,
            sv: a || "html-wagmi-4.2.2"
          },
          body: {
            eventId: X$3.getUUID(),
            url: window.location.href,
            domain: window.location.hostname,
            timestamp: (/* @__PURE__ */ new Date()).toISOString(),
            props: {
              type: "error",
              event: e,
              errorType: t.name,
              errorMessage: t.message,
              stackTrace: t.stack
            }
          }
        });
      } catch {
      }
    },
    enable() {
      fs.enabled = true;
    },
    disable() {
      fs.enabled = false;
    },
    clearEvents() {
      fs.events = [];
    }
  };
  class Wr extends Error {
    constructor(e, s, r) {
      super(e), this.name = "AppKitError", this.category = s, this.originalError = r, Object.setPrototypeOf(this, Wr.prototype);
      let i = false;
      if (r instanceof Error && typeof r.stack == "string" && r.stack) {
        const n = r.stack, o = n.indexOf(`
`);
        if (o > -1) {
          const a = n.substring(o + 1);
          this.stack = `${this.name}: ${this.message}
${a}`, i = true;
        }
      }
      i || (Error.captureStackTrace ? Error.captureStackTrace(this, Wr) : this.stack || (this.stack = `${this.name}: ${this.message}`));
    }
  }
  function Ic(t, e) {
    const s = t instanceof Wr ? t : new Wr(t instanceof Error ? t.message : String(t), e, t);
    throw Fp.sendError(s, s.category), s;
  }
  function At$1(t, e = "INTERNAL_SDK_ERROR") {
    const s = {};
    return Object.keys(t).forEach((r) => {
      const i = t[r];
      if (typeof i == "function") {
        let n = i;
        i.constructor.name === "AsyncFunction" ? n = async (...o) => {
          try {
            return await i(...o);
          } catch (a) {
            return Ic(a, e);
          }
        } : n = (...o) => {
          try {
            return i(...o);
          } catch (a) {
            return Ic(a, e);
          }
        }, s[r] = n;
      } else
        s[r] = i;
    }), s;
  }
  const Gt$2 = {
    PHANTOM: {
      id: "a797aa35c0fadbfc1a53e7f675162ed5226968b44a19ee3d24385c64d1d3c393",
      url: "https://phantom.app"
    },
    SOLFLARE: {
      id: "1ca0bdd4747578705b1939af023d120677c64fe6ca76add81fda36e350605e79",
      url: "https://solflare.com"
    },
    COINBASE: {
      id: "fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",
      url: "https://go.cb-w.com"
    }
  }, jp = {
    /**
     * Handles mobile wallet redirection for wallets that have Universal Links and doesn't support WalletConnect Deep Links.
     *
     * @param {string} id - The id of the wallet.
     * @param {ChainNamespace} namespace - The namespace of the chain.
     */
    handleMobileDeeplinkRedirect(t, e) {
      const s = window.location.href, r = encodeURIComponent(s);
      if (t === Gt$2.PHANTOM.id && !("phantom" in window)) {
        const i = s.startsWith("https") ? "https" : "http", n = s.split("/")[2], o = encodeURIComponent(`${i}://${n}`);
        window.location.href = `${Gt$2.PHANTOM.url}/ul/browse/${r}?ref=${o}`;
      }
      t === Gt$2.SOLFLARE.id && !("solflare" in window) && (window.location.href = `${Gt$2.SOLFLARE.url}/ul/v1/browse/${r}?ref=${r}`), e === z$3.CHAIN.SOLANA && t === Gt$2.COINBASE.id && !("coinbaseSolana" in window) && (window.location.href = `${Gt$2.COINBASE.url}/dapp?cb_url=${r}`);
    }
  }, ft$1 = _e$3({
    walletImages: {},
    networkImages: {},
    chainImages: {},
    connectorImages: {},
    tokenImages: {},
    currencyImages: {}
  }), qp = {
    state: ft$1,
    subscribeNetworkImages(t) {
      return Qe$1(ft$1.networkImages, () => t(ft$1.networkImages));
    },
    subscribeKey(t, e) {
      return et$2(ft$1, t, e);
    },
    subscribe(t) {
      return Qe$1(ft$1, () => t(ft$1));
    },
    setWalletImage(t, e) {
      ft$1.walletImages[t] = e;
    },
    setNetworkImage(t, e) {
      ft$1.networkImages[t] = e;
    },
    setChainImage(t, e) {
      ft$1.chainImages[t] = e;
    },
    setConnectorImage(t, e) {
      ft$1.connectorImages = { ...ft$1.connectorImages, [t]: e };
    },
    setTokenImage(t, e) {
      ft$1.tokenImages[t] = e;
    },
    setCurrencyImage(t, e) {
      ft$1.currencyImages[t] = e;
    }
  }, Mt$2 = At$1(qp), Wp = {
    // Ethereum
    eip155: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
    // Solana
    solana: "a1b58899-f671-4276-6a5e-56ca5bd59700",
    // Polkadot
    polkadot: "",
    // Bitcoin
    bip122: "0b4838db-0161-4ffe-022d-532bf03dba00",
    // Cosmos
    cosmos: ""
  }, Po = _e$3({
    networkImagePromises: {}
  }), Vu = {
    async fetchWalletImage(t) {
      if (t)
        return await K$3._fetchWalletImage(t), this.getWalletImageById(t);
    },
    async fetchNetworkImage(t) {
      if (!t)
        return;
      const e = this.getNetworkImageById(t);
      return e || (Po.networkImagePromises[t] || (Po.networkImagePromises[t] = K$3._fetchNetworkImage(t)), await Po.networkImagePromises[t], this.getNetworkImageById(t));
    },
    getWalletImageById(t) {
      if (t)
        return Mt$2.state.walletImages[t];
    },
    getWalletImage(t) {
      if (t != null && t.image_url)
        return t == null ? void 0 : t.image_url;
      if (t != null && t.image_id)
        return Mt$2.state.walletImages[t.image_id];
    },
    getNetworkImage(t) {
      var e, s, r;
      if ((e = t == null ? void 0 : t.assets) != null && e.imageUrl)
        return (s = t == null ? void 0 : t.assets) == null ? void 0 : s.imageUrl;
      if ((r = t == null ? void 0 : t.assets) != null && r.imageId)
        return Mt$2.state.networkImages[t.assets.imageId];
    },
    getNetworkImageById(t) {
      if (t)
        return Mt$2.state.networkImages[t];
    },
    getConnectorImage(t) {
      if (t != null && t.imageUrl)
        return t.imageUrl;
      if (t != null && t.imageId)
        return Mt$2.state.connectorImages[t.imageId];
    },
    getChainImage(t) {
      return Mt$2.state.networkImages[Wp[t]];
    }
  }, gs = _e$3({
    message: "",
    variant: "info",
    open: false
  }), zp = {
    state: gs,
    subscribeKey(t, e) {
      return et$2(gs, t, e);
    },
    open(t, e) {
      const { debug: s } = T$2.state, { shortMessage: r, longMessage: i } = t;
      s && (gs.message = r, gs.variant = e, gs.open = true), i && console.error(typeof i == "function" ? i() : i);
    },
    close() {
      gs.open = false, gs.message = "", gs.variant = "info";
    }
  }, Fs = At$1(zp), Hp = X$3.getAnalyticsUrl(), Kp = new mn$1({ baseUrl: Hp, clientId: null }), Vp = ["MODAL_CREATED"], ss = _e$3({
    timestamp: Date.now(),
    reportedErrors: {},
    data: {
      type: "track",
      event: "MODAL_CREATED"
    }
  }), Pe$3 = {
    state: ss,
    subscribe(t) {
      return Qe$1(ss, () => t(ss));
    },
    getSdkProperties() {
      const { projectId: t, sdkType: e, sdkVersion: s } = T$2.state;
      return {
        projectId: t,
        st: e,
        sv: s || "html-wagmi-4.2.2"
      };
    },
    async _sendAnalyticsEvent(t) {
      try {
        const e = W$2.state.address;
        if (Vp.includes(t.data.event) || typeof window > "u")
          return;
        await Kp.post({
          path: "/e",
          params: Pe$3.getSdkProperties(),
          body: {
            eventId: X$3.getUUID(),
            url: window.location.href,
            domain: window.location.hostname,
            timestamp: t.timestamp,
            props: { ...t.data, address: e }
          }
        }), ss.reportedErrors.FORBIDDEN = !1;
      } catch (e) {
        e instanceof Error && e.cause instanceof Response && e.cause.status === z$3.HTTP_STATUS_CODES.FORBIDDEN && !ss.reportedErrors.FORBIDDEN && (Fs.open({
          shortMessage: "Invalid App Configuration",
          longMessage: `Origin ${bi$1() ? window.origin : "uknown"} not found on Allowlist - update configuration on cloud.reown.com`
        }, "error"), ss.reportedErrors.FORBIDDEN = true);
      }
    },
    sendEvent(t) {
      var e;
      ss.timestamp = Date.now(), ss.data = t, (e = T$2.state.features) != null && e.analytics && Pe$3._sendAnalyticsEvent(ss);
    }
  }, Gp = X$3.getApiUrl(), it$3 = new mn$1({
    baseUrl: Gp,
    clientId: null
  }), Jp = 40, Ac = 4, Yp = 20, te$2 = _e$3({
    promises: {},
    page: 1,
    count: 0,
    featured: [],
    allFeatured: [],
    recommended: [],
    allRecommended: [],
    wallets: [],
    filteredWallets: [],
    search: [],
    isAnalyticsEnabled: false,
    excludedWallets: [],
    isFetchingRecommendedWallets: false
  }), K$3 = {
    state: te$2,
    subscribeKey(t, e) {
      return et$2(te$2, t, e);
    },
    _getSdkProperties() {
      const { projectId: t, sdkType: e, sdkVersion: s } = T$2.state;
      return {
        projectId: t,
        st: e || "appkit",
        sv: s || "html-wagmi-4.2.2"
      };
    },
    _filterOutExtensions(t) {
      return T$2.state.isUniversalProvider ? t.filter((e) => !!(e.mobile_link || e.desktop_link || e.webapp_link)) : t;
    },
    async _fetchWalletImage(t) {
      const e = `${it$3.baseUrl}/getWalletImage/${t}`, s = await it$3.getBlob({ path: e, params: K$3._getSdkProperties() });
      Mt$2.setWalletImage(t, URL.createObjectURL(s));
    },
    async _fetchNetworkImage(t) {
      const e = `${it$3.baseUrl}/public/getAssetImage/${t}`, s = await it$3.getBlob({ path: e, params: K$3._getSdkProperties() });
      Mt$2.setNetworkImage(t, URL.createObjectURL(s));
    },
    async _fetchConnectorImage(t) {
      const e = `${it$3.baseUrl}/public/getAssetImage/${t}`, s = await it$3.getBlob({ path: e, params: K$3._getSdkProperties() });
      Mt$2.setConnectorImage(t, URL.createObjectURL(s));
    },
    async _fetchCurrencyImage(t) {
      const e = `${it$3.baseUrl}/public/getCurrencyImage/${t}`, s = await it$3.getBlob({ path: e, params: K$3._getSdkProperties() });
      Mt$2.setCurrencyImage(t, URL.createObjectURL(s));
    },
    async _fetchTokenImage(t) {
      const e = `${it$3.baseUrl}/public/getTokenImage/${t}`, s = await it$3.getBlob({ path: e, params: K$3._getSdkProperties() });
      Mt$2.setTokenImage(t, URL.createObjectURL(s));
    },
    _filterWalletsByPlatform(t) {
      return X$3.isMobile() ? t == null ? void 0 : t.filter((s) => s.mobile_link || s.id === Gt$2.COINBASE.id ? true : m.state.activeChain === "solana" && (s.id === Gt$2.SOLFLARE.id || s.id === Gt$2.PHANTOM.id)) : t;
    },
    async fetchProjectConfig() {
      return (await it$3.get({
        path: "/appkit/v1/config",
        params: K$3._getSdkProperties()
      })).features;
    },
    async fetchAllowedOrigins() {
      try {
        const { allowedOrigins: t } = await it$3.get({
          path: "/projects/v1/origins",
          params: K$3._getSdkProperties()
        });
        return t;
      } catch {
        return [];
      }
    },
    async fetchNetworkImages() {
      const t = m.getAllRequestedCaipNetworks(), e = t == null ? void 0 : t.map(({ assets: s }) => s == null ? void 0 : s.imageId).filter(Boolean).filter((s) => !Vu.getNetworkImageById(s));
      e && await Promise.allSettled(e.map((s) => K$3._fetchNetworkImage(s)));
    },
    async fetchConnectorImages() {
      const { connectors: t } = F$2.state, e = t.map(({ imageId: s }) => s).filter(Boolean);
      await Promise.allSettled(e.map((s) => K$3._fetchConnectorImage(s)));
    },
    async fetchCurrencyImages(t = []) {
      await Promise.allSettled(t.map((e) => K$3._fetchCurrencyImage(e)));
    },
    async fetchTokenImages(t = []) {
      await Promise.allSettled(t.map((e) => K$3._fetchTokenImage(e)));
    },
    async fetchWallets(t) {
      var n;
      const e = t.exclude ?? [];
      K$3._getSdkProperties().sv.startsWith("html-core-") && e.push(...Object.values(Gt$2).map((o) => o.id));
      const r = await it$3.get({
        path: "/getWallets",
        params: {
          ...K$3._getSdkProperties(),
          ...t,
          page: String(t.page),
          entries: String(t.entries),
          include: (n = t.include) == null ? void 0 : n.join(","),
          exclude: e.join(",")
        }
      });
      return {
        data: K$3._filterWalletsByPlatform(r == null ? void 0 : r.data) || [],
        // Keep original count for display on main page
        count: r == null ? void 0 : r.count
      };
    },
    async fetchFeaturedWallets() {
      const { featuredWalletIds: t } = T$2.state;
      if (t != null && t.length) {
        const e = {
          ...K$3._getSdkProperties(),
          page: 1,
          entries: (t == null ? void 0 : t.length) ?? Ac,
          include: t
        }, { data: s } = await K$3.fetchWallets(e), r = [...s].sort((n, o) => t.indexOf(n.id) - t.indexOf(o.id)), i = r.map((n) => n.image_id).filter(Boolean);
        await Promise.allSettled(i.map((n) => K$3._fetchWalletImage(n))), te$2.featured = r, te$2.allFeatured = r;
      }
    },
    async fetchRecommendedWallets() {
      try {
        te$2.isFetchingRecommendedWallets = !0;
        const { includeWalletIds: t, excludeWalletIds: e, featuredWalletIds: s } = T$2.state, r = [...e ?? [], ...s ?? []].filter(Boolean), i = m.getRequestedCaipNetworkIds().join(","), n = {
          page: 1,
          entries: Ac,
          include: t,
          exclude: r,
          chains: i
        }, { data: o, count: a } = await K$3.fetchWallets(n), c = q$1.getRecentWallets(), l = o.map((d) => d.image_id).filter(Boolean), u = c.map((d) => d.image_id).filter(Boolean);
        await Promise.allSettled([...l, ...u].map((d) => K$3._fetchWalletImage(d))), te$2.recommended = o, te$2.allRecommended = o, te$2.count = a ?? 0;
      } catch {
      } finally {
        te$2.isFetchingRecommendedWallets = false;
      }
    },
    async fetchWalletsByPage({ page: t }) {
      const { includeWalletIds: e, excludeWalletIds: s, featuredWalletIds: r } = T$2.state, i = m.getRequestedCaipNetworkIds().join(","), n = [
        ...te$2.recommended.map(({ id: u }) => u),
        ...s ?? [],
        ...r ?? []
      ].filter(Boolean), o = {
        page: t,
        entries: Jp,
        include: e,
        exclude: n,
        chains: i
      }, { data: a, count: c } = await K$3.fetchWallets(o), l = a.slice(0, Yp).map((u) => u.image_id).filter(Boolean);
      await Promise.allSettled(l.map((u) => K$3._fetchWalletImage(u))), te$2.wallets = X$3.uniqueBy([...te$2.wallets, ...K$3._filterOutExtensions(a)], "id").filter((u) => {
        var d;
        return (d = u.chains) == null ? void 0 : d.some((h) => i.includes(h));
      }), te$2.count = c > te$2.count ? c : te$2.count, te$2.page = t;
    },
    async initializeExcludedWallets({ ids: t }) {
      const e = {
        page: 1,
        entries: t.length,
        include: t
      }, { data: s } = await K$3.fetchWallets(e);
      s && s.forEach((r) => {
        te$2.excludedWallets.push({ rdns: r.rdns, name: r.name });
      });
    },
    async searchWallet({ search: t, badge: e }) {
      const { includeWalletIds: s, excludeWalletIds: r } = T$2.state, i = m.getRequestedCaipNetworkIds().join(",");
      te$2.search = [];
      const n = {
        page: 1,
        entries: 100,
        search: t == null ? void 0 : t.trim(),
        badge_type: e,
        include: s,
        exclude: r,
        chains: i
      }, { data: o } = await K$3.fetchWallets(n);
      Pe$3.sendEvent({
        type: "track",
        event: "SEARCH_WALLET",
        properties: { badge: e ?? "", search: t ?? "" }
      });
      const a = o.map((c) => c.image_id).filter(Boolean);
      await Promise.allSettled([
        ...a.map((c) => K$3._fetchWalletImage(c)),
        X$3.wait(300)
      ]), te$2.search = K$3._filterOutExtensions(o);
    },
    initPromise(t, e) {
      const s = te$2.promises[t];
      return s || (te$2.promises[t] = e());
    },
    prefetch({ fetchConnectorImages: t = true, fetchFeaturedWallets: e = true, fetchRecommendedWallets: s = true, fetchNetworkImages: r = true } = {}) {
      const i = [
        t && K$3.initPromise("connectorImages", K$3.fetchConnectorImages),
        e && K$3.initPromise("featuredWallets", K$3.fetchFeaturedWallets),
        s && K$3.initPromise("recommendedWallets", K$3.fetchRecommendedWallets),
        r && K$3.initPromise("networkImages", K$3.fetchNetworkImages)
      ].filter(Boolean);
      return Promise.allSettled(i);
    },
    prefetchAnalyticsConfig() {
      var t;
      (t = T$2.state.features) != null && t.analytics && K$3.fetchAnalyticsConfig();
    },
    async fetchAnalyticsConfig() {
      try {
        const { isAnalyticsEnabled: t } = await it$3.get({
          path: "/getAnalyticsConfig",
          params: K$3._getSdkProperties()
        });
        T$2.setFeatures({ analytics: t });
      } catch {
        T$2.setFeatures({ analytics: false });
      }
    },
    filterByNamespaces(t) {
      if (!(t != null && t.length)) {
        te$2.featured = te$2.allFeatured, te$2.recommended = te$2.allRecommended;
        return;
      }
      const e = m.getRequestedCaipNetworkIds().join(",");
      te$2.featured = te$2.allFeatured.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      }), te$2.recommended = te$2.allRecommended.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      }), te$2.filteredWallets = te$2.wallets.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      });
    },
    clearFilterByNamespaces() {
      te$2.filteredWallets = [];
    },
    setFilterByNamespace(t) {
      if (!t) {
        te$2.featured = te$2.allFeatured, te$2.recommended = te$2.allRecommended;
        return;
      }
      const e = m.getRequestedCaipNetworkIds().join(",");
      te$2.featured = te$2.allFeatured.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      }), te$2.recommended = te$2.allRecommended.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      }), te$2.filteredWallets = te$2.wallets.filter((s) => {
        var r;
        return (r = s.chains) == null ? void 0 : r.some((i) => e.includes(i));
      });
    }
  }, me$2 = _e$3({
    view: "Connect",
    history: ["Connect"],
    transactionStack: []
  }), Xp = {
    state: me$2,
    subscribeKey(t, e) {
      return et$2(me$2, t, e);
    },
    pushTransactionStack(t) {
      me$2.transactionStack.push(t);
    },
    popTransactionStack(t) {
      const e = me$2.transactionStack.pop();
      if (!e)
        return;
      const { onSuccess: s, onError: r, onCancel: i } = e;
      switch (t) {
        case "success":
          s == null || s();
          break;
        case "error":
          r == null || r(), re$1.goBack();
          break;
        case "cancel":
          i == null || i(), re$1.goBack();
          break;
      }
    },
    push(t, e) {
      t !== me$2.view && (me$2.view = t, me$2.history.push(t), me$2.data = e);
    },
    reset(t, e) {
      me$2.view = t, me$2.history = [t], me$2.data = e;
    },
    replace(t, e) {
      me$2.history.at(-1) === t || (me$2.view = t, me$2.history[me$2.history.length - 1] = t, me$2.data = e);
    },
    goBack() {
      var r;
      const t = m.state.activeCaipAddress, e = re$1.state.view === "ConnectingFarcaster", s = !t && e;
      if (me$2.history.length > 1) {
        me$2.history.pop();
        const [i] = me$2.history.slice(-1);
        i && (t && i === "Connect" ? me$2.view = "Account" : me$2.view = i);
      } else
        ze$3.close();
      (r = me$2.data) != null && r.wallet && (me$2.data.wallet = void 0), setTimeout(() => {
        var i, n, o;
        if (s) {
          W$2.setFarcasterUrl(void 0, m.state.activeChain);
          const a = F$2.getAuthConnector();
          (i = a == null ? void 0 : a.provider) == null || i.reload();
          const c = rn$2(T$2.state);
          (o = (n = a == null ? void 0 : a.provider) == null ? void 0 : n.syncDappData) == null || o.call(n, {
            metadata: c.metadata,
            sdkVersion: c.sdkVersion,
            projectId: c.projectId,
            sdkType: c.sdkType
          });
        }
      }, 100);
    },
    goBackToIndex(t) {
      if (me$2.history.length > 1) {
        me$2.history = me$2.history.slice(0, t + 1);
        const [e] = me$2.history.slice(-1);
        e && (me$2.view = e);
      }
    },
    goBackOrCloseModal() {
      re$1.state.history.length > 1 ? re$1.goBack() : ze$3.close();
    }
  }, re$1 = At$1(Xp), rs = _e$3({
    themeMode: "dark",
    themeVariables: {},
    w3mThemeVariables: void 0
  }), ua = {
    state: rs,
    subscribe(t) {
      return Qe$1(rs, () => t(rs));
    },
    setThemeMode(t) {
      rs.themeMode = t;
      try {
        const e = F$2.getAuthConnector();
        if (e) {
          const s = ua.getSnapshot().themeVariables;
          e.provider.syncTheme({
            themeMode: t,
            themeVariables: s,
            w3mThemeVariables: Is(s, t)
          });
        }
      } catch {
        console.info("Unable to sync theme to auth connector");
      }
    },
    setThemeVariables(t) {
      rs.themeVariables = { ...rs.themeVariables, ...t };
      try {
        const e = F$2.getAuthConnector();
        if (e) {
          const s = ua.getSnapshot().themeVariables;
          e.provider.syncTheme({
            themeVariables: s,
            w3mThemeVariables: Is(rs.themeVariables, rs.themeMode)
          });
        }
      } catch {
        console.info("Unable to sync theme to auth connector");
      }
    },
    getSnapshot() {
      return rn$2(rs);
    }
  }, wt$2 = At$1(ua), Gu = {
    eip155: void 0,
    solana: void 0,
    polkadot: void 0,
    bip122: void 0,
    cosmos: void 0
  }, ae$3 = _e$3({
    allConnectors: [],
    connectors: [],
    activeConnector: void 0,
    filterByNamespace: void 0,
    activeConnectorIds: { ...Gu },
    filterByNamespaceMap: {
      eip155: true,
      solana: true,
      polkadot: true,
      bip122: true,
      cosmos: true
    }
  }), Zp = {
    state: ae$3,
    subscribe(t) {
      return Qe$1(ae$3, () => {
        t(ae$3);
      });
    },
    subscribeKey(t, e) {
      return et$2(ae$3, t, e);
    },
    initialize(t) {
      t.forEach((e) => {
        const s = q$1.getConnectedConnectorId(e);
        s && F$2.setConnectorId(s, e);
      });
    },
    setActiveConnector(t) {
      t && (ae$3.activeConnector = Zs(t));
    },
    setConnectors(t) {
      t.filter((i) => !ae$3.allConnectors.some((n) => n.id === i.id && F$2.getConnectorName(n.name) === F$2.getConnectorName(i.name) && n.chain === i.chain)).forEach((i) => {
        i.type !== "MULTI_CHAIN" && ae$3.allConnectors.push(Zs(i));
      });
      const s = F$2.getEnabledNamespaces(), r = F$2.getEnabledConnectors(s);
      ae$3.connectors = F$2.mergeMultiChainConnectors(r);
    },
    filterByNamespaces(t) {
      Object.keys(ae$3.filterByNamespaceMap).forEach((e) => {
        ae$3.filterByNamespaceMap[e] = false;
      }), t.forEach((e) => {
        ae$3.filterByNamespaceMap[e] = true;
      }), F$2.updateConnectorsForEnabledNamespaces();
    },
    filterByNamespace(t, e) {
      ae$3.filterByNamespaceMap[t] = e, F$2.updateConnectorsForEnabledNamespaces();
    },
    updateConnectorsForEnabledNamespaces() {
      const t = F$2.getEnabledNamespaces(), e = F$2.getEnabledConnectors(t), s = F$2.areAllNamespacesEnabled();
      ae$3.connectors = F$2.mergeMultiChainConnectors(e), s ? K$3.clearFilterByNamespaces() : K$3.filterByNamespaces(t);
    },
    getEnabledNamespaces() {
      return Object.entries(ae$3.filterByNamespaceMap).filter(([t, e]) => e).map(([t]) => t);
    },
    getEnabledConnectors(t) {
      return ae$3.allConnectors.filter((e) => t.includes(e.chain));
    },
    areAllNamespacesEnabled() {
      return Object.values(ae$3.filterByNamespaceMap).every((t) => t);
    },
    mergeMultiChainConnectors(t) {
      const e = F$2.generateConnectorMapByName(t), s = [];
      return e.forEach((r) => {
        const i = r[0], n = (i == null ? void 0 : i.id) === z$3.CONNECTOR_ID.AUTH;
        r.length > 1 && i ? s.push({
          name: i.name,
          imageUrl: i.imageUrl,
          imageId: i.imageId,
          connectors: [...r],
          type: n ? "AUTH" : "MULTI_CHAIN",
          // These values are just placeholders, we don't use them in multi-chain connector select screen
          chain: "eip155",
          id: (i == null ? void 0 : i.id) || ""
        }) : i && s.push(i);
      }), s;
    },
    generateConnectorMapByName(t) {
      const e = /* @__PURE__ */ new Map();
      return t.forEach((s) => {
        const { name: r } = s, i = F$2.getConnectorName(r);
        if (!i)
          return;
        const n = e.get(i) || [];
        n.find((a) => a.chain === s.chain) || n.push(s), e.set(i, n);
      }), e;
    },
    getConnectorName(t) {
      return t && ({
        "Trust Wallet": "Trust"
      }[t] || t);
    },
    getUniqueConnectorsByName(t) {
      const e = [];
      return t.forEach((s) => {
        e.find((r) => r.chain === s.chain) || e.push(s);
      }), e;
    },
    addConnector(t) {
      var e, s, r;
      if (t.id === z$3.CONNECTOR_ID.AUTH) {
        const i = t, n = rn$2(T$2.state), o = wt$2.getSnapshot().themeMode, a = wt$2.getSnapshot().themeVariables;
        (s = (e = i == null ? void 0 : i.provider) == null ? void 0 : e.syncDappData) == null || s.call(e, {
          metadata: n.metadata,
          sdkVersion: n.sdkVersion,
          projectId: n.projectId,
          sdkType: n.sdkType
        }), (r = i == null ? void 0 : i.provider) == null || r.syncTheme({
          themeMode: o,
          themeVariables: a,
          w3mThemeVariables: Is(a, o)
        }), F$2.setConnectors([t]);
      } else
        F$2.setConnectors([t]);
    },
    getAuthConnector(t) {
      var r;
      const e = t || m.state.activeChain, s = ae$3.connectors.find((i) => i.id === z$3.CONNECTOR_ID.AUTH);
      if (s)
        return (r = s == null ? void 0 : s.connectors) != null && r.length ? s.connectors.find((n) => n.chain === e) : s;
    },
    getAnnouncedConnectorRdns() {
      return ae$3.connectors.filter((t) => t.type === "ANNOUNCED").map((t) => {
        var e;
        return (e = t.info) == null ? void 0 : e.rdns;
      });
    },
    getConnectorById(t) {
      return ae$3.allConnectors.find((e) => e.id === t);
    },
    getConnector(t, e) {
      return ae$3.allConnectors.filter((r) => r.chain === m.state.activeChain).find((r) => {
        var i;
        return r.explorerId === t || ((i = r.info) == null ? void 0 : i.rdns) === e;
      });
    },
    syncIfAuthConnector(t) {
      var n, o;
      if (t.id !== "ID_AUTH")
        return;
      const e = t, s = rn$2(T$2.state), r = wt$2.getSnapshot().themeMode, i = wt$2.getSnapshot().themeVariables;
      (o = (n = e == null ? void 0 : e.provider) == null ? void 0 : n.syncDappData) == null || o.call(n, {
        metadata: s.metadata,
        sdkVersion: s.sdkVersion,
        sdkType: s.sdkType,
        projectId: s.projectId
      }), e.provider.syncTheme({
        themeMode: r,
        themeVariables: i,
        w3mThemeVariables: Is(i, r)
      });
    },
    /**
     * Returns the connectors filtered by namespace.
     * @param namespace - The namespace to filter the connectors by.
     * @returns ConnectorWithProviders[].
     */
    getConnectorsByNamespace(t) {
      const e = ae$3.allConnectors.filter((s) => s.chain === t);
      return F$2.mergeMultiChainConnectors(e);
    },
    selectWalletConnector(t) {
      const e = F$2.getConnector(t.id, t.rdns), s = m.state.activeChain;
      jp.handleMobileDeeplinkRedirect((e == null ? void 0 : e.explorerId) || t.id, s), e ? re$1.push("ConnectingExternal", { connector: e }) : re$1.push("ConnectingWalletConnect", { wallet: t });
    },
    /**
     * Returns the connectors. If a namespace is provided, the connectors are filtered by namespace.
     * @param namespace - The namespace to filter the connectors by. If not provided, all connectors are returned.
     * @returns ConnectorWithProviders[].
     */
    getConnectors(t) {
      return t ? F$2.getConnectorsByNamespace(t) : F$2.mergeMultiChainConnectors(ae$3.allConnectors);
    },
    /**
     * Sets the filter by namespace and updates the connectors.
     * @param namespace - The namespace to filter the connectors by.
     */
    setFilterByNamespace(t) {
      ae$3.filterByNamespace = t, ae$3.connectors = F$2.getConnectors(t), K$3.setFilterByNamespace(t);
    },
    setConnectorId(t, e) {
      t && (ae$3.activeConnectorIds = {
        ...ae$3.activeConnectorIds,
        [e]: t
      }, q$1.setConnectedConnectorId(e, t));
    },
    removeConnectorId(t) {
      ae$3.activeConnectorIds = {
        ...ae$3.activeConnectorIds,
        [t]: void 0
      }, q$1.deleteConnectedConnectorId(t);
    },
    getConnectorId(t) {
      if (t)
        return ae$3.activeConnectorIds[t];
    },
    isConnected(t) {
      return t ? !!ae$3.activeConnectorIds[t] : Object.values(ae$3.activeConnectorIds).some((e) => !!e);
    },
    resetConnectorIds() {
      ae$3.activeConnectorIds = { ...Gu };
    }
  }, F$2 = At$1(Zp);
  typeof process < "u" && typeof process.env < "u" && process.env.NEXT_PUBLIC_SECURE_SITE_SDK_URL;
  typeof process < "u" && typeof process.env < "u" && process.env.NEXT_PUBLIC_DEFAULT_LOG_LEVEL;
  typeof process < "u" && typeof process.env < "u" && process.env.NEXT_PUBLIC_SECURE_SITE_SDK_VERSION;
  const _i$1 = {
    ACCOUNT_TYPES: {
      SMART_ACCOUNT: "smartAccount"
    }
  }, Ms = Object.freeze({
    message: "",
    variant: "success",
    svg: void 0,
    open: false,
    autoClose: true
  }), Ue$3 = _e$3({
    ...Ms
  }), ef = {
    state: Ue$3,
    subscribeKey(t, e) {
      return et$2(Ue$3, t, e);
    },
    showLoading(t, e = {}) {
      this._showMessage({ message: t, variant: "loading", ...e });
    },
    showSuccess(t) {
      this._showMessage({ message: t, variant: "success" });
    },
    showSvg(t, e) {
      this._showMessage({ message: t, svg: e });
    },
    showError(t) {
      const e = X$3.parseError(t);
      this._showMessage({ message: e, variant: "error" });
    },
    hide() {
      Ue$3.message = Ms.message, Ue$3.variant = Ms.variant, Ue$3.svg = Ms.svg, Ue$3.open = Ms.open, Ue$3.autoClose = Ms.autoClose;
    },
    _showMessage({ message: t, svg: e, variant: s = "success", autoClose: r = Ms.autoClose }) {
      Ue$3.open ? (Ue$3.open = false, setTimeout(() => {
        Ue$3.message = t, Ue$3.variant = s, Ue$3.svg = e, Ue$3.open = true, Ue$3.autoClose = r;
      }, 150)) : (Ue$3.message = t, Ue$3.variant = s, Ue$3.svg = e, Ue$3.open = true, Ue$3.autoClose = r);
    }
  }, Bt$2 = ef, Ie$3 = _e$3({
    transactions: [],
    coinbaseTransactions: {},
    transactionsByYear: {},
    lastNetworkInView: void 0,
    loading: false,
    empty: false,
    next: void 0
  }), tf = {
    state: Ie$3,
    subscribe(t) {
      return Qe$1(Ie$3, () => t(Ie$3));
    },
    setLastNetworkInView(t) {
      Ie$3.lastNetworkInView = t;
    },
    async fetchTransactions(t, e) {
      var s, r;
      if (!t)
        throw new Error("Transactions can't be fetched without an accountAddress");
      Ie$3.loading = true;
      try {
        const i = await J$3.fetchTransactions({
          account: t,
          cursor: Ie$3.next,
          onramp: e,
          // Coinbase transaction history state updates require the latest data
          cache: e === "coinbase" ? "no-cache" : void 0,
          chainId: (s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId
        }), n = Ei$1.filterSpamTransactions(i.data), o = Ei$1.filterByConnectedChain(n), a = [...Ie$3.transactions, ...o];
        Ie$3.loading = !1, e === "coinbase" ? Ie$3.coinbaseTransactions = Ei$1.groupTransactionsByYearAndMonth(Ie$3.coinbaseTransactions, i.data) : (Ie$3.transactions = a, Ie$3.transactionsByYear = Ei$1.groupTransactionsByYearAndMonth(Ie$3.transactionsByYear, o)), Ie$3.empty = a.length === 0, Ie$3.next = i.next ? i.next : void 0;
      } catch {
        const n = m.state.activeChain;
        Pe$3.sendEvent({
          type: "track",
          event: "ERROR_FETCH_TRANSACTIONS",
          properties: {
            address: t,
            projectId: T$2.state.projectId,
            cursor: Ie$3.next,
            isSmartAccount: ((r = W$2.state.preferredAccountTypes) == null ? void 0 : r[n]) === _i$1.ACCOUNT_TYPES.SMART_ACCOUNT
          }
        }), Bt$2.showError("Failed to fetch transactions"), Ie$3.loading = false, Ie$3.empty = true, Ie$3.next = void 0;
      }
    },
    groupTransactionsByYearAndMonth(t = {}, e = []) {
      const s = t;
      return e.forEach((r) => {
        const i = new Date(r.metadata.minedAt).getFullYear(), n = new Date(r.metadata.minedAt).getMonth(), o = s[i] ?? {}, c = (o[n] ?? []).filter((l) => l.id !== r.id);
        s[i] = {
          ...o,
          [n]: [...c, r].sort((l, u) => new Date(u.metadata.minedAt).getTime() - new Date(l.metadata.minedAt).getTime())
        };
      }), s;
    },
    filterSpamTransactions(t) {
      return t.filter((e) => !e.transfers.every((r) => {
        var i;
        return ((i = r.nft_info) == null ? void 0 : i.flags.is_spam) === true;
      }));
    },
    filterByConnectedChain(t) {
      var r;
      const e = (r = m.state.activeCaipNetwork) == null ? void 0 : r.caipNetworkId;
      return t.filter((i) => i.metadata.chain === e);
    },
    clearCursor() {
      Ie$3.next = void 0;
    },
    resetTransactions() {
      Ie$3.transactions = [], Ie$3.transactionsByYear = {}, Ie$3.lastNetworkInView = void 0, Ie$3.loading = false, Ie$3.empty = false, Ie$3.next = void 0;
    }
  }, Ei$1 = At$1(tf, "API_ERROR"), ye$2 = _e$3({
    connections: /* @__PURE__ */ new Map(),
    wcError: false,
    buffering: false,
    status: "disconnected"
  });
  let Rs;
  const sf = {
    state: ye$2,
    subscribeKey(t, e) {
      return et$2(ye$2, t, e);
    },
    _getClient() {
      return ye$2._client;
    },
    setClient(t) {
      ye$2._client = Zs(t);
    },
    async connectWalletConnect() {
      var t, e, s, r;
      if (X$3.isTelegram() || X$3.isSafari() && X$3.isIos()) {
        if (Rs) {
          await Rs, Rs = void 0;
          return;
        }
        if (!X$3.isPairingExpired(ye$2 == null ? void 0 : ye$2.wcPairingExpiry)) {
          const i = ye$2.wcUri;
          ye$2.wcUri = i;
          return;
        }
        Rs = (e = (t = Y$1._getClient()) == null ? void 0 : t.connectWalletConnect) == null ? void 0 : e.call(t).catch(() => {
        }), Y$1.state.status = "connecting", await Rs, Rs = void 0, ye$2.wcPairingExpiry = void 0, Y$1.state.status = "connected";
      } else
        await ((r = (s = Y$1._getClient()) == null ? void 0 : s.connectWalletConnect) == null ? void 0 : r.call(s));
    },
    async connectExternal(t, e, s = true) {
      var r, i;
      await ((i = (r = Y$1._getClient()) == null ? void 0 : r.connectExternal) == null ? void 0 : i.call(r, t)), s && m.setActiveNamespace(e);
    },
    async reconnectExternal(t) {
      var s, r;
      await ((r = (s = Y$1._getClient()) == null ? void 0 : s.reconnectExternal) == null ? void 0 : r.call(s, t));
      const e = t.chain || m.state.activeChain;
      e && F$2.setConnectorId(t.id, e);
    },
    async setPreferredAccountType(t, e) {
      var r;
      ze$3.setLoading(true, m.state.activeChain);
      const s = F$2.getAuthConnector();
      s && (W$2.setPreferredAccountType(t, e), await s.provider.setPreferredAccount(t), q$1.setPreferredAccountTypes(W$2.state.preferredAccountTypes ?? { [e]: t }), await Y$1.reconnectExternal(s), ze$3.setLoading(false, m.state.activeChain), Pe$3.sendEvent({
        type: "track",
        event: "SET_PREFERRED_ACCOUNT_TYPE",
        properties: {
          accountType: t,
          network: ((r = m.state.activeCaipNetwork) == null ? void 0 : r.caipNetworkId) || ""
        }
      }));
    },
    async signMessage(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.signMessage(t);
    },
    parseUnits(t, e) {
      var s;
      return (s = Y$1._getClient()) == null ? void 0 : s.parseUnits(t, e);
    },
    formatUnits(t, e) {
      var s;
      return (s = Y$1._getClient()) == null ? void 0 : s.formatUnits(t, e);
    },
    async sendTransaction(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.sendTransaction(t);
    },
    async getCapabilities(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.getCapabilities(t);
    },
    async grantPermissions(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.grantPermissions(t);
    },
    async walletGetAssets(t) {
      var e;
      return ((e = Y$1._getClient()) == null ? void 0 : e.walletGetAssets(t)) ?? {};
    },
    async estimateGas(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.estimateGas(t);
    },
    async writeContract(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.writeContract(t);
    },
    async getEnsAddress(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.getEnsAddress(t);
    },
    async getEnsAvatar(t) {
      var e;
      return (e = Y$1._getClient()) == null ? void 0 : e.getEnsAvatar(t);
    },
    checkInstalled(t) {
      var e, s;
      return ((s = (e = Y$1._getClient()) == null ? void 0 : e.checkInstalled) == null ? void 0 : s.call(e, t)) || false;
    },
    resetWcConnection() {
      ye$2.wcUri = void 0, ye$2.wcPairingExpiry = void 0, ye$2.wcLinking = void 0, ye$2.recentWallet = void 0, ye$2.status = "disconnected", Ei$1.resetTransactions(), q$1.deleteWalletConnectDeepLink();
    },
    resetUri() {
      ye$2.wcUri = void 0, ye$2.wcPairingExpiry = void 0, Rs = void 0;
    },
    finalizeWcConnection() {
      var s, r;
      const { wcLinking: t, recentWallet: e } = Y$1.state;
      t && q$1.setWalletConnectDeepLink(t), e && q$1.setAppKitRecent(e), Pe$3.sendEvent({
        type: "track",
        event: "CONNECT_SUCCESS",
        properties: {
          method: t ? "mobile" : "qrcode",
          name: ((r = (s = re$1.state.data) == null ? void 0 : s.wallet) == null ? void 0 : r.name) || "Unknown"
        }
      });
    },
    setWcBasic(t) {
      ye$2.wcBasic = t;
    },
    setUri(t) {
      ye$2.wcUri = t, ye$2.wcPairingExpiry = X$3.getPairingExpiry();
    },
    setWcLinking(t) {
      ye$2.wcLinking = t;
    },
    setWcError(t) {
      ye$2.wcError = t, ye$2.buffering = false;
    },
    setRecentWallet(t) {
      ye$2.recentWallet = t;
    },
    setBuffering(t) {
      ye$2.buffering = t;
    },
    setStatus(t) {
      ye$2.status = t;
    },
    async disconnect(t) {
      var e;
      try {
        await ((e = Y$1._getClient()) == null ? void 0 : e.disconnect(t));
      } catch (s) {
        throw new Wr("Failed to disconnect", "INTERNAL_SDK_ERROR", s);
      }
    },
    setConnections(t, e) {
      ye$2.connections.set(e, t);
    },
    switchAccount({ connection: t, address: e, namespace: s }) {
      if (F$2.state.activeConnectorIds[s] === t.connectorId) {
        const n = m.state.activeCaipNetwork;
        if (n) {
          const o = `${s}:${n.id}:${e}`;
          W$2.setCaipAddress(o, s);
        } else
          console.warn(`No current network found for namespace "${s}"`);
      } else {
        const n = F$2.getConnector(t.connectorId);
        n ? Y$1.connectExternal(n, s) : console.warn(`No connector found for namespace "${s}"`);
      }
    }
  }, Y$1 = At$1(sf), dr = _e$3({
    loading: false,
    open: false,
    selectedNetworkId: void 0,
    activeChain: void 0,
    initialized: false
  }), Ns = {
    state: dr,
    subscribe(t) {
      return Qe$1(dr, () => t(dr));
    },
    subscribeOpen(t) {
      return et$2(dr, "open", t);
    },
    set(t) {
      Object.assign(dr, { ...dr, ...t });
    }
  }, Oo = {
    /**
     * Creates a Balance object from an ERC7811 Asset object
     * @param asset - Asset object to convert
     * @param chainId - Chain ID in CAIP-2 format
     * @returns Balance object
     */
    createBalance(t, e) {
      const s = {
        name: t.metadata.name || "",
        symbol: t.metadata.symbol || "",
        decimals: t.metadata.decimals || 0,
        value: t.metadata.value || 0,
        price: t.metadata.price || 0,
        iconUrl: t.metadata.iconUrl || ""
      };
      return {
        name: s.name,
        symbol: s.symbol,
        chainId: e,
        address: t.address === "native" ? void 0 : this.convertAddressToCAIP10Address(t.address, e),
        value: s.value,
        price: s.price,
        quantity: {
          decimals: s.decimals.toString(),
          numeric: this.convertHexToBalance({
            hex: t.balance,
            decimals: s.decimals
          })
        },
        iconUrl: s.iconUrl
      };
    },
    /**
     * Converts a hex string to a Balance object
     * @param hex - Hex string to convert
     * @param decimals - Number of decimals to use
     * @returns Balance object
     */
    convertHexToBalance({ hex: t, decimals: e }) {
      return Zh(BigInt(t), e);
    },
    /**
     * Converts an address to a CAIP-10 address
     * @param address - Address to convert
     * @param chainId - Chain ID in CAIP-2 format
     * @returns CAIP-10 address
     */
    convertAddressToCAIP10Address(t, e) {
      return `${e}:${t}`;
    },
    /**
     *  Creates a CAIP-2 Chain ID from a chain ID and namespace
     * @param chainId  - Chain ID in hex format
     * @param namespace  - Chain namespace
     * @returns
     */
    createCAIP2ChainId(t, e) {
      return `${e}:${parseInt(t, 16)}`;
    },
    /**
     * Gets the chain ID in hex format from a CAIP-2 Chain ID
     * @param caip2ChainId - CAIP-2 Chain ID
     * @returns Chain ID in hex format
     */
    getChainIdHexFromCAIP2ChainId(t) {
      const e = t.split(":");
      if (e.length < 2 || !e[1])
        return "0x0";
      const s = e[1], r = parseInt(s, 10);
      return isNaN(r) ? "0x0" : `0x${r.toString(16)}`;
    },
    /**
     * Checks if a response is a valid WalletGetAssetsResponse
     * @param response - The response to check
     * @returns True if the response is a valid WalletGetAssetsResponse, false otherwise
     */
    isWalletGetAssetsResponse(t) {
      return typeof t != "object" || t === null ? false : Object.values(t).every((e) => Array.isArray(e) && e.every((s) => this.isValidAsset(s)));
    },
    /**
     * Checks if an asset object is valid.
     * @param asset - The asset object to check.
     * @returns True if the asset is valid, false otherwise.
     */
    isValidAsset(t) {
      return typeof t == "object" && t !== null && typeof t.address == "string" && typeof t.balance == "string" && (t.type === "ERC20" || t.type === "NATIVE") && typeof t.metadata == "object" && t.metadata !== null && typeof t.metadata.name == "string" && typeof t.metadata.symbol == "string" && typeof t.metadata.decimals == "number" && typeof t.metadata.price == "number" && typeof t.metadata.iconUrl == "string";
    }
  }, Nc = {
    async getMyTokensWithBalance(t) {
      const e = W$2.state.address, s = m.state.activeCaipNetwork;
      if (!e || !s)
        return [];
      if (s.chainNamespace === "eip155") {
        const i = await this.getEIP155Balances(e, s);
        if (i)
          return this.filterLowQualityTokens(i);
      }
      const r = await J$3.getBalance(e, s.caipNetworkId, t);
      return this.filterLowQualityTokens(r.balances);
    },
    async getEIP155Balances(t, e) {
      var s, r;
      try {
        const i = Oo.getChainIdHexFromCAIP2ChainId(e.caipNetworkId), n = await Y$1.getCapabilities(t);
        if (!((r = (s = n == null ? void 0 : n[i]) == null ? void 0 : s.assetDiscovery) != null && r.supported))
          return null;
        const o = await Y$1.walletGetAssets({
          account: t,
          chainFilter: [i]
        });
        return Oo.isWalletGetAssetsResponse(o) ? (o[i] || []).map((c) => Oo.createBalance(c, e.caipNetworkId)) : null;
      } catch {
        return null;
      }
    },
    /**
     * The 1Inch API includes many low-quality tokens in the balance response,
     * which appear inconsistently. This filter prevents them from being displayed.
     */
    filterLowQualityTokens(t) {
      return t.filter((e) => e.quantity.decimals !== "0");
    },
    mapBalancesToSwapTokens(t) {
      return (t == null ? void 0 : t.map((e) => ({
        ...e,
        address: e != null && e.address ? e.address : m.getActiveNetworkTokenAddress(),
        decimals: parseInt(e.quantity.decimals, 10),
        logoUri: e.iconUrl,
        eip2612: false
      }))) || [];
    }
  }, fe$2 = _e$3({
    tokenBalances: [],
    loading: false
  }), rf = {
    state: fe$2,
    subscribe(t) {
      return Qe$1(fe$2, () => t(fe$2));
    },
    subscribeKey(t, e) {
      return et$2(fe$2, t, e);
    },
    setToken(t) {
      t && (fe$2.token = Zs(t));
    },
    setTokenAmount(t) {
      fe$2.sendTokenAmount = t;
    },
    setReceiverAddress(t) {
      fe$2.receiverAddress = t;
    },
    setReceiverProfileImageUrl(t) {
      fe$2.receiverProfileImageUrl = t;
    },
    setReceiverProfileName(t) {
      fe$2.receiverProfileName = t;
    },
    setNetworkBalanceInUsd(t) {
      fe$2.networkBalanceInUSD = t;
    },
    setLoading(t) {
      fe$2.loading = t;
    },
    async sendToken() {
      var t;
      try {
        switch (de$1.setLoading(!0), (t = m.state.activeCaipNetwork) == null ? void 0 : t.chainNamespace) {
          case "eip155":
            await de$1.sendEvmToken();
            return;
          case "solana":
            await de$1.sendSolanaToken();
            return;
          default:
            throw new Error("Unsupported chain");
        }
      } finally {
        de$1.setLoading(false);
      }
    },
    async sendEvmToken() {
      var s, r, i, n;
      const t = m.state.activeChain, e = (s = W$2.state.preferredAccountTypes) == null ? void 0 : s[t];
      if (!de$1.state.sendTokenAmount || !de$1.state.receiverAddress)
        throw new Error("An amount and receiver address are required");
      if (!de$1.state.token)
        throw new Error("A token is required");
      (r = de$1.state.token) != null && r.address ? (Pe$3.sendEvent({
        type: "track",
        event: "SEND_INITIATED",
        properties: {
          isSmartAccount: e === _i$1.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: de$1.state.token.address,
          amount: de$1.state.sendTokenAmount,
          network: ((i = m.state.activeCaipNetwork) == null ? void 0 : i.caipNetworkId) || ""
        }
      }), await de$1.sendERC20Token({
        receiverAddress: de$1.state.receiverAddress,
        tokenAddress: de$1.state.token.address,
        sendTokenAmount: de$1.state.sendTokenAmount,
        decimals: de$1.state.token.quantity.decimals
      })) : (Pe$3.sendEvent({
        type: "track",
        event: "SEND_INITIATED",
        properties: {
          isSmartAccount: e === _i$1.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: de$1.state.token.symbol || "",
          amount: de$1.state.sendTokenAmount,
          network: ((n = m.state.activeCaipNetwork) == null ? void 0 : n.caipNetworkId) || ""
        }
      }), await de$1.sendNativeToken({
        receiverAddress: de$1.state.receiverAddress,
        sendTokenAmount: de$1.state.sendTokenAmount,
        decimals: de$1.state.token.quantity.decimals
      }));
    },
    async fetchTokenBalance(t) {
      var n, o;
      fe$2.loading = true;
      const e = (n = m.state.activeCaipNetwork) == null ? void 0 : n.caipNetworkId, s = (o = m.state.activeCaipNetwork) == null ? void 0 : o.chainNamespace, r = m.state.activeCaipAddress, i = r ? X$3.getPlainAddress(r) : void 0;
      if (fe$2.lastRetry && !X$3.isAllowedRetry(fe$2.lastRetry, 30 * Ee$3.ONE_SEC_MS))
        return fe$2.loading = false, [];
      try {
        if (i && e && s) {
          const a = await Nc.getMyTokensWithBalance();
          return fe$2.tokenBalances = a, fe$2.lastRetry = void 0, a;
        }
      } catch (a) {
        fe$2.lastRetry = Date.now(), t == null || t(a), Bt$2.showError("Token Balance Unavailable");
      } finally {
        fe$2.loading = false;
      }
      return [];
    },
    fetchNetworkBalance() {
      if (fe$2.tokenBalances.length === 0)
        return;
      const t = Nc.mapBalancesToSwapTokens(fe$2.tokenBalances);
      if (!t)
        return;
      const e = t.find((s) => s.address === m.getActiveNetworkTokenAddress());
      e && (fe$2.networkBalanceInUSD = e ? Ip.multiply(e.quantity.numeric, e.price).toString() : "0");
    },
    async sendNativeToken(t) {
      var n, o, a, c;
      re$1.pushTransactionStack({});
      const e = t.receiverAddress, s = W$2.state.address, r = Y$1.parseUnits(t.sendTokenAmount.toString(), Number(t.decimals));
      await Y$1.sendTransaction({
        chainNamespace: "eip155",
        to: e,
        address: s,
        data: "0x",
        value: r ?? BigInt(0)
      }), Pe$3.sendEvent({
        type: "track",
        event: "SEND_SUCCESS",
        properties: {
          isSmartAccount: ((n = W$2.state.preferredAccountTypes) == null ? void 0 : n.eip155) === _i$1.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: ((o = de$1.state.token) == null ? void 0 : o.symbol) || "",
          amount: t.sendTokenAmount,
          network: ((a = m.state.activeCaipNetwork) == null ? void 0 : a.caipNetworkId) || ""
        }
      }), (c = Y$1._getClient()) == null || c.updateBalance("eip155"), de$1.resetSend();
    },
    async sendERC20Token(t) {
      re$1.pushTransactionStack({
        onSuccess() {
          re$1.replace("Account");
        }
      });
      const e = Y$1.parseUnits(t.sendTokenAmount.toString(), Number(t.decimals));
      if (W$2.state.address && t.sendTokenAmount && t.receiverAddress && t.tokenAddress) {
        const s = X$3.getPlainAddress(t.tokenAddress);
        await Y$1.writeContract({
          fromAddress: W$2.state.address,
          tokenAddress: s,
          args: [t.receiverAddress, e ?? BigInt(0)],
          method: "transfer",
          abi: Sp.getERC20Abi(s),
          chainNamespace: "eip155"
        }), de$1.resetSend();
      }
    },
    async sendSolanaToken() {
      var t;
      if (!de$1.state.sendTokenAmount || !de$1.state.receiverAddress)
        throw new Error("An amount and receiver address are required");
      re$1.pushTransactionStack({
        onSuccess() {
          re$1.replace("Account");
        }
      }), await Y$1.sendTransaction({
        chainNamespace: "solana",
        to: de$1.state.receiverAddress,
        value: de$1.state.sendTokenAmount
      }), (t = Y$1._getClient()) == null || t.updateBalance("solana"), de$1.resetSend();
    },
    resetSend() {
      fe$2.token = void 0, fe$2.sendTokenAmount = void 0, fe$2.receiverAddress = void 0, fe$2.receiverProfileImageUrl = void 0, fe$2.receiverProfileName = void 0, fe$2.loading = false, fe$2.tokenBalances = [];
    }
  }, de$1 = At$1(rf), To$1 = {
    currentTab: 0,
    tokenBalance: [],
    smartAccountDeployed: false,
    addressLabels: /* @__PURE__ */ new Map(),
    allAccounts: [],
    user: void 0
  }, kn$1 = {
    caipNetwork: void 0,
    supportsAllNetworks: true,
    smartAccountEnabledNetworks: []
  }, M$3 = _e$3({
    chains: $p(),
    activeCaipAddress: void 0,
    activeChain: void 0,
    activeCaipNetwork: void 0,
    noAdapters: false,
    universalAdapter: {
      networkControllerClient: void 0,
      connectionControllerClient: void 0
    },
    isSwitchingNamespace: false
  }), nf = {
    state: M$3,
    subscribe(t) {
      return Qe$1(M$3, () => {
        t(M$3);
      });
    },
    subscribeKey(t, e) {
      return et$2(M$3, t, e);
    },
    subscribeChainProp(t, e, s) {
      let r;
      return Qe$1(M$3.chains, () => {
        var n;
        const i = s || M$3.activeChain;
        if (i) {
          const o = (n = M$3.chains.get(i)) == null ? void 0 : n[t];
          r !== o && (r = o, e(o));
        }
      });
    },
    initialize(t, e, s) {
      const { chainId: r, namespace: i } = q$1.getActiveNetworkProps(), n = e == null ? void 0 : e.find((u) => u.id.toString() === (r == null ? void 0 : r.toString())), a = t.find((u) => (u == null ? void 0 : u.namespace) === i) || (t == null ? void 0 : t[0]), c = t.map((u) => u.namespace).filter((u) => u !== void 0), l = T$2.state.enableEmbedded ? /* @__PURE__ */ new Set([...c]) : /* @__PURE__ */ new Set([...(e == null ? void 0 : e.map((u) => u.chainNamespace)) ?? []]);
      ((t == null ? void 0 : t.length) === 0 || !a) && (M$3.noAdapters = true), M$3.noAdapters || (M$3.activeChain = a == null ? void 0 : a.namespace, M$3.activeCaipNetwork = n, m.setChainNetworkData(a == null ? void 0 : a.namespace, {
        caipNetwork: n
      }), M$3.activeChain && Ns.set({ activeChain: a == null ? void 0 : a.namespace })), l.forEach((u) => {
        const d = e == null ? void 0 : e.filter((h) => h.chainNamespace === u);
        m.state.chains.set(u, {
          namespace: u,
          networkState: _e$3({
            ...kn$1,
            caipNetwork: d == null ? void 0 : d[0]
          }),
          accountState: _e$3(To$1),
          caipNetworks: d ?? [],
          ...s
        }), m.setRequestedCaipNetworks(d ?? [], u);
      });
    },
    removeAdapter(t) {
      var e, s;
      if (M$3.activeChain === t) {
        const r = Array.from(M$3.chains.entries()).find(([i]) => i !== t);
        if (r) {
          const i = (s = (e = r[1]) == null ? void 0 : e.caipNetworks) == null ? void 0 : s[0];
          i && m.setActiveCaipNetwork(i);
        }
      }
      M$3.chains.delete(t);
    },
    addAdapter(t, { networkControllerClient: e, connectionControllerClient: s }, r) {
      M$3.chains.set(t.namespace, {
        namespace: t.namespace,
        networkState: {
          ...kn$1,
          caipNetwork: r[0]
        },
        accountState: To$1,
        caipNetworks: r,
        connectionControllerClient: s,
        networkControllerClient: e
      }), m.setRequestedCaipNetworks((r == null ? void 0 : r.filter((i) => i.chainNamespace === t.namespace)) ?? [], t.namespace);
    },
    addNetwork(t) {
      var s;
      const e = M$3.chains.get(t.chainNamespace);
      if (e) {
        const r = [...e.caipNetworks || []];
        (s = e.caipNetworks) != null && s.find((i) => i.id === t.id) || r.push(t), M$3.chains.set(t.chainNamespace, { ...e, caipNetworks: r }), m.setRequestedCaipNetworks(r, t.chainNamespace), F$2.filterByNamespace(t.chainNamespace, true);
      }
    },
    removeNetwork(t, e) {
      var r, i, n;
      const s = M$3.chains.get(t);
      if (s) {
        const o = ((r = M$3.activeCaipNetwork) == null ? void 0 : r.id) === e, a = [
          ...((i = s.caipNetworks) == null ? void 0 : i.filter((c) => c.id !== e)) || []
        ];
        o && ((n = s == null ? void 0 : s.caipNetworks) != null && n[0]) && m.setActiveCaipNetwork(s.caipNetworks[0]), M$3.chains.set(t, { ...s, caipNetworks: a }), m.setRequestedCaipNetworks(a || [], t), a.length === 0 && F$2.filterByNamespace(t, false);
      }
    },
    setAdapterNetworkState(t, e) {
      const s = M$3.chains.get(t);
      s && (s.networkState = {
        ...s.networkState || kn$1,
        ...e
      }, M$3.chains.set(t, s));
    },
    setChainAccountData(t, e, s = true) {
      if (!t)
        throw new Error("Chain is required to update chain account data");
      const r = M$3.chains.get(t);
      if (r) {
        const i = { ...r.accountState || To$1, ...e };
        M$3.chains.set(t, { ...r, accountState: i }), (M$3.chains.size === 1 || M$3.activeChain === t) && (e.caipAddress && (M$3.activeCaipAddress = e.caipAddress), W$2.replaceState(i));
      }
    },
    setChainNetworkData(t, e) {
      if (!t)
        return;
      const s = M$3.chains.get(t);
      if (s) {
        const r = { ...s.networkState || kn$1, ...e };
        M$3.chains.set(t, { ...s, networkState: r });
      }
    },
    // eslint-disable-next-line max-params
    setAccountProp(t, e, s, r = true) {
      m.setChainAccountData(s, { [t]: e }, r), t === "status" && e === "disconnected" && s && F$2.removeConnectorId(s);
    },
    setActiveNamespace(t) {
      var r, i;
      M$3.activeChain = t;
      const e = t ? M$3.chains.get(t) : void 0, s = (r = e == null ? void 0 : e.networkState) == null ? void 0 : r.caipNetwork;
      s != null && s.id && t && (M$3.activeCaipAddress = (i = e == null ? void 0 : e.accountState) == null ? void 0 : i.caipAddress, M$3.activeCaipNetwork = s, m.setChainNetworkData(t, { caipNetwork: s }), q$1.setActiveCaipNetworkId(s == null ? void 0 : s.caipNetworkId), Ns.set({
        activeChain: t,
        selectedNetworkId: s == null ? void 0 : s.caipNetworkId
      }));
    },
    setActiveCaipNetwork(t) {
      var r, i, n;
      if (!t)
        return;
      M$3.activeChain !== t.chainNamespace && m.setIsSwitchingNamespace(true);
      const e = M$3.chains.get(t.chainNamespace);
      M$3.activeChain = t.chainNamespace, M$3.activeCaipNetwork = t, m.setChainNetworkData(t.chainNamespace, { caipNetwork: t }), (r = e == null ? void 0 : e.accountState) != null && r.address ? M$3.activeCaipAddress = `${t.chainNamespace}:${t.id}:${(i = e == null ? void 0 : e.accountState) == null ? void 0 : i.address}` : M$3.activeCaipAddress = void 0, m.setAccountProp("caipAddress", M$3.activeCaipAddress, t.chainNamespace), e && W$2.replaceState(e.accountState), de$1.resetSend(), Ns.set({
        activeChain: M$3.activeChain,
        selectedNetworkId: (n = M$3.activeCaipNetwork) == null ? void 0 : n.caipNetworkId
      }), q$1.setActiveCaipNetworkId(t.caipNetworkId), !m.checkIfSupportedNetwork(t.chainNamespace) && T$2.state.enableNetworkSwitch && !T$2.state.allowUnsupportedChain && !Y$1.state.wcBasic && m.showUnsupportedChainUI();
    },
    addCaipNetwork(t) {
      var s;
      if (!t)
        return;
      const e = M$3.chains.get(t.chainNamespace);
      e && ((s = e == null ? void 0 : e.caipNetworks) == null || s.push(t));
    },
    async switchActiveNamespace(t) {
      var i;
      if (!t)
        return;
      const e = t !== m.state.activeChain, s = (i = m.getNetworkData(t)) == null ? void 0 : i.caipNetwork, r = m.getCaipNetworkByNamespace(t, s == null ? void 0 : s.id);
      e && r && await m.switchActiveNetwork(r);
    },
    async switchActiveNetwork(t) {
      var i;
      const e = m.state.chains.get(m.state.activeChain), s = !((i = e == null ? void 0 : e.caipNetworks) != null && i.some((n) => {
        var o;
        return n.id === ((o = M$3.activeCaipNetwork) == null ? void 0 : o.id);
      })), r = m.getNetworkControllerClient(t.chainNamespace);
      if (r) {
        try {
          await r.switchCaipNetwork(t), s && ze$3.close();
        } catch {
          re$1.goBack();
        }
        Pe$3.sendEvent({
          type: "track",
          event: "SWITCH_NETWORK",
          properties: { network: t.caipNetworkId }
        });
      }
    },
    getNetworkControllerClient(t) {
      const e = t || M$3.activeChain, s = M$3.chains.get(e);
      if (!s)
        throw new Error("Chain adapter not found");
      if (!s.networkControllerClient)
        throw new Error("NetworkController client not set");
      return s.networkControllerClient;
    },
    getConnectionControllerClient(t) {
      const e = t || M$3.activeChain;
      if (!e)
        throw new Error("Chain is required to get connection controller client");
      const s = M$3.chains.get(e);
      if (!(s != null && s.connectionControllerClient))
        throw new Error("ConnectionController client not set");
      return s.connectionControllerClient;
    },
    getAccountProp(t, e) {
      var i;
      let s = M$3.activeChain;
      if (e && (s = e), !s)
        return;
      const r = (i = M$3.chains.get(s)) == null ? void 0 : i.accountState;
      if (r)
        return r[t];
    },
    getNetworkProp(t, e) {
      var r;
      const s = (r = M$3.chains.get(e)) == null ? void 0 : r.networkState;
      if (s)
        return s[t];
    },
    getRequestedCaipNetworks(t) {
      const e = M$3.chains.get(t), { approvedCaipNetworkIds: s = [], requestedCaipNetworks: r = [] } = (e == null ? void 0 : e.networkState) || {};
      return X$3.sortRequestedNetworks(s, r);
    },
    getAllRequestedCaipNetworks() {
      const t = [];
      return M$3.chains.forEach((e) => {
        const s = m.getRequestedCaipNetworks(e.namespace);
        t.push(...s);
      }), t;
    },
    setRequestedCaipNetworks(t, e) {
      m.setAdapterNetworkState(e, { requestedCaipNetworks: t });
      const r = m.getAllRequestedCaipNetworks().map((n) => n.chainNamespace), i = Array.from(new Set(r));
      F$2.filterByNamespaces(i);
    },
    getAllApprovedCaipNetworkIds() {
      const t = [];
      return M$3.chains.forEach((e) => {
        const s = m.getApprovedCaipNetworkIds(e.namespace);
        t.push(...s);
      }), t;
    },
    getActiveCaipNetwork() {
      return M$3.activeCaipNetwork;
    },
    getActiveCaipAddress() {
      return M$3.activeCaipAddress;
    },
    getApprovedCaipNetworkIds(t) {
      var r;
      const e = M$3.chains.get(t);
      return ((r = e == null ? void 0 : e.networkState) == null ? void 0 : r.approvedCaipNetworkIds) || [];
    },
    async setApprovedCaipNetworksData(t) {
      const e = m.getNetworkControllerClient(), s = await (e == null ? void 0 : e.getApprovedCaipNetworksData());
      m.setAdapterNetworkState(t, {
        approvedCaipNetworkIds: s == null ? void 0 : s.approvedCaipNetworkIds,
        supportsAllNetworks: s == null ? void 0 : s.supportsAllNetworks
      });
    },
    checkIfSupportedNetwork(t, e) {
      const s = e || M$3.activeCaipNetwork, r = m.getRequestedCaipNetworks(t);
      return r.length ? r == null ? void 0 : r.some((i) => i.id === (s == null ? void 0 : s.id)) : true;
    },
    checkIfSupportedChainId(t) {
      if (!M$3.activeChain)
        return true;
      const e = m.getRequestedCaipNetworks(M$3.activeChain);
      return e == null ? void 0 : e.some((s) => s.id === t);
    },
    // Smart Account Network Handlers
    setSmartAccountEnabledNetworks(t, e) {
      m.setAdapterNetworkState(e, { smartAccountEnabledNetworks: t });
    },
    checkIfSmartAccountEnabled() {
      var r;
      const t = Wu.caipNetworkIdToNumber((r = M$3.activeCaipNetwork) == null ? void 0 : r.caipNetworkId), e = M$3.activeChain;
      if (!e || !t)
        return false;
      const s = m.getNetworkProp("smartAccountEnabledNetworks", e);
      return !!(s != null && s.includes(Number(t)));
    },
    getActiveNetworkTokenAddress() {
      var r, i;
      const t = ((r = M$3.activeCaipNetwork) == null ? void 0 : r.chainNamespace) || "eip155", e = ((i = M$3.activeCaipNetwork) == null ? void 0 : i.id) || 1, s = Ee$3.NATIVE_TOKEN_ADDRESS[t];
      return `${t}:${e}:${s}`;
    },
    showUnsupportedChainUI() {
      ze$3.open({ view: "UnsupportedChain" });
    },
    checkIfNamesSupported() {
      const t = M$3.activeCaipNetwork;
      return !!(t != null && t.chainNamespace && Ee$3.NAMES_SUPPORTED_CHAIN_NAMESPACES.includes(t.chainNamespace));
    },
    resetNetwork(t) {
      m.setAdapterNetworkState(t, {
        approvedCaipNetworkIds: void 0,
        supportsAllNetworks: true,
        smartAccountEnabledNetworks: []
      });
    },
    resetAccount(t) {
      const e = t;
      if (!e)
        throw new Error("Chain is required to set account prop");
      M$3.activeCaipAddress = void 0, m.setChainAccountData(e, {
        smartAccountDeployed: false,
        currentTab: 0,
        caipAddress: void 0,
        address: void 0,
        balance: void 0,
        balanceSymbol: void 0,
        profileName: void 0,
        profileImage: void 0,
        addressExplorerUrl: void 0,
        tokenBalance: [],
        connectedWalletInfo: void 0,
        preferredAccountTypes: void 0,
        socialProvider: void 0,
        socialWindow: void 0,
        farcasterUrl: void 0,
        allAccounts: [],
        user: void 0,
        status: "disconnected"
      }), F$2.removeConnectorId(e);
    },
    setIsSwitchingNamespace(t) {
      M$3.isSwitchingNamespace = t;
    },
    getFirstCaipNetworkSupportsAuthConnector() {
      var s, r;
      const t = [];
      let e;
      if (M$3.chains.forEach((i) => {
        z$3.AUTH_CONNECTOR_SUPPORTED_CHAINS.find((n) => n === i.namespace) && i.namespace && t.push(i.namespace);
      }), t.length > 0) {
        const i = t[0];
        return e = i ? (r = (s = M$3.chains.get(i)) == null ? void 0 : s.caipNetworks) == null ? void 0 : r[0] : void 0, e;
      }
    },
    getAccountData(t) {
      var e;
      return t ? (e = m.state.chains.get(t)) == null ? void 0 : e.accountState : W$2.state;
    },
    getNetworkData(t) {
      var s;
      const e = t || M$3.activeChain;
      if (e)
        return (s = m.state.chains.get(e)) == null ? void 0 : s.networkState;
    },
    getCaipNetworkByNamespace(t, e) {
      var i, n, o;
      if (!t)
        return;
      const s = m.state.chains.get(t), r = (i = s == null ? void 0 : s.caipNetworks) == null ? void 0 : i.find((a) => a.id === e);
      return r || ((n = s == null ? void 0 : s.networkState) == null ? void 0 : n.caipNetwork) || ((o = s == null ? void 0 : s.caipNetworks) == null ? void 0 : o[0]);
    },
    /**
     * Get the requested CaipNetwork IDs for a given namespace. If namespace is not provided, all requested CaipNetwork IDs will be returned
     * @param namespace - The namespace to get the requested CaipNetwork IDs for
     * @returns The requested CaipNetwork IDs
     */
    getRequestedCaipNetworkIds() {
      const t = F$2.state.filterByNamespace;
      return (t ? [M$3.chains.get(t)] : Array.from(M$3.chains.values())).flatMap((s) => (s == null ? void 0 : s.caipNetworks) || []).map((s) => s.caipNetworkId);
    },
    getCaipNetworks(t) {
      return t ? m.getRequestedCaipNetworks(t) : m.getAllRequestedCaipNetworks();
    }
  }, m = At$1(nf), of = {
    purchaseCurrencies: [
      {
        id: "2b92315d-eab7-5bef-84fa-089a131333f5",
        name: "USD Coin",
        symbol: "USDC",
        networks: [
          {
            name: "ethereum-mainnet",
            display_name: "Ethereum",
            chain_id: "1",
            contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          },
          {
            name: "polygon-mainnet",
            display_name: "Polygon",
            chain_id: "137",
            contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
          }
        ]
      },
      {
        id: "2b92315d-eab7-5bef-84fa-089a131333f5",
        name: "Ether",
        symbol: "ETH",
        networks: [
          {
            name: "ethereum-mainnet",
            display_name: "Ethereum",
            chain_id: "1",
            contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          },
          {
            name: "polygon-mainnet",
            display_name: "Polygon",
            chain_id: "137",
            contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
          }
        ]
      }
    ],
    paymentCurrencies: [
      {
        id: "USD",
        payment_method_limits: [
          {
            id: "card",
            min: "10.00",
            max: "7500.00"
          },
          {
            id: "ach_bank_account",
            min: "10.00",
            max: "25000.00"
          }
        ]
      },
      {
        id: "EUR",
        payment_method_limits: [
          {
            id: "card",
            min: "10.00",
            max: "7500.00"
          },
          {
            id: "ach_bank_account",
            min: "10.00",
            max: "25000.00"
          }
        ]
      }
    ]
  }, Ju = X$3.getBlockchainApiUrl(), nt$3 = _e$3({
    clientId: null,
    api: new mn$1({ baseUrl: Ju, clientId: null }),
    supportedChains: { http: [], ws: [] }
  }), J$3 = {
    state: nt$3,
    async get(t) {
      const { st: e, sv: s } = J$3.getSdkProperties(), r = T$2.state.projectId, i = {
        ...t.params || {},
        st: e,
        sv: s,
        projectId: r
      };
      return nt$3.api.get({
        ...t,
        params: i
      });
    },
    getSdkProperties() {
      const { sdkType: t, sdkVersion: e } = T$2.state;
      return {
        st: t || "unknown",
        sv: e || "unknown"
      };
    },
    async isNetworkSupported(t) {
      if (!t)
        return false;
      try {
        nt$3.supportedChains.http.length || await J$3.getSupportedNetworks();
      } catch {
        return false;
      }
      return nt$3.supportedChains.http.includes(t);
    },
    async getSupportedNetworks() {
      try {
        const t = await J$3.get({
          path: "v1/supported-chains"
        });
        return nt$3.supportedChains = t, t;
      } catch {
        return nt$3.supportedChains;
      }
    },
    async fetchIdentity({ address: t, caipNetworkId: e }) {
      if (!await J$3.isNetworkSupported(e))
        return { avatar: "", name: "" };
      const r = q$1.getIdentityFromCacheForAddress(t);
      if (r)
        return r;
      const i = await J$3.get({
        path: `/v1/identity/${t}`,
        params: {
          sender: m.state.activeCaipAddress ? X$3.getPlainAddress(m.state.activeCaipAddress) : void 0
        }
      });
      return q$1.updateIdentityCache({
        address: t,
        identity: i,
        timestamp: Date.now()
      }), i;
    },
    async fetchTransactions({ account: t, cursor: e, onramp: s, signal: r, cache: i, chainId: n }) {
      var a;
      return await J$3.isNetworkSupported((a = m.state.activeCaipNetwork) == null ? void 0 : a.caipNetworkId) ? J$3.get({
        path: `/v1/account/${t}/history`,
        params: {
          cursor: e,
          onramp: s,
          chainId: n
        },
        signal: r,
        cache: i
      }) : { data: [], next: void 0 };
    },
    async fetchSwapQuote({ amount: t, userAddress: e, from: s, to: r, gasPrice: i }) {
      var o;
      return await J$3.isNetworkSupported((o = m.state.activeCaipNetwork) == null ? void 0 : o.caipNetworkId) ? J$3.get({
        path: "/v1/convert/quotes",
        headers: {
          "Content-Type": "application/json"
        },
        params: {
          amount: t,
          userAddress: e,
          from: s,
          to: r,
          gasPrice: i
        }
      }) : { quotes: [] };
    },
    async fetchSwapTokens({ chainId: t }) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? J$3.get({
        path: "/v1/convert/tokens",
        params: { chainId: t }
      }) : { tokens: [] };
    },
    async fetchTokenPrice({ addresses: t }) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? nt$3.api.post({
        path: "/v1/fungible/price",
        body: {
          currency: "usd",
          addresses: t,
          projectId: T$2.state.projectId
        },
        headers: {
          "Content-Type": "application/json"
        }
      }) : { fungibles: [] };
    },
    async fetchSwapAllowance({ tokenAddress: t, userAddress: e }) {
      var r;
      return await J$3.isNetworkSupported((r = m.state.activeCaipNetwork) == null ? void 0 : r.caipNetworkId) ? J$3.get({
        path: "/v1/convert/allowance",
        params: {
          tokenAddress: t,
          userAddress: e
        },
        headers: {
          "Content-Type": "application/json"
        }
      }) : { allowance: "0" };
    },
    async fetchGasPrice({ chainId: t }) {
      var i;
      const { st: e, sv: s } = J$3.getSdkProperties();
      if (!await J$3.isNetworkSupported((i = m.state.activeCaipNetwork) == null ? void 0 : i.caipNetworkId))
        throw new Error("Network not supported for Gas Price");
      return J$3.get({
        path: "/v1/convert/gas-price",
        headers: {
          "Content-Type": "application/json"
        },
        params: {
          chainId: t,
          st: e,
          sv: s
        }
      });
    },
    async generateSwapCalldata({ amount: t, from: e, to: s, userAddress: r, disableEstimate: i }) {
      var o;
      if (!await J$3.isNetworkSupported((o = m.state.activeCaipNetwork) == null ? void 0 : o.caipNetworkId))
        throw new Error("Network not supported for Swaps");
      return nt$3.api.post({
        path: "/v1/convert/build-transaction",
        headers: {
          "Content-Type": "application/json"
        },
        body: {
          amount: t,
          eip155: {
            slippage: Ee$3.CONVERT_SLIPPAGE_TOLERANCE
          },
          projectId: T$2.state.projectId,
          from: e,
          to: s,
          userAddress: r,
          disableEstimate: i
        }
      });
    },
    async generateApproveCalldata({ from: t, to: e, userAddress: s }) {
      var o;
      const { st: r, sv: i } = J$3.getSdkProperties();
      if (!await J$3.isNetworkSupported((o = m.state.activeCaipNetwork) == null ? void 0 : o.caipNetworkId))
        throw new Error("Network not supported for Swaps");
      return J$3.get({
        path: "/v1/convert/build-approve",
        headers: {
          "Content-Type": "application/json"
        },
        params: {
          userAddress: s,
          from: t,
          to: e,
          st: r,
          sv: i
        }
      });
    },
    async getBalance(t, e, s) {
      var l;
      const { st: r, sv: i } = J$3.getSdkProperties();
      if (!await J$3.isNetworkSupported((l = m.state.activeCaipNetwork) == null ? void 0 : l.caipNetworkId))
        return Bt$2.showError("Token Balance Unavailable"), { balances: [] };
      const o = `${e}:${t}`, a = q$1.getBalanceCacheForCaipAddress(o);
      if (a)
        return a;
      const c = await J$3.get({
        path: `/v1/account/${t}/balance`,
        params: {
          currency: "usd",
          chainId: e,
          forceUpdate: s,
          st: r,
          sv: i
        }
      });
      return q$1.updateBalanceCache({
        caipAddress: o,
        balance: c,
        timestamp: Date.now()
      }), c;
    },
    async lookupEnsName(t) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? J$3.get({
        path: `/v1/profile/account/${t}`,
        params: { apiVersion: "2" }
      }) : { addresses: {}, attributes: [] };
    },
    async reverseLookupEnsName({ address: t }) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? J$3.get({
        path: `/v1/profile/reverse/${t}`,
        params: {
          sender: W$2.state.address,
          apiVersion: "2"
        }
      }) : [];
    },
    async getEnsNameSuggestions(t) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? J$3.get({
        path: `/v1/profile/suggestions/${t}`,
        params: { zone: "reown.id" }
      }) : { suggestions: [] };
    },
    async registerEnsName({ coinType: t, address: e, message: s, signature: r }) {
      var n;
      return await J$3.isNetworkSupported((n = m.state.activeCaipNetwork) == null ? void 0 : n.caipNetworkId) ? nt$3.api.post({
        path: "/v1/profile/account",
        body: { coin_type: t, address: e, message: s, signature: r },
        headers: {
          "Content-Type": "application/json"
        }
      }) : { success: false };
    },
    async generateOnRampURL({ destinationWallets: t, partnerUserId: e, defaultNetwork: s, purchaseAmount: r, paymentAmount: i }) {
      var a;
      return await J$3.isNetworkSupported((a = m.state.activeCaipNetwork) == null ? void 0 : a.caipNetworkId) ? (await nt$3.api.post({
        path: "/v1/generators/onrampurl",
        params: {
          projectId: T$2.state.projectId
        },
        body: {
          destinationWallets: t,
          defaultNetwork: s,
          partnerUserId: e,
          defaultExperience: "buy",
          presetCryptoAmount: r,
          presetFiatAmount: i
        }
      })).url : "";
    },
    async getOnrampOptions() {
      var e;
      if (!await J$3.isNetworkSupported((e = m.state.activeCaipNetwork) == null ? void 0 : e.caipNetworkId))
        return { paymentCurrencies: [], purchaseCurrencies: [] };
      try {
        return await J$3.get({
          path: "/v1/onramp/options"
        });
      } catch {
        return of;
      }
    },
    async getOnrampQuote({ purchaseCurrency: t, paymentCurrency: e, amount: s, network: r }) {
      var i;
      try {
        return await J$3.isNetworkSupported((i = m.state.activeCaipNetwork) == null ? void 0 : i.caipNetworkId) ? await nt$3.api.post({
          path: "/v1/onramp/quote",
          params: {
            projectId: T$2.state.projectId
          },
          body: {
            purchaseCurrency: t,
            paymentCurrency: e,
            amount: s,
            network: r
          }
        }) : null;
      } catch {
        return {
          coinbaseFee: { amount: s, currency: e.id },
          networkFee: { amount: s, currency: e.id },
          paymentSubtotal: { amount: s, currency: e.id },
          paymentTotal: { amount: s, currency: e.id },
          purchaseAmount: { amount: s, currency: e.id },
          quoteId: "mocked-quote-id"
        };
      }
    },
    async getSmartSessions(t) {
      var s;
      return await J$3.isNetworkSupported((s = m.state.activeCaipNetwork) == null ? void 0 : s.caipNetworkId) ? J$3.get({
        path: `/v1/sessions/${t}`
      }) : [];
    },
    async revokeSmartSession(t, e, s) {
      var i;
      return await J$3.isNetworkSupported((i = m.state.activeCaipNetwork) == null ? void 0 : i.caipNetworkId) ? nt$3.api.post({
        path: `/v1/sessions/${t}/revoke`,
        params: {
          projectId: T$2.state.projectId
        },
        body: {
          pci: e,
          signature: s
        }
      }) : { success: false };
    },
    setClientId(t) {
      nt$3.clientId = t, nt$3.api = new mn$1({ baseUrl: Ju, clientId: t });
    }
  }, Nt$1 = _e$3({
    currentTab: 0,
    tokenBalance: [],
    smartAccountDeployed: false,
    addressLabels: /* @__PURE__ */ new Map(),
    allAccounts: []
  }), af = {
    state: Nt$1,
    replaceState(t) {
      t && Object.assign(Nt$1, Zs(t));
    },
    subscribe(t) {
      return m.subscribeChainProp("accountState", (e) => {
        if (e)
          return t(e);
      });
    },
    subscribeKey(t, e, s) {
      let r;
      return m.subscribeChainProp("accountState", (i) => {
        if (i) {
          const n = i[t];
          r !== n && (r = n, e(n));
        }
      }, s);
    },
    setStatus(t, e) {
      m.setAccountProp("status", t, e);
    },
    getCaipAddress(t) {
      return m.getAccountProp("caipAddress", t);
    },
    setCaipAddress(t, e) {
      const s = t ? X$3.getPlainAddress(t) : void 0;
      e === m.state.activeChain && (m.state.activeCaipAddress = t), m.setAccountProp("caipAddress", t, e), m.setAccountProp("address", s, e);
    },
    setBalance(t, e, s) {
      m.setAccountProp("balance", t, s), m.setAccountProp("balanceSymbol", e, s);
    },
    setProfileName(t, e) {
      m.setAccountProp("profileName", t, e);
    },
    setProfileImage(t, e) {
      m.setAccountProp("profileImage", t, e);
    },
    setUser(t, e) {
      m.setAccountProp("user", t, e);
    },
    setAddressExplorerUrl(t, e) {
      m.setAccountProp("addressExplorerUrl", t, e);
    },
    setSmartAccountDeployed(t, e) {
      m.setAccountProp("smartAccountDeployed", t, e);
    },
    setCurrentTab(t) {
      m.setAccountProp("currentTab", t, m.state.activeChain);
    },
    setTokenBalance(t, e) {
      t && m.setAccountProp("tokenBalance", t, e);
    },
    setShouldUpdateToAddress(t, e) {
      m.setAccountProp("shouldUpdateToAddress", t, e);
    },
    setAllAccounts(t, e) {
      m.setAccountProp("allAccounts", t, e);
    },
    addAddressLabel(t, e, s) {
      const r = m.getAccountProp("addressLabels", s) || /* @__PURE__ */ new Map();
      r.set(t, e), m.setAccountProp("addressLabels", r, s);
    },
    removeAddressLabel(t, e) {
      const s = m.getAccountProp("addressLabels", e) || /* @__PURE__ */ new Map();
      s.delete(t), m.setAccountProp("addressLabels", s, e);
    },
    setConnectedWalletInfo(t, e) {
      m.setAccountProp("connectedWalletInfo", t, e, false);
    },
    setPreferredAccountType(t, e) {
      m.setAccountProp("preferredAccountTypes", {
        ...Nt$1.preferredAccountTypes,
        [e]: t
      }, e);
    },
    setPreferredAccountTypes(t) {
      Nt$1.preferredAccountTypes = t;
    },
    setSocialProvider(t, e) {
      t && m.setAccountProp("socialProvider", t, e);
    },
    setSocialWindow(t, e) {
      m.setAccountProp("socialWindow", t ? Zs(t) : void 0, e);
    },
    setFarcasterUrl(t, e) {
      m.setAccountProp("farcasterUrl", t, e);
    },
    async fetchTokenBalance(t) {
      var n, o;
      Nt$1.balanceLoading = true;
      const e = (n = m.state.activeCaipNetwork) == null ? void 0 : n.caipNetworkId, s = (o = m.state.activeCaipNetwork) == null ? void 0 : o.chainNamespace, r = m.state.activeCaipAddress, i = r ? X$3.getPlainAddress(r) : void 0;
      if (Nt$1.lastRetry && !X$3.isAllowedRetry(Nt$1.lastRetry, 30 * Ee$3.ONE_SEC_MS))
        return Nt$1.balanceLoading = false, [];
      try {
        if (i && e && s) {
          const c = (await J$3.getBalance(i, e)).balances.filter((l) => l.quantity.decimals !== "0");
          return W$2.setTokenBalance(c, s), Nt$1.lastRetry = void 0, Nt$1.balanceLoading = !1, c;
        }
      } catch (a) {
        Nt$1.lastRetry = Date.now(), t == null || t(a), Bt$2.showError("Token Balance Unavailable");
      } finally {
        Nt$1.balanceLoading = false;
      }
      return [];
    },
    resetAccount(t) {
      m.resetAccount(t);
    }
  }, W$2 = At$1(af), cf = {
    /**
     * Function to handle the network switch.
     * This function has variety of conditions to handle the network switch depending on the connectors or namespace's connection states.
     * @param args.network - The network to switch to.
     * @param args.shouldConfirmSwitch - Whether to confirm the switch. If true, the user will be asked to confirm the switch if necessary.
     * @returns void
     */
    onSwitchNetwork({ network: t, ignoreSwitchConfirmation: e = false }) {
      const s = m.state.activeCaipNetwork, r = re$1.state.data;
      if (t.id === (s == null ? void 0 : s.id))
        return;
      const n = W$2.getCaipAddress(m.state.activeChain), o = t.chainNamespace !== m.state.activeChain, a = W$2.getCaipAddress(t.chainNamespace), l = F$2.getConnectorId(m.state.activeChain) === z$3.CONNECTOR_ID.AUTH, u = z$3.AUTH_CONNECTOR_SUPPORTED_CHAINS.find((d) => d === t.chainNamespace);
      e || l && u ? re$1.push("SwitchNetwork", { ...r, network: t }) : /** * If user switching to a different namespace and next namespace is not connected, we need to show switch active chain view for confirmation first. */ n && o && !a ? re$1.push("SwitchActiveChain", {
        switchToChain: t.chainNamespace,
        navigateTo: "Connect",
        navigateWithReplace: true,
        network: t
      }) : re$1.push("SwitchNetwork", { ...r, network: t });
    }
  }, ot$3 = _e$3({
    loading: false,
    loadingNamespaceMap: /* @__PURE__ */ new Map(),
    open: false,
    shake: false,
    namespace: void 0
  }), lf = {
    state: ot$3,
    subscribe(t) {
      return Qe$1(ot$3, () => t(ot$3));
    },
    subscribeKey(t, e) {
      return et$2(ot$3, t, e);
    },
    async open(t) {
      var o, a;
      const e = W$2.state.status === "connected", s = t == null ? void 0 : t.namespace, r = m.state.activeChain, i = s && s !== r, n = (o = m.getAccountData(t == null ? void 0 : t.namespace)) == null ? void 0 : o.caipAddress;
      if (Y$1.state.wcBasic ? K$3.prefetch({ fetchNetworkImages: false, fetchConnectorImages: false }) : await K$3.prefetch({
        fetchConnectorImages: !e,
        fetchFeaturedWallets: !e,
        fetchRecommendedWallets: !e
      }), F$2.setFilterByNamespace(t == null ? void 0 : t.namespace), ze$3.setLoading(true, s), s && i) {
        const c = ((a = m.getNetworkData(s)) == null ? void 0 : a.caipNetwork) || m.getRequestedCaipNetworks(s)[0];
        c && cf.onSwitchNetwork({ network: c, ignoreSwitchConfirmation: true });
      } else {
        const c = m.state.noAdapters;
        T$2.state.manualWCControl || c && !n ? X$3.isMobile() ? re$1.reset("AllWallets") : re$1.reset("ConnectingWalletConnectBasic") : t != null && t.view ? re$1.reset(t.view, t.data) : n ? re$1.reset("Account") : re$1.reset("Connect");
      }
      ot$3.open = true, Ns.set({ open: true }), Pe$3.sendEvent({
        type: "track",
        event: "MODAL_OPEN",
        properties: { connected: !!n }
      });
    },
    close() {
      const t = T$2.state.enableEmbedded, e = !!m.state.activeCaipAddress;
      ot$3.open && Pe$3.sendEvent({
        type: "track",
        event: "MODAL_CLOSE",
        properties: { connected: e }
      }), ot$3.open = false, re$1.reset("Connect"), ze$3.clearLoading(), t ? e ? re$1.replace("Account") : re$1.push("Connect") : Ns.set({ open: false }), Y$1.resetUri();
    },
    setLoading(t, e) {
      e && ot$3.loadingNamespaceMap.set(e, t), ot$3.loading = t, Ns.set({ loading: t });
    },
    clearLoading() {
      ot$3.loadingNamespaceMap.clear(), ot$3.loading = false;
    },
    shake() {
      ot$3.shake || (ot$3.shake = true, setTimeout(() => {
        ot$3.shake = false;
      }, 500));
    }
  }, ze$3 = At$1(lf), Si$1 = {
    id: "2b92315d-eab7-5bef-84fa-089a131333f5",
    name: "USD Coin",
    symbol: "USDC",
    networks: [
      {
        name: "ethereum-mainnet",
        display_name: "Ethereum",
        chain_id: "1",
        contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
      },
      {
        name: "polygon-mainnet",
        display_name: "Polygon",
        chain_id: "137",
        contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
      }
    ]
  }, da = {
    id: "USD",
    payment_method_limits: [
      {
        id: "card",
        min: "10.00",
        max: "7500.00"
      },
      {
        id: "ach_bank_account",
        min: "10.00",
        max: "25000.00"
      }
    ]
  }, uf = {
    providers: Ku,
    selectedProvider: null,
    error: null,
    purchaseCurrency: Si$1,
    paymentCurrency: da,
    purchaseCurrencies: [Si$1],
    paymentCurrencies: [],
    quotesLoading: false
  }, oe$2 = _e$3(uf), df = {
    state: oe$2,
    subscribe(t) {
      return Qe$1(oe$2, () => t(oe$2));
    },
    subscribeKey(t, e) {
      return et$2(oe$2, t, e);
    },
    setSelectedProvider(t) {
      if (t && t.name === "meld") {
        const e = m.state.activeChain === z$3.CHAIN.SOLANA ? "SOL" : "USDC", s = W$2.state.address ?? "", r = new URL(t.url);
        r.searchParams.append("publicKey", Rp), r.searchParams.append("destinationCurrencyCode", e), r.searchParams.append("walletAddress", s), r.searchParams.append("externalCustomerId", T$2.state.projectId), oe$2.selectedProvider = { ...t, url: r.toString() };
      } else
        oe$2.selectedProvider = t;
    },
    setOnrampProviders(t) {
      if (Array.isArray(t) && t.every((e) => typeof e == "string")) {
        const e = t, s = Ku.filter((r) => e.includes(r.name));
        oe$2.providers = s;
      } else
        oe$2.providers = [];
    },
    setPurchaseCurrency(t) {
      oe$2.purchaseCurrency = t;
    },
    setPaymentCurrency(t) {
      oe$2.paymentCurrency = t;
    },
    setPurchaseAmount(t) {
      ha.state.purchaseAmount = t;
    },
    setPaymentAmount(t) {
      ha.state.paymentAmount = t;
    },
    async getAvailableCurrencies() {
      const t = await J$3.getOnrampOptions();
      oe$2.purchaseCurrencies = t.purchaseCurrencies, oe$2.paymentCurrencies = t.paymentCurrencies, oe$2.paymentCurrency = t.paymentCurrencies[0] || da, oe$2.purchaseCurrency = t.purchaseCurrencies[0] || Si$1, await K$3.fetchCurrencyImages(t.paymentCurrencies.map((e) => e.id)), await K$3.fetchTokenImages(t.purchaseCurrencies.map((e) => e.symbol));
    },
    async getQuote() {
      var t, e;
      oe$2.quotesLoading = true;
      try {
        const s = await J$3.getOnrampQuote({
          purchaseCurrency: oe$2.purchaseCurrency,
          paymentCurrency: oe$2.paymentCurrency,
          amount: ((t = oe$2.paymentAmount) == null ? void 0 : t.toString()) || "0",
          network: (e = oe$2.purchaseCurrency) == null ? void 0 : e.symbol
        });
        return oe$2.quotesLoading = !1, oe$2.purchaseAmount = Number(s == null ? void 0 : s.purchaseAmount.amount), s;
      } catch (s) {
        return oe$2.error = s.message, oe$2.quotesLoading = false, null;
      } finally {
        oe$2.quotesLoading = false;
      }
    },
    resetState() {
      oe$2.selectedProvider = null, oe$2.error = null, oe$2.purchaseCurrency = Si$1, oe$2.paymentCurrency = da, oe$2.purchaseCurrencies = [Si$1], oe$2.paymentCurrencies = [], oe$2.paymentAmount = void 0, oe$2.purchaseAmount = void 0, oe$2.quotesLoading = false;
    }
  }, ha = At$1(df), _c = 2147483648, hf = {
    convertEVMChainIdToCoinType(t) {
      if (t >= _c)
        throw new Error("Invalid chainId");
      return (_c | t) >>> 0;
    }
  }, _t$2 = _e$3({
    suggestions: [],
    loading: false
  }), pf = {
    state: _t$2,
    subscribe(t) {
      return Qe$1(_t$2, () => t(_t$2));
    },
    subscribeKey(t, e) {
      return et$2(_t$2, t, e);
    },
    async resolveName(t) {
      var e, s;
      try {
        return await J$3.lookupEnsName(t);
      } catch (r) {
        const i = r;
        throw new Error(((s = (e = i == null ? void 0 : i.reasons) == null ? void 0 : e[0]) == null ? void 0 : s.description) || "Error resolving name");
      }
    },
    async isNameRegistered(t) {
      try {
        return await J$3.lookupEnsName(t), !0;
      } catch {
        return false;
      }
    },
    async getSuggestions(t) {
      try {
        _t$2.loading = !0, _t$2.suggestions = [];
        const e = await J$3.getEnsNameSuggestions(t);
        return _t$2.suggestions = e.suggestions.map((s) => ({
          ...s,
          name: s.name
        })) || [], _t$2.suggestions;
      } catch (e) {
        const s = Pi$1.parseEnsApiError(e, "Error fetching name suggestions");
        throw new Error(s);
      } finally {
        _t$2.loading = false;
      }
    },
    async getNamesForAddress(t) {
      try {
        if (!m.state.activeCaipNetwork)
          return [];
        const s = q$1.getEnsFromCacheForAddress(t);
        if (s)
          return s;
        const r = await J$3.reverseLookupEnsName({ address: t });
        return q$1.updateEnsCache({
          address: t,
          ens: r,
          timestamp: Date.now()
        }), r;
      } catch (e) {
        const s = Pi$1.parseEnsApiError(e, "Error fetching names for address");
        throw new Error(s);
      }
    },
    async registerName(t) {
      const e = m.state.activeCaipNetwork;
      if (!e)
        throw new Error("Network not found");
      const s = W$2.state.address, r = F$2.getAuthConnector();
      if (!s || !r)
        throw new Error("Address or auth connector not found");
      _t$2.loading = true;
      try {
        const i = JSON.stringify({
          name: t,
          attributes: {},
          // Unix timestamp
          timestamp: Math.floor(Date.now() / 1e3)
        });
        re$1.pushTransactionStack({
          onCancel() {
            re$1.replace("RegisterAccountName");
          }
        });
        const n = await Y$1.signMessage(i);
        _t$2.loading = !1;
        const o = e.id;
        if (!o)
          throw new Error("Network not found");
        const a = hf.convertEVMChainIdToCoinType(Number(o));
        await J$3.registerEnsName({
          coinType: a,
          address: s,
          signature: n,
          message: i
        }), W$2.setProfileName(t, e.chainNamespace), re$1.replace("RegisterAccountNameSuccess");
      } catch (i) {
        const n = Pi$1.parseEnsApiError(i, `Error registering name ${t}`);
        throw re$1.replace("RegisterAccountName"), new Error(n);
      } finally {
        _t$2.loading = false;
      }
    },
    validateName(t) {
      return /^[a-zA-Z0-9-]{4,}$/u.test(t);
    },
    parseEnsApiError(t, e) {
      var r, i;
      const s = t;
      return ((i = (r = s == null ? void 0 : s.reasons) == null ? void 0 : r[0]) == null ? void 0 : i.description) || e;
    }
  }, Pi$1 = At$1(pf), Oi$1 = {
    getSIWX() {
      return T$2.state.siwx;
    },
    async initializeIfEnabled() {
      var n;
      const t = T$2.state.siwx, e = m.getActiveCaipAddress();
      if (!(t && e))
        return;
      const [s, r, i] = e.split(":");
      if (m.checkIfSupportedNetwork(s))
        try {
          if ((await t.getSessions(`${s}:${r}`, i)).length)
            return;
          await ze$3.open({
            view: "SIWXSignMessage"
          });
        } catch (o) {
          console.error("SIWXUtil:initializeIfEnabled", o), Pe$3.sendEvent({
            type: "track",
            event: "SIWX_AUTH_ERROR",
            properties: this.getSIWXEventProperties()
          }), await ((n = Y$1._getClient()) == null ? void 0 : n.disconnect().catch(console.error)), re$1.reset("Connect"), Bt$2.showError("A problem occurred while trying initialize authentication");
        }
    },
    async requestSignMessage() {
      const t = T$2.state.siwx, e = X$3.getPlainAddress(m.getActiveCaipAddress()), s = m.getActiveCaipNetwork(), r = Y$1._getClient();
      if (!t)
        throw new Error("SIWX is not enabled");
      if (!e)
        throw new Error("No ActiveCaipAddress found");
      if (!s)
        throw new Error("No ActiveCaipNetwork or client found");
      if (!r)
        throw new Error("No ConnectionController client found");
      try {
        const i = await t.createMessage({
          chainId: s.caipNetworkId,
          accountAddress: e
        }), n = i.toString();
        F$2.getConnectorId(s.chainNamespace) === z$3.CONNECTOR_ID.AUTH && re$1.pushTransactionStack({});
        const a = await r.signMessage(n);
        await t.addSession({
          data: i,
          message: n,
          signature: a
        }), ze$3.close(), Pe$3.sendEvent({
          type: "track",
          event: "SIWX_AUTH_SUCCESS",
          properties: this.getSIWXEventProperties()
        });
      } catch (i) {
        const n = this.getSIWXEventProperties();
        (!ze$3.state.open || re$1.state.view === "ApproveTransaction") && await ze$3.open({
          view: "SIWXSignMessage"
        }), n.isSmartAccount ? Bt$2.showError("This application might not support Smart Accounts") : Bt$2.showError("Signature declined"), Pe$3.sendEvent({
          type: "track",
          event: "SIWX_AUTH_ERROR",
          properties: n
        }), console.error("SWIXUtil:requestSignMessage", i);
      }
    },
    async cancelSignMessage() {
      var t;
      try {
        const e = this.getSIWX();
        ((t = e == null ? void 0 : e.getRequired) == null ? void 0 : t.call(e)) ? await Y$1.disconnect() : ze$3.close(), re$1.reset("Connect"), Pe$3.sendEvent({
          event: "CLICK_CANCEL_SIWX",
          type: "track",
          properties: this.getSIWXEventProperties()
        });
      } catch (e) {
        console.error("SIWXUtil:cancelSignMessage", e);
      }
    },
    async getSessions() {
      const t = T$2.state.siwx, e = X$3.getPlainAddress(m.getActiveCaipAddress()), s = m.getActiveCaipNetwork();
      return t && e && s ? t.getSessions(s.caipNetworkId, e) : [];
    },
    async isSIWXCloseDisabled() {
      var e;
      const t = this.getSIWX();
      if (t) {
        const s = re$1.state.view === "ApproveTransaction", r = re$1.state.view === "SIWXSignMessage";
        if (s || r)
          return ((e = t.getRequired) == null ? void 0 : e.call(t)) && (await this.getSessions()).length === 0;
      }
      return false;
    },
    async universalProviderAuthenticate({ universalProvider: t, chains: e, methods: s }) {
      var a, c, l;
      const r = Oi$1.getSIWX(), i = new Set(e.map((u) => u.split(":")[0]));
      if (!r || i.size !== 1 || !i.has("eip155"))
        return false;
      const n = await r.createMessage({
        chainId: ((a = m.getActiveCaipNetwork()) == null ? void 0 : a.caipNetworkId) || "",
        accountAddress: ""
      }), o = await t.authenticate({
        nonce: n.nonce,
        domain: n.domain,
        uri: n.uri,
        exp: n.expirationTime,
        iat: n.issuedAt,
        nbf: n.notBefore,
        requestId: n.requestId,
        version: n.version,
        resources: n.resources,
        statement: n.statement,
        chainId: n.chainId,
        methods: s,
        // The first chainId is what is used for universal provider to build the message
        chains: [n.chainId, ...e.filter((u) => u !== n.chainId)]
      });
      if (Bt$2.showLoading("Authenticating...", { autoClose: false }), W$2.setConnectedWalletInfo({
        ...o.session.peer.metadata,
        name: o.session.peer.metadata.name,
        icon: (c = o.session.peer.metadata.icons) == null ? void 0 : c[0],
        type: "WALLET_CONNECT"
      }, Array.from(i)[0]), (l = o == null ? void 0 : o.auths) != null && l.length) {
        const u = o.auths.map((d) => {
          const h = t.client.formatAuthMessage({
            request: d.p,
            iss: d.p.iss
          });
          return {
            data: {
              ...d.p,
              accountAddress: d.p.iss.split(":").slice(-1).join(""),
              chainId: d.p.iss.split(":").slice(2, 4).join(":"),
              uri: d.p.aud,
              version: d.p.version || n.version,
              expirationTime: d.p.exp,
              issuedAt: d.p.iat,
              notBefore: d.p.nbf
            },
            message: h,
            signature: d.s.s,
            cacao: d
          };
        });
        try {
          await r.setSessions(u), Pe$3.sendEvent({
            type: "track",
            event: "SIWX_AUTH_SUCCESS",
            properties: Oi$1.getSIWXEventProperties()
          });
        } catch (d) {
          throw console.error("SIWX:universalProviderAuth - failed to set sessions", d), Pe$3.sendEvent({
            type: "track",
            event: "SIWX_AUTH_ERROR",
            properties: Oi$1.getSIWXEventProperties()
          }), await t.disconnect().catch(console.error), d;
        } finally {
          Bt$2.hide();
        }
      }
      return true;
    },
    getSIWXEventProperties() {
      var e, s;
      const t = m.state.activeChain;
      return {
        network: ((e = m.state.activeCaipNetwork) == null ? void 0 : e.caipNetworkId) || "",
        isSmartAccount: ((s = W$2.state.preferredAccountTypes) == null ? void 0 : s[t]) === _i$1.ACCOUNT_TYPES.SMART_ACCOUNT
      };
    },
    async clearSessions() {
      const t = this.getSIWX();
      t && await t.setSessions([]);
    }
  };
  function ff(t) {
    return !t || typeof t.then != "function" ? Promise.resolve(t) : t;
  }
  function Fe$2(t, ...e) {
    try {
      return ff(t(...e));
    } catch (s) {
      return Promise.reject(s);
    }
  }
  function gf(t) {
    const e = typeof t;
    return t === null || e !== "object" && e !== "function";
  }
  function mf(t) {
    const e = Object.getPrototypeOf(t);
    return !e || e.isPrototypeOf(Object);
  }
  function Kn$1(t) {
    if (gf(t))
      return String(t);
    if (mf(t) || Array.isArray(t))
      return JSON.stringify(t);
    if (typeof t.toJSON == "function")
      return Kn$1(t.toJSON());
    throw new Error("[unstorage] Cannot stringify value!");
  }
  const pa = "base64:";
  function wf(t) {
    return typeof t == "string" ? t : pa + vf(t);
  }
  function yf(t) {
    return typeof t != "string" || !t.startsWith(pa) ? t : bf(t.slice(pa.length));
  }
  function bf(t) {
    return globalThis.Buffer ? Buffer.from(t, "base64") : Uint8Array.from(
      globalThis.atob(t),
      (e) => e.codePointAt(0)
    );
  }
  function vf(t) {
    return globalThis.Buffer ? Buffer.from(t).toString("base64") : globalThis.btoa(String.fromCodePoint(...t));
  }
  function lt$3(t) {
    var e;
    return t && ((e = t.split("?")[0]) == null ? void 0 : e.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
  }
  function Ef(...t) {
    return lt$3(t.join(":"));
  }
  function $n$1(t) {
    return t = lt$3(t), t ? t + ":" : "";
  }
  function Cf(t, e) {
    if (e === void 0)
      return true;
    let s = 0, r = t.indexOf(":");
    for (; r > -1; )
      s++, r = t.indexOf(":", r + 1);
    return s <= e;
  }
  function If(t, e) {
    return e ? t.startsWith(e) && t[t.length - 1] !== "$" : t[t.length - 1] !== "$";
  }
  const Af = "memory", Nf = () => {
    const t = /* @__PURE__ */ new Map();
    return {
      name: Af,
      getInstance: () => t,
      hasItem(e) {
        return t.has(e);
      },
      getItem(e) {
        return t.get(e) ?? null;
      },
      getItemRaw(e) {
        return t.get(e) ?? null;
      },
      setItem(e, s) {
        t.set(e, s);
      },
      setItemRaw(e, s) {
        t.set(e, s);
      },
      removeItem(e) {
        t.delete(e);
      },
      getKeys() {
        return [...t.keys()];
      },
      clear() {
        t.clear();
      },
      dispose() {
        t.clear();
      }
    };
  };
  function _f(t = {}) {
    const e = {
      mounts: { "": t.driver || Nf() },
      mountpoints: [""],
      watching: false,
      watchListeners: [],
      unwatch: {}
    }, s = (l) => {
      for (const u of e.mountpoints)
        if (l.startsWith(u))
          return {
            base: u,
            relativeKey: l.slice(u.length),
            driver: e.mounts[u]
          };
      return {
        base: "",
        relativeKey: l,
        driver: e.mounts[""]
      };
    }, r = (l, u) => e.mountpoints.filter(
      (d) => d.startsWith(l) || u && l.startsWith(d)
    ).map((d) => ({
      relativeBase: l.length > d.length ? l.slice(d.length) : void 0,
      mountpoint: d,
      driver: e.mounts[d]
    })), i = (l, u) => {
      if (e.watching) {
        u = lt$3(u);
        for (const d of e.watchListeners)
          d(l, u);
      }
    }, n = async () => {
      if (!e.watching) {
        e.watching = true;
        for (const l in e.mounts)
          e.unwatch[l] = await Sc(
            e.mounts[l],
            i,
            l
          );
      }
    }, o = async () => {
      if (e.watching) {
        for (const l in e.unwatch)
          await e.unwatch[l]();
        e.unwatch = {}, e.watching = false;
      }
    }, a = (l, u, d) => {
      const h = /* @__PURE__ */ new Map(), p = (g) => {
        let f = h.get(g.base);
        return f || (f = {
          driver: g.driver,
          base: g.base,
          items: []
        }, h.set(g.base, f)), f;
      };
      for (const g of l) {
        const f = typeof g == "string", w = lt$3(f ? g : g.key), y = f ? void 0 : g.value, b = f || !g.options ? u : { ...u, ...g.options }, v = s(w);
        p(v).items.push({
          key: w,
          value: y,
          relativeKey: v.relativeKey,
          options: b
        });
      }
      return Promise.all([...h.values()].map((g) => d(g))).then(
        (g) => g.flat()
      );
    }, c = {
      // Item
      hasItem(l, u = {}) {
        l = lt$3(l);
        const { relativeKey: d, driver: h } = s(l);
        return Fe$2(h.hasItem, d, u);
      },
      getItem(l, u = {}) {
        l = lt$3(l);
        const { relativeKey: d, driver: h } = s(l);
        return Fe$2(h.getItem, d, u).then(
          (p) => js$1(p)
        );
      },
      getItems(l, u = {}) {
        return a(l, u, (d) => d.driver.getItems ? Fe$2(
          d.driver.getItems,
          d.items.map((h) => ({
            key: h.relativeKey,
            options: h.options
          })),
          u
        ).then(
          (h) => h.map((p) => ({
            key: Ef(d.base, p.key),
            value: js$1(p.value)
          }))
        ) : Promise.all(
          d.items.map((h) => Fe$2(
            d.driver.getItem,
            h.relativeKey,
            h.options
          ).then((p) => ({
            key: h.key,
            value: js$1(p)
          })))
        ));
      },
      getItemRaw(l, u = {}) {
        l = lt$3(l);
        const { relativeKey: d, driver: h } = s(l);
        return h.getItemRaw ? Fe$2(h.getItemRaw, d, u) : Fe$2(h.getItem, d, u).then(
          (p) => yf(p)
        );
      },
      async setItem(l, u, d = {}) {
        if (u === void 0)
          return c.removeItem(l);
        l = lt$3(l);
        const { relativeKey: h, driver: p } = s(l);
        p.setItem && (await Fe$2(p.setItem, h, Kn$1(u), d), p.watch || i("update", l));
      },
      async setItems(l, u) {
        await a(l, u, async (d) => {
          if (d.driver.setItems)
            return Fe$2(
              d.driver.setItems,
              d.items.map((h) => ({
                key: h.relativeKey,
                value: Kn$1(h.value),
                options: h.options
              })),
              u
            );
          d.driver.setItem && await Promise.all(
            d.items.map((h) => Fe$2(
              d.driver.setItem,
              h.relativeKey,
              Kn$1(h.value),
              h.options
            ))
          );
        });
      },
      async setItemRaw(l, u, d = {}) {
        if (u === void 0)
          return c.removeItem(l, d);
        l = lt$3(l);
        const { relativeKey: h, driver: p } = s(l);
        if (p.setItemRaw)
          await Fe$2(p.setItemRaw, h, u, d);
        else if (p.setItem)
          await Fe$2(p.setItem, h, wf(u), d);
        else
          return;
        p.watch || i("update", l);
      },
      async removeItem(l, u = {}) {
        typeof u == "boolean" && (u = { removeMeta: u }), l = lt$3(l);
        const { relativeKey: d, driver: h } = s(l);
        h.removeItem && (await Fe$2(h.removeItem, d, u), (u.removeMeta || u.removeMata) && await Fe$2(h.removeItem, d + "$", u), h.watch || i("remove", l));
      },
      // Meta
      async getMeta(l, u = {}) {
        typeof u == "boolean" && (u = { nativeOnly: u }), l = lt$3(l);
        const { relativeKey: d, driver: h } = s(l), p = /* @__PURE__ */ Object.create(null);
        if (h.getMeta && Object.assign(p, await Fe$2(h.getMeta, d, u)), !u.nativeOnly) {
          const g = await Fe$2(
            h.getItem,
            d + "$",
            u
          ).then((f) => js$1(f));
          g && typeof g == "object" && (typeof g.atime == "string" && (g.atime = new Date(g.atime)), typeof g.mtime == "string" && (g.mtime = new Date(g.mtime)), Object.assign(p, g));
        }
        return p;
      },
      setMeta(l, u, d = {}) {
        return this.setItem(l + "$", u, d);
      },
      removeMeta(l, u = {}) {
        return this.removeItem(l + "$", u);
      },
      // Keys
      async getKeys(l, u = {}) {
        var w;
        l = $n$1(l);
        const d = r(l, true);
        let h = [];
        const p = [];
        let g = true;
        for (const y of d) {
          (w = y.driver.flags) != null && w.maxDepth || (g = false);
          const b = await Fe$2(
            y.driver.getKeys,
            y.relativeBase,
            u
          );
          for (const v of b) {
            const C = y.mountpoint + lt$3(v);
            h.some((S) => C.startsWith(S)) || p.push(C);
          }
          h = [
            y.mountpoint,
            ...h.filter((v) => !v.startsWith(y.mountpoint))
          ];
        }
        const f = u.maxDepth !== void 0 && !g;
        return p.filter(
          (y) => (!f || Cf(y, u.maxDepth)) && If(y, l)
        );
      },
      // Utils
      async clear(l, u = {}) {
        l = $n$1(l), await Promise.all(
          r(l, false).map(async (d) => {
            if (d.driver.clear)
              return Fe$2(d.driver.clear, d.relativeBase, u);
            if (d.driver.removeItem) {
              const h = await d.driver.getKeys(d.relativeBase || "", u);
              return Promise.all(
                h.map((p) => d.driver.removeItem(p, u))
              );
            }
          })
        );
      },
      async dispose() {
        await Promise.all(
          Object.values(e.mounts).map((l) => Pc(l))
        );
      },
      async watch(l) {
        return await n(), e.watchListeners.push(l), async () => {
          e.watchListeners = e.watchListeners.filter(
            (u) => u !== l
          ), e.watchListeners.length === 0 && await o();
        };
      },
      async unwatch() {
        e.watchListeners = [], await o();
      },
      // Mount
      mount(l, u) {
        if (l = $n$1(l), l && e.mounts[l])
          throw new Error(`already mounted at ${l}`);
        return l && (e.mountpoints.push(l), e.mountpoints.sort((d, h) => h.length - d.length)), e.mounts[l] = u, e.watching && Promise.resolve(Sc(u, i, l)).then((d) => {
          e.unwatch[l] = d;
        }).catch(console.error), c;
      },
      async unmount(l, u = true) {
        var d, h;
        l = $n$1(l), !(!l || !e.mounts[l]) && (e.watching && l in e.unwatch && ((h = (d = e.unwatch)[l]) == null || h.call(d), delete e.unwatch[l]), u && await Pc(e.mounts[l]), e.mountpoints = e.mountpoints.filter((p) => p !== l), delete e.mounts[l]);
      },
      getMount(l = "") {
        l = lt$3(l) + ":";
        const u = s(l);
        return {
          driver: u.driver,
          base: u.base
        };
      },
      getMounts(l = "", u = {}) {
        return l = lt$3(l), r(l, u.parents).map((h) => ({
          driver: h.driver,
          base: h.mountpoint
        }));
      },
      // Aliases
      keys: (l, u = {}) => c.getKeys(l, u),
      get: (l, u = {}) => c.getItem(l, u),
      set: (l, u, d = {}) => c.setItem(l, u, d),
      has: (l, u = {}) => c.hasItem(l, u),
      del: (l, u = {}) => c.removeItem(l, u),
      remove: (l, u = {}) => c.removeItem(l, u)
    };
    return c;
  }
  function Sc(t, e, s) {
    return t.watch ? t.watch((r, i) => e(r, s + i)) : () => {
    };
  }
  async function Pc(t) {
    typeof t.dispose == "function" && await Fe$2(t.dispose);
  }
  const Sf = "idb-keyval";
  var Pf = (t = {}) => {
    const e = t.base && t.base.length > 0 ? `${t.base}:` : "", s = (i) => e + i;
    let r;
    return t.dbName && t.storeName && (r = Gd$1(t.dbName, t.storeName)), { name: Sf, options: t, async hasItem(i) {
      return !(typeof await uu$1(s(i), r) > "u");
    }, async getItem(i) {
      return await uu$1(s(i), r) ?? null;
    }, setItem(i, n) {
      return d_(s(i), n, r);
    }, removeItem(i) {
      return p_(s(i), r);
    }, getKeys() {
      return w_(r);
    }, clear() {
      return g_(r);
    } };
  };
  const Of = "WALLET_CONNECT_V2_INDEXED_DB", Tf = "keyvaluestorage";
  let xf = class {
    constructor() {
      this.indexedDb = _f({ driver: Pf({ dbName: Of, storeName: Tf }) });
    }
    async getKeys() {
      return this.indexedDb.getKeys();
    }
    async getEntries() {
      return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((e) => [e.key, e.value]);
    }
    async getItem(e) {
      const s = await this.indexedDb.getItem(e);
      if (s !== null) return s;
    }
    async setItem(e, s) {
      await this.indexedDb.setItem(e, Wt$4(s));
    }
    async removeItem(e) {
      await this.indexedDb.removeItem(e);
    }
  };
  var xo$1 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Vn$1 = { exports: {} };
  (function() {
    let t;
    function e() {
    }
    t = e, t.prototype.getItem = function(s) {
      return this.hasOwnProperty(s) ? String(this[s]) : null;
    }, t.prototype.setItem = function(s, r) {
      this[s] = String(r);
    }, t.prototype.removeItem = function(s) {
      delete this[s];
    }, t.prototype.clear = function() {
      const s = this;
      Object.keys(s).forEach(function(r) {
        s[r] = void 0, delete s[r];
      });
    }, t.prototype.key = function(s) {
      return s = s || 0, Object.keys(this)[s];
    }, t.prototype.__defineGetter__("length", function() {
      return Object.keys(this).length;
    }), typeof xo$1 < "u" && xo$1.localStorage ? Vn$1.exports = xo$1.localStorage : typeof window < "u" && window.localStorage ? Vn$1.exports = window.localStorage : Vn$1.exports = new e();
  })();
  function kf(t) {
    var e;
    return [t[0], Br((e = t[1]) != null ? e : "")];
  }
  let $f = class {
    constructor() {
      this.localStorage = Vn$1.exports;
    }
    async getKeys() {
      return Object.keys(this.localStorage);
    }
    async getEntries() {
      return Object.entries(this.localStorage).map(kf);
    }
    async getItem(e) {
      const s = this.localStorage.getItem(e);
      if (s !== null) return Br(s);
    }
    async setItem(e, s) {
      this.localStorage.setItem(e, Wt$4(s));
    }
    async removeItem(e) {
      this.localStorage.removeItem(e);
    }
  };
  const Rf = "wc_storage_version", Oc = 1, Uf = async (t, e, s) => {
    const r = Rf, i = await e.getItem(r);
    if (i && i >= Oc) {
      s(e);
      return;
    }
    const n = await t.getKeys();
    if (!n.length) {
      s(e);
      return;
    }
    const o = [];
    for (; n.length; ) {
      const a = n.shift();
      if (!a) continue;
      const c = a.toLowerCase();
      if (c.includes("wc@") || c.includes("walletconnect") || c.includes("wc_") || c.includes("wallet_connect")) {
        const l = await t.getItem(a);
        await e.setItem(a, l), o.push(a);
      }
    }
    await e.setItem(r, Oc), s(e), Df(t, o);
  }, Df = async (t, e) => {
    e.length && e.forEach(async (s) => {
      await t.removeItem(s);
    });
  };
  let Lf = class {
    constructor() {
      this.initialized = false, this.setInitialized = (s) => {
        this.storage = s, this.initialized = true;
      };
      const e = new $f();
      this.storage = e;
      try {
        const s = new xf();
        Uf(e, s, this.setInitialized);
      } catch {
        this.initialized = true;
      }
    }
    async getKeys() {
      return await this.initialize(), this.storage.getKeys();
    }
    async getEntries() {
      return await this.initialize(), this.storage.getEntries();
    }
    async getItem(e) {
      return await this.initialize(), this.storage.getItem(e);
    }
    async setItem(e, s) {
      return await this.initialize(), this.storage.setItem(e, s);
    }
    async removeItem(e) {
      return await this.initialize(), this.storage.removeItem(e);
    }
    async initialize() {
      this.initialized || await new Promise((e) => {
        const s = setInterval(() => {
          this.initialized && (clearInterval(s), e());
        }, 20);
      });
    }
  };
  var Mf = Object.defineProperty, Bf = (t, e, s) => e in t ? Mf(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Tc = (t, e, s) => Bf(t, typeof e != "symbol" ? e + "" : e, s);
  let Ff = class extends kr {
    constructor(e) {
      super(), this.opts = e, Tc(this, "protocol", "wc"), Tc(this, "version", 2);
    }
  };
  var jf = Object.defineProperty, qf = (t, e, s) => e in t ? jf(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Wf = (t, e, s) => qf(t, e + "", s);
  let zf = class extends kr {
    constructor(e, s) {
      super(), this.core = e, this.logger = s, Wf(this, "records", /* @__PURE__ */ new Map());
    }
  }, Hf = class {
    constructor(e, s) {
      this.logger = e, this.core = s;
    }
  }, Kf = class extends kr {
    constructor(e, s) {
      super(), this.relayer = e, this.logger = s;
    }
  }, Vf = class extends kr {
    constructor(e) {
      super();
    }
  }, Gf = class {
    constructor(e, s, r, i) {
      this.core = e, this.logger = s, this.name = r;
    }
  }, Jf = class extends kr {
    constructor(e, s) {
      super(), this.relayer = e, this.logger = s;
    }
  }, Yf = class extends kr {
    constructor(e, s) {
      super(), this.core = e, this.logger = s;
    }
  }, Xf = class {
    constructor(e, s, r) {
      this.core = e, this.logger = s, this.store = r;
    }
  }, Zf = class {
    constructor(e, s) {
      this.projectId = e, this.logger = s;
    }
  }, Qf = class {
    constructor(e, s, r) {
      this.core = e, this.logger = s, this.telemetryEnabled = r;
    }
  };
  var eg = Object.defineProperty, tg = (t, e, s) => e in t ? eg(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, xc = (t, e, s) => tg(t, typeof e != "symbol" ? e + "" : e, s);
  let sg = class {
    constructor(e) {
      this.opts = e, xc(this, "protocol", "wc"), xc(this, "version", 2);
    }
  }, rg = class {
    constructor(e) {
      this.client = e;
    }
  };
  function nn$2(t, { strict: e = true } = {}) {
    return !t || typeof t != "string" ? false : e ? /^0x[0-9a-fA-F]*$/.test(t) : t.startsWith("0x");
  }
  function kc(t) {
    return nn$2(t, { strict: false }) ? Math.ceil((t.length - 2) / 2) : t.length;
  }
  const Yu = "2.23.2";
  let ui$1 = {
    getDocsUrl: ({ docsBaseUrl: t, docsPath: e = "", docsSlug: s }) => e ? `${t ?? "https://viem.sh"}${e}${s ? `#${s}` : ""}` : void 0,
    version: `viem@${Yu}`
  };
  class Qs extends Error {
    constructor(e, s = {}) {
      var a;
      const r = (() => {
        var c;
        return s.cause instanceof Qs ? s.cause.details : (c = s.cause) != null && c.message ? s.cause.message : s.details;
      })(), i = s.cause instanceof Qs && s.cause.docsPath || s.docsPath, n = (a = ui$1.getDocsUrl) == null ? void 0 : a.call(ui$1, { ...s, docsPath: i }), o = [
        e || "An error occurred.",
        "",
        ...s.metaMessages ? [...s.metaMessages, ""] : [],
        ...n ? [`Docs: ${n}`] : [],
        ...r ? [`Details: ${r}`] : [],
        ...ui$1.version ? [`Version: ${ui$1.version}`] : []
      ].join(`
`);
      super(o, s.cause ? { cause: s.cause } : void 0), Object.defineProperty(this, "details", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "docsPath", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "metaMessages", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "shortMessage", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "version", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), Object.defineProperty(this, "name", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "BaseError"
      }), this.details = r, this.docsPath = i, this.metaMessages = s.metaMessages, this.name = s.name ?? this.name, this.shortMessage = e, this.version = Yu;
    }
    walk(e) {
      return Xu(this, e);
    }
  }
  function Xu(t, e) {
    return e != null && e(t) ? t : t && typeof t == "object" && "cause" in t && t.cause !== void 0 ? Xu(t.cause, e) : e ? null : t;
  }
  class Zu extends Qs {
    constructor({ size: e, targetSize: s, type: r }) {
      super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${s}).`, { name: "SizeExceedsPaddingSizeError" });
    }
  }
  function si(t, { dir: e, size: s = 32 } = {}) {
    return typeof t == "string" ? ig(t, { dir: e, size: s }) : ng(t, { dir: e, size: s });
  }
  function ig(t, { dir: e, size: s = 32 } = {}) {
    if (s === null)
      return t;
    const r = t.replace("0x", "");
    if (r.length > s * 2)
      throw new Zu({
        size: Math.ceil(r.length / 2),
        targetSize: s,
        type: "hex"
      });
    return `0x${r[e === "right" ? "padEnd" : "padStart"](s * 2, "0")}`;
  }
  function ng(t, { dir: e, size: s = 32 } = {}) {
    if (s === null)
      return t;
    if (t.length > s)
      throw new Zu({
        size: t.length,
        targetSize: s,
        type: "bytes"
      });
    const r = new Uint8Array(s);
    for (let i = 0; i < s; i++) {
      const n = e === "right";
      r[n ? i : s - i - 1] = t[n ? i : t.length - i - 1];
    }
    return r;
  }
  class og extends Qs {
    constructor({ max: e, min: s, signed: r, size: i, value: n }) {
      super(`Number "${n}" is not in safe ${i ? `${i * 8}-bit ${r ? "signed" : "unsigned"} ` : ""}integer range ${e ? `(${s} to ${e})` : `(above ${s})`}`, { name: "IntegerOutOfRangeError" });
    }
  }
  class ag extends Qs {
    constructor({ givenSize: e, maxSize: s }) {
      super(`Size cannot exceed ${s} bytes. Given size: ${e} bytes.`, { name: "SizeOverflowError" });
    }
  }
  function ri$1(t, { size: e }) {
    if (kc(t) > e)
      throw new ag({
        givenSize: kc(t),
        maxSize: e
      });
  }
  function fa(t, e = {}) {
    const { signed: s } = e;
    e.size && ri$1(t, { size: e.size });
    const r = BigInt(t);
    if (!s)
      return r;
    const i = (t.length - 2) / 2, n = (1n << BigInt(i) * 8n - 1n) - 1n;
    return r <= n ? r : r - BigInt(`0x${"f".padStart(i * 2, "f")}`) - 1n;
  }
  function cg(t, e = {}) {
    return Number(fa(t, e));
  }
  const lg = /* @__PURE__ */ Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
  function ga(t, e = {}) {
    return typeof t == "number" || typeof t == "bigint" ? ed(t, e) : typeof t == "string" ? hg(t, e) : typeof t == "boolean" ? ug(t, e) : Qu(t, e);
  }
  function ug(t, e = {}) {
    const s = `0x${Number(t)}`;
    return typeof e.size == "number" ? (ri$1(s, { size: e.size }), si(s, { size: e.size })) : s;
  }
  function Qu(t, e = {}) {
    let s = "";
    for (let i = 0; i < t.length; i++)
      s += lg[t[i]];
    const r = `0x${s}`;
    return typeof e.size == "number" ? (ri$1(r, { size: e.size }), si(r, { dir: "right", size: e.size })) : r;
  }
  function ed(t, e = {}) {
    const { signed: s, size: r } = e, i = BigInt(t);
    let n;
    r ? s ? n = (1n << BigInt(r) * 8n - 1n) - 1n : n = 2n ** (BigInt(r) * 8n) - 1n : typeof t == "number" && (n = BigInt(Number.MAX_SAFE_INTEGER));
    const o = typeof n == "bigint" && s ? -n - 1n : 0;
    if (n && i > n || i < o) {
      const c = typeof t == "bigint" ? "n" : "";
      throw new og({
        max: n ? `${n}${c}` : void 0,
        min: `${o}${c}`,
        signed: s,
        size: r,
        value: `${t}${c}`
      });
    }
    const a = `0x${(s && i < 0 ? (1n << BigInt(r * 8)) + BigInt(i) : i).toString(16)}`;
    return r ? si(a, { size: r }) : a;
  }
  const dg = /* @__PURE__ */ new TextEncoder();
  function hg(t, e = {}) {
    const s = dg.encode(t);
    return Qu(s, e);
  }
  const pg = /* @__PURE__ */ new TextEncoder();
  function fg(t, e = {}) {
    return typeof t == "number" || typeof t == "bigint" ? mg(t, e) : typeof t == "boolean" ? gg(t, e) : nn$2(t) ? td(t, e) : sd(t, e);
  }
  function gg(t, e = {}) {
    const s = new Uint8Array(1);
    return s[0] = Number(t), typeof e.size == "number" ? (ri$1(s, { size: e.size }), si(s, { size: e.size })) : s;
  }
  const is = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102
  };
  function $c(t) {
    if (t >= is.zero && t <= is.nine)
      return t - is.zero;
    if (t >= is.A && t <= is.F)
      return t - (is.A - 10);
    if (t >= is.a && t <= is.f)
      return t - (is.a - 10);
  }
  function td(t, e = {}) {
    let s = t;
    e.size && (ri$1(s, { size: e.size }), s = si(s, { dir: "right", size: e.size }));
    let r = s.slice(2);
    r.length % 2 && (r = `0${r}`);
    const i = r.length / 2, n = new Uint8Array(i);
    for (let o = 0, a = 0; o < i; o++) {
      const c = $c(r.charCodeAt(a++)), l = $c(r.charCodeAt(a++));
      if (c === void 0 || l === void 0)
        throw new Qs(`Invalid byte sequence ("${r[a - 2]}${r[a - 1]}" in "${r}").`);
      n[o] = c * 16 + l;
    }
    return n;
  }
  function mg(t, e) {
    const s = ed(t, e);
    return td(s);
  }
  function sd(t, e = {}) {
    const s = pg.encode(t);
    return typeof e.size == "number" ? (ri$1(s, { size: e.size }), si(s, { dir: "right", size: e.size })) : s;
  }
  function io$1(t) {
    if (!Number.isSafeInteger(t) || t < 0)
      throw new Error("positive integer expected, got " + t);
  }
  function wg(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function go$1(t, ...e) {
    if (!wg(t))
      throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length))
      throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function lA(t) {
    if (typeof t != "function" || typeof t.create != "function")
      throw new Error("Hash should be wrapped by utils.wrapConstructor");
    io$1(t.outputLen), io$1(t.blockLen);
  }
  function Rc(t, e = true) {
    if (t.destroyed)
      throw new Error("Hash instance has been destroyed");
    if (e && t.finished)
      throw new Error("Hash#digest() has already been called");
  }
  function yg(t, e) {
    go$1(t);
    const s = e.outputLen;
    if (t.length < s)
      throw new Error("digestInto() expects output buffer of length at least " + s);
  }
  const Rn$1 = /* @__PURE__ */ BigInt(2 ** 32 - 1), Uc = /* @__PURE__ */ BigInt(32);
  function bg(t, e = false) {
    return e ? { h: Number(t & Rn$1), l: Number(t >> Uc & Rn$1) } : { h: Number(t >> Uc & Rn$1) | 0, l: Number(t & Rn$1) | 0 };
  }
  function vg(t, e = false) {
    let s = new Uint32Array(t.length), r = new Uint32Array(t.length);
    for (let i = 0; i < t.length; i++) {
      const { h: n, l: o } = bg(t[i], e);
      [s[i], r[i]] = [n, o];
    }
    return [s, r];
  }
  const Eg = (t, e, s) => t << s | e >>> 32 - s, Cg = (t, e, s) => e << s | t >>> 32 - s, Ig = (t, e, s) => e << s - 32 | t >>> 64 - s, Ag = (t, e, s) => t << s - 32 | e >>> 64 - s, hr = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function Ng(t) {
    return new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
  }
  function uA(t) {
    return new DataView(t.buffer, t.byteOffset, t.byteLength);
  }
  function dA(t, e) {
    return t << 32 - e | t >>> e;
  }
  const Dc = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  function _g(t) {
    return t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;
  }
  function Lc(t) {
    for (let e = 0; e < t.length; e++)
      t[e] = _g(t[e]);
  }
  function Sg(t) {
    if (typeof t != "string")
      throw new Error("utf8ToBytes expected string, got " + typeof t);
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function rd(t) {
    return typeof t == "string" && (t = Sg(t)), go$1(t), t;
  }
  function hA(...t) {
    let e = 0;
    for (let r = 0; r < t.length; r++) {
      const i = t[r];
      go$1(i), e += i.length;
    }
    const s = new Uint8Array(e);
    for (let r = 0, i = 0; r < t.length; r++) {
      const n = t[r];
      s.set(n, i), i += n.length;
    }
    return s;
  }
  class Pg {
    // Safe version that clones internal state
    clone() {
      return this._cloneInto();
    }
  }
  function Og(t) {
    const e = (r) => t().update(rd(r)).digest(), s = t();
    return e.outputLen = s.outputLen, e.blockLen = s.blockLen, e.create = () => t(), e;
  }
  function pA(t = 32) {
    if (hr && typeof hr.getRandomValues == "function")
      return hr.getRandomValues(new Uint8Array(t));
    if (hr && typeof hr.randomBytes == "function")
      return hr.randomBytes(t);
    throw new Error("crypto.getRandomValues must be defined");
  }
  const id = [], nd = [], od = [], Tg = /* @__PURE__ */ BigInt(0), di$1 = /* @__PURE__ */ BigInt(1), xg = /* @__PURE__ */ BigInt(2), kg = /* @__PURE__ */ BigInt(7), $g = /* @__PURE__ */ BigInt(256), Rg = /* @__PURE__ */ BigInt(113);
  for (let t = 0, e = di$1, s = 1, r = 0; t < 24; t++) {
    [s, r] = [r, (2 * s + 3 * r) % 5], id.push(2 * (5 * r + s)), nd.push((t + 1) * (t + 2) / 2 % 64);
    let i = Tg;
    for (let n = 0; n < 7; n++)
      e = (e << di$1 ^ (e >> kg) * Rg) % $g, e & xg && (i ^= di$1 << (di$1 << /* @__PURE__ */ BigInt(n)) - di$1);
    od.push(i);
  }
  const [Ug, Dg] = /* @__PURE__ */ vg(od, true), Mc = (t, e, s) => s > 32 ? Ig(t, e, s) : Eg(t, e, s), Bc = (t, e, s) => s > 32 ? Ag(t, e, s) : Cg(t, e, s);
  function Lg(t, e = 24) {
    const s = new Uint32Array(10);
    for (let r = 24 - e; r < 24; r++) {
      for (let o = 0; o < 10; o++)
        s[o] = t[o] ^ t[o + 10] ^ t[o + 20] ^ t[o + 30] ^ t[o + 40];
      for (let o = 0; o < 10; o += 2) {
        const a = (o + 8) % 10, c = (o + 2) % 10, l = s[c], u = s[c + 1], d = Mc(l, u, 1) ^ s[a], h = Bc(l, u, 1) ^ s[a + 1];
        for (let p = 0; p < 50; p += 10)
          t[o + p] ^= d, t[o + p + 1] ^= h;
      }
      let i = t[2], n = t[3];
      for (let o = 0; o < 24; o++) {
        const a = nd[o], c = Mc(i, n, a), l = Bc(i, n, a), u = id[o];
        i = t[u], n = t[u + 1], t[u] = c, t[u + 1] = l;
      }
      for (let o = 0; o < 50; o += 10) {
        for (let a = 0; a < 10; a++)
          s[a] = t[o + a];
        for (let a = 0; a < 10; a++)
          t[o + a] ^= ~s[(a + 2) % 10] & s[(a + 4) % 10];
      }
      t[0] ^= Ug[r], t[1] ^= Dg[r];
    }
    s.fill(0);
  }
  class Za extends Pg {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(e, s, r, i = false, n = 24) {
      if (super(), this.blockLen = e, this.suffix = s, this.outputLen = r, this.enableXOF = i, this.rounds = n, this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, io$1(r), 0 >= this.blockLen || this.blockLen >= 200)
        throw new Error("Sha3 supports only keccak-f1600 function");
      this.state = new Uint8Array(200), this.state32 = Ng(this.state);
    }
    keccak() {
      Dc || Lc(this.state32), Lg(this.state32, this.rounds), Dc || Lc(this.state32), this.posOut = 0, this.pos = 0;
    }
    update(e) {
      Rc(this);
      const { blockLen: s, state: r } = this;
      e = rd(e);
      const i = e.length;
      for (let n = 0; n < i; ) {
        const o = Math.min(s - this.pos, i - n);
        for (let a = 0; a < o; a++)
          r[this.pos++] ^= e[n++];
        this.pos === s && this.keccak();
      }
      return this;
    }
    finish() {
      if (this.finished)
        return;
      this.finished = true;
      const { state: e, suffix: s, pos: r, blockLen: i } = this;
      e[r] ^= s, s & 128 && r === i - 1 && this.keccak(), e[i - 1] ^= 128, this.keccak();
    }
    writeInto(e) {
      Rc(this, false), go$1(e), this.finish();
      const s = this.state, { blockLen: r } = this;
      for (let i = 0, n = e.length; i < n; ) {
        this.posOut >= r && this.keccak();
        const o = Math.min(r - this.posOut, n - i);
        e.set(s.subarray(this.posOut, this.posOut + o), i), this.posOut += o, i += o;
      }
      return e;
    }
    xofInto(e) {
      if (!this.enableXOF)
        throw new Error("XOF is not possible for this instance");
      return this.writeInto(e);
    }
    xof(e) {
      return io$1(e), this.xofInto(new Uint8Array(e));
    }
    digestInto(e) {
      if (yg(e, this), this.finished)
        throw new Error("digest() was already called");
      return this.writeInto(e), this.destroy(), e;
    }
    digest() {
      return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
      this.destroyed = true, this.state.fill(0);
    }
    _cloneInto(e) {
      const { blockLen: s, suffix: r, outputLen: i, rounds: n, enableXOF: o } = this;
      return e || (e = new Za(s, r, i, o, n)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = n, e.suffix = r, e.outputLen = i, e.enableXOF = o, e.destroyed = this.destroyed, e;
    }
  }
  const Mg = (t, e, s) => Og(() => new Za(e, t, s)), Bg = /* @__PURE__ */ Mg(1, 136, 256 / 8);
  function ad(t, e) {
    const s = e || "hex", r = Bg(nn$2(t, { strict: false }) ? fg(t) : t);
    return s === "bytes" ? r : ga(r);
  }
  class Fg extends Map {
    constructor(e) {
      super(), Object.defineProperty(this, "maxSize", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: void 0
      }), this.maxSize = e;
    }
    get(e) {
      const s = super.get(e);
      return super.has(e) && s !== void 0 && (this.delete(e), super.set(e, s)), s;
    }
    set(e, s) {
      if (super.set(e, s), this.maxSize && this.size > this.maxSize) {
        const r = this.keys().next().value;
        r && this.delete(r);
      }
      return this;
    }
  }
  const ko = /* @__PURE__ */ new Fg(8192);
  function jg(t, e) {
    if (ko.has(`${t}.${e}`))
      return ko.get(`${t}.${e}`);
    const s = t.substring(2).toLowerCase(), r = ad(sd(s), "bytes"), i = s.split("");
    for (let o = 0; o < 40; o += 2)
      r[o >> 1] >> 4 >= 8 && i[o] && (i[o] = i[o].toUpperCase()), (r[o >> 1] & 15) >= 8 && i[o + 1] && (i[o + 1] = i[o + 1].toUpperCase());
    const n = `0x${i.join("")}`;
    return ko.set(`${t}.${e}`, n), n;
  }
  function qg(t) {
    const e = ad(`0x${t.substring(4)}`).substring(26);
    return jg(`0x${e}`);
  }
  async function Wg({ hash: t, signature: e }) {
    const s = nn$2(t) ? t : ga(t), { secp256k1: r } = await Promise.resolve().then(function () { return secp256k1Dv_CZw7K; });
    return `0x${(() => {
    if (typeof e == "object" && "r" in e && "s" in e) {
      const { r: l, s: u, v: d, yParity: h } = e, p = Number(h ?? d), g = Fc(p);
      return new r.Signature(fa(l), fa(u)).addRecoveryBit(g);
    }
    const o = nn$2(e) ? e : ga(e), a = cg(`0x${o.slice(130)}`), c = Fc(a);
    return r.Signature.fromCompact(o.substring(2, 130)).addRecoveryBit(c);
  })().recoverPublicKey(s.substring(2)).toHex(false)}`;
  }
  function Fc(t) {
    if (t === 0 || t === 1)
      return t;
    if (t === 27)
      return 0;
    if (t === 28)
      return 1;
    throw new Error("Invalid yParityOrV value");
  }
  async function zg({ hash: t, signature: e }) {
    return qg(await Wg({ hash: t, signature: e }));
  }
  function cd(t = 0) {
    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(t) : new Uint8Array(t);
  }
  function Ti$1(t, e) {
    e || (e = t.reduce((i, n) => i + n.length, 0));
    const s = cd(e);
    let r = 0;
    for (const i of t)
      s.set(i, r), r += i.length;
    return s;
  }
  function ld(t, e, s, r) {
    return {
      name: t,
      prefix: e,
      encoder: {
        name: t,
        prefix: e,
        encode: s
      },
      decoder: { decode: r }
    };
  }
  const jc = ld("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1))), $o$1 = ld("ascii", "a", (t) => {
    let e = "a";
    for (let s = 0; s < t.length; s++)
      e += String.fromCharCode(t[s]);
    return e;
  }, (t) => {
    t = t.substring(1);
    const e = cd(t.length);
    for (let s = 0; s < t.length; s++)
      e[s] = t.charCodeAt(s);
    return e;
  }), ud = {
    utf8: jc,
    "utf-8": jc,
    hex: hh.base16,
    latin1: $o$1,
    ascii: $o$1,
    binary: $o$1,
    ...hh
  };
  function xt$2(t, e = "utf8") {
    const s = ud[e];
    if (!s)
      throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t, "utf8") : s.decoder.decode(`${s.prefix}${t}`);
  }
  function ht$3(t, e = "utf8") {
    const s = ud[e];
    if (!s)
      throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : s.encoder.encode(t).substring(1);
  }
  const Hg = ":";
  function Dr(t) {
    const [e, s] = t.split(Hg);
    return { namespace: e, reference: s };
  }
  function dd(t, e) {
    return t.includes(":") ? [t] : e.chains || [];
  }
  var Kg = Object.defineProperty, Vg = Object.defineProperties, Gg = Object.getOwnPropertyDescriptors, qc = Object.getOwnPropertySymbols, Jg = Object.prototype.hasOwnProperty, Yg = Object.prototype.propertyIsEnumerable, Wc = (t, e, s) => e in t ? Kg(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, zc = (t, e) => {
    for (var s in e || (e = {})) Jg.call(e, s) && Wc(t, s, e[s]);
    if (qc) for (var s of qc(e)) Yg.call(e, s) && Wc(t, s, e[s]);
    return t;
  }, Xg = (t, e) => Vg(t, Gg(e));
  const Zg = "ReactNative", vt$3 = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" }, Qg = "js";
  function no$1() {
    return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
  }
  function ks() {
    return !Tr$1() && !!Ca$1() && navigator.product === Zg;
  }
  function em() {
    return ks() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "android";
  }
  function tm() {
    return ks() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "ios";
  }
  function ii$1() {
    return !no$1() && !!Ca$1() && !!Tr$1();
  }
  function wn$1() {
    return ks() ? vt$3.reactNative : no$1() ? vt$3.node : ii$1() ? vt$3.browser : vt$3.unknown;
  }
  function Hc() {
    var t;
    try {
      return ks() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (t = global.Application) == null ? void 0 : t.applicationId : void 0;
    } catch {
      return;
    }
  }
  function sm(t, e) {
    const s = new URLSearchParams(t);
    for (const r of Object.keys(e).sort()) if (e.hasOwnProperty(r)) {
      const i = e[r];
      i !== void 0 && s.set(r, i);
    }
    return s.toString();
  }
  function rm(t) {
    var e, s;
    const r = hd();
    try {
      return t != null && t.url && r.url && new URL(t.url).host !== new URL(r.url).host && (console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`), t.url = r.url), (e = t == null ? void 0 : t.icons) != null && e.length && t.icons.length > 0 && (t.icons = t.icons.filter((i) => i !== "")), Xg(zc(zc({}, r), t), { url: (t == null ? void 0 : t.url) || r.url, name: (t == null ? void 0 : t.name) || r.name, description: (t == null ? void 0 : t.description) || r.description, icons: (s = t == null ? void 0 : t.icons) != null && s.length && t.icons.length > 0 ? t.icons : r.icons });
    } catch (i) {
      return console.warn("Error populating app metadata", i), t || r;
    }
  }
  function hd() {
    return Rl$1() || { name: "", description: "", url: "", icons: [""] };
  }
  function im() {
    if (wn$1() === vt$3.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
      const { OS: s, Version: r } = global.Platform;
      return [s, r].join("-");
    }
    const t = ag$1();
    if (t === null) return "unknown";
    const e = t.os ? t.os.replace(" ", "").toLowerCase() : "unknown";
    return t.type === "browser" ? [e, t.name, t.version].join("-") : [e, t.version].join("-");
  }
  function nm() {
    var t;
    const e = wn$1();
    return e === vt$3.browser ? [e, ((t = Tl$1()) == null ? void 0 : t.host) || "unknown"].join(":") : e;
  }
  function pd(t, e, s) {
    const r = im(), i = nm();
    return [[t, e].join("-"), [Qg, s].join("-"), r, i].join("/");
  }
  function om({ protocol: t, version: e, relayUrl: s, sdkVersion: r, auth: i, projectId: n, useOnCloseEvent: o, bundleId: a, packageName: c }) {
    const l = s.split("?"), u = pd(t, e, r), d = { auth: i, ua: u, projectId: n, useOnCloseEvent: o, packageName: c || void 0, bundleId: a || void 0 }, h = sm(l[1] || "", d);
    return l[0] + "?" + h;
  }
  function Ks(t, e) {
    return t.filter((s) => e.includes(s)).length === t.length;
  }
  function ma(t) {
    return Object.fromEntries(t.entries());
  }
  function wa(t) {
    return new Map(Object.entries(t));
  }
  function Bs(t = L$3.FIVE_MINUTES, e) {
    const s = L$3.toMiliseconds(t || L$3.FIVE_MINUTES);
    let r, i, n, o;
    return { resolve: (a) => {
      n && r && (clearTimeout(n), r(a), o = Promise.resolve(a));
    }, reject: (a) => {
      n && i && (clearTimeout(n), i(a));
    }, done: () => new Promise((a, c) => {
      if (o) return a(o);
      n = setTimeout(() => {
        const l = new Error(e);
        o = Promise.reject(l), c(l);
      }, s), r = a, i = c;
    }) };
  }
  function As(t, e, s) {
    return new Promise(async (r, i) => {
      const n = setTimeout(() => i(new Error(s)), e);
      try {
        const o = await t;
        r(o);
      } catch (o) {
        i(o);
      }
      clearTimeout(n);
    });
  }
  function fd(t, e) {
    if (typeof e == "string" && e.startsWith(`${t}:`)) return e;
    if (t.toLowerCase() === "topic") {
      if (typeof e != "string") throw new Error('Value must be "string" for expirer target type: topic');
      return `topic:${e}`;
    } else if (t.toLowerCase() === "id") {
      if (typeof e != "number") throw new Error('Value must be "number" for expirer target type: id');
      return `id:${e}`;
    }
    throw new Error(`Unknown expirer target type: ${t}`);
  }
  function am(t) {
    return fd("topic", t);
  }
  function cm(t) {
    return fd("id", t);
  }
  function gd(t) {
    const [e, s] = t.split(":"), r = { id: void 0, topic: void 0 };
    if (e === "topic" && typeof s == "string") r.topic = s;
    else if (e === "id" && Number.isInteger(Number(s))) r.id = Number(s);
    else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${s}`);
    return r;
  }
  function De$3(t, e) {
    return L$3.fromMiliseconds(Date.now() + L$3.toMiliseconds(t));
  }
  function vs(t) {
    return Date.now() >= L$3.toMiliseconds(t);
  }
  function pe$2(t, e) {
    return `${t}${e ? `:${e}` : ""}`;
  }
  function Xt$2(t = [], e = []) {
    return [.../* @__PURE__ */ new Set([...t, ...e])];
  }
  async function lm({ id: t, topic: e, wcDeepLink: s }) {
    var r;
    try {
      if (!s) return;
      const i = typeof s == "string" ? JSON.parse(s) : s, n = i == null ? void 0 : i.href;
      if (typeof n != "string") return;
      const o = um(n, t, e), a = wn$1();
      if (a === vt$3.browser) {
        if (!((r = Tr$1()) != null && r.hasFocus())) {
          console.warn("Document does not have focus, skipping deeplink.");
          return;
        }
        dm(o);
      } else a === vt$3.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(o);
    } catch (i) {
      console.error(i);
    }
  }
  function um(t, e, s) {
    const r = `requestId=${e}&sessionTopic=${s}`;
    t.endsWith("/") && (t = t.slice(0, -1));
    let i = `${t}`;
    if (t.startsWith("https://t.me")) {
      const n = t.includes("?") ? "&startapp=" : "?startapp=";
      i = `${i}${n}${gm(r, true)}`;
    } else i = `${i}/wc?${r}`;
    return i;
  }
  function dm(t) {
    let e = "_self";
    fm() ? e = "_top" : (pm() || t.startsWith("https://") || t.startsWith("http://")) && (e = "_blank"), window.open(t, e, "noreferrer noopener");
  }
  async function hm(t, e) {
    let s = "";
    try {
      if (ii$1() && (s = localStorage.getItem(e), s)) return s;
      s = await t.getItem(e);
    } catch (r) {
      console.error(r);
    }
    return s;
  }
  function Kc(t, e) {
    if (!t.includes(e)) return null;
    const s = t.split(/([&,?,=])/), r = s.indexOf(e);
    return s[r + 2];
  }
  function Vc() {
    return typeof crypto < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (t) => {
      const e = Math.random() * 16 | 0;
      return (t === "x" ? e : e & 3 | 8).toString(16);
    });
  }
  function Qa() {
    return typeof process < "u" && process.env.IS_VITEST === "true";
  }
  function pm() {
    return typeof window < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
  }
  function fm() {
    try {
      return window.self !== window.top;
    } catch {
      return false;
    }
  }
  function gm(t, e = false) {
    const s = Buffer.from(t).toString("base64");
    return e ? s.replace(/[=]/g, "") : s;
  }
  function md(t) {
    return Buffer.from(t, "base64").toString("utf-8");
  }
  function mm(t) {
    return new Promise((e) => setTimeout(e, t));
  }
  function on$2(t) {
    if (!Number.isSafeInteger(t) || t < 0) throw new Error("positive integer expected, got " + t);
  }
  function wm(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function yn$1(t, ...e) {
    if (!wm(t)) throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length)) throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function ec(t) {
    if (typeof t != "function" || typeof t.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
    on$2(t.outputLen), on$2(t.blockLen);
  }
  function zr(t, e = true) {
    if (t.destroyed) throw new Error("Hash instance has been destroyed");
    if (e && t.finished) throw new Error("Hash#digest() has already been called");
  }
  function wd(t, e) {
    yn$1(t);
    const s = e.outputLen;
    if (t.length < s) throw new Error("digestInto() expects output buffer of length at least " + s);
  }
  const Un$1 = BigInt(2 ** 32 - 1), Gc = BigInt(32);
  function ym(t, e = false) {
    return e ? { h: Number(t & Un$1), l: Number(t >> Gc & Un$1) } : { h: Number(t >> Gc & Un$1) | 0, l: Number(t & Un$1) | 0 };
  }
  function bm(t, e = false) {
    let s = new Uint32Array(t.length), r = new Uint32Array(t.length);
    for (let i = 0; i < t.length; i++) {
      const { h: n, l: o } = ym(t[i], e);
      [s[i], r[i]] = [n, o];
    }
    return [s, r];
  }
  const vm = (t, e, s) => t << s | e >>> 32 - s, Em = (t, e, s) => e << s | t >>> 32 - s, Cm = (t, e, s) => e << s - 32 | t >>> 64 - s, Im = (t, e, s) => t << s - 32 | e >>> 64 - s, pr = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
  function Am(t) {
    return new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4));
  }
  function Ro$1(t) {
    return new DataView(t.buffer, t.byteOffset, t.byteLength);
  }
  function Wt$2(t, e) {
    return t << 32 - e | t >>> e;
  }
  const Jc = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  function Nm(t) {
    return t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;
  }
  function Yc(t) {
    for (let e = 0; e < t.length; e++) t[e] = Nm(t[e]);
  }
  function _m(t) {
    if (typeof t != "string") throw new Error("utf8ToBytes expected string, got " + typeof t);
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function Hr(t) {
    return typeof t == "string" && (t = _m(t)), yn$1(t), t;
  }
  function Sm(...t) {
    let e = 0;
    for (let r = 0; r < t.length; r++) {
      const i = t[r];
      yn$1(i), e += i.length;
    }
    const s = new Uint8Array(e);
    for (let r = 0, i = 0; r < t.length; r++) {
      const n = t[r];
      s.set(n, i), i += n.length;
    }
    return s;
  }
  let tc = class {
    clone() {
      return this._cloneInto();
    }
  };
  function yd(t) {
    const e = (r) => t().update(Hr(r)).digest(), s = t();
    return e.outputLen = s.outputLen, e.blockLen = s.blockLen, e.create = () => t(), e;
  }
  function ni$1(t = 32) {
    if (pr && typeof pr.getRandomValues == "function") return pr.getRandomValues(new Uint8Array(t));
    if (pr && typeof pr.randomBytes == "function") return pr.randomBytes(t);
    throw new Error("crypto.getRandomValues must be defined");
  }
  const bd = [], vd = [], Ed = [], Pm = BigInt(0), hi$1 = BigInt(1), Om = BigInt(2), Tm = BigInt(7), xm = BigInt(256), km = BigInt(113);
  for (let t = 0, e = hi$1, s = 1, r = 0; t < 24; t++) {
    [s, r] = [r, (2 * s + 3 * r) % 5], bd.push(2 * (5 * r + s)), vd.push((t + 1) * (t + 2) / 2 % 64);
    let i = Pm;
    for (let n = 0; n < 7; n++) e = (e << hi$1 ^ (e >> Tm) * km) % xm, e & Om && (i ^= hi$1 << (hi$1 << BigInt(n)) - hi$1);
    Ed.push(i);
  }
  const [$m, Rm] = bm(Ed, true), Xc = (t, e, s) => s > 32 ? Cm(t, e, s) : vm(t, e, s), Zc = (t, e, s) => s > 32 ? Im(t, e, s) : Em(t, e, s);
  function Um(t, e = 24) {
    const s = new Uint32Array(10);
    for (let r = 24 - e; r < 24; r++) {
      for (let o = 0; o < 10; o++) s[o] = t[o] ^ t[o + 10] ^ t[o + 20] ^ t[o + 30] ^ t[o + 40];
      for (let o = 0; o < 10; o += 2) {
        const a = (o + 8) % 10, c = (o + 2) % 10, l = s[c], u = s[c + 1], d = Xc(l, u, 1) ^ s[a], h = Zc(l, u, 1) ^ s[a + 1];
        for (let p = 0; p < 50; p += 10) t[o + p] ^= d, t[o + p + 1] ^= h;
      }
      let i = t[2], n = t[3];
      for (let o = 0; o < 24; o++) {
        const a = vd[o], c = Xc(i, n, a), l = Zc(i, n, a), u = bd[o];
        i = t[u], n = t[u + 1], t[u] = c, t[u + 1] = l;
      }
      for (let o = 0; o < 50; o += 10) {
        for (let a = 0; a < 10; a++) s[a] = t[o + a];
        for (let a = 0; a < 10; a++) t[o + a] ^= ~s[(a + 2) % 10] & s[(a + 4) % 10];
      }
      t[0] ^= $m[r], t[1] ^= Rm[r];
    }
    s.fill(0);
  }
  let Dm = class Cd extends tc {
    constructor(e, s, r, i = false, n = 24) {
      if (super(), this.blockLen = e, this.suffix = s, this.outputLen = r, this.enableXOF = i, this.rounds = n, this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, on$2(r), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
      this.state = new Uint8Array(200), this.state32 = Am(this.state);
    }
    keccak() {
      Jc || Yc(this.state32), Um(this.state32, this.rounds), Jc || Yc(this.state32), this.posOut = 0, this.pos = 0;
    }
    update(e) {
      zr(this);
      const { blockLen: s, state: r } = this;
      e = Hr(e);
      const i = e.length;
      for (let n = 0; n < i; ) {
        const o = Math.min(s - this.pos, i - n);
        for (let a = 0; a < o; a++) r[this.pos++] ^= e[n++];
        this.pos === s && this.keccak();
      }
      return this;
    }
    finish() {
      if (this.finished) return;
      this.finished = true;
      const { state: e, suffix: s, pos: r, blockLen: i } = this;
      e[r] ^= s, s & 128 && r === i - 1 && this.keccak(), e[i - 1] ^= 128, this.keccak();
    }
    writeInto(e) {
      zr(this, false), yn$1(e), this.finish();
      const s = this.state, { blockLen: r } = this;
      for (let i = 0, n = e.length; i < n; ) {
        this.posOut >= r && this.keccak();
        const o = Math.min(r - this.posOut, n - i);
        e.set(s.subarray(this.posOut, this.posOut + o), i), this.posOut += o, i += o;
      }
      return e;
    }
    xofInto(e) {
      if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
      return this.writeInto(e);
    }
    xof(e) {
      return on$2(e), this.xofInto(new Uint8Array(e));
    }
    digestInto(e) {
      if (wd(e, this), this.finished) throw new Error("digest() was already called");
      return this.writeInto(e), this.destroy(), e;
    }
    digest() {
      return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
      this.destroyed = true, this.state.fill(0);
    }
    _cloneInto(e) {
      const { blockLen: s, suffix: r, outputLen: i, rounds: n, enableXOF: o } = this;
      return e || (e = new Cd(s, r, i, o, n)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = n, e.suffix = r, e.outputLen = i, e.enableXOF = o, e.destroyed = this.destroyed, e;
    }
  };
  const Lm = (t, e, s) => yd(() => new Dm(e, t, s)), Mm = Lm(1, 136, 256 / 8), Bm = "https://rpc.walletconnect.org/v1";
  function Id(t) {
    const e = `Ethereum Signed Message:
${t.length}`, s = new TextEncoder().encode(e + t);
    return "0x" + Buffer.from(Mm(s)).toString("hex");
  }
  async function Fm(t, e, s, r, i, n) {
    switch (s.t) {
      case "eip191":
        return await jm(t, e, s.s);
      case "eip1271":
        return await qm(t, e, s.s, r, i, n);
      default:
        throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${s.t}`);
    }
  }
  async function jm(t, e, s) {
    return (await zg({ hash: Id(e), signature: s })).toLowerCase() === t.toLowerCase();
  }
  async function qm(t, e, s, r, i, n) {
    const o = Dr(r);
    if (!o.namespace || !o.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);
    try {
      const a = "0x1626ba7e", c = "0000000000000000000000000000000000000000000000000000000000000040", l = "0000000000000000000000000000000000000000000000000000000000000041", u = s.substring(2), d = Id(e).substring(2), h = a + d + c + l + u, p = await fetch(`${n || Bm}/?chainId=${r}&projectId=${i}`, { method: "POST", body: JSON.stringify({ id: Wm(), jsonrpc: "2.0", method: "eth_call", params: [{ to: t, data: h }, "latest"] }) }), { result: g } = await p.json();
      return g ? g.slice(0, a.length).toLowerCase() === a.toLowerCase() : !1;
    } catch (a) {
      return console.error("isValidEip1271Signature: ", a), false;
    }
  }
  function Wm() {
    return Date.now() + Math.floor(Math.random() * 1e3);
  }
  function zm(t) {
    const e = atob(t), s = new Uint8Array(e.length);
    for (let o = 0; o < e.length; o++) s[o] = e.charCodeAt(o);
    const r = s[0];
    if (r === 0) throw new Error("No signatures found");
    const i = 1 + r * 64;
    if (s.length < i) throw new Error("Transaction data too short for claimed signature count");
    if (s.length < 100) throw new Error("Transaction too short");
    const n = Buffer.from(t, "base64").slice(1, 65);
    return ps$1.encode(n);
  }
  var Hm = Object.defineProperty, Km = Object.defineProperties, Vm = Object.getOwnPropertyDescriptors, Qc = Object.getOwnPropertySymbols, Gm = Object.prototype.hasOwnProperty, Jm = Object.prototype.propertyIsEnumerable, el = (t, e, s) => e in t ? Hm(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ym = (t, e) => {
    for (var s in e || (e = {})) Gm.call(e, s) && el(t, s, e[s]);
    if (Qc) for (var s of Qc(e)) Jm.call(e, s) && el(t, s, e[s]);
    return t;
  }, Xm = (t, e) => Km(t, Vm(e));
  const Zm = "did:pkh:", sc = (t) => t == null ? void 0 : t.split(":"), Qm = (t) => {
    const e = t && sc(t);
    if (e) return t.includes(Zm) ? e[3] : e[1];
  }, ya = (t) => {
    const e = t && sc(t);
    if (e) return e[2] + ":" + e[3];
  }, oo$1 = (t) => {
    const e = t && sc(t);
    if (e) return e.pop();
  };
  async function tl(t) {
    const { cacao: e, projectId: s } = t, { s: r, p: i } = e, n = Ad(i, i.iss), o = oo$1(i.iss);
    return await Fm(o, n, r, ya(i.iss), s);
  }
  const Ad = (t, e) => {
    const s = `${t.domain} wants you to sign in with your Ethereum account:`, r = oo$1(e);
    if (!t.aud && !t.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
    let i = t.statement || void 0;
    const n = `URI: ${t.aud || t.uri}`, o = `Version: ${t.version}`, a = `Chain ID: ${Qm(e)}`, c = `Nonce: ${t.nonce}`, l = `Issued At: ${t.iat}`, u = t.exp ? `Expiration Time: ${t.exp}` : void 0, d = t.nbf ? `Not Before: ${t.nbf}` : void 0, h = t.requestId ? `Request ID: ${t.requestId}` : void 0, p = t.resources ? `Resources:${t.resources.map((f) => `
- ${f}`).join("")}` : void 0, g = Gn$1(t.resources);
    if (g) {
      const f = an$1(g);
      i = cw(i, f);
    }
    return [s, r, "", i, "", n, o, a, c, l, u, d, h, p].filter((f) => f != null).join(`
`);
  };
  function ew(t) {
    return Buffer.from(JSON.stringify(t)).toString("base64");
  }
  function tw(t) {
    return JSON.parse(Buffer.from(t, "base64").toString("utf-8"));
  }
  function er(t) {
    if (!t) throw new Error("No recap provided, value is undefined");
    if (!t.att) throw new Error("No `att` property found");
    const e = Object.keys(t.att);
    if (!(e != null && e.length)) throw new Error("No resources found in `att` property");
    e.forEach((s) => {
      const r = t.att[s];
      if (Array.isArray(r)) throw new Error(`Resource must be an object: ${s}`);
      if (typeof r != "object") throw new Error(`Resource must be an object: ${s}`);
      if (!Object.keys(r).length) throw new Error(`Resource object is empty: ${s}`);
      Object.keys(r).forEach((i) => {
        const n = r[i];
        if (!Array.isArray(n)) throw new Error(`Ability limits ${i} must be an array of objects, found: ${n}`);
        if (!n.length) throw new Error(`Value of ${i} is empty array, must be an array with objects`);
        n.forEach((o) => {
          if (typeof o != "object") throw new Error(`Ability limits (${i}) must be an array of objects, found: ${o}`);
        });
      });
    });
  }
  function sw(t, e, s, r = {}) {
    return s == null || s.sort((i, n) => i.localeCompare(n)), { att: { [t]: rw(e, s, r) } };
  }
  function rw(t, e, s = {}) {
    e = e == null ? void 0 : e.sort((i, n) => i.localeCompare(n));
    const r = e.map((i) => ({ [`${t}/${i}`]: [s] }));
    return Object.assign({}, ...r);
  }
  function Nd(t) {
    return er(t), `urn:recap:${ew(t).replace(/=/g, "")}`;
  }
  function an$1(t) {
    const e = tw(t.replace("urn:recap:", ""));
    return er(e), e;
  }
  function iw(t, e, s) {
    const r = sw(t, e, s);
    return Nd(r);
  }
  function nw(t) {
    return t && t.includes("urn:recap:");
  }
  function ow(t, e) {
    const s = an$1(t), r = an$1(e), i = aw(s, r);
    return Nd(i);
  }
  function aw(t, e) {
    er(t), er(e);
    const s = Object.keys(t.att).concat(Object.keys(e.att)).sort((i, n) => i.localeCompare(n)), r = { att: {} };
    return s.forEach((i) => {
      var n, o;
      Object.keys(((n = t.att) == null ? void 0 : n[i]) || {}).concat(Object.keys(((o = e.att) == null ? void 0 : o[i]) || {})).sort((a, c) => a.localeCompare(c)).forEach((a) => {
        var c, l;
        r.att[i] = Xm(Ym({}, r.att[i]), { [a]: ((c = t.att[i]) == null ? void 0 : c[a]) || ((l = e.att[i]) == null ? void 0 : l[a]) });
      });
    }), r;
  }
  function cw(t = "", e) {
    er(e);
    const s = "I further authorize the stated URI to perform the following actions on my behalf: ";
    if (t.includes(s)) return t;
    const r = [];
    let i = 0;
    Object.keys(e.att).forEach((a) => {
      const c = Object.keys(e.att[a]).map((d) => ({ ability: d.split("/")[0], action: d.split("/")[1] }));
      c.sort((d, h) => d.action.localeCompare(h.action));
      const l = {};
      c.forEach((d) => {
        l[d.ability] || (l[d.ability] = []), l[d.ability].push(d.action);
      });
      const u = Object.keys(l).map((d) => (i++, `(${i}) '${d}': '${l[d].join("', '")}' for '${a}'.`));
      r.push(u.join(", ").replace(".,", "."));
    });
    const n = r.join(" "), o = `${s}${n}`;
    return `${t ? t + " " : ""}${o}`;
  }
  function sl(t) {
    var e;
    const s = an$1(t);
    er(s);
    const r = (e = s.att) == null ? void 0 : e.eip155;
    return r ? Object.keys(r).map((i) => i.split("/")[1]) : [];
  }
  function rl(t) {
    const e = an$1(t);
    er(e);
    const s = [];
    return Object.values(e.att).forEach((r) => {
      Object.values(r).forEach((i) => {
        var n;
        (n = i == null ? void 0 : i[0]) != null && n.chains && s.push(i[0].chains);
      });
    }), [...new Set(s.flat())];
  }
  function Gn$1(t) {
    if (!t) return;
    const e = t == null ? void 0 : t[t.length - 1];
    return nw(e) ? e : void 0;
  }
  function Uo(t) {
    if (!Number.isSafeInteger(t) || t < 0) throw new Error("positive integer expected, got " + t);
  }
  function _d(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function bt$3(t, ...e) {
    if (!_d(t)) throw new Error("Uint8Array expected");
    if (e.length > 0 && !e.includes(t.length)) throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
  }
  function il(t, e = true) {
    if (t.destroyed) throw new Error("Hash instance has been destroyed");
    if (e && t.finished) throw new Error("Hash#digest() has already been called");
  }
  function lw(t, e) {
    bt$3(t);
    const s = e.outputLen;
    if (t.length < s) throw new Error("digestInto() expects output buffer of length at least " + s);
  }
  function nl(t) {
    if (typeof t != "boolean") throw new Error(`boolean expected, not ${t}`);
  }
  const _s = (t) => new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4)), uw = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength), dw = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
  if (!dw) throw new Error("Non little-endian hardware is not supported");
  function hw(t) {
    if (typeof t != "string") throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(t));
  }
  function ba(t) {
    if (typeof t == "string") t = hw(t);
    else if (_d(t)) t = va(t);
    else throw new Error("Uint8Array expected, got " + typeof t);
    return t;
  }
  function pw(t, e) {
    if (e == null || typeof e != "object") throw new Error("options must be defined");
    return Object.assign(t, e);
  }
  function fw(t, e) {
    if (t.length !== e.length) return false;
    let s = 0;
    for (let r = 0; r < t.length; r++) s |= t[r] ^ e[r];
    return s === 0;
  }
  const gw = (t, e) => {
    function s(r, ...i) {
      if (bt$3(r), t.nonceLength !== void 0) {
        const l = i[0];
        if (!l) throw new Error("nonce / iv required");
        t.varSizeNonce ? bt$3(l) : bt$3(l, t.nonceLength);
      }
      const n = t.tagLength;
      n && i[1] !== void 0 && bt$3(i[1]);
      const o = e(r, ...i), a = (l, u) => {
        if (u !== void 0) {
          if (l !== 2) throw new Error("cipher output not supported");
          bt$3(u);
        }
      };
      let c = false;
      return { encrypt(l, u) {
        if (c) throw new Error("cannot encrypt() twice with same key + nonce");
        return c = true, bt$3(l), a(o.encrypt.length, u), o.encrypt(l, u);
      }, decrypt(l, u) {
        if (bt$3(l), n && l.length < n) throw new Error("invalid ciphertext length: smaller than tagLength=" + n);
        return a(o.decrypt.length, u), o.decrypt(l, u);
      } };
    }
    return Object.assign(s, t), s;
  };
  function ol(t, e, s = true) {
    if (e === void 0) return new Uint8Array(t);
    if (e.length !== t) throw new Error("invalid output length, expected " + t + ", got: " + e.length);
    if (s && !mw(e)) throw new Error("invalid output, must be aligned");
    return e;
  }
  function al(t, e, s, r) {
    if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, s, r);
    const i = BigInt(32), n = BigInt(4294967295), o = Number(s >> i & n), a = Number(s & n);
    t.setUint32(e + 4, o, r), t.setUint32(e + 0, a, r);
  }
  function mw(t) {
    return t.byteOffset % 4 === 0;
  }
  function va(t) {
    return Uint8Array.from(t);
  }
  function Kr(...t) {
    for (let e = 0; e < t.length; e++) t[e].fill(0);
  }
  const Sd = (t) => Uint8Array.from(t.split("").map((e) => e.charCodeAt(0))), ww = Sd("expand 16-byte k"), yw = Sd("expand 32-byte k"), bw = _s(ww), vw = _s(yw);
  function ce$2(t, e) {
    return t << e | t >>> 32 - e;
  }
  function Ea(t) {
    return t.byteOffset % 4 === 0;
  }
  const Dn$1 = 64, Ew = 16, Pd = 2 ** 32 - 1, cl = new Uint32Array();
  function Cw(t, e, s, r, i, n, o, a) {
    const c = i.length, l = new Uint8Array(Dn$1), u = _s(l), d = Ea(i) && Ea(n), h = d ? _s(i) : cl, p = d ? _s(n) : cl;
    for (let g = 0; g < c; o++) {
      if (t(e, s, r, u, o, a), o >= Pd) throw new Error("arx: counter overflow");
      const f = Math.min(Dn$1, c - g);
      if (d && f === Dn$1) {
        const w = g / 4;
        if (g % 4 !== 0) throw new Error("arx: invalid block position");
        for (let y = 0, b; y < Ew; y++) b = w + y, p[b] = h[b] ^ u[y];
        g += Dn$1;
        continue;
      }
      for (let w = 0, y; w < f; w++) y = g + w, n[y] = i[y] ^ l[w];
      g += f;
    }
  }
  function Iw(t, e) {
    const { allowShortKeys: s, extendNonceFn: r, counterLength: i, counterRight: n, rounds: o } = pw({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, e);
    if (typeof t != "function") throw new Error("core must be a function");
    return Uo(i), Uo(o), nl(n), nl(s), (a, c, l, u, d = 0) => {
      bt$3(a), bt$3(c), bt$3(l);
      const h = l.length;
      if (u === void 0 && (u = new Uint8Array(h)), bt$3(u), Uo(d), d < 0 || d >= Pd) throw new Error("arx: counter overflow");
      if (u.length < h) throw new Error(`arx: output (${u.length}) is shorter than data (${h})`);
      const p = [];
      let g = a.length, f, w;
      if (g === 32) p.push(f = va(a)), w = vw;
      else if (g === 16 && s) f = new Uint8Array(32), f.set(a), f.set(a, 16), w = bw, p.push(f);
      else throw new Error(`arx: invalid 32-byte key, got length=${g}`);
      Ea(c) || p.push(c = va(c));
      const y = _s(f);
      if (r) {
        if (c.length !== 24) throw new Error("arx: extended nonce must be 24 bytes");
        r(w, y, _s(c.subarray(0, 16)), y), c = c.subarray(16);
      }
      const b = 16 - i;
      if (b !== c.length) throw new Error(`arx: nonce must be ${b} or 16 bytes`);
      if (b !== 12) {
        const C = new Uint8Array(12);
        C.set(c, n ? 0 : 12 - c.length), c = C, p.push(c);
      }
      const v = _s(c);
      return Cw(t, w, y, v, l, u, d, o), Kr(...p), u;
    };
  }
  const Ke$2 = (t, e) => t[e++] & 255 | (t[e++] & 255) << 8;
  class Aw {
    constructor(e) {
      this.blockLen = 16, this.outputLen = 16, this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.pos = 0, this.finished = false, e = ba(e), bt$3(e, 32);
      const s = Ke$2(e, 0), r = Ke$2(e, 2), i = Ke$2(e, 4), n = Ke$2(e, 6), o = Ke$2(e, 8), a = Ke$2(e, 10), c = Ke$2(e, 12), l = Ke$2(e, 14);
      this.r[0] = s & 8191, this.r[1] = (s >>> 13 | r << 3) & 8191, this.r[2] = (r >>> 10 | i << 6) & 7939, this.r[3] = (i >>> 7 | n << 9) & 8191, this.r[4] = (n >>> 4 | o << 12) & 255, this.r[5] = o >>> 1 & 8190, this.r[6] = (o >>> 14 | a << 2) & 8191, this.r[7] = (a >>> 11 | c << 5) & 8065, this.r[8] = (c >>> 8 | l << 8) & 8191, this.r[9] = l >>> 5 & 127;
      for (let u = 0; u < 8; u++) this.pad[u] = Ke$2(e, 16 + 2 * u);
    }
    process(e, s, r = false) {
      const i = r ? 0 : 2048, { h: n, r: o } = this, a = o[0], c = o[1], l = o[2], u = o[3], d = o[4], h = o[5], p = o[6], g = o[7], f = o[8], w = o[9], y = Ke$2(e, s + 0), b = Ke$2(e, s + 2), v = Ke$2(e, s + 4), C = Ke$2(e, s + 6), S = Ke$2(e, s + 8), A = Ke$2(e, s + 10), N = Ke$2(e, s + 12), R = Ke$2(e, s + 14);
      let E = n[0] + (y & 8191), $ = n[1] + ((y >>> 13 | b << 3) & 8191), I = n[2] + ((b >>> 10 | v << 6) & 8191), L = n[3] + ((v >>> 7 | C << 9) & 8191), H = n[4] + ((C >>> 4 | S << 12) & 8191), _ = n[5] + (S >>> 1 & 8191), x = n[6] + ((S >>> 14 | A << 2) & 8191), O = n[7] + ((A >>> 11 | N << 5) & 8191), B = n[8] + ((N >>> 8 | R << 8) & 8191), j = n[9] + (R >>> 5 | i), k = 0, G = k + E * a + $ * (5 * w) + I * (5 * f) + L * (5 * g) + H * (5 * p);
      k = G >>> 13, G &= 8191, G += _ * (5 * h) + x * (5 * d) + O * (5 * u) + B * (5 * l) + j * (5 * c), k += G >>> 13, G &= 8191;
      let Q = k + E * c + $ * a + I * (5 * w) + L * (5 * f) + H * (5 * g);
      k = Q >>> 13, Q &= 8191, Q += _ * (5 * p) + x * (5 * h) + O * (5 * d) + B * (5 * u) + j * (5 * l), k += Q >>> 13, Q &= 8191;
      let se = k + E * l + $ * c + I * a + L * (5 * w) + H * (5 * f);
      k = se >>> 13, se &= 8191, se += _ * (5 * g) + x * (5 * p) + O * (5 * h) + B * (5 * d) + j * (5 * u), k += se >>> 13, se &= 8191;
      let Ce = k + E * u + $ * l + I * c + L * a + H * (5 * w);
      k = Ce >>> 13, Ce &= 8191, Ce += _ * (5 * f) + x * (5 * g) + O * (5 * p) + B * (5 * h) + j * (5 * d), k += Ce >>> 13, Ce &= 8191;
      let he = k + E * d + $ * u + I * l + L * c + H * a;
      k = he >>> 13, he &= 8191, he += _ * (5 * w) + x * (5 * f) + O * (5 * g) + B * (5 * p) + j * (5 * h), k += he >>> 13, he &= 8191;
      let Te = k + E * h + $ * d + I * u + L * l + H * c;
      k = Te >>> 13, Te &= 8191, Te += _ * a + x * (5 * w) + O * (5 * f) + B * (5 * g) + j * (5 * p), k += Te >>> 13, Te &= 8191;
      let Le = k + E * p + $ * h + I * d + L * u + H * l;
      k = Le >>> 13, Le &= 8191, Le += _ * c + x * a + O * (5 * w) + B * (5 * f) + j * (5 * g), k += Le >>> 13, Le &= 8191;
      let Xe = k + E * g + $ * p + I * h + L * d + H * u;
      k = Xe >>> 13, Xe &= 8191, Xe += _ * l + x * c + O * a + B * (5 * w) + j * (5 * f), k += Xe >>> 13, Xe &= 8191;
      let $e = k + E * f + $ * g + I * p + L * h + H * d;
      k = $e >>> 13, $e &= 8191, $e += _ * u + x * l + O * c + B * a + j * (5 * w), k += $e >>> 13, $e &= 8191;
      let Re = k + E * w + $ * f + I * g + L * p + H * h;
      k = Re >>> 13, Re &= 8191, Re += _ * d + x * u + O * l + B * c + j * a, k += Re >>> 13, Re &= 8191, k = (k << 2) + k | 0, k = k + G | 0, G = k & 8191, k = k >>> 13, Q += k, n[0] = G, n[1] = Q, n[2] = se, n[3] = Ce, n[4] = he, n[5] = Te, n[6] = Le, n[7] = Xe, n[8] = $e, n[9] = Re;
    }
    finalize() {
      const { h: e, pad: s } = this, r = new Uint16Array(10);
      let i = e[1] >>> 13;
      e[1] &= 8191;
      for (let a = 2; a < 10; a++) e[a] += i, i = e[a] >>> 13, e[a] &= 8191;
      e[0] += i * 5, i = e[0] >>> 13, e[0] &= 8191, e[1] += i, i = e[1] >>> 13, e[1] &= 8191, e[2] += i, r[0] = e[0] + 5, i = r[0] >>> 13, r[0] &= 8191;
      for (let a = 1; a < 10; a++) r[a] = e[a] + i, i = r[a] >>> 13, r[a] &= 8191;
      r[9] -= 8192;
      let n = (i ^ 1) - 1;
      for (let a = 0; a < 10; a++) r[a] &= n;
      n = ~n;
      for (let a = 0; a < 10; a++) e[a] = e[a] & n | r[a];
      e[0] = (e[0] | e[1] << 13) & 65535, e[1] = (e[1] >>> 3 | e[2] << 10) & 65535, e[2] = (e[2] >>> 6 | e[3] << 7) & 65535, e[3] = (e[3] >>> 9 | e[4] << 4) & 65535, e[4] = (e[4] >>> 12 | e[5] << 1 | e[6] << 14) & 65535, e[5] = (e[6] >>> 2 | e[7] << 11) & 65535, e[6] = (e[7] >>> 5 | e[8] << 8) & 65535, e[7] = (e[8] >>> 8 | e[9] << 5) & 65535;
      let o = e[0] + s[0];
      e[0] = o & 65535;
      for (let a = 1; a < 8; a++) o = (e[a] + s[a] | 0) + (o >>> 16) | 0, e[a] = o & 65535;
      Kr(r);
    }
    update(e) {
      il(this);
      const { buffer: s, blockLen: r } = this;
      e = ba(e);
      const i = e.length;
      for (let n = 0; n < i; ) {
        const o = Math.min(r - this.pos, i - n);
        if (o === r) {
          for (; r <= i - n; n += r) this.process(e, n);
          continue;
        }
        s.set(e.subarray(n, n + o), this.pos), this.pos += o, n += o, this.pos === r && (this.process(s, 0, false), this.pos = 0);
      }
      return this;
    }
    destroy() {
      Kr(this.h, this.r, this.buffer, this.pad);
    }
    digestInto(e) {
      il(this), lw(e, this), this.finished = true;
      const { buffer: s, h: r } = this;
      let { pos: i } = this;
      if (i) {
        for (s[i++] = 1; i < 16; i++) s[i] = 0;
        this.process(s, 0, true);
      }
      this.finalize();
      let n = 0;
      for (let o = 0; o < 8; o++) e[n++] = r[o] >>> 0, e[n++] = r[o] >>> 8;
      return e;
    }
    digest() {
      const { buffer: e, outputLen: s } = this;
      this.digestInto(e);
      const r = e.slice(0, s);
      return this.destroy(), r;
    }
  }
  function Nw(t) {
    const e = (r, i) => t(i).update(ba(r)).digest(), s = t(new Uint8Array(32));
    return e.outputLen = s.outputLen, e.blockLen = s.blockLen, e.create = (r) => t(r), e;
  }
  const _w = Nw((t) => new Aw(t));
  function Sw(t, e, s, r, i, n = 20) {
    let o = t[0], a = t[1], c = t[2], l = t[3], u = e[0], d = e[1], h = e[2], p = e[3], g = e[4], f = e[5], w = e[6], y = e[7], b = i, v = s[0], C = s[1], S = s[2], A = o, N = a, R = c, E = l, $ = u, I = d, L = h, H = p, _ = g, x = f, O = w, B = y, j = b, k = v, G = C, Q = S;
    for (let Ce = 0; Ce < n; Ce += 2) A = A + $ | 0, j = ce$2(j ^ A, 16), _ = _ + j | 0, $ = ce$2($ ^ _, 12), A = A + $ | 0, j = ce$2(j ^ A, 8), _ = _ + j | 0, $ = ce$2($ ^ _, 7), N = N + I | 0, k = ce$2(k ^ N, 16), x = x + k | 0, I = ce$2(I ^ x, 12), N = N + I | 0, k = ce$2(k ^ N, 8), x = x + k | 0, I = ce$2(I ^ x, 7), R = R + L | 0, G = ce$2(G ^ R, 16), O = O + G | 0, L = ce$2(L ^ O, 12), R = R + L | 0, G = ce$2(G ^ R, 8), O = O + G | 0, L = ce$2(L ^ O, 7), E = E + H | 0, Q = ce$2(Q ^ E, 16), B = B + Q | 0, H = ce$2(H ^ B, 12), E = E + H | 0, Q = ce$2(Q ^ E, 8), B = B + Q | 0, H = ce$2(H ^ B, 7), A = A + I | 0, Q = ce$2(Q ^ A, 16), O = O + Q | 0, I = ce$2(I ^ O, 12), A = A + I | 0, Q = ce$2(Q ^ A, 8), O = O + Q | 0, I = ce$2(I ^ O, 7), N = N + L | 0, j = ce$2(j ^ N, 16), B = B + j | 0, L = ce$2(L ^ B, 12), N = N + L | 0, j = ce$2(j ^ N, 8), B = B + j | 0, L = ce$2(L ^ B, 7), R = R + H | 0, k = ce$2(k ^ R, 16), _ = _ + k | 0, H = ce$2(H ^ _, 12), R = R + H | 0, k = ce$2(k ^ R, 8), _ = _ + k | 0, H = ce$2(H ^ _, 7), E = E + $ | 0, G = ce$2(G ^ E, 16), x = x + G | 0, $ = ce$2($ ^ x, 12), E = E + $ | 0, G = ce$2(G ^ E, 8), x = x + G | 0, $ = ce$2($ ^ x, 7);
    let se = 0;
    r[se++] = o + A | 0, r[se++] = a + N | 0, r[se++] = c + R | 0, r[se++] = l + E | 0, r[se++] = u + $ | 0, r[se++] = d + I | 0, r[se++] = h + L | 0, r[se++] = p + H | 0, r[se++] = g + _ | 0, r[se++] = f + x | 0, r[se++] = w + O | 0, r[se++] = y + B | 0, r[se++] = b + j | 0, r[se++] = v + k | 0, r[se++] = C + G | 0, r[se++] = S + Q | 0;
  }
  const Pw = Iw(Sw, { counterRight: false, counterLength: 4, allowShortKeys: false }), Ow = new Uint8Array(16), ll = (t, e) => {
    t.update(e);
    const s = e.length % 16;
    s && t.update(Ow.subarray(s));
  }, Tw = new Uint8Array(32);
  function ul(t, e, s, r, i) {
    const n = t(e, s, Tw), o = _w.create(n);
    i && ll(o, i), ll(o, r);
    const a = new Uint8Array(16), c = uw(a);
    al(c, 0, BigInt(i ? i.length : 0), true), al(c, 8, BigInt(r.length), true), o.update(a);
    const l = o.digest();
    return Kr(n, a), l;
  }
  const xw = (t) => (e, s, r) => ({ encrypt(i, n) {
    const o = i.length;
    n = ol(o + 16, n, false), n.set(i);
    const a = n.subarray(0, -16);
    t(e, s, a, a, 1);
    const c = ul(t, e, s, a, r);
    return n.set(c, o), Kr(c), n;
  }, decrypt(i, n) {
    n = ol(i.length - 16, n, false);
    const o = i.subarray(0, -16), a = i.subarray(-16), c = ul(t, e, s, o, r);
    if (!fw(a, c)) throw new Error("invalid tag");
    return n.set(i.subarray(0, -16)), t(e, s, n, n, 1), Kr(c), n;
  } }), Od = gw({ blockSize: 64, nonceLength: 12, tagLength: 16 }, xw(Pw));
  let Td = class extends tc {
    constructor(e, s) {
      super(), this.finished = false, this.destroyed = false, ec(e);
      const r = Hr(s);
      if (this.iHash = e.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const i = this.blockLen, n = new Uint8Array(i);
      n.set(r.length > i ? e.create().update(r).digest() : r);
      for (let o = 0; o < n.length; o++) n[o] ^= 54;
      this.iHash.update(n), this.oHash = e.create();
      for (let o = 0; o < n.length; o++) n[o] ^= 106;
      this.oHash.update(n), n.fill(0);
    }
    update(e) {
      return zr(this), this.iHash.update(e), this;
    }
    digestInto(e) {
      zr(this), yn$1(e, this.outputLen), this.finished = true, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
    }
    digest() {
      const e = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(e), e;
    }
    _cloneInto(e) {
      e || (e = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: s, iHash: r, finished: i, destroyed: n, blockLen: o, outputLen: a } = this;
      return e = e, e.finished = i, e.destroyed = n, e.blockLen = o, e.outputLen = a, e.oHash = s._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e;
    }
    destroy() {
      this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
    }
  };
  const mo$1 = (t, e, s) => new Td(t, e).update(s).digest();
  mo$1.create = (t, e) => new Td(t, e);
  function kw(t, e, s) {
    return ec(t), s === void 0 && (s = new Uint8Array(t.outputLen)), mo$1(t, Hr(s), Hr(e));
  }
  const Do = new Uint8Array([0]), dl = new Uint8Array();
  function $w(t, e, s, r = 32) {
    if (ec(t), on$2(r), r > 255 * t.outputLen) throw new Error("Length should be <= 255*HashLen");
    const i = Math.ceil(r / t.outputLen);
    s === void 0 && (s = dl);
    const n = new Uint8Array(i * t.outputLen), o = mo$1.create(t, e), a = o._cloneInto(), c = new Uint8Array(o.outputLen);
    for (let l = 0; l < i; l++) Do[0] = l + 1, a.update(l === 0 ? dl : c).update(s).update(Do).digestInto(c), n.set(c, t.outputLen * l), o._cloneInto(a);
    return o.destroy(), a.destroy(), c.fill(0), Do.fill(0), n.slice(0, r);
  }
  const Rw = (t, e, s, r, i) => $w(t, kw(t, e, s), r, i);
  function Uw(t, e, s, r) {
    if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, s, r);
    const i = BigInt(32), n = BigInt(4294967295), o = Number(s >> i & n), a = Number(s & n), c = r ? 4 : 0, l = r ? 0 : 4;
    t.setUint32(e + c, o, r), t.setUint32(e + l, a, r);
  }
  function Dw(t, e, s) {
    return t & e ^ ~t & s;
  }
  function Lw(t, e, s) {
    return t & e ^ t & s ^ e & s;
  }
  let Mw = class extends tc {
    constructor(e, s, r, i) {
      super(), this.blockLen = e, this.outputLen = s, this.padOffset = r, this.isLE = i, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e), this.view = Ro$1(this.buffer);
    }
    update(e) {
      zr(this);
      const { view: s, buffer: r, blockLen: i } = this;
      e = Hr(e);
      const n = e.length;
      for (let o = 0; o < n; ) {
        const a = Math.min(i - this.pos, n - o);
        if (a === i) {
          const c = Ro$1(e);
          for (; i <= n - o; o += i) this.process(c, o);
          continue;
        }
        r.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === i && (this.process(s, 0), this.pos = 0);
      }
      return this.length += e.length, this.roundClean(), this;
    }
    digestInto(e) {
      zr(this), wd(e, this), this.finished = true;
      const { buffer: s, view: r, blockLen: i, isLE: n } = this;
      let { pos: o } = this;
      s[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > i - o && (this.process(r, 0), o = 0);
      for (let d = o; d < i; d++) s[d] = 0;
      Uw(r, i - 8, BigInt(this.length * 8), n), this.process(r, 0);
      const a = Ro$1(e), c = this.outputLen;
      if (c % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
      const l = c / 4, u = this.get();
      if (l > u.length) throw new Error("_sha2: outputLen bigger than state");
      for (let d = 0; d < l; d++) a.setUint32(4 * d, u[d], n);
    }
    digest() {
      const { buffer: e, outputLen: s } = this;
      this.digestInto(e);
      const r = e.slice(0, s);
      return this.destroy(), r;
    }
    _cloneInto(e) {
      e || (e = new this.constructor()), e.set(...this.get());
      const { blockLen: s, buffer: r, length: i, finished: n, destroyed: o, pos: a } = this;
      return e.length = i, e.pos = a, e.finished = n, e.destroyed = o, i % s && e.buffer.set(r), e;
    }
  };
  const Bw = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]), ms = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]), ws = new Uint32Array(64);
  class Fw extends Mw {
    constructor() {
      super(64, 32, 8, false), this.A = ms[0] | 0, this.B = ms[1] | 0, this.C = ms[2] | 0, this.D = ms[3] | 0, this.E = ms[4] | 0, this.F = ms[5] | 0, this.G = ms[6] | 0, this.H = ms[7] | 0;
    }
    get() {
      const { A: e, B: s, C: r, D: i, E: n, F: o, G: a, H: c } = this;
      return [e, s, r, i, n, o, a, c];
    }
    set(e, s, r, i, n, o, a, c) {
      this.A = e | 0, this.B = s | 0, this.C = r | 0, this.D = i | 0, this.E = n | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
    }
    process(e, s) {
      for (let d = 0; d < 16; d++, s += 4) ws[d] = e.getUint32(s, false);
      for (let d = 16; d < 64; d++) {
        const h = ws[d - 15], p = ws[d - 2], g = Wt$2(h, 7) ^ Wt$2(h, 18) ^ h >>> 3, f = Wt$2(p, 17) ^ Wt$2(p, 19) ^ p >>> 10;
        ws[d] = f + ws[d - 7] + g + ws[d - 16] | 0;
      }
      let { A: r, B: i, C: n, D: o, E: a, F: c, G: l, H: u } = this;
      for (let d = 0; d < 64; d++) {
        const h = Wt$2(a, 6) ^ Wt$2(a, 11) ^ Wt$2(a, 25), p = u + h + Dw(a, c, l) + Bw[d] + ws[d] | 0, g = (Wt$2(r, 2) ^ Wt$2(r, 13) ^ Wt$2(r, 22)) + Lw(r, i, n) | 0;
        u = l, l = c, c = a, a = o + p | 0, o = n, n = i, i = r, r = p + g | 0;
      }
      r = r + this.A | 0, i = i + this.B | 0, n = n + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, u = u + this.H | 0, this.set(r, i, n, o, a, c, l, u);
    }
    roundClean() {
      ws.fill(0);
    }
    destroy() {
      this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
    }
  }
  const bn$1 = yd(() => new Fw());
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const wo$1 = BigInt(0), yo$1 = BigInt(1), jw = BigInt(2);
  function tr(t) {
    return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
  }
  function vn$1(t) {
    if (!tr(t)) throw new Error("Uint8Array expected");
  }
  function Vr(t, e) {
    if (typeof e != "boolean") throw new Error(t + " boolean expected, got " + e);
  }
  const qw = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
  function Gr(t) {
    vn$1(t);
    let e = "";
    for (let s = 0; s < t.length; s++) e += qw[t[s]];
    return e;
  }
  function $r(t) {
    const e = t.toString(16);
    return e.length & 1 ? "0" + e : e;
  }
  function rc(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    return t === "" ? wo$1 : BigInt("0x" + t);
  }
  const ns = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
  function hl(t) {
    if (t >= ns._0 && t <= ns._9) return t - ns._0;
    if (t >= ns.A && t <= ns.F) return t - (ns.A - 10);
    if (t >= ns.a && t <= ns.f) return t - (ns.a - 10);
  }
  function Jr(t) {
    if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
    const e = t.length, s = e / 2;
    if (e % 2) throw new Error("hex string expected, got unpadded hex of length " + e);
    const r = new Uint8Array(s);
    for (let i = 0, n = 0; i < s; i++, n += 2) {
      const o = hl(t.charCodeAt(n)), a = hl(t.charCodeAt(n + 1));
      if (o === void 0 || a === void 0) {
        const c = t[n] + t[n + 1];
        throw new Error('hex string expected, got non-hex character "' + c + '" at index ' + n);
      }
      r[i] = o * 16 + a;
    }
    return r;
  }
  function Ys(t) {
    return rc(Gr(t));
  }
  function cn$1(t) {
    return vn$1(t), rc(Gr(Uint8Array.from(t).reverse()));
  }
  function Yr(t, e) {
    return Jr(t.toString(16).padStart(e * 2, "0"));
  }
  function bo$1(t, e) {
    return Yr(t, e).reverse();
  }
  function Ww(t) {
    return Jr($r(t));
  }
  function yt$2(t, e, s) {
    let r;
    if (typeof e == "string") try {
      r = Jr(e);
    } catch (n) {
      throw new Error(t + " must be hex string or Uint8Array, cause: " + n);
    }
    else if (tr(e)) r = Uint8Array.from(e);
    else throw new Error(t + " must be hex string or Uint8Array");
    const i = r.length;
    if (typeof s == "number" && i !== s) throw new Error(t + " of length " + s + " expected, got " + i);
    return r;
  }
  function ln$1(...t) {
    let e = 0;
    for (let r = 0; r < t.length; r++) {
      const i = t[r];
      vn$1(i), e += i.length;
    }
    const s = new Uint8Array(e);
    for (let r = 0, i = 0; r < t.length; r++) {
      const n = t[r];
      s.set(n, i), i += n.length;
    }
    return s;
  }
  function zw(t, e) {
    if (t.length !== e.length) return false;
    let s = 0;
    for (let r = 0; r < t.length; r++) s |= t[r] ^ e[r];
    return s === 0;
  }
  function Hw(t) {
    if (typeof t != "string") throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(t));
  }
  const Lo = (t) => typeof t == "bigint" && wo$1 <= t;
  function vo$1(t, e, s) {
    return Lo(t) && Lo(e) && Lo(s) && e <= t && t < s;
  }
  function us(t, e, s, r) {
    if (!vo$1(e, s, r)) throw new Error("expected valid " + t + ": " + s + " <= n < " + r + ", got " + e);
  }
  function xd(t) {
    let e;
    for (e = 0; t > wo$1; t >>= yo$1, e += 1) ;
    return e;
  }
  function Kw(t, e) {
    return t >> BigInt(e) & yo$1;
  }
  function Vw(t, e, s) {
    return t | (s ? yo$1 : wo$1) << BigInt(e);
  }
  const ic = (t) => (jw << BigInt(t - 1)) - yo$1, Mo = (t) => new Uint8Array(t), pl = (t) => Uint8Array.from(t);
  function kd(t, e, s) {
    if (typeof t != "number" || t < 2) throw new Error("hashLen must be a number");
    if (typeof e != "number" || e < 2) throw new Error("qByteLen must be a number");
    if (typeof s != "function") throw new Error("hmacFn must be a function");
    let r = Mo(t), i = Mo(t), n = 0;
    const o = () => {
      r.fill(1), i.fill(0), n = 0;
    }, a = (...u) => s(i, r, ...u), c = (u = Mo()) => {
      i = a(pl([0]), u), r = a(), u.length !== 0 && (i = a(pl([1]), u), r = a());
    }, l = () => {
      if (n++ >= 1e3) throw new Error("drbg: tried 1000 values");
      let u = 0;
      const d = [];
      for (; u < e; ) {
        r = a();
        const h = r.slice();
        d.push(h), u += r.length;
      }
      return ln$1(...d);
    };
    return (u, d) => {
      o(), c(u);
      let h;
      for (; !(h = d(l())); ) c();
      return o(), h;
    };
  }
  const Gw = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || tr(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e) => e.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
  function oi$1(t, e, s = {}) {
    const r = (i, n, o) => {
      const a = Gw[n];
      if (typeof a != "function") throw new Error("invalid validator function");
      const c = t[i];
      if (!(o && c === void 0) && !a(c, t)) throw new Error("param " + String(i) + " is invalid. Expected " + n + ", got " + c);
    };
    for (const [i, n] of Object.entries(e)) r(i, n, false);
    for (const [i, n] of Object.entries(s)) r(i, n, true);
    return t;
  }
  const Jw = () => {
    throw new Error("not implemented");
  };
  function Ca(t) {
    const e = /* @__PURE__ */ new WeakMap();
    return (s, ...r) => {
      const i = e.get(s);
      if (i !== void 0) return i;
      const n = t(s, ...r);
      return e.set(s, n), n;
    };
  }
  var Yw = Object.freeze({ __proto__: null, isBytes: tr, abytes: vn$1, abool: Vr, bytesToHex: Gr, numberToHexUnpadded: $r, hexToNumber: rc, hexToBytes: Jr, bytesToNumberBE: Ys, bytesToNumberLE: cn$1, numberToBytesBE: Yr, numberToBytesLE: bo$1, numberToVarBytesBE: Ww, ensureBytes: yt$2, concatBytes: ln$1, equalBytes: zw, utf8ToBytes: Hw, inRange: vo$1, aInRange: us, bitLen: xd, bitGet: Kw, bitSet: Vw, bitMask: ic, createHmacDrbg: kd, validateObject: oi$1, notImplemented: Jw, memoized: Ca });
  const He$2 = BigInt(0), Oe$2 = BigInt(1), js = BigInt(2), Xw = BigInt(3), Ia = BigInt(4), fl = BigInt(5), gl = BigInt(8);
  function dt$3(t, e) {
    const s = t % e;
    return s >= He$2 ? s : e + s;
  }
  function $d(t, e, s) {
    if (e < He$2) throw new Error("invalid exponent, negatives unsupported");
    if (s <= He$2) throw new Error("invalid modulus");
    if (s === Oe$2) return He$2;
    let r = Oe$2;
    for (; e > He$2; ) e & Oe$2 && (r = r * t % s), t = t * t % s, e >>= Oe$2;
    return r;
  }
  function Lt$2(t, e, s) {
    let r = t;
    for (; e-- > He$2; ) r *= r, r %= s;
    return r;
  }
  function Aa(t, e) {
    if (t === He$2) throw new Error("invert: expected non-zero number");
    if (e <= He$2) throw new Error("invert: expected positive modulus, got " + e);
    let s = dt$3(t, e), r = e, i = He$2, n = Oe$2;
    for (; s !== He$2; ) {
      const o = r / s, a = r % s, c = i - n * o;
      r = s, s = a, i = n, n = c;
    }
    if (r !== Oe$2) throw new Error("invert: does not exist");
    return dt$3(i, e);
  }
  function Zw(t) {
    const e = (t - Oe$2) / js;
    let s, r, i;
    for (s = t - Oe$2, r = 0; s % js === He$2; s /= js, r++) ;
    for (i = js; i < t && $d(i, e, t) !== t - Oe$2; i++) if (i > 1e3) throw new Error("Cannot find square root: likely non-prime P");
    if (r === 1) {
      const o = (t + Oe$2) / Ia;
      return function(a, c) {
        const l = a.pow(c, o);
        if (!a.eql(a.sqr(l), c)) throw new Error("Cannot find square root");
        return l;
      };
    }
    const n = (s + Oe$2) / js;
    return function(o, a) {
      if (o.pow(a, e) === o.neg(o.ONE)) throw new Error("Cannot find square root");
      let c = r, l = o.pow(o.mul(o.ONE, i), s), u = o.pow(a, n), d = o.pow(a, s);
      for (; !o.eql(d, o.ONE); ) {
        if (o.eql(d, o.ZERO)) return o.ZERO;
        let h = 1;
        for (let g = o.sqr(d); h < c && !o.eql(g, o.ONE); h++) g = o.sqr(g);
        const p = o.pow(l, Oe$2 << BigInt(c - h - 1));
        l = o.sqr(p), u = o.mul(u, p), d = o.mul(d, l), c = h;
      }
      return u;
    };
  }
  function Qw(t) {
    if (t % Ia === Xw) {
      const e = (t + Oe$2) / Ia;
      return function(s, r) {
        const i = s.pow(r, e);
        if (!s.eql(s.sqr(i), r)) throw new Error("Cannot find square root");
        return i;
      };
    }
    if (t % gl === fl) {
      const e = (t - fl) / gl;
      return function(s, r) {
        const i = s.mul(r, js), n = s.pow(i, e), o = s.mul(r, n), a = s.mul(s.mul(o, js), n), c = s.mul(o, s.sub(a, s.ONE));
        if (!s.eql(s.sqr(c), r)) throw new Error("Cannot find square root");
        return c;
      };
    }
    return Zw(t);
  }
  const ey = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
  function ty(t) {
    const e = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, s = ey.reduce((r, i) => (r[i] = "function", r), e);
    return oi$1(t, s);
  }
  function sy(t, e, s) {
    if (s < He$2) throw new Error("invalid exponent, negatives unsupported");
    if (s === He$2) return t.ONE;
    if (s === Oe$2) return e;
    let r = t.ONE, i = e;
    for (; s > He$2; ) s & Oe$2 && (r = t.mul(r, i)), i = t.sqr(i), s >>= Oe$2;
    return r;
  }
  function ry(t, e) {
    const s = new Array(e.length), r = e.reduce((n, o, a) => t.is0(o) ? n : (s[a] = n, t.mul(n, o)), t.ONE), i = t.inv(r);
    return e.reduceRight((n, o, a) => t.is0(o) ? n : (s[a] = t.mul(n, s[a]), t.mul(n, o)), i), s;
  }
  function Rd(t, e) {
    const s = e !== void 0 ? e : t.toString(2).length, r = Math.ceil(s / 8);
    return { nBitLength: s, nByteLength: r };
  }
  function Ud(t, e, s = false, r = {}) {
    if (t <= He$2) throw new Error("invalid field: expected ORDER > 0, got " + t);
    const { nBitLength: i, nByteLength: n } = Rd(t, e);
    if (n > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
    let o;
    const a = Object.freeze({ ORDER: t, isLE: s, BITS: i, BYTES: n, MASK: ic(i), ZERO: He$2, ONE: Oe$2, create: (c) => dt$3(c, t), isValid: (c) => {
      if (typeof c != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof c);
      return He$2 <= c && c < t;
    }, is0: (c) => c === He$2, isOdd: (c) => (c & Oe$2) === Oe$2, neg: (c) => dt$3(-c, t), eql: (c, l) => c === l, sqr: (c) => dt$3(c * c, t), add: (c, l) => dt$3(c + l, t), sub: (c, l) => dt$3(c - l, t), mul: (c, l) => dt$3(c * l, t), pow: (c, l) => sy(a, c, l), div: (c, l) => dt$3(c * Aa(l, t), t), sqrN: (c) => c * c, addN: (c, l) => c + l, subN: (c, l) => c - l, mulN: (c, l) => c * l, inv: (c) => Aa(c, t), sqrt: r.sqrt || ((c) => (o || (o = Qw(t)), o(a, c))), invertBatch: (c) => ry(a, c), cmov: (c, l, u) => u ? l : c, toBytes: (c) => s ? bo$1(c, n) : Yr(c, n), fromBytes: (c) => {
      if (c.length !== n) throw new Error("Field.fromBytes: expected " + n + " bytes, got " + c.length);
      return s ? cn$1(c) : Ys(c);
    } });
    return Object.freeze(a);
  }
  function Dd(t) {
    if (typeof t != "bigint") throw new Error("field order must be bigint");
    const e = t.toString(2).length;
    return Math.ceil(e / 8);
  }
  function Ld(t) {
    const e = Dd(t);
    return e + Math.ceil(e / 2);
  }
  function iy(t, e, s = false) {
    const r = t.length, i = Dd(e), n = Ld(e);
    if (r < 16 || r < n || r > 1024) throw new Error("expected " + n + "-1024 bytes of input, got " + r);
    const o = s ? cn$1(t) : Ys(t), a = dt$3(o, e - Oe$2) + Oe$2;
    return s ? bo$1(a, i) : Yr(a, i);
  }
  const ml = BigInt(0), Ln$1 = BigInt(1);
  function Bo(t, e) {
    const s = e.negate();
    return t ? s : e;
  }
  function Md(t, e) {
    if (!Number.isSafeInteger(t) || t <= 0 || t > e) throw new Error("invalid window size, expected [1.." + e + "], got W=" + t);
  }
  function Fo(t, e) {
    Md(t, e);
    const s = Math.ceil(e / t) + 1, r = 2 ** (t - 1);
    return { windows: s, windowSize: r };
  }
  function ny(t, e) {
    if (!Array.isArray(t)) throw new Error("array expected");
    t.forEach((s, r) => {
      if (!(s instanceof e)) throw new Error("invalid point at index " + r);
    });
  }
  function oy(t, e) {
    if (!Array.isArray(t)) throw new Error("array of scalars expected");
    t.forEach((s, r) => {
      if (!e.isValid(s)) throw new Error("invalid scalar at index " + r);
    });
  }
  const jo = /* @__PURE__ */ new WeakMap(), Bd = /* @__PURE__ */ new WeakMap();
  function qo(t) {
    return Bd.get(t) || 1;
  }
  function ay(t, e) {
    return { constTimeNegate: Bo, hasPrecomputes(s) {
      return qo(s) !== 1;
    }, unsafeLadder(s, r, i = t.ZERO) {
      let n = s;
      for (; r > ml; ) r & Ln$1 && (i = i.add(n)), n = n.double(), r >>= Ln$1;
      return i;
    }, precomputeWindow(s, r) {
      const { windows: i, windowSize: n } = Fo(r, e), o = [];
      let a = s, c = a;
      for (let l = 0; l < i; l++) {
        c = a, o.push(c);
        for (let u = 1; u < n; u++) c = c.add(a), o.push(c);
        a = c.double();
      }
      return o;
    }, wNAF(s, r, i) {
      const { windows: n, windowSize: o } = Fo(s, e);
      let a = t.ZERO, c = t.BASE;
      const l = BigInt(2 ** s - 1), u = 2 ** s, d = BigInt(s);
      for (let h = 0; h < n; h++) {
        const p = h * o;
        let g = Number(i & l);
        i >>= d, g > o && (g -= u, i += Ln$1);
        const f = p, w = p + Math.abs(g) - 1, y = h % 2 !== 0, b = g < 0;
        g === 0 ? c = c.add(Bo(y, r[f])) : a = a.add(Bo(b, r[w]));
      }
      return { p: a, f: c };
    }, wNAFUnsafe(s, r, i, n = t.ZERO) {
      const { windows: o, windowSize: a } = Fo(s, e), c = BigInt(2 ** s - 1), l = 2 ** s, u = BigInt(s);
      for (let d = 0; d < o; d++) {
        const h = d * a;
        if (i === ml) break;
        let p = Number(i & c);
        if (i >>= u, p > a && (p -= l, i += Ln$1), p === 0) continue;
        let g = r[h + Math.abs(p) - 1];
        p < 0 && (g = g.negate()), n = n.add(g);
      }
      return n;
    }, getPrecomputes(s, r, i) {
      let n = jo.get(r);
      return n || (n = this.precomputeWindow(r, s), s !== 1 && jo.set(r, i(n))), n;
    }, wNAFCached(s, r, i) {
      const n = qo(s);
      return this.wNAF(n, this.getPrecomputes(n, s, i), r);
    }, wNAFCachedUnsafe(s, r, i, n) {
      const o = qo(s);
      return o === 1 ? this.unsafeLadder(s, r, n) : this.wNAFUnsafe(o, this.getPrecomputes(o, s, i), r, n);
    }, setWindowSize(s, r) {
      Md(r, e), Bd.set(s, r), jo.delete(s);
    } };
  }
  function cy(t, e, s, r) {
    if (ny(s, t), oy(r, e), s.length !== r.length) throw new Error("arrays of points and scalars must have equal length");
    const i = t.ZERO, n = xd(BigInt(s.length)), o = n > 12 ? n - 3 : n > 4 ? n - 2 : n ? 2 : 1, a = (1 << o) - 1, c = new Array(a + 1).fill(i), l = Math.floor((e.BITS - 1) / o) * o;
    let u = i;
    for (let d = l; d >= 0; d -= o) {
      c.fill(i);
      for (let p = 0; p < r.length; p++) {
        const g = r[p], f = Number(g >> BigInt(d) & BigInt(a));
        c[f] = c[f].add(s[p]);
      }
      let h = i;
      for (let p = c.length - 1, g = i; p > 0; p--) g = g.add(c[p]), h = h.add(g);
      if (u = u.add(h), d !== 0) for (let p = 0; p < o; p++) u = u.double();
    }
    return u;
  }
  function Fd(t) {
    return ty(t.Fp), oi$1(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...Rd(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
  }
  BigInt(0), BigInt(1), BigInt(2), BigInt(8);
  const fr = BigInt(0), Wo$1 = BigInt(1);
  function ly(t) {
    return oi$1(t, { a: "bigint" }, { montgomeryBits: "isSafeInteger", nByteLength: "isSafeInteger", adjustScalarBytes: "function", domain: "function", powPminus2: "function", Gu: "bigint" }), Object.freeze({ ...t });
  }
  function uy(t) {
    const e = ly(t), { P: s } = e, r = (b) => dt$3(b, s), i = e.montgomeryBits, n = Math.ceil(i / 8), o = e.nByteLength, a = e.adjustScalarBytes || ((b) => b), c = e.powPminus2 || ((b) => $d(b, s - BigInt(2), s));
    function l(b, v, C) {
      const S = r(b * (v - C));
      return v = r(v - S), C = r(C + S), [v, C];
    }
    const u = (e.a - BigInt(2)) / BigInt(4);
    function d(b, v) {
      us("u", b, fr, s), us("scalar", v, fr, s);
      const C = v, S = b;
      let A = Wo$1, N = fr, R = b, E = Wo$1, $ = fr, I;
      for (let H = BigInt(i - 1); H >= fr; H--) {
        const _ = C >> H & Wo$1;
        $ ^= _, I = l($, A, R), A = I[0], R = I[1], I = l($, N, E), N = I[0], E = I[1], $ = _;
        const x = A + N, O = r(x * x), B = A - N, j = r(B * B), k = O - j, G = R + E, Q = R - E, se = r(Q * x), Ce = r(G * B), he = se + Ce, Te = se - Ce;
        R = r(he * he), E = r(S * r(Te * Te)), A = r(O * j), N = r(k * (O + r(u * k)));
      }
      I = l($, A, R), A = I[0], R = I[1], I = l($, N, E), N = I[0], E = I[1];
      const L = c(N);
      return r(A * L);
    }
    function h(b) {
      return bo$1(r(b), n);
    }
    function p(b) {
      const v = yt$2("u coordinate", b, n);
      return o === 32 && (v[31] &= 127), cn$1(v);
    }
    function g(b) {
      const v = yt$2("scalar", b), C = v.length;
      if (C !== n && C !== o) {
        let S = "" + n + " or " + o;
        throw new Error("invalid scalar, expected " + S + " bytes, got " + C);
      }
      return cn$1(a(v));
    }
    function f(b, v) {
      const C = p(v), S = g(b), A = d(C, S);
      if (A === fr) throw new Error("invalid private or public key received");
      return h(A);
    }
    const w = h(e.Gu);
    function y(b) {
      return f(b, w);
    }
    return { scalarMult: f, scalarMultBase: y, getSharedSecret: (b, v) => f(b, v), getPublicKey: (b) => y(b), utils: { randomPrivateKey: () => e.randomBytes(e.nByteLength) }, GuBytes: w };
  }
  const Na = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
  BigInt(0);
  const dy = BigInt(1), wl = BigInt(2), hy = BigInt(3), py = BigInt(5);
  BigInt(8);
  function fy(t) {
    const e = BigInt(10), s = BigInt(20), r = BigInt(40), i = BigInt(80), n = Na, o = t * t % n * t % n, a = Lt$2(o, wl, n) * o % n, c = Lt$2(a, dy, n) * t % n, l = Lt$2(c, py, n) * c % n, u = Lt$2(l, e, n) * l % n, d = Lt$2(u, s, n) * u % n, h = Lt$2(d, r, n) * d % n, p = Lt$2(h, i, n) * h % n, g = Lt$2(p, i, n) * h % n, f = Lt$2(g, e, n) * l % n;
    return { pow_p_5_8: Lt$2(f, wl, n) * t % n, b2: o };
  }
  function gy(t) {
    return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
  }
  const _a = uy({ P: Na, a: BigInt(486662), montgomeryBits: 255, nByteLength: 32, Gu: BigInt(9), powPminus2: (t) => {
    const e = Na, { pow_p_5_8: s, b2: r } = fy(t);
    return dt$3(Lt$2(s, hy, e) * r, e);
  }, adjustScalarBytes: gy, randomBytes: ni$1 });
  function yl(t) {
    t.lowS !== void 0 && Vr("lowS", t.lowS), t.prehash !== void 0 && Vr("prehash", t.prehash);
  }
  function my(t) {
    const e = Fd(t);
    oi$1(e, { a: "field", b: "field" }, { allowedPrivateKeyLengths: "array", wrapPrivateKey: "boolean", isTorsionFree: "function", clearCofactor: "function", allowInfinityPoint: "boolean", fromBytes: "function", toBytes: "function" });
    const { endo: s, Fp: r, a: i } = e;
    if (s) {
      if (!r.eql(i, r.ZERO)) throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");
      if (typeof s != "object" || typeof s.beta != "bigint" || typeof s.splitScalar != "function") throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function");
    }
    return Object.freeze({ ...e });
  }
  const { bytesToNumberBE: wy, hexToBytes: yy } = Yw;
  class by extends Error {
    constructor(e = "") {
      super(e);
    }
  }
  const cs = { Err: by, _tlv: { encode: (t, e) => {
    const { Err: s } = cs;
    if (t < 0 || t > 256) throw new s("tlv.encode: wrong tag");
    if (e.length & 1) throw new s("tlv.encode: unpadded data");
    const r = e.length / 2, i = $r(r);
    if (i.length / 2 & 128) throw new s("tlv.encode: long form length too big");
    const n = r > 127 ? $r(i.length / 2 | 128) : "";
    return $r(t) + n + i + e;
  }, decode(t, e) {
    const { Err: s } = cs;
    let r = 0;
    if (t < 0 || t > 256) throw new s("tlv.encode: wrong tag");
    if (e.length < 2 || e[r++] !== t) throw new s("tlv.decode: wrong tlv");
    const i = e[r++], n = !!(i & 128);
    let o = 0;
    if (!n) o = i;
    else {
      const c = i & 127;
      if (!c) throw new s("tlv.decode(long): indefinite length not supported");
      if (c > 4) throw new s("tlv.decode(long): byte length is too big");
      const l = e.subarray(r, r + c);
      if (l.length !== c) throw new s("tlv.decode: length bytes not complete");
      if (l[0] === 0) throw new s("tlv.decode(long): zero leftmost byte");
      for (const u of l) o = o << 8 | u;
      if (r += c, o < 128) throw new s("tlv.decode(long): not minimal encoding");
    }
    const a = e.subarray(r, r + o);
    if (a.length !== o) throw new s("tlv.decode: wrong value length");
    return { v: a, l: e.subarray(r + o) };
  } }, _int: { encode(t) {
    const { Err: e } = cs;
    if (t < ls) throw new e("integer: negative integers are not allowed");
    let s = $r(t);
    if (Number.parseInt(s[0], 16) & 8 && (s = "00" + s), s.length & 1) throw new e("unexpected DER parsing assertion: unpadded hex");
    return s;
  }, decode(t) {
    const { Err: e } = cs;
    if (t[0] & 128) throw new e("invalid signature integer: negative");
    if (t[0] === 0 && !(t[1] & 128)) throw new e("invalid signature integer: unnecessary leading zero");
    return wy(t);
  } }, toSig(t) {
    const { Err: e, _int: s, _tlv: r } = cs, i = typeof t == "string" ? yy(t) : t;
    vn$1(i);
    const { v: n, l: o } = r.decode(48, i);
    if (o.length) throw new e("invalid signature: left bytes after parsing");
    const { v: a, l: c } = r.decode(2, n), { v: l, l: u } = r.decode(2, c);
    if (u.length) throw new e("invalid signature: left bytes after parsing");
    return { r: s.decode(a), s: s.decode(l) };
  }, hexFromSig(t) {
    const { _tlv: e, _int: s } = cs, r = e.encode(2, s.encode(t.r)), i = e.encode(2, s.encode(t.s)), n = r + i;
    return e.encode(48, n);
  } }, ls = BigInt(0), je$3 = BigInt(1);
  BigInt(2);
  const bl = BigInt(3);
  BigInt(4);
  function vy(t) {
    const e = my(t), { Fp: s } = e, r = Ud(e.n, e.nBitLength), i = e.toBytes || ((f, w, y) => {
      const b = w.toAffine();
      return ln$1(Uint8Array.from([4]), s.toBytes(b.x), s.toBytes(b.y));
    }), n = e.fromBytes || ((f) => {
      const w = f.subarray(1), y = s.fromBytes(w.subarray(0, s.BYTES)), b = s.fromBytes(w.subarray(s.BYTES, 2 * s.BYTES));
      return { x: y, y: b };
    });
    function o(f) {
      const { a: w, b: y } = e, b = s.sqr(f), v = s.mul(b, f);
      return s.add(s.add(v, s.mul(f, w)), y);
    }
    if (!s.eql(s.sqr(e.Gy), o(e.Gx))) throw new Error("bad generator point: equation left != right");
    function a(f) {
      return vo$1(f, je$3, e.n);
    }
    function c(f) {
      const { allowedPrivateKeyLengths: w, nByteLength: y, wrapPrivateKey: b, n: v } = e;
      if (w && typeof f != "bigint") {
        if (tr(f) && (f = Gr(f)), typeof f != "string" || !w.includes(f.length)) throw new Error("invalid private key");
        f = f.padStart(y * 2, "0");
      }
      let C;
      try {
        C = typeof f == "bigint" ? f : Ys(yt$2("private key", f, y));
      } catch {
        throw new Error("invalid private key, expected hex or " + y + " bytes, got " + typeof f);
      }
      return b && (C = dt$3(C, v)), us("private key", C, je$3, v), C;
    }
    function l(f) {
      if (!(f instanceof h)) throw new Error("ProjectivePoint expected");
    }
    const u = Ca((f, w) => {
      const { px: y, py: b, pz: v } = f;
      if (s.eql(v, s.ONE)) return { x: y, y: b };
      const C = f.is0();
      w == null && (w = C ? s.ONE : s.inv(v));
      const S = s.mul(y, w), A = s.mul(b, w), N = s.mul(v, w);
      if (C) return { x: s.ZERO, y: s.ZERO };
      if (!s.eql(N, s.ONE)) throw new Error("invZ was invalid");
      return { x: S, y: A };
    }), d = Ca((f) => {
      if (f.is0()) {
        if (e.allowInfinityPoint && !s.is0(f.py)) return;
        throw new Error("bad point: ZERO");
      }
      const { x: w, y } = f.toAffine();
      if (!s.isValid(w) || !s.isValid(y)) throw new Error("bad point: x or y not FE");
      const b = s.sqr(y), v = o(w);
      if (!s.eql(b, v)) throw new Error("bad point: equation left != right");
      if (!f.isTorsionFree()) throw new Error("bad point: not in prime-order subgroup");
      return true;
    });
    class h {
      constructor(w, y, b) {
        if (this.px = w, this.py = y, this.pz = b, w == null || !s.isValid(w)) throw new Error("x required");
        if (y == null || !s.isValid(y)) throw new Error("y required");
        if (b == null || !s.isValid(b)) throw new Error("z required");
        Object.freeze(this);
      }
      static fromAffine(w) {
        const { x: y, y: b } = w || {};
        if (!w || !s.isValid(y) || !s.isValid(b)) throw new Error("invalid affine point");
        if (w instanceof h) throw new Error("projective point not allowed");
        const v = (C) => s.eql(C, s.ZERO);
        return v(y) && v(b) ? h.ZERO : new h(y, b, s.ONE);
      }
      get x() {
        return this.toAffine().x;
      }
      get y() {
        return this.toAffine().y;
      }
      static normalizeZ(w) {
        const y = s.invertBatch(w.map((b) => b.pz));
        return w.map((b, v) => b.toAffine(y[v])).map(h.fromAffine);
      }
      static fromHex(w) {
        const y = h.fromAffine(n(yt$2("pointHex", w)));
        return y.assertValidity(), y;
      }
      static fromPrivateKey(w) {
        return h.BASE.multiply(c(w));
      }
      static msm(w, y) {
        return cy(h, r, w, y);
      }
      _setWindowSize(w) {
        g.setWindowSize(this, w);
      }
      assertValidity() {
        d(this);
      }
      hasEvenY() {
        const { y: w } = this.toAffine();
        if (s.isOdd) return !s.isOdd(w);
        throw new Error("Field doesn't support isOdd");
      }
      equals(w) {
        l(w);
        const { px: y, py: b, pz: v } = this, { px: C, py: S, pz: A } = w, N = s.eql(s.mul(y, A), s.mul(C, v)), R = s.eql(s.mul(b, A), s.mul(S, v));
        return N && R;
      }
      negate() {
        return new h(this.px, s.neg(this.py), this.pz);
      }
      double() {
        const { a: w, b: y } = e, b = s.mul(y, bl), { px: v, py: C, pz: S } = this;
        let A = s.ZERO, N = s.ZERO, R = s.ZERO, E = s.mul(v, v), $ = s.mul(C, C), I = s.mul(S, S), L = s.mul(v, C);
        return L = s.add(L, L), R = s.mul(v, S), R = s.add(R, R), A = s.mul(w, R), N = s.mul(b, I), N = s.add(A, N), A = s.sub($, N), N = s.add($, N), N = s.mul(A, N), A = s.mul(L, A), R = s.mul(b, R), I = s.mul(w, I), L = s.sub(E, I), L = s.mul(w, L), L = s.add(L, R), R = s.add(E, E), E = s.add(R, E), E = s.add(E, I), E = s.mul(E, L), N = s.add(N, E), I = s.mul(C, S), I = s.add(I, I), E = s.mul(I, L), A = s.sub(A, E), R = s.mul(I, $), R = s.add(R, R), R = s.add(R, R), new h(A, N, R);
      }
      add(w) {
        l(w);
        const { px: y, py: b, pz: v } = this, { px: C, py: S, pz: A } = w;
        let N = s.ZERO, R = s.ZERO, E = s.ZERO;
        const $ = e.a, I = s.mul(e.b, bl);
        let L = s.mul(y, C), H = s.mul(b, S), _ = s.mul(v, A), x = s.add(y, b), O = s.add(C, S);
        x = s.mul(x, O), O = s.add(L, H), x = s.sub(x, O), O = s.add(y, v);
        let B = s.add(C, A);
        return O = s.mul(O, B), B = s.add(L, _), O = s.sub(O, B), B = s.add(b, v), N = s.add(S, A), B = s.mul(B, N), N = s.add(H, _), B = s.sub(B, N), E = s.mul($, O), N = s.mul(I, _), E = s.add(N, E), N = s.sub(H, E), E = s.add(H, E), R = s.mul(N, E), H = s.add(L, L), H = s.add(H, L), _ = s.mul($, _), O = s.mul(I, O), H = s.add(H, _), _ = s.sub(L, _), _ = s.mul($, _), O = s.add(O, _), L = s.mul(H, O), R = s.add(R, L), L = s.mul(B, O), N = s.mul(x, N), N = s.sub(N, L), L = s.mul(x, H), E = s.mul(B, E), E = s.add(E, L), new h(N, R, E);
      }
      subtract(w) {
        return this.add(w.negate());
      }
      is0() {
        return this.equals(h.ZERO);
      }
      wNAF(w) {
        return g.wNAFCached(this, w, h.normalizeZ);
      }
      multiplyUnsafe(w) {
        const { endo: y, n: b } = e;
        us("scalar", w, ls, b);
        const v = h.ZERO;
        if (w === ls) return v;
        if (this.is0() || w === je$3) return this;
        if (!y || g.hasPrecomputes(this)) return g.wNAFCachedUnsafe(this, w, h.normalizeZ);
        let { k1neg: C, k1: S, k2neg: A, k2: N } = y.splitScalar(w), R = v, E = v, $ = this;
        for (; S > ls || N > ls; ) S & je$3 && (R = R.add($)), N & je$3 && (E = E.add($)), $ = $.double(), S >>= je$3, N >>= je$3;
        return C && (R = R.negate()), A && (E = E.negate()), E = new h(s.mul(E.px, y.beta), E.py, E.pz), R.add(E);
      }
      multiply(w) {
        const { endo: y, n: b } = e;
        us("scalar", w, je$3, b);
        let v, C;
        if (y) {
          const { k1neg: S, k1: A, k2neg: N, k2: R } = y.splitScalar(w);
          let { p: E, f: $ } = this.wNAF(A), { p: I, f: L } = this.wNAF(R);
          E = g.constTimeNegate(S, E), I = g.constTimeNegate(N, I), I = new h(s.mul(I.px, y.beta), I.py, I.pz), v = E.add(I), C = $.add(L);
        } else {
          const { p: S, f: A } = this.wNAF(w);
          v = S, C = A;
        }
        return h.normalizeZ([v, C])[0];
      }
      multiplyAndAddUnsafe(w, y, b) {
        const v = h.BASE, C = (A, N) => N === ls || N === je$3 || !A.equals(v) ? A.multiplyUnsafe(N) : A.multiply(N), S = C(this, y).add(C(w, b));
        return S.is0() ? void 0 : S;
      }
      toAffine(w) {
        return u(this, w);
      }
      isTorsionFree() {
        const { h: w, isTorsionFree: y } = e;
        if (w === je$3) return true;
        if (y) return y(h, this);
        throw new Error("isTorsionFree() has not been declared for the elliptic curve");
      }
      clearCofactor() {
        const { h: w, clearCofactor: y } = e;
        return w === je$3 ? this : y ? y(h, this) : this.multiplyUnsafe(e.h);
      }
      toRawBytes(w = true) {
        return Vr("isCompressed", w), this.assertValidity(), i(h, this, w);
      }
      toHex(w = true) {
        return Vr("isCompressed", w), Gr(this.toRawBytes(w));
      }
    }
    h.BASE = new h(e.Gx, e.Gy, s.ONE), h.ZERO = new h(s.ZERO, s.ONE, s.ZERO);
    const p = e.nBitLength, g = ay(h, e.endo ? Math.ceil(p / 2) : p);
    return { CURVE: e, ProjectivePoint: h, normPrivateKeyToScalar: c, weierstrassEquation: o, isWithinCurveOrder: a };
  }
  function Ey(t) {
    const e = Fd(t);
    return oi$1(e, { hash: "hash", hmac: "function", randomBytes: "function" }, { bits2int: "function", bits2int_modN: "function", lowS: "boolean" }), Object.freeze({ lowS: true, ...e });
  }
  function Cy(t) {
    const e = Ey(t), { Fp: s, n: r } = e, i = s.BYTES + 1, n = 2 * s.BYTES + 1;
    function o(_) {
      return dt$3(_, r);
    }
    function a(_) {
      return Aa(_, r);
    }
    const { ProjectivePoint: c, normPrivateKeyToScalar: l, weierstrassEquation: u, isWithinCurveOrder: d } = vy({ ...e, toBytes(_, x, O) {
      const B = x.toAffine(), j = s.toBytes(B.x), k = ln$1;
      return Vr("isCompressed", O), O ? k(Uint8Array.from([x.hasEvenY() ? 2 : 3]), j) : k(Uint8Array.from([4]), j, s.toBytes(B.y));
    }, fromBytes(_) {
      const x = _.length, O = _[0], B = _.subarray(1);
      if (x === i && (O === 2 || O === 3)) {
        const j = Ys(B);
        if (!vo$1(j, je$3, s.ORDER)) throw new Error("Point is not on curve");
        const k = u(j);
        let G;
        try {
          G = s.sqrt(k);
        } catch (se) {
          const Ce = se instanceof Error ? ": " + se.message : "";
          throw new Error("Point is not on curve" + Ce);
        }
        const Q = (G & je$3) === je$3;
        return (O & 1) === 1 !== Q && (G = s.neg(G)), { x: j, y: G };
      } else if (x === n && O === 4) {
        const j = s.fromBytes(B.subarray(0, s.BYTES)), k = s.fromBytes(B.subarray(s.BYTES, 2 * s.BYTES));
        return { x: j, y: k };
      } else {
        const j = i, k = n;
        throw new Error("invalid Point, expected length of " + j + ", or uncompressed " + k + ", got " + x);
      }
    } }), h = (_) => Gr(Yr(_, e.nByteLength));
    function p(_) {
      const x = r >> je$3;
      return _ > x;
    }
    function g(_) {
      return p(_) ? o(-_) : _;
    }
    const f = (_, x, O) => Ys(_.slice(x, O));
    class w {
      constructor(x, O, B) {
        this.r = x, this.s = O, this.recovery = B, this.assertValidity();
      }
      static fromCompact(x) {
        const O = e.nByteLength;
        return x = yt$2("compactSignature", x, O * 2), new w(f(x, 0, O), f(x, O, 2 * O));
      }
      static fromDER(x) {
        const { r: O, s: B } = cs.toSig(yt$2("DER", x));
        return new w(O, B);
      }
      assertValidity() {
        us("r", this.r, je$3, r), us("s", this.s, je$3, r);
      }
      addRecoveryBit(x) {
        return new w(this.r, this.s, x);
      }
      recoverPublicKey(x) {
        const { r: O, s: B, recovery: j } = this, k = A(yt$2("msgHash", x));
        if (j == null || ![0, 1, 2, 3].includes(j)) throw new Error("recovery id invalid");
        const G = j === 2 || j === 3 ? O + e.n : O;
        if (G >= s.ORDER) throw new Error("recovery id 2 or 3 invalid");
        const Q = j & 1 ? "03" : "02", se = c.fromHex(Q + h(G)), Ce = a(G), he = o(-k * Ce), Te = o(B * Ce), Le = c.BASE.multiplyAndAddUnsafe(se, he, Te);
        if (!Le) throw new Error("point at infinify");
        return Le.assertValidity(), Le;
      }
      hasHighS() {
        return p(this.s);
      }
      normalizeS() {
        return this.hasHighS() ? new w(this.r, o(-this.s), this.recovery) : this;
      }
      toDERRawBytes() {
        return Jr(this.toDERHex());
      }
      toDERHex() {
        return cs.hexFromSig({ r: this.r, s: this.s });
      }
      toCompactRawBytes() {
        return Jr(this.toCompactHex());
      }
      toCompactHex() {
        return h(this.r) + h(this.s);
      }
    }
    const y = { isValidPrivateKey(_) {
      try {
        return l(_), !0;
      } catch {
        return false;
      }
    }, normPrivateKeyToScalar: l, randomPrivateKey: () => {
      const _ = Ld(e.n);
      return iy(e.randomBytes(_), e.n);
    }, precompute(_ = 8, x = c.BASE) {
      return x._setWindowSize(_), x.multiply(BigInt(3)), x;
    } };
    function b(_, x = true) {
      return c.fromPrivateKey(_).toRawBytes(x);
    }
    function v(_) {
      const x = tr(_), O = typeof _ == "string", B = (x || O) && _.length;
      return x ? B === i || B === n : O ? B === 2 * i || B === 2 * n : _ instanceof c;
    }
    function C(_, x, O = true) {
      if (v(_)) throw new Error("first arg must be private key");
      if (!v(x)) throw new Error("second arg must be public key");
      return c.fromHex(x).multiply(l(_)).toRawBytes(O);
    }
    const S = e.bits2int || function(_) {
      if (_.length > 8192) throw new Error("input is too large");
      const x = Ys(_), O = _.length * 8 - e.nBitLength;
      return O > 0 ? x >> BigInt(O) : x;
    }, A = e.bits2int_modN || function(_) {
      return o(S(_));
    }, N = ic(e.nBitLength);
    function R(_) {
      return us("num < 2^" + e.nBitLength, _, ls, N), Yr(_, e.nByteLength);
    }
    function E(_, x, O = $) {
      if (["recovered", "canonical"].some(($e) => $e in O)) throw new Error("sign() legacy options not supported");
      const { hash: B, randomBytes: j } = e;
      let { lowS: k, prehash: G, extraEntropy: Q } = O;
      k == null && (k = true), _ = yt$2("msgHash", _), yl(O), G && (_ = yt$2("prehashed msgHash", B(_)));
      const se = A(_), Ce = l(x), he = [R(Ce), R(se)];
      if (Q != null && Q !== false) {
        const $e = Q === true ? j(s.BYTES) : Q;
        he.push(yt$2("extraEntropy", $e));
      }
      const Te = ln$1(...he), Le = se;
      function Xe($e) {
        const Re = S($e);
        if (!d(Re)) return;
        const $s = a(Re), Qt = c.BASE.multiply(Re).toAffine(), qt = o(Qt.x);
        if (qt === ls) return;
        const es = o($s * o(Le + qt * Ce));
        if (es === ls) return;
        let ts = (Qt.x === qt ? 0 : 2) | Number(Qt.y & je$3), _n = es;
        return k && p(es) && (_n = g(es), ts ^= 1), new w(qt, _n, ts);
      }
      return { seed: Te, k2sig: Xe };
    }
    const $ = { lowS: e.lowS, prehash: false }, I = { lowS: e.lowS, prehash: false };
    function L(_, x, O = $) {
      const { seed: B, k2sig: j } = E(_, x, O), k = e;
      return kd(k.hash.outputLen, k.nByteLength, k.hmac)(B, j);
    }
    c.BASE._setWindowSize(8);
    function H(_, x, O, B = I) {
      var es;
      const j = _;
      x = yt$2("msgHash", x), O = yt$2("publicKey", O);
      const { lowS: k, prehash: G, format: Q } = B;
      if (yl(B), "strict" in B) throw new Error("options.strict was renamed to lowS");
      if (Q !== void 0 && Q !== "compact" && Q !== "der") throw new Error("format must be compact or der");
      const se = typeof j == "string" || tr(j), Ce = !se && !Q && typeof j == "object" && j !== null && typeof j.r == "bigint" && typeof j.s == "bigint";
      if (!se && !Ce) throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");
      let he, Te;
      try {
        if (Ce && (he = new w(j.r, j.s)), se) {
          try {
            Q !== "compact" && (he = w.fromDER(j));
          } catch (ts) {
            if (!(ts instanceof cs.Err)) throw ts;
          }
          !he && Q !== "der" && (he = w.fromCompact(j));
        }
        Te = c.fromHex(O);
      } catch {
        return false;
      }
      if (!he || k && he.hasHighS()) return false;
      G && (x = e.hash(x));
      const { r: Le, s: Xe } = he, $e = A(x), Re = a(Xe), $s = o($e * Re), Qt = o(Le * Re), qt = (es = c.BASE.multiplyAndAddUnsafe(Te, $s, Qt)) == null ? void 0 : es.toAffine();
      return qt ? o(qt.x) === Le : false;
    }
    return { CURVE: e, getPublicKey: b, getSharedSecret: C, sign: L, verify: H, ProjectivePoint: c, Signature: w, utils: y };
  }
  function Iy(t) {
    return { hash: t, hmac: (e, ...s) => mo$1(t, e, Sm(...s)), randomBytes: ni$1 };
  }
  function Ay(t, e) {
    const s = (r) => Cy({ ...t, ...Iy(r) });
    return { ...s(e), create: s };
  }
  const jd = Ud(BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff")), Ny = jd.create(BigInt("-3")), _y = BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"), Sy = Ay({ a: Ny, b: _y, Fp: jd, n: BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"), Gx: BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"), Gy: BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"), h: BigInt(1), lowS: false }, bn$1), qd = "base10", st$2 = "base16", Ft$2 = "base64pad", Es = "base64url", En$1 = "utf8", Wd = 0, ds = 1, Cn$1 = 2, Py = 0, vl = 1, xi$1 = 12, nc = 32;
  function Oy() {
    const t = _a.utils.randomPrivateKey(), e = _a.getPublicKey(t);
    return { privateKey: ht$3(t, st$2), publicKey: ht$3(e, st$2) };
  }
  function Sa() {
    const t = ni$1(nc);
    return ht$3(t, st$2);
  }
  function Ty(t, e) {
    const s = _a.getSharedSecret(xt$2(t, st$2), xt$2(e, st$2)), r = Rw(bn$1, s, void 0, void 0, nc);
    return ht$3(r, st$2);
  }
  function Jn$1(t) {
    const e = bn$1(xt$2(t, st$2));
    return ht$3(e, st$2);
  }
  function Jt$1(t) {
    const e = bn$1(xt$2(t, En$1));
    return ht$3(e, st$2);
  }
  function zd(t) {
    return xt$2(`${t}`, qd);
  }
  function sr(t) {
    return Number(ht$3(t, qd));
  }
  function Hd(t) {
    return t.replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
  }
  function Kd(t) {
    const e = t.replace(/-/g, "+").replace(/_/g, "/"), s = (4 - e.length % 4) % 4;
    return e + "=".repeat(s);
  }
  function xy(t) {
    const e = zd(typeof t.type < "u" ? t.type : Wd);
    if (sr(e) === ds && typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    const s = typeof t.senderPublicKey < "u" ? xt$2(t.senderPublicKey, st$2) : void 0, r = typeof t.iv < "u" ? xt$2(t.iv, st$2) : ni$1(xi$1), i = xt$2(t.symKey, st$2), n = Od(i, r).encrypt(xt$2(t.message, En$1)), o = Vd({ type: e, sealed: n, iv: r, senderPublicKey: s });
    return t.encoding === Es ? Hd(o) : o;
  }
  function ky(t) {
    const e = xt$2(t.symKey, st$2), { sealed: s, iv: r } = un$1({ encoded: t.encoded, encoding: t.encoding }), i = Od(e, r).decrypt(s);
    if (i === null) throw new Error("Failed to decrypt");
    return ht$3(i, En$1);
  }
  function $y(t, e) {
    const s = zd(Cn$1), r = ni$1(xi$1), i = xt$2(t, En$1), n = Vd({ type: s, sealed: i, iv: r });
    return e === Es ? Hd(n) : n;
  }
  function Ry(t, e) {
    const { sealed: s } = un$1({ encoded: t, encoding: e });
    return ht$3(s, En$1);
  }
  function Vd(t) {
    if (sr(t.type) === Cn$1) return ht$3(Ti$1([t.type, t.sealed]), Ft$2);
    if (sr(t.type) === ds) {
      if (typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
      return ht$3(Ti$1([t.type, t.senderPublicKey, t.iv, t.sealed]), Ft$2);
    }
    return ht$3(Ti$1([t.type, t.iv, t.sealed]), Ft$2);
  }
  function un$1(t) {
    const e = (t.encoding || Ft$2) === Es ? Kd(t.encoded) : t.encoded, s = xt$2(e, Ft$2), r = s.slice(Py, vl), i = vl;
    if (sr(r) === ds) {
      const c = i + nc, l = c + xi$1, u = s.slice(i, c), d = s.slice(c, l), h = s.slice(l);
      return { type: r, sealed: h, iv: d, senderPublicKey: u };
    }
    if (sr(r) === Cn$1) {
      const c = s.slice(i), l = ni$1(xi$1);
      return { type: r, sealed: c, iv: l };
    }
    const n = i + xi$1, o = s.slice(i, n), a = s.slice(n);
    return { type: r, sealed: a, iv: o };
  }
  function Uy(t, e) {
    const s = un$1({ encoded: t, encoding: e == null ? void 0 : e.encoding });
    return Gd({ type: sr(s.type), senderPublicKey: typeof s.senderPublicKey < "u" ? ht$3(s.senderPublicKey, st$2) : void 0, receiverPublicKey: e == null ? void 0 : e.receiverPublicKey });
  }
  function Gd(t) {
    const e = (t == null ? void 0 : t.type) || Wd;
    if (e === ds) {
      if (typeof (t == null ? void 0 : t.senderPublicKey) > "u") throw new Error("missing sender public key");
      if (typeof (t == null ? void 0 : t.receiverPublicKey) > "u") throw new Error("missing receiver public key");
    }
    return { type: e, senderPublicKey: t == null ? void 0 : t.senderPublicKey, receiverPublicKey: t == null ? void 0 : t.receiverPublicKey };
  }
  function El(t) {
    return t.type === ds && typeof t.senderPublicKey == "string" && typeof t.receiverPublicKey == "string";
  }
  function Cl(t) {
    return t.type === Cn$1;
  }
  function Dy(t) {
    const e = Buffer.from(t.x, "base64"), s = Buffer.from(t.y, "base64");
    return Ti$1([new Uint8Array([4]), e, s]);
  }
  function Ly(t, e) {
    const [s, r, i] = t.split("."), n = Buffer.from(Kd(i), "base64");
    if (n.length !== 64) throw new Error("Invalid signature length");
    const o = n.slice(0, 32), a = n.slice(32, 64), c = `${s}.${r}`, l = bn$1(c), u = Dy(e);
    if (!Sy.verify(Ti$1([o, a]), l, u)) throw new Error("Invalid signature");
    return Ho$1(t).payload;
  }
  const My = "irn";
  function ao$1(t) {
    return (t == null ? void 0 : t.relay) || { protocol: My };
  }
  function Ci$1(t) {
    const e = E1$1[t];
    if (typeof e > "u") throw new Error(`Relay Protocol not supported: ${t}`);
    return e;
  }
  function By(t, e = "-") {
    const s = {}, r = "relay" + e;
    return Object.keys(t).forEach((i) => {
      if (i.startsWith(r)) {
        const n = i.replace(r, ""), o = t[i];
        s[n] = o;
      }
    }), s;
  }
  function Il(t) {
    if (!t.includes("wc:")) {
      const l = md(t);
      l != null && l.includes("wc:") && (t = l);
    }
    t = t.includes("wc://") ? t.replace("wc://", "") : t, t = t.includes("wc:") ? t.replace("wc:", "") : t;
    const e = t.indexOf(":"), s = t.indexOf("?") !== -1 ? t.indexOf("?") : void 0, r = t.substring(0, e), i = t.substring(e + 1, s).split("@"), n = typeof s < "u" ? t.substring(s) : "", o = new URLSearchParams(n), a = {};
    o.forEach((l, u) => {
      a[u] = l;
    });
    const c = typeof a.methods == "string" ? a.methods.split(",") : void 0;
    return { protocol: r, topic: Fy(i[0]), version: parseInt(i[1], 10), symKey: a.symKey, relay: By(a), methods: c, expiryTimestamp: a.expiryTimestamp ? parseInt(a.expiryTimestamp, 10) : void 0 };
  }
  function Fy(t) {
    return t.startsWith("//") ? t.substring(2) : t;
  }
  function jy(t, e = "-") {
    const s = "relay", r = {};
    return Object.keys(t).forEach((i) => {
      const n = i, o = s + e + n;
      t[n] && (r[o] = t[n]);
    }), r;
  }
  function Al(t) {
    const e = new URLSearchParams(), s = jy(t.relay);
    Object.keys(s).sort().forEach((i) => {
      e.set(i, s[i]);
    }), e.set("symKey", t.symKey), t.expiryTimestamp && e.set("expiryTimestamp", t.expiryTimestamp.toString()), t.methods && e.set("methods", t.methods.join(","));
    const r = e.toString();
    return `${t.protocol}:${t.topic}@${t.version}?${r}`;
  }
  function Mn$1(t, e, s) {
    return `${t}?wc_ev=${s}&topic=${e}`;
  }
  var qy = Object.defineProperty, Wy = Object.defineProperties, zy = Object.getOwnPropertyDescriptors, Nl = Object.getOwnPropertySymbols, Hy = Object.prototype.hasOwnProperty, Ky = Object.prototype.propertyIsEnumerable, _l = (t, e, s) => e in t ? qy(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Vy = (t, e) => {
    for (var s in e || (e = {})) Hy.call(e, s) && _l(t, s, e[s]);
    if (Nl) for (var s of Nl(e)) Ky.call(e, s) && _l(t, s, e[s]);
    return t;
  }, Gy = (t, e) => Wy(t, zy(e));
  function ai$1(t) {
    const e = [];
    return t.forEach((s) => {
      const [r, i] = s.split(":");
      e.push(`${r}:${i}`);
    }), e;
  }
  function Jy(t) {
    const e = [];
    return Object.values(t).forEach((s) => {
      e.push(...ai$1(s.accounts));
    }), e;
  }
  function Yy(t, e) {
    const s = [];
    return Object.values(t).forEach((r) => {
      ai$1(r.accounts).includes(e) && s.push(...r.methods);
    }), s;
  }
  function Xy(t, e) {
    const s = [];
    return Object.values(t).forEach((r) => {
      ai$1(r.accounts).includes(e) && s.push(...r.events);
    }), s;
  }
  function Eo$1(t) {
    return t.includes(":");
  }
  function Rr(t) {
    return Eo$1(t) ? t.split(":")[0] : t;
  }
  function Sl(t) {
    var e, s, r;
    const i = {};
    if (!Ps(t)) return i;
    for (const [n, o] of Object.entries(t)) {
      const a = Eo$1(n) ? [n] : o.chains, c = o.methods || [], l = o.events || [], u = Rr(n);
      i[u] = Gy(Vy({}, i[u]), { chains: Xt$2(a, (e = i[u]) == null ? void 0 : e.chains), methods: Xt$2(c, (s = i[u]) == null ? void 0 : s.methods), events: Xt$2(l, (r = i[u]) == null ? void 0 : r.events) });
    }
    return i;
  }
  function Zy(t) {
    const e = {};
    return t == null || t.forEach((s) => {
      var r;
      const [i, n] = s.split(":");
      e[i] || (e[i] = { accounts: [], chains: [], events: [], methods: [] }), e[i].accounts.push(s), (r = e[i].chains) == null || r.push(`${i}:${n}`);
    }), e;
  }
  function Pl(t, e) {
    e = e.map((r) => r.replace("did:pkh:", ""));
    const s = Zy(e);
    for (const [r, i] of Object.entries(s)) i.methods ? i.methods = Xt$2(i.methods, t) : i.methods = t, i.events = ["chainChanged", "accountsChanged"];
    return s;
  }
  function Qy(t, e) {
    var s, r, i, n, o, a;
    const c = Sl(t), l = Sl(e), u = {}, d = Object.keys(c).concat(Object.keys(l));
    for (const h of d) u[h] = { chains: Xt$2((s = c[h]) == null ? void 0 : s.chains, (r = l[h]) == null ? void 0 : r.chains), methods: Xt$2((i = c[h]) == null ? void 0 : i.methods, (n = l[h]) == null ? void 0 : n.methods), events: Xt$2((o = c[h]) == null ? void 0 : o.events, (a = l[h]) == null ? void 0 : a.events) };
    return u;
  }
  const eb = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } }, tb = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
  function U$2(t, e) {
    const { message: s, code: r } = tb[t];
    return { message: e ? `${s} ${e}` : s, code: r };
  }
  function we$2(t, e) {
    const { message: s, code: r } = eb[t];
    return { message: e ? `${s} ${e}` : s, code: r };
  }
  function Ss(t, e) {
    return !!Array.isArray(t);
  }
  function Ps(t) {
    return Object.getPrototypeOf(t) === Object.prototype && Object.keys(t).length;
  }
  function Je$2(t) {
    return typeof t > "u";
  }
  function ke$1(t, e) {
    return e && Je$2(t) ? true : typeof t == "string" && !!t.trim().length;
  }
  function oc(t, e) {
    return e && Je$2(t) ? true : typeof t == "number" && !isNaN(t);
  }
  function sb(t, e) {
    const { requiredNamespaces: s } = e, r = Object.keys(t.namespaces), i = Object.keys(s);
    let n = true;
    return Ks(i, r) ? (r.forEach((o) => {
      const { accounts: a, methods: c, events: l } = t.namespaces[o], u = ai$1(a), d = s[o];
      (!Ks(dd(o, d), u) || !Ks(d.methods, c) || !Ks(d.events, l)) && (n = false);
    }), n) : false;
  }
  function co$1(t) {
    return ke$1(t, false) && t.includes(":") ? t.split(":").length === 2 : false;
  }
  function rb(t) {
    if (ke$1(t, false) && t.includes(":")) {
      const e = t.split(":");
      if (e.length === 3) {
        const s = e[0] + ":" + e[1];
        return !!e[2] && co$1(s);
      }
    }
    return false;
  }
  function ib(t) {
    function e(s) {
      try {
        return typeof new URL(s) < "u";
      } catch {
        return false;
      }
    }
    try {
      if (ke$1(t, !1)) {
        if (e(t)) return !0;
        const s = md(t);
        return e(s);
      }
    } catch {
    }
    return false;
  }
  function nb(t) {
    var e;
    return (e = t == null ? void 0 : t.proposer) == null ? void 0 : e.publicKey;
  }
  function ob(t) {
    return t == null ? void 0 : t.topic;
  }
  function ab(t, e) {
    let s = null;
    return ke$1(t == null ? void 0 : t.publicKey, false) || (s = U$2("MISSING_OR_INVALID", `${e} controller public key should be a string`)), s;
  }
  function Ol(t) {
    let e = true;
    return Ss(t) ? t.length && (e = t.every((s) => ke$1(s, false))) : e = false, e;
  }
  function cb(t, e, s) {
    let r = null;
    return Ss(e) && e.length ? e.forEach((i) => {
      r || co$1(i) || (r = we$2("UNSUPPORTED_CHAINS", `${s}, chain ${i} should be a string and conform to "namespace:chainId" format`));
    }) : co$1(t) || (r = we$2("UNSUPPORTED_CHAINS", `${s}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), r;
  }
  function lb(t, e, s) {
    let r = null;
    return Object.entries(t).forEach(([i, n]) => {
      if (r) return;
      const o = cb(i, dd(i, n), `${e} ${s}`);
      o && (r = o);
    }), r;
  }
  function ub(t, e) {
    let s = null;
    return Ss(t) ? t.forEach((r) => {
      s || rb(r) || (s = we$2("UNSUPPORTED_ACCOUNTS", `${e}, account ${r} should be a string and conform to "namespace:chainId:address" format`));
    }) : s = we$2("UNSUPPORTED_ACCOUNTS", `${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), s;
  }
  function db(t, e) {
    let s = null;
    return Object.values(t).forEach((r) => {
      if (s) return;
      const i = ub(r == null ? void 0 : r.accounts, `${e} namespace`);
      i && (s = i);
    }), s;
  }
  function hb(t, e) {
    let s = null;
    return Ol(t == null ? void 0 : t.methods) ? Ol(t == null ? void 0 : t.events) || (s = we$2("UNSUPPORTED_EVENTS", `${e}, events should be an array of strings or empty array for no events`)) : s = we$2("UNSUPPORTED_METHODS", `${e}, methods should be an array of strings or empty array for no methods`), s;
  }
  function Jd(t, e) {
    let s = null;
    return Object.values(t).forEach((r) => {
      if (s) return;
      const i = hb(r, `${e}, namespace`);
      i && (s = i);
    }), s;
  }
  function pb(t, e, s) {
    let r = null;
    if (t && Ps(t)) {
      const i = Jd(t, e);
      i && (r = i);
      const n = lb(t, e, s);
      n && (r = n);
    } else r = U$2("MISSING_OR_INVALID", `${e}, ${s} should be an object with data`);
    return r;
  }
  function zo(t, e) {
    let s = null;
    if (t && Ps(t)) {
      const r = Jd(t, e);
      r && (s = r);
      const i = db(t, e);
      i && (s = i);
    } else s = U$2("MISSING_OR_INVALID", `${e}, namespaces should be an object with data`);
    return s;
  }
  function Yd(t) {
    return ke$1(t.protocol, true);
  }
  function fb(t, e) {
    let s = false;
    return t ? t && Ss(t) && t.length && t.forEach((r) => {
      s = Yd(r);
    }) : s = true, s;
  }
  function gb(t) {
    return typeof t == "number";
  }
  function ut$3(t) {
    return typeof t < "u" && typeof t !== null;
  }
  function mb(t) {
    return !(!t || typeof t != "object" || !t.code || !oc(t.code, false) || !t.message || !ke$1(t.message, false));
  }
  function wb(t) {
    return !(Je$2(t) || !ke$1(t.method, false));
  }
  function yb(t) {
    return !(Je$2(t) || Je$2(t.result) && Je$2(t.error) || !oc(t.id, false) || !ke$1(t.jsonrpc, false));
  }
  function bb(t) {
    return !(Je$2(t) || !ke$1(t.name, false));
  }
  function Tl(t, e) {
    return !(!co$1(e) || !Jy(t).includes(e));
  }
  function vb(t, e, s) {
    return ke$1(s, false) ? Yy(t, e).includes(s) : false;
  }
  function Eb(t, e, s) {
    return ke$1(s, false) ? Xy(t, e).includes(s) : false;
  }
  function xl(t, e, s) {
    let r = null;
    const i = Cb(t), n = Ib(e), o = Object.keys(i), a = Object.keys(n), c = kl(Object.keys(t)), l = kl(Object.keys(e)), u = c.filter((d) => !l.includes(d));
    return u.length && (r = U$2("NON_CONFORMING_NAMESPACES", `${s} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u.toString()}
      Received: ${Object.keys(e).toString()}`)), Ks(o, a) || (r = U$2("NON_CONFORMING_NAMESPACES", `${s} namespaces chains don't satisfy required namespaces.
      Required: ${o.toString()}
      Approved: ${a.toString()}`)), Object.keys(e).forEach((d) => {
      if (!d.includes(":") || r) return;
      const h = ai$1(e[d].accounts);
      h.includes(d) || (r = U$2("NON_CONFORMING_NAMESPACES", `${s} namespaces accounts don't satisfy namespace accounts for ${d}
        Required: ${d}
        Approved: ${h.toString()}`));
    }), o.forEach((d) => {
      r || (Ks(i[d].methods, n[d].methods) ? Ks(i[d].events, n[d].events) || (r = U$2("NON_CONFORMING_NAMESPACES", `${s} namespaces events don't satisfy namespace events for ${d}`)) : r = U$2("NON_CONFORMING_NAMESPACES", `${s} namespaces methods don't satisfy namespace methods for ${d}`));
    }), r;
  }
  function Cb(t) {
    const e = {};
    return Object.keys(t).forEach((s) => {
      var r;
      s.includes(":") ? e[s] = t[s] : (r = t[s].chains) == null || r.forEach((i) => {
        e[i] = { methods: t[s].methods, events: t[s].events };
      });
    }), e;
  }
  function kl(t) {
    return [...new Set(t.map((e) => e.includes(":") ? e.split(":")[0] : e))];
  }
  function Ib(t) {
    const e = {};
    return Object.keys(t).forEach((s) => {
      if (s.includes(":")) e[s] = t[s];
      else {
        const r = ai$1(t[s].accounts);
        r == null || r.forEach((i) => {
          e[i] = { accounts: t[s].accounts.filter((n) => n.includes(`${i}:`)), methods: t[s].methods, events: t[s].events };
        });
      }
    }), e;
  }
  function Ab(t, e) {
    return oc(t, false) && t <= e.max && t >= e.min;
  }
  function $l() {
    const t = wn$1();
    return new Promise((e) => {
      switch (t) {
        case vt$3.browser:
          e(Nb());
          break;
        case vt$3.reactNative:
          e(_b());
          break;
        case vt$3.node:
          e(Sb());
          break;
        default:
          e(true);
      }
    });
  }
  function Nb() {
    return ii$1() && (navigator == null ? void 0 : navigator.onLine);
  }
  async function _b() {
    if (ks() && typeof global < "u" && global != null && global.NetInfo) {
      const t = await (global == null ? void 0 : global.NetInfo.fetch());
      return t == null ? void 0 : t.isConnected;
    }
    return true;
  }
  function Sb() {
    return true;
  }
  function Pb(t) {
    switch (wn$1()) {
      case vt$3.browser:
        Ob(t);
        break;
      case vt$3.reactNative:
        Tb(t);
        break;
    }
  }
  function Ob(t) {
    !ks() && ii$1() && (window.addEventListener("online", () => t(true)), window.addEventListener("offline", () => t(false)));
  }
  function Tb(t) {
    ks() && typeof global < "u" && global != null && global.NetInfo && (global == null || global.NetInfo.addEventListener((e) => t(e == null ? void 0 : e.isConnected)));
  }
  function xb() {
    var t;
    return ii$1() && Tr$1() ? ((t = Tr$1()) == null ? void 0 : t.visibilityState) === "visible" : true;
  }
  const Ho = {};
  let pi$1 = class pi {
    static get(e) {
      return Ho[e];
    }
    static set(e, s) {
      Ho[e] = s;
    }
    static delete(e) {
      delete Ho[e];
    }
  };
  const Xd = "wc", Zd = 2, Pa = "core", Zt$2 = `${Xd}@2:${Pa}:`, kb = { logger: "error" }, $b = { database: ":memory:" }, Rb = "crypto", Rl = "client_ed25519_seed", Ub = L$3.ONE_DAY, Db = "keychain", Lb = "0.3", Mb = "messages", Bb = "0.3", Ul = L$3.SIX_HOURS, Fb = "publisher", Qd = "irn", jb = "error", eh = "wss://relay.walletconnect.org", qb = "relayer", qe$2 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" }, Wb = "_subscription", St$3 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" }, zb = 0.1, Oa = "2.21.0", Ne$3 = { link_mode: "link_mode", relay: "relay" }, Yn$1 = { inbound: "inbound", outbound: "outbound" }, Hb = "0.3", Kb = "WALLETCONNECT_CLIENT_ID", Dl = "WALLETCONNECT_LINK_MODE_APPS", mt$3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" }, Vb = "subscription", Gb = "0.3", Jb = "pairing", Yb = "0.3", fi$1 = { wc_pairingDelete: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: L$3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: L$3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 0 } } }, qs = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" }, Rt$2 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" }, Xb = "history", Zb = "0.3", Qb = "expirer", Tt$2 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" }, ev = "0.3", tv = "verify-api", sv = "https://verify.walletconnect.com", th = "https://verify.walletconnect.org", ki$1 = th, rv = `${ki$1}/v3`, iv = [sv, th], nv = "echo", ov = "https://echo.walletconnect.com", Kt$2 = { pairing_started: "pairing_started", pairing_uri_validation_success: "pairing_uri_validation_success", pairing_uri_not_expired: "pairing_uri_not_expired", store_new_pairing: "store_new_pairing", subscribing_pairing_topic: "subscribing_pairing_topic", subscribe_pairing_topic_success: "subscribe_pairing_topic_success", existing_pairing: "existing_pairing", pairing_not_expired: "pairing_not_expired", emit_inactive_pairing: "emit_inactive_pairing", emit_session_proposal: "emit_session_proposal", subscribing_to_pairing_topic: "subscribing_to_pairing_topic" }, as = { no_wss_connection: "no_wss_connection", no_internet_connection: "no_internet_connection", malformed_pairing_uri: "malformed_pairing_uri", active_pairing_already_exists: "active_pairing_already_exists", subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure", pairing_expired: "pairing_expired", proposal_expired: "proposal_expired", proposal_listener_not_found: "proposal_listener_not_found" }, Ut$2 = { session_approve_started: "session_approve_started", proposal_not_expired: "proposal_not_expired", session_namespaces_validation_success: "session_namespaces_validation_success", create_session_topic: "create_session_topic", subscribing_session_topic: "subscribing_session_topic", subscribe_session_topic_success: "subscribe_session_topic_success", publishing_session_approve: "publishing_session_approve", session_approve_publish_success: "session_approve_publish_success", store_session: "store_session", publishing_session_settle: "publishing_session_settle", session_settle_publish_success: "session_settle_publish_success" }, Us = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", proposal_expired: "proposal_expired", subscribe_session_topic_failure: "subscribe_session_topic_failure", session_approve_publish_failure: "session_approve_publish_failure", session_settle_publish_failure: "session_settle_publish_failure", session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure", proposal_not_found: "proposal_not_found" }, Ds = { authenticated_session_approve_started: "authenticated_session_approve_started", create_authenticated_session_topic: "create_authenticated_session_topic", cacaos_verified: "cacaos_verified", store_authenticated_session: "store_authenticated_session", subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic", subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success", publishing_authenticated_session_approve: "publishing_authenticated_session_approve" }, gi$1 = { no_internet_connection: "no_internet_connection", invalid_cacao: "invalid_cacao", subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure", authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure", authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found" }, av = 0.1, cv = "event-client", lv = 86400, uv = "https://pulse.walletconnect.org/batch";
  function dv(t, e) {
    if (t.length >= 255) throw new TypeError("Alphabet too long");
    for (var s = new Uint8Array(256), r = 0; r < s.length; r++) s[r] = 255;
    for (var i = 0; i < t.length; i++) {
      var n = t.charAt(i), o = n.charCodeAt(0);
      if (s[o] !== 255) throw new TypeError(n + " is ambiguous");
      s[o] = i;
    }
    var a = t.length, c = t.charAt(0), l = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
    function d(g) {
      if (g instanceof Uint8Array || (ArrayBuffer.isView(g) ? g = new Uint8Array(g.buffer, g.byteOffset, g.byteLength) : Array.isArray(g) && (g = Uint8Array.from(g))), !(g instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
      if (g.length === 0) return "";
      for (var f = 0, w = 0, y = 0, b = g.length; y !== b && g[y] === 0; ) y++, f++;
      for (var v = (b - y) * u + 1 >>> 0, C = new Uint8Array(v); y !== b; ) {
        for (var S = g[y], A = 0, N = v - 1; (S !== 0 || A < w) && N !== -1; N--, A++) S += 256 * C[N] >>> 0, C[N] = S % a >>> 0, S = S / a >>> 0;
        if (S !== 0) throw new Error("Non-zero carry");
        w = A, y++;
      }
      for (var R = v - w; R !== v && C[R] === 0; ) R++;
      for (var E = c.repeat(f); R < v; ++R) E += t.charAt(C[R]);
      return E;
    }
    function h(g) {
      if (typeof g != "string") throw new TypeError("Expected String");
      if (g.length === 0) return new Uint8Array();
      var f = 0;
      if (g[f] !== " ") {
        for (var w = 0, y = 0; g[f] === c; ) w++, f++;
        for (var b = (g.length - f) * l + 1 >>> 0, v = new Uint8Array(b); g[f]; ) {
          var C = s[g.charCodeAt(f)];
          if (C === 255) return;
          for (var S = 0, A = b - 1; (C !== 0 || S < y) && A !== -1; A--, S++) C += a * v[A] >>> 0, v[A] = C % 256 >>> 0, C = C / 256 >>> 0;
          if (C !== 0) throw new Error("Non-zero carry");
          y = S, f++;
        }
        if (g[f] !== " ") {
          for (var N = b - y; N !== b && v[N] === 0; ) N++;
          for (var R = new Uint8Array(w + (b - N)), E = w; N !== b; ) R[E++] = v[N++];
          return R;
        }
      }
    }
    function p(g) {
      var f = h(g);
      if (f) return f;
      throw new Error(`Non-${e} character`);
    }
    return { encode: d, decodeUnsafe: h, decode: p };
  }
  var hv = dv, pv = hv;
  const sh = (t) => {
    if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
    if (t instanceof ArrayBuffer) return new Uint8Array(t);
    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
    throw new Error("Unknown type, must be binary type");
  }, fv = (t) => new TextEncoder().encode(t), gv = (t) => new TextDecoder().decode(t);
  class mv {
    constructor(e, s, r) {
      this.name = e, this.prefix = s, this.baseEncode = r;
    }
    encode(e) {
      if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
      throw Error("Unknown type, must be binary type");
    }
  }
  class wv {
    constructor(e, s, r) {
      if (this.name = e, this.prefix = s, s.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
      this.prefixCodePoint = s.codePointAt(0), this.baseDecode = r;
    }
    decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
        return this.baseDecode(e.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
    or(e) {
      return rh(this, e);
    }
  }
  class yv {
    constructor(e) {
      this.decoders = e;
    }
    or(e) {
      return rh(this, e);
    }
    decode(e) {
      const s = e[0], r = this.decoders[s];
      if (r) return r.decode(e);
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
  const rh = (t, e) => new yv({ ...t.decoders || { [t.prefix]: t }, ...e.decoders || { [e.prefix]: e } });
  class bv {
    constructor(e, s, r, i) {
      this.name = e, this.prefix = s, this.baseEncode = r, this.baseDecode = i, this.encoder = new mv(e, s, r), this.decoder = new wv(e, s, i);
    }
    encode(e) {
      return this.encoder.encode(e);
    }
    decode(e) {
      return this.decoder.decode(e);
    }
  }
  const Co$1 = ({ name: t, prefix: e, encode: s, decode: r }) => new bv(t, e, s, r), In$1 = ({ prefix: t, name: e, alphabet: s }) => {
    const { encode: r, decode: i } = pv(s, e);
    return Co$1({ prefix: t, name: e, encode: r, decode: (n) => sh(i(n)) });
  }, vv = (t, e, s, r) => {
    const i = {};
    for (let u = 0; u < e.length; ++u) i[e[u]] = u;
    let n = t.length;
    for (; t[n - 1] === "="; ) --n;
    const o = new Uint8Array(n * s / 8 | 0);
    let a = 0, c = 0, l = 0;
    for (let u = 0; u < n; ++u) {
      const d = i[t[u]];
      if (d === void 0) throw new SyntaxError(`Non-${r} character`);
      c = c << s | d, a += s, a >= 8 && (a -= 8, o[l++] = 255 & c >> a);
    }
    if (a >= s || 255 & c << 8 - a) throw new SyntaxError("Unexpected end of data");
    return o;
  }, Ev = (t, e, s) => {
    const r = e[e.length - 1] === "=", i = (1 << s) - 1;
    let n = "", o = 0, a = 0;
    for (let c = 0; c < t.length; ++c) for (a = a << 8 | t[c], o += 8; o > s; ) o -= s, n += e[i & a >> o];
    if (o && (n += e[i & a << s - o]), r) for (; n.length * s & 7; ) n += "=";
    return n;
  }, Ye$2 = ({ name: t, prefix: e, bitsPerChar: s, alphabet: r }) => Co$1({ prefix: e, name: t, encode(i) {
    return Ev(i, r, s);
  }, decode(i) {
    return vv(i, r, s, t);
  } }), Cv = Co$1({ prefix: "\0", name: "identity", encode: (t) => gv(t), decode: (t) => fv(t) });
  var Iv = Object.freeze({ __proto__: null, identity: Cv });
  const Av = Ye$2({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
  var Nv = Object.freeze({ __proto__: null, base2: Av });
  const _v = Ye$2({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
  var Sv = Object.freeze({ __proto__: null, base8: _v });
  const Pv = In$1({ prefix: "9", name: "base10", alphabet: "0123456789" });
  var Ov = Object.freeze({ __proto__: null, base10: Pv });
  const Tv = Ye$2({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 }), xv = Ye$2({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
  var kv = Object.freeze({ __proto__: null, base16: Tv, base16upper: xv });
  const $v = Ye$2({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 }), Rv = Ye$2({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 }), Uv = Ye$2({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 }), Dv = Ye$2({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 }), Lv = Ye$2({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 }), Mv = Ye$2({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 }), Bv = Ye$2({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 }), Fv = Ye$2({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 }), jv = Ye$2({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
  var qv = Object.freeze({ __proto__: null, base32: $v, base32upper: Rv, base32pad: Uv, base32padupper: Dv, base32hex: Lv, base32hexupper: Mv, base32hexpad: Bv, base32hexpadupper: Fv, base32z: jv });
  const Wv = In$1({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" }), zv = In$1({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
  var Hv = Object.freeze({ __proto__: null, base36: Wv, base36upper: zv });
  const Kv = In$1({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" }), Vv = In$1({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
  var Gv = Object.freeze({ __proto__: null, base58btc: Kv, base58flickr: Vv });
  const Jv = Ye$2({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 }), Yv = Ye$2({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 }), Xv = Ye$2({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 }), Zv = Ye$2({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
  var Qv = Object.freeze({ __proto__: null, base64: Jv, base64pad: Yv, base64url: Xv, base64urlpad: Zv });
  const ih = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), e0 = ih.reduce((t, e, s) => (t[s] = e, t), []), t0 = ih.reduce((t, e, s) => (t[e.codePointAt(0)] = s, t), []);
  function s0(t) {
    return t.reduce((e, s) => (e += e0[s], e), "");
  }
  function r0(t) {
    const e = [];
    for (const s of t) {
      const r = t0[s.codePointAt(0)];
      if (r === void 0) throw new Error(`Non-base256emoji character: ${s}`);
      e.push(r);
    }
    return new Uint8Array(e);
  }
  const i0 = Co$1({ prefix: "🚀", name: "base256emoji", encode: s0, decode: r0 });
  var n0 = Object.freeze({ __proto__: null, base256emoji: i0 }), o0 = nh, Ll = 128, a0 = -128, c0 = Math.pow(2, 31);
  function nh(t, e, s) {
    e = e || [], s = s || 0;
    for (var r = s; t >= c0; ) e[s++] = t & 255 | Ll, t /= 128;
    for (; t & a0; ) e[s++] = t & 255 | Ll, t >>>= 7;
    return e[s] = t | 0, nh.bytes = s - r + 1, e;
  }
  var l0 = Ta, u0 = 128, Ml = 127;
  function Ta(t, r) {
    var s = 0, r = r || 0, i = 0, n = r, o, a = t.length;
    do {
      if (n >= a) throw Ta.bytes = 0, new RangeError("Could not decode varint");
      o = t[n++], s += i < 28 ? (o & Ml) << i : (o & Ml) * Math.pow(2, i), i += 7;
    } while (o >= u0);
    return Ta.bytes = n - r, s;
  }
  var d0 = Math.pow(2, 7), h0 = Math.pow(2, 14), p0 = Math.pow(2, 21), f0 = Math.pow(2, 28), g0 = Math.pow(2, 35), m0 = Math.pow(2, 42), w0 = Math.pow(2, 49), y0 = Math.pow(2, 56), b0 = Math.pow(2, 63), v0 = function(t) {
    return t < d0 ? 1 : t < h0 ? 2 : t < p0 ? 3 : t < f0 ? 4 : t < g0 ? 5 : t < m0 ? 6 : t < w0 ? 7 : t < y0 ? 8 : t < b0 ? 9 : 10;
  }, E0 = { encode: o0, decode: l0, encodingLength: v0 }, oh = E0;
  const Bl = (t, e, s = 0) => (oh.encode(t, e, s), e), Fl = (t) => oh.encodingLength(t), xa = (t, e) => {
    const s = e.byteLength, r = Fl(t), i = r + Fl(s), n = new Uint8Array(i + s);
    return Bl(t, n, 0), Bl(s, n, r), n.set(e, i), new C0(t, s, e, n);
  };
  class C0 {
    constructor(e, s, r, i) {
      this.code = e, this.size = s, this.digest = r, this.bytes = i;
    }
  }
  const ah = ({ name: t, code: e, encode: s }) => new I0(t, e, s);
  class I0 {
    constructor(e, s, r) {
      this.name = e, this.code = s, this.encode = r;
    }
    digest(e) {
      if (e instanceof Uint8Array) {
        const s = this.encode(e);
        return s instanceof Uint8Array ? xa(this.code, s) : s.then((r) => xa(this.code, r));
      } else throw Error("Unknown type, must be binary type");
    }
  }
  const ch = (t) => async (e) => new Uint8Array(await crypto.subtle.digest(t, e)), A0 = ah({ name: "sha2-256", code: 18, encode: ch("SHA-256") }), N0 = ah({ name: "sha2-512", code: 19, encode: ch("SHA-512") });
  var _0 = Object.freeze({ __proto__: null, sha256: A0, sha512: N0 });
  const lh = 0, S0 = "identity", uh = sh, P0 = (t) => xa(lh, uh(t)), O0 = { code: lh, name: S0, encode: uh, digest: P0 };
  var T0 = Object.freeze({ __proto__: null, identity: O0 });
  new TextEncoder(), new TextDecoder();
  const jl = { ...Iv, ...Nv, ...Sv, ...Ov, ...kv, ...qv, ...Hv, ...Gv, ...Qv, ...n0 };
  ({ ..._0, ...T0 });
  function x0(t = 0) {
    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(t) : new Uint8Array(t);
  }
  function dh(t, e, s, r) {
    return { name: t, prefix: e, encoder: { name: t, prefix: e, encode: s }, decoder: { decode: r } };
  }
  const ql = dh("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1))), Ko = dh("ascii", "a", (t) => {
    let e = "a";
    for (let s = 0; s < t.length; s++) e += String.fromCharCode(t[s]);
    return e;
  }, (t) => {
    t = t.substring(1);
    const e = x0(t.length);
    for (let s = 0; s < t.length; s++) e[s] = t.charCodeAt(s);
    return e;
  }), k0 = { utf8: ql, "utf-8": ql, hex: jl.base16, latin1: Ko, ascii: Ko, binary: Ko, ...jl };
  function $0(t, e = "utf8") {
    const s = k0[e];
    if (!s) throw new Error(`Unsupported encoding "${e}"`);
    return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t, "utf8") : s.decoder.decode(`${s.prefix}${t}`);
  }
  var R0 = Object.defineProperty, U0 = (t, e, s) => e in t ? R0(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, zt$2 = (t, e, s) => U0(t, typeof e != "symbol" ? e + "" : e, s);
  class D0 {
    constructor(e, s) {
      this.core = e, this.logger = s, zt$2(this, "keychain", /* @__PURE__ */ new Map()), zt$2(this, "name", Db), zt$2(this, "version", Lb), zt$2(this, "initialized", false), zt$2(this, "storagePrefix", Zt$2), zt$2(this, "init", async () => {
        if (!this.initialized) {
          const r = await this.getKeyChain();
          typeof r < "u" && (this.keychain = r), this.initialized = true;
        }
      }), zt$2(this, "has", (r) => (this.isInitialized(), this.keychain.has(r))), zt$2(this, "set", async (r, i) => {
        this.isInitialized(), this.keychain.set(r, i), await this.persist();
      }), zt$2(this, "get", (r) => {
        this.isInitialized();
        const i = this.keychain.get(r);
        if (typeof i > "u") {
          const { message: n } = U$2("NO_MATCHING_KEY", `${this.name}: ${r}`);
          throw new Error(n);
        }
        return i;
      }), zt$2(this, "del", async (r) => {
        this.isInitialized(), this.keychain.delete(r), await this.persist();
      }), this.core = e, this.logger = Me$4(s, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    async setKeyChain(e) {
      await this.core.storage.setItem(this.storageKey, ma(e));
    }
    async getKeyChain() {
      const e = await this.core.storage.getItem(this.storageKey);
      return typeof e < "u" ? wa(e) : void 0;
    }
    async persist() {
      await this.setKeyChain(this.keychain);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var L0 = Object.defineProperty, M0 = (t, e, s) => e in t ? L0(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ve$2 = (t, e, s) => M0(t, typeof e != "symbol" ? e + "" : e, s);
  class B0 {
    constructor(e, s, r) {
      this.core = e, this.logger = s, Ve$2(this, "name", Rb), Ve$2(this, "keychain"), Ve$2(this, "randomSessionIdentifier", Sa()), Ve$2(this, "initialized", false), Ve$2(this, "init", async () => {
        this.initialized || (await this.keychain.init(), this.initialized = true);
      }), Ve$2(this, "hasKeys", (i) => (this.isInitialized(), this.keychain.has(i))), Ve$2(this, "getClientId", async () => {
        this.isInitialized();
        const i = await this.getClientSeed(), n = ch$1(i);
        return Cf$1(n.publicKey);
      }), Ve$2(this, "generateKeyPair", () => {
        this.isInitialized();
        const i = Oy();
        return this.setPrivateKey(i.publicKey, i.privateKey);
      }), Ve$2(this, "signJWT", async (i) => {
        this.isInitialized();
        const n = await this.getClientSeed(), o = ch$1(n), a = this.randomSessionIdentifier;
        return await xb$1(a, i, Ub, o);
      }), Ve$2(this, "generateSharedKey", (i, n, o) => {
        this.isInitialized();
        const a = this.getPrivateKey(i), c = Ty(a, n);
        return this.setSymKey(c, o);
      }), Ve$2(this, "setSymKey", async (i, n) => {
        this.isInitialized();
        const o = n || Jn$1(i);
        return await this.keychain.set(o, i), o;
      }), Ve$2(this, "deleteKeyPair", async (i) => {
        this.isInitialized(), await this.keychain.del(i);
      }), Ve$2(this, "deleteSymKey", async (i) => {
        this.isInitialized(), await this.keychain.del(i);
      }), Ve$2(this, "encode", async (i, n, o) => {
        this.isInitialized();
        const a = Gd(o), c = Wt$4(n);
        if (Cl(a)) return $y(c, o == null ? void 0 : o.encoding);
        if (El(a)) {
          const h = a.senderPublicKey, p = a.receiverPublicKey;
          i = await this.generateSharedKey(h, p);
        }
        const l = this.getSymKey(i), { type: u, senderPublicKey: d } = a;
        return xy({ type: u, symKey: l, message: c, senderPublicKey: d, encoding: o == null ? void 0 : o.encoding });
      }), Ve$2(this, "decode", async (i, n, o) => {
        this.isInitialized();
        const a = Uy(n, o);
        if (Cl(a)) {
          const c = Ry(n, o == null ? void 0 : o.encoding);
          return Br(c);
        }
        if (El(a)) {
          const c = a.receiverPublicKey, l = a.senderPublicKey;
          i = await this.generateSharedKey(c, l);
        }
        try {
          const c = this.getSymKey(i), l = ky({ symKey: c, encoded: n, encoding: o == null ? void 0 : o.encoding });
          return Br(l);
        } catch (c) {
          this.logger.error(`Failed to decode message from topic: '${i}', clientId: '${await this.getClientId()}'`), this.logger.error(c);
        }
      }), Ve$2(this, "getPayloadType", (i, n = Ft$2) => {
        const o = un$1({ encoded: i, encoding: n });
        return sr(o.type);
      }), Ve$2(this, "getPayloadSenderPublicKey", (i, n = Ft$2) => {
        const o = un$1({ encoded: i, encoding: n });
        return o.senderPublicKey ? ht$3(o.senderPublicKey, st$2) : void 0;
      }), this.core = e, this.logger = Me$4(s, this.name), this.keychain = r || new D0(this.core, this.logger);
    }
    get context() {
      return Ze$4(this.logger);
    }
    async setPrivateKey(e, s) {
      return await this.keychain.set(e, s), e;
    }
    getPrivateKey(e) {
      return this.keychain.get(e);
    }
    async getClientSeed() {
      let e = "";
      try {
        e = this.keychain.get(Rl);
      } catch {
        e = Sa(), await this.keychain.set(Rl, e);
      }
      return $0(e, "base16");
    }
    getSymKey(e) {
      return this.keychain.get(e);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var F0 = Object.defineProperty, j0 = Object.defineProperties, q0 = Object.getOwnPropertyDescriptors, Wl = Object.getOwnPropertySymbols, W0 = Object.prototype.hasOwnProperty, z0 = Object.prototype.propertyIsEnumerable, ka = (t, e, s) => e in t ? F0(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, H0 = (t, e) => {
    for (var s in e || (e = {})) W0.call(e, s) && ka(t, s, e[s]);
    if (Wl) for (var s of Wl(e)) z0.call(e, s) && ka(t, s, e[s]);
    return t;
  }, K0 = (t, e) => j0(t, q0(e)), gt$1 = (t, e, s) => ka(t, typeof e != "symbol" ? e + "" : e, s);
  class V0 extends Hf {
    constructor(e, s) {
      super(e, s), this.logger = e, this.core = s, gt$1(this, "messages", /* @__PURE__ */ new Map()), gt$1(this, "messagesWithoutClientAck", /* @__PURE__ */ new Map()), gt$1(this, "name", Mb), gt$1(this, "version", Bb), gt$1(this, "initialized", false), gt$1(this, "storagePrefix", Zt$2), gt$1(this, "init", async () => {
        if (!this.initialized) {
          this.logger.trace("Initialized");
          try {
            const r = await this.getRelayerMessages();
            typeof r < "u" && (this.messages = r);
            const i = await this.getRelayerMessagesWithoutClientAck();
            typeof i < "u" && (this.messagesWithoutClientAck = i), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
          } catch (r) {
            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(r);
          } finally {
            this.initialized = true;
          }
        }
      }), gt$1(this, "set", async (r, i, n) => {
        this.isInitialized();
        const o = Jt$1(i);
        let a = this.messages.get(r);
        if (typeof a > "u" && (a = {}), typeof a[o] < "u") return o;
        if (a[o] = i, this.messages.set(r, a), n === Yn$1.inbound) {
          const c = this.messagesWithoutClientAck.get(r) || {};
          this.messagesWithoutClientAck.set(r, K0(H0({}, c), { [o]: i }));
        }
        return await this.persist(), o;
      }), gt$1(this, "get", (r) => {
        this.isInitialized();
        let i = this.messages.get(r);
        return typeof i > "u" && (i = {}), i;
      }), gt$1(this, "getWithoutAck", (r) => {
        this.isInitialized();
        const i = {};
        for (const n of r) {
          const o = this.messagesWithoutClientAck.get(n) || {};
          i[n] = Object.values(o);
        }
        return i;
      }), gt$1(this, "has", (r, i) => {
        this.isInitialized();
        const n = this.get(r), o = Jt$1(i);
        return typeof n[o] < "u";
      }), gt$1(this, "ack", async (r, i) => {
        this.isInitialized();
        const n = this.messagesWithoutClientAck.get(r);
        if (typeof n > "u") return;
        const o = Jt$1(i);
        delete n[o], Object.keys(n).length === 0 ? this.messagesWithoutClientAck.delete(r) : this.messagesWithoutClientAck.set(r, n), await this.persist();
      }), gt$1(this, "del", async (r) => {
        this.isInitialized(), this.messages.delete(r), this.messagesWithoutClientAck.delete(r), await this.persist();
      }), this.logger = Me$4(e, this.name), this.core = s;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get storageKeyWithoutClientAck() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name + "_withoutClientAck";
    }
    async setRelayerMessages(e) {
      await this.core.storage.setItem(this.storageKey, ma(e));
    }
    async setRelayerMessagesWithoutClientAck(e) {
      await this.core.storage.setItem(this.storageKeyWithoutClientAck, ma(e));
    }
    async getRelayerMessages() {
      const e = await this.core.storage.getItem(this.storageKey);
      return typeof e < "u" ? wa(e) : void 0;
    }
    async getRelayerMessagesWithoutClientAck() {
      const e = await this.core.storage.getItem(this.storageKeyWithoutClientAck);
      return typeof e < "u" ? wa(e) : void 0;
    }
    async persist() {
      await this.setRelayerMessages(this.messages), await this.setRelayerMessagesWithoutClientAck(this.messagesWithoutClientAck);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var G0 = Object.defineProperty, J0 = Object.defineProperties, Y0 = Object.getOwnPropertyDescriptors, zl = Object.getOwnPropertySymbols, X0 = Object.prototype.hasOwnProperty, Z0 = Object.prototype.propertyIsEnumerable, $a = (t, e, s) => e in t ? G0(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Bn$1 = (t, e) => {
    for (var s in e || (e = {})) X0.call(e, s) && $a(t, s, e[s]);
    if (zl) for (var s of zl(e)) Z0.call(e, s) && $a(t, s, e[s]);
    return t;
  }, Vo = (t, e) => J0(t, Y0(e)), Dt$2 = (t, e, s) => $a(t, typeof e != "symbol" ? e + "" : e, s);
  class Q0 extends Kf {
    constructor(e, s) {
      super(e, s), this.relayer = e, this.logger = s, Dt$2(this, "events", new st$3.EventEmitter()), Dt$2(this, "name", Fb), Dt$2(this, "queue", /* @__PURE__ */ new Map()), Dt$2(this, "publishTimeout", L$3.toMiliseconds(L$3.ONE_MINUTE)), Dt$2(this, "initialPublishTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), Dt$2(this, "needsTransportRestart", false), Dt$2(this, "publish", async (r, i, n) => {
        var o;
        this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: r, message: i, opts: n } });
        const a = (n == null ? void 0 : n.ttl) || Ul, c = ao$1(n), l = (n == null ? void 0 : n.prompt) || false, u = (n == null ? void 0 : n.tag) || 0, d = (n == null ? void 0 : n.id) || Cr$1().toString(), h = { topic: r, message: i, opts: { ttl: a, relay: c, prompt: l, tag: u, id: d, attestation: n == null ? void 0 : n.attestation, tvf: n == null ? void 0 : n.tvf } }, p = `Failed to publish payload, please try again. id:${d} tag:${u}`;
        try {
          const g = new Promise(async (f) => {
            const w = ({ id: b }) => {
              h.opts.id === b && (this.removeRequestFromQueue(b), this.relayer.events.removeListener(qe$2.publish, w), f(h));
            };
            this.relayer.events.on(qe$2.publish, w);
            const y = As(new Promise((b, v) => {
              this.rpcPublish({ topic: r, message: i, ttl: a, prompt: l, tag: u, id: d, attestation: n == null ? void 0 : n.attestation, tvf: n == null ? void 0 : n.tvf }).then(b).catch((C) => {
                this.logger.warn(C, C == null ? void 0 : C.message), v(C);
              });
            }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${d} tag:${u}`);
            try {
              await y, this.events.removeListener(qe$2.publish, w);
            } catch (b) {
              this.queue.set(d, Vo(Bn$1({}, h), { attempt: 1 })), this.logger.warn(b, b == null ? void 0 : b.message);
            }
          });
          this.logger.trace({ type: "method", method: "publish", params: { id: d, topic: r, message: i, opts: n } }), await As(g, this.publishTimeout, p);
        } catch (g) {
          if (this.logger.debug("Failed to Publish Payload"), this.logger.error(g), (o = n == null ? void 0 : n.internal) != null && o.throwOnFailedPublish) throw g;
        } finally {
          this.queue.delete(d);
        }
      }), Dt$2(this, "on", (r, i) => {
        this.events.on(r, i);
      }), Dt$2(this, "once", (r, i) => {
        this.events.once(r, i);
      }), Dt$2(this, "off", (r, i) => {
        this.events.off(r, i);
      }), Dt$2(this, "removeListener", (r, i) => {
        this.events.removeListener(r, i);
      }), this.relayer = e, this.logger = Me$4(s, this.name), this.registerEventListeners();
    }
    get context() {
      return Ze$4(this.logger);
    }
    async rpcPublish(e) {
      var s, r, i, n;
      const { topic: o, message: a, ttl: c = Ul, prompt: l, tag: u, id: d, attestation: h, tvf: p } = e, g = { method: Ci$1(ao$1().protocol).publish, params: Bn$1({ topic: o, message: a, ttl: c, prompt: l, tag: u, attestation: h }, p), id: d };
      Je$2((s = g.params) == null ? void 0 : s.prompt) && ((r = g.params) == null || delete r.prompt), Je$2((i = g.params) == null ? void 0 : i.tag) && ((n = g.params) == null || delete n.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: g });
      const f = await this.relayer.request(g);
      return this.relayer.events.emit(qe$2.publish, e), this.logger.debug("Successfully Published Payload"), f;
    }
    removeRequestFromQueue(e) {
      this.queue.delete(e);
    }
    checkQueue() {
      this.queue.forEach(async (e, s) => {
        const r = e.attempt + 1;
        this.queue.set(s, Vo(Bn$1({}, e), { attempt: r }));
        const { topic: i, message: n, opts: o, attestation: a } = e;
        this.logger.warn({}, `Publisher: queue->publishing: ${e.opts.id}, tag: ${e.opts.tag}, attempt: ${r}`), await this.rpcPublish(Vo(Bn$1({}, e), { topic: i, message: n, ttl: o.ttl, prompt: o.prompt, tag: o.tag, id: o.id, attestation: a, tvf: o.tvf })), this.logger.warn({}, `Publisher: queue->published: ${e.opts.id}`);
      });
    }
    registerEventListeners() {
      this.relayer.core.heartbeat.on(Lr$1.pulse, () => {
        if (this.needsTransportRestart) {
          this.needsTransportRestart = false, this.relayer.events.emit(qe$2.connection_stalled);
          return;
        }
        this.checkQueue();
      }), this.relayer.on(qe$2.message_ack, (e) => {
        this.removeRequestFromQueue(e.id.toString());
      });
    }
  }
  var eE = Object.defineProperty, tE = (t, e, s) => e in t ? eE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, gr = (t, e, s) => tE(t, typeof e != "symbol" ? e + "" : e, s);
  class sE {
    constructor() {
      gr(this, "map", /* @__PURE__ */ new Map()), gr(this, "set", (e, s) => {
        const r = this.get(e);
        this.exists(e, s) || this.map.set(e, [...r, s]);
      }), gr(this, "get", (e) => this.map.get(e) || []), gr(this, "exists", (e, s) => this.get(e).includes(s)), gr(this, "delete", (e, s) => {
        if (typeof s > "u") {
          this.map.delete(e);
          return;
        }
        if (!this.map.has(e)) return;
        const r = this.get(e);
        if (!this.exists(e, s)) return;
        const i = r.filter((n) => n !== s);
        if (!i.length) {
          this.map.delete(e);
          return;
        }
        this.map.set(e, i);
      }), gr(this, "clear", () => {
        this.map.clear();
      });
    }
    get topics() {
      return Array.from(this.map.keys());
    }
  }
  var rE = Object.defineProperty, iE = Object.defineProperties, nE = Object.getOwnPropertyDescriptors, Hl = Object.getOwnPropertySymbols, oE = Object.prototype.hasOwnProperty, aE = Object.prototype.propertyIsEnumerable, Ra = (t, e, s) => e in t ? rE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, mi$1 = (t, e) => {
    for (var s in e || (e = {})) oE.call(e, s) && Ra(t, s, e[s]);
    if (Hl) for (var s of Hl(e)) aE.call(e, s) && Ra(t, s, e[s]);
    return t;
  }, Go = (t, e) => iE(t, nE(e)), be$1 = (t, e, s) => Ra(t, typeof e != "symbol" ? e + "" : e, s);
  class cE extends Jf {
    constructor(e, s) {
      super(e, s), this.relayer = e, this.logger = s, be$1(this, "subscriptions", /* @__PURE__ */ new Map()), be$1(this, "topicMap", new sE()), be$1(this, "events", new st$3.EventEmitter()), be$1(this, "name", Vb), be$1(this, "version", Gb), be$1(this, "pending", /* @__PURE__ */ new Map()), be$1(this, "cached", []), be$1(this, "initialized", false), be$1(this, "storagePrefix", Zt$2), be$1(this, "subscribeTimeout", L$3.toMiliseconds(L$3.ONE_MINUTE)), be$1(this, "initialSubscribeTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), be$1(this, "clientId"), be$1(this, "batchSubscribeTopicsLimit", 500), be$1(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), await this.restore()), this.initialized = true;
      }), be$1(this, "subscribe", async (r, i) => {
        this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: r, opts: i } });
        try {
          const n = ao$1(i), o = { topic: r, relay: n, transportType: i == null ? void 0 : i.transportType };
          this.pending.set(r, o);
          const a = await this.rpcSubscribe(r, n, i);
          return typeof a == "string" && (this.onSubscribe(a, o), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: r, opts: i } })), a;
        } catch (n) {
          throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n), n;
        }
      }), be$1(this, "unsubscribe", async (r, i) => {
        this.isInitialized(), typeof (i == null ? void 0 : i.id) < "u" ? await this.unsubscribeById(r, i.id, i) : await this.unsubscribeByTopic(r, i);
      }), be$1(this, "isSubscribed", (r) => new Promise((i) => {
        i(this.topicMap.topics.includes(r));
      })), be$1(this, "isKnownTopic", (r) => new Promise((i) => {
        i(this.topicMap.topics.includes(r) || this.pending.has(r) || this.cached.some((n) => n.topic === r));
      })), be$1(this, "on", (r, i) => {
        this.events.on(r, i);
      }), be$1(this, "once", (r, i) => {
        this.events.once(r, i);
      }), be$1(this, "off", (r, i) => {
        this.events.off(r, i);
      }), be$1(this, "removeListener", (r, i) => {
        this.events.removeListener(r, i);
      }), be$1(this, "start", async () => {
        await this.onConnect();
      }), be$1(this, "stop", async () => {
        await this.onDisconnect();
      }), be$1(this, "restart", async () => {
        await this.restore(), await this.onRestart();
      }), be$1(this, "checkPending", async () => {
        if (this.pending.size === 0 && (!this.initialized || !this.relayer.connected)) return;
        const r = [];
        this.pending.forEach((i) => {
          r.push(i);
        }), await this.batchSubscribe(r);
      }), be$1(this, "registerEventListeners", () => {
        this.relayer.core.heartbeat.on(Lr$1.pulse, async () => {
          await this.checkPending();
        }), this.events.on(mt$3.created, async (r) => {
          const i = mt$3.created;
          this.logger.info(`Emitting ${i}`), this.logger.debug({ type: "event", event: i, data: r }), await this.persist();
        }), this.events.on(mt$3.deleted, async (r) => {
          const i = mt$3.deleted;
          this.logger.info(`Emitting ${i}`), this.logger.debug({ type: "event", event: i, data: r }), await this.persist();
        });
      }), this.relayer = e, this.logger = Me$4(s, this.name), this.clientId = "";
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.subscriptions.size;
    }
    get ids() {
      return Array.from(this.subscriptions.keys());
    }
    get values() {
      return Array.from(this.subscriptions.values());
    }
    get topics() {
      return this.topicMap.topics;
    }
    get hasAnyTopics() {
      return this.topicMap.topics.length > 0 || this.pending.size > 0 || this.cached.length > 0 || this.subscriptions.size > 0;
    }
    hasSubscription(e, s) {
      let r = false;
      try {
        r = this.getSubscription(e).topic === s;
      } catch {
      }
      return r;
    }
    reset() {
      this.cached = [], this.initialized = true;
    }
    onDisable() {
      this.values.length > 0 && (this.cached = this.values), this.subscriptions.clear(), this.topicMap.clear();
    }
    async unsubscribeByTopic(e, s) {
      const r = this.topicMap.get(e);
      await Promise.all(r.map(async (i) => await this.unsubscribeById(e, i, s)));
    }
    async unsubscribeById(e, s, r) {
      this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: s, opts: r } });
      try {
        const i = ao$1(r);
        await this.restartToComplete({ topic: e, id: s, relay: i }), await this.rpcUnsubscribe(e, s, i);
        const n = we$2("USER_DISCONNECTED", `${this.name}, ${e}`);
        await this.onUnsubscribe(e, s, n), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: s, opts: r } });
      } catch (i) {
        throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(i), i;
      }
    }
    async rpcSubscribe(e, s, r) {
      var i;
      (!r || (r == null ? void 0 : r.transportType) === Ne$3.relay) && await this.restartToComplete({ topic: e, id: e, relay: s });
      const n = { method: Ci$1(s.protocol).subscribe, params: { topic: e } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: n });
      const o = (i = r == null ? void 0 : r.internal) == null ? void 0 : i.throwOnFailedPublish;
      try {
        const a = await this.getSubscriptionId(e);
        if ((r == null ? void 0 : r.transportType) === Ne$3.link_mode) return setTimeout(() => {
          (this.relayer.connected || this.relayer.connecting) && this.relayer.request(n).catch((u) => this.logger.warn(u));
        }, L$3.toMiliseconds(L$3.ONE_SECOND)), a;
        const c = new Promise(async (u) => {
          const d = (h) => {
            h.topic === e && (this.events.removeListener(mt$3.created, d), u(h.id));
          };
          this.events.on(mt$3.created, d);
          try {
            const h = await As(new Promise((p, g) => {
              this.relayer.request(n).catch((f) => {
                this.logger.warn(f, f == null ? void 0 : f.message), g(f);
              }).then(p);
            }), this.initialSubscribeTimeout, `Subscribing to ${e} failed, please try again`);
            this.events.removeListener(mt$3.created, d), u(h);
          } catch {
          }
        }), l = await As(c, this.subscribeTimeout, `Subscribing to ${e} failed, please try again`);
        if (!l && o) throw new Error(`Subscribing to ${e} failed, please try again`);
        return l ? a : null;
      } catch (a) {
        if (this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(qe$2.connection_stalled), o) throw a;
      }
      return null;
    }
    async rpcBatchSubscribe(e) {
      if (!e.length) return;
      const s = e[0].relay, r = { method: Ci$1(s.protocol).batchSubscribe, params: { topics: e.map((i) => i.topic) } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: r });
      try {
        await await As(new Promise((i) => {
          this.relayer.request(r).catch((n) => this.logger.warn(n)).then(i);
        }), this.subscribeTimeout, "rpcBatchSubscribe failed, please try again");
      } catch {
        this.relayer.events.emit(qe$2.connection_stalled);
      }
    }
    async rpcBatchFetchMessages(e) {
      if (!e.length) return;
      const s = e[0].relay, r = { method: Ci$1(s.protocol).batchFetchMessages, params: { topics: e.map((n) => n.topic) } };
      this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: r });
      let i;
      try {
        i = await await As(new Promise((n, o) => {
          this.relayer.request(r).catch((a) => {
            this.logger.warn(a), o(a);
          }).then(n);
        }), this.subscribeTimeout, "rpcBatchFetchMessages failed, please try again");
      } catch {
        this.relayer.events.emit(qe$2.connection_stalled);
      }
      return i;
    }
    rpcUnsubscribe(e, s, r) {
      const i = { method: Ci$1(r.protocol).unsubscribe, params: { topic: e, id: s } };
      return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i }), this.relayer.request(i);
    }
    onSubscribe(e, s) {
      this.setSubscription(e, Go(mi$1({}, s), { id: e })), this.pending.delete(s.topic);
    }
    onBatchSubscribe(e) {
      e.length && e.forEach((s) => {
        this.setSubscription(s.id, mi$1({}, s)), this.pending.delete(s.topic);
      });
    }
    async onUnsubscribe(e, s, r) {
      this.events.removeAllListeners(s), this.hasSubscription(s, e) && this.deleteSubscription(s, r), await this.relayer.messages.del(e);
    }
    async setRelayerSubscriptions(e) {
      await this.relayer.core.storage.setItem(this.storageKey, e);
    }
    async getRelayerSubscriptions() {
      return await this.relayer.core.storage.getItem(this.storageKey);
    }
    setSubscription(e, s) {
      this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e, subscription: s }), this.addSubscription(e, s);
    }
    addSubscription(e, s) {
      this.subscriptions.set(e, mi$1({}, s)), this.topicMap.set(s.topic, e), this.events.emit(mt$3.created, s);
    }
    getSubscription(e) {
      this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e });
      const s = this.subscriptions.get(e);
      if (!s) {
        const { message: r } = U$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw new Error(r);
      }
      return s;
    }
    deleteSubscription(e, s) {
      this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e, reason: s });
      const r = this.getSubscription(e);
      this.subscriptions.delete(e), this.topicMap.delete(r.topic, e), this.events.emit(mt$3.deleted, Go(mi$1({}, r), { reason: s }));
    }
    async persist() {
      await this.setRelayerSubscriptions(this.values), this.events.emit(mt$3.sync);
    }
    async onRestart() {
      if (this.cached.length) {
        const e = [...this.cached], s = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
        for (let r = 0; r < s; r++) {
          const i = e.splice(0, this.batchSubscribeTopicsLimit);
          await this.batchSubscribe(i);
        }
      }
      this.events.emit(mt$3.resubscribed);
    }
    async restore() {
      try {
        const e = await this.getRelayerSubscriptions();
        if (typeof e > "u" || !e.length) return;
        if (this.subscriptions.size) {
          const { message: s } = U$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(s), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(s);
        }
        this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
      }
    }
    async batchSubscribe(e) {
      e.length && (await this.rpcBatchSubscribe(e), this.onBatchSubscribe(await Promise.all(e.map(async (s) => Go(mi$1({}, s), { id: await this.getSubscriptionId(s.topic) })))));
    }
    async batchFetchMessages(e) {
      if (!e.length) return;
      this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);
      const s = await this.rpcBatchFetchMessages(e);
      s && s.messages && (await mm(L$3.toMiliseconds(L$3.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(s.messages));
    }
    async onConnect() {
      await this.restart(), this.reset();
    }
    onDisconnect() {
      this.onDisable();
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async restartToComplete(e) {
      !this.relayer.connected && !this.relayer.connecting && (this.cached.push(e), await this.relayer.transportOpen());
    }
    async getClientId() {
      return this.clientId || (this.clientId = await this.relayer.core.crypto.getClientId()), this.clientId;
    }
    async getSubscriptionId(e) {
      return Jt$1(e + await this.getClientId());
    }
  }
  var lE = Object.defineProperty, Kl = Object.getOwnPropertySymbols, uE = Object.prototype.hasOwnProperty, dE = Object.prototype.propertyIsEnumerable, Ua = (t, e, s) => e in t ? lE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Vl = (t, e) => {
    for (var s in e || (e = {})) uE.call(e, s) && Ua(t, s, e[s]);
    if (Kl) for (var s of Kl(e)) dE.call(e, s) && Ua(t, s, e[s]);
    return t;
  }, le$2 = (t, e, s) => Ua(t, typeof e != "symbol" ? e + "" : e, s);
  class hE extends Vf {
    constructor(e) {
      super(e), le$2(this, "protocol", "wc"), le$2(this, "version", 2), le$2(this, "core"), le$2(this, "logger"), le$2(this, "events", new st$3.EventEmitter()), le$2(this, "provider"), le$2(this, "messages"), le$2(this, "subscriber"), le$2(this, "publisher"), le$2(this, "name", qb), le$2(this, "transportExplicitlyClosed", false), le$2(this, "initialized", false), le$2(this, "connectionAttemptInProgress", false), le$2(this, "relayUrl"), le$2(this, "projectId"), le$2(this, "packageName"), le$2(this, "bundleId"), le$2(this, "hasExperiencedNetworkDisruption", false), le$2(this, "pingTimeout"), le$2(this, "heartBeatTimeout", L$3.toMiliseconds(L$3.THIRTY_SECONDS + L$3.FIVE_SECONDS)), le$2(this, "reconnectTimeout"), le$2(this, "connectPromise"), le$2(this, "reconnectInProgress", false), le$2(this, "requestsInFlight", []), le$2(this, "connectTimeout", L$3.toMiliseconds(L$3.ONE_SECOND * 15)), le$2(this, "request", async (s) => {
        var r, i;
        this.logger.debug("Publishing Request Payload");
        const n = s.id || Cr$1().toString();
        await this.toEstablishConnection();
        try {
          this.logger.trace({ id: n, method: s.method, topic: (r = s.params) == null ? void 0 : r.topic }, "relayer.request - publishing...");
          const o = `${n}:${((i = s.params) == null ? void 0 : i.tag) || ""}`;
          this.requestsInFlight.push(o);
          const a = await this.provider.request(s);
          return this.requestsInFlight = this.requestsInFlight.filter((c) => c !== o), a;
        } catch (o) {
          throw this.logger.debug(`Failed to Publish Request: ${n}`), o;
        }
      }), le$2(this, "resetPingTimeout", () => {
        no$1() && (clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var s, r, i, n;
          try {
            this.logger.debug({}, "pingTimeout: Connection stalled, terminating..."), (n = (i = (r = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : r.socket) == null ? void 0 : i.terminate) == null || n.call(i);
          } catch (o) {
            this.logger.warn(o, o == null ? void 0 : o.message);
          }
        }, this.heartBeatTimeout));
      }), le$2(this, "onPayloadHandler", (s) => {
        this.onProviderPayload(s), this.resetPingTimeout();
      }), le$2(this, "onConnectHandler", () => {
        this.logger.warn({}, "Relayer connected 🛜"), this.startPingTimeout(), this.events.emit(qe$2.connect);
      }), le$2(this, "onDisconnectHandler", () => {
        this.logger.warn({}, "Relayer disconnected 🛑"), this.requestsInFlight = [], this.onProviderDisconnect();
      }), le$2(this, "onProviderErrorHandler", (s) => {
        this.logger.fatal(`Fatal socket error: ${s.message}`), this.events.emit(qe$2.error, s), this.logger.fatal("Fatal socket error received, closing transport"), this.transportClose();
      }), le$2(this, "registerProviderListeners", () => {
        this.provider.on(St$3.payload, this.onPayloadHandler), this.provider.on(St$3.connect, this.onConnectHandler), this.provider.on(St$3.disconnect, this.onDisconnectHandler), this.provider.on(St$3.error, this.onProviderErrorHandler);
      }), this.core = e.core, this.logger = typeof e.logger < "u" && typeof e.logger != "string" ? Me$4(e.logger, this.name) : _s$1(Nn$2({ level: e.logger || jb })), this.messages = new V0(this.logger, e.core), this.subscriber = new cE(this, this.logger), this.publisher = new Q0(this, this.logger), this.relayUrl = (e == null ? void 0 : e.relayUrl) || eh, this.projectId = e.projectId, em() ? this.packageName = Hc() : tm() && (this.bundleId = Hc()), this.provider = {};
    }
    async init() {
      if (this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), this.initialized = true, this.subscriber.hasAnyTopics) try {
        await this.transportOpen();
      } catch (e) {
        this.logger.warn(e, e == null ? void 0 : e.message);
      }
    }
    get context() {
      return Ze$4(this.logger);
    }
    get connected() {
      var e, s, r;
      return ((r = (s = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : s.socket) == null ? void 0 : r.readyState) === 1 || false;
    }
    get connecting() {
      var e, s, r;
      return ((r = (s = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : s.socket) == null ? void 0 : r.readyState) === 0 || this.connectPromise !== void 0 || false;
    }
    async publish(e, s, r) {
      this.isInitialized(), await this.publisher.publish(e, s, r), await this.recordMessageEvent({ topic: e, message: s, publishedAt: Date.now(), transportType: Ne$3.relay }, Yn$1.outbound);
    }
    async subscribe(e, s) {
      var r, i, n;
      this.isInitialized(), (!(s != null && s.transportType) || (s == null ? void 0 : s.transportType) === "relay") && await this.toEstablishConnection();
      const o = typeof ((r = s == null ? void 0 : s.internal) == null ? void 0 : r.throwOnFailedPublish) > "u" ? true : (i = s == null ? void 0 : s.internal) == null ? void 0 : i.throwOnFailedPublish;
      let a = ((n = this.subscriber.topicMap.get(e)) == null ? void 0 : n[0]) || "", c;
      const l = (u) => {
        u.topic === e && (this.subscriber.off(mt$3.created, l), c());
      };
      return await Promise.all([new Promise((u) => {
        c = u, this.subscriber.on(mt$3.created, l);
      }), new Promise(async (u, d) => {
        a = await this.subscriber.subscribe(e, Vl({ internal: { throwOnFailedPublish: o } }, s)).catch((h) => {
          o && d(h);
        }) || a, u();
      })]), a;
    }
    async unsubscribe(e, s) {
      this.isInitialized(), await this.subscriber.unsubscribe(e, s);
    }
    on(e, s) {
      this.events.on(e, s);
    }
    once(e, s) {
      this.events.once(e, s);
    }
    off(e, s) {
      this.events.off(e, s);
    }
    removeListener(e, s) {
      this.events.removeListener(e, s);
    }
    async transportDisconnect() {
      this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await As(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
    }
    async transportClose() {
      this.transportExplicitlyClosed = true, await this.transportDisconnect();
    }
    async transportOpen(e) {
      if (!this.subscriber.hasAnyTopics) {
        this.logger.warn("Starting WS connection skipped because the client has no topics to work with.");
        return;
      }
      if (this.connectPromise ? (this.logger.debug({}, "Waiting for existing connection attempt to resolve..."), await this.connectPromise, this.logger.debug({}, "Existing connection attempt resolved")) : (this.connectPromise = new Promise(async (s, r) => {
        await this.connect(e).then(s).catch(r).finally(() => {
          this.connectPromise = void 0;
        });
      }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);
    }
    async restartTransport(e) {
      this.logger.debug({}, "Restarting transport..."), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
    }
    async confirmOnlineStateOrThrow() {
      if (!await $l()) throw new Error("No internet connection detected. Please restart your network and try again.");
    }
    async handleBatchMessageEvents(e) {
      if ((e == null ? void 0 : e.length) === 0) {
        this.logger.trace("Batch message events is empty. Ignoring...");
        return;
      }
      const s = e.sort((r, i) => r.publishedAt - i.publishedAt);
      this.logger.debug(`Batch of ${s.length} message events sorted`);
      for (const r of s) try {
        await this.onMessageEvent(r);
      } catch (i) {
        this.logger.warn(i, "Error while processing batch message event: " + (i == null ? void 0 : i.message));
      }
      this.logger.trace(`Batch of ${s.length} message events processed`);
    }
    async onLinkMessageEvent(e, s) {
      const { topic: r } = e;
      if (!s.sessionExists) {
        const i = De$3(L$3.FIVE_MINUTES), n = { topic: r, expiry: i, relay: { protocol: "irn" }, active: false };
        await this.core.pairing.pairings.set(r, n);
      }
      this.events.emit(qe$2.message, e), await this.recordMessageEvent(e, Yn$1.inbound);
    }
    async connect(e) {
      await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
      let s = 1;
      for (; s < 6; ) {
        try {
          if (this.transportExplicitlyClosed) break;
          this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${s}...`), await this.createProvider(), await new Promise(async (r, i) => {
            const n = () => {
              i(new Error("Connection interrupted while trying to subscribe"));
            };
            this.provider.once(St$3.disconnect, n), await As(new Promise((o, a) => {
              this.provider.connect().then(o).catch(a);
            }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((o) => {
              i(o);
            }).finally(() => {
              this.provider.off(St$3.disconnect, n), clearTimeout(this.reconnectTimeout);
            }), await new Promise(async (o, a) => {
              const c = () => {
                a(new Error("Connection interrupted while trying to subscribe"));
              };
              this.provider.once(St$3.disconnect, c), await this.subscriber.start().then(o).catch(a).finally(() => {
                this.provider.off(St$3.disconnect, c);
              });
            }), this.hasExperiencedNetworkDisruption = !1, r();
          });
        } catch (r) {
          await this.subscriber.stop();
          const i = r;
          this.logger.warn({}, i.message), this.hasExperiencedNetworkDisruption = true;
        } finally {
          this.connectionAttemptInProgress = false;
        }
        if (this.connected) {
          this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${s}`);
          break;
        }
        await new Promise((r) => setTimeout(r, L$3.toMiliseconds(s * 1))), s++;
      }
    }
    startPingTimeout() {
      var e, s, r, i, n;
      if (no$1()) try {
        (s = (e = this.provider) == null ? void 0 : e.connection) != null && s.socket && ((n = (i = (r = this.provider) == null ? void 0 : r.connection) == null ? void 0 : i.socket) == null || n.on("ping", () => {
          this.resetPingTimeout();
        })), this.resetPingTimeout();
      } catch (o) {
        this.logger.warn(o, o == null ? void 0 : o.message);
      }
    }
    async createProvider() {
      this.provider.connection && this.unregisterProviderListeners();
      const e = await this.core.crypto.signJWT(this.relayUrl);
      this.provider = new pt$4(new ux(om({ sdkVersion: Oa, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e, useOnCloseEvent: true, bundleId: this.bundleId, packageName: this.packageName }))), this.registerProviderListeners();
    }
    async recordMessageEvent(e, s) {
      const { topic: r, message: i } = e;
      await this.messages.set(r, i, s);
    }
    async shouldIgnoreMessageEvent(e) {
      const { topic: s, message: r } = e;
      if (!r || r.length === 0) return this.logger.warn(`Ignoring invalid/empty message: ${r}`), true;
      if (!await this.subscriber.isKnownTopic(s)) return this.logger.warn(`Ignoring message for unknown topic ${s}`), true;
      const i = this.messages.has(s, r);
      return i && this.logger.warn(`Ignoring duplicate message: ${r}`), i;
    }
    async onProviderPayload(e) {
      if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e }), cc$1(e)) {
        if (!e.method.endsWith(Wb)) return;
        const s = e.params, { topic: r, message: i, publishedAt: n, attestation: o } = s.data, a = { topic: r, message: i, publishedAt: n, transportType: Ne$3.relay, attestation: o };
        this.logger.debug("Emitting Relayer Payload"), this.logger.trace(Vl({ type: "event", event: s.id }, a)), this.events.emit(s.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);
      } else Ln$2(e) && this.events.emit(qe$2.message_ack, e);
    }
    async onMessageEvent(e) {
      await this.shouldIgnoreMessageEvent(e) || (await this.recordMessageEvent(e, Yn$1.inbound), this.events.emit(qe$2.message, e));
    }
    async acknowledgePayload(e) {
      const s = Un$2(e.id, true);
      await this.provider.connection.send(s);
    }
    unregisterProviderListeners() {
      this.provider.off(St$3.payload, this.onPayloadHandler), this.provider.off(St$3.connect, this.onConnectHandler), this.provider.off(St$3.disconnect, this.onDisconnectHandler), this.provider.off(St$3.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
    }
    async registerEventListeners() {
      let e = await $l();
      Pb(async (s) => {
        e !== s && (e = s, s ? await this.transportOpen().catch((r) => this.logger.error(r, r == null ? void 0 : r.message)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
      }), this.core.heartbeat.on(Lr$1.pulse, async () => {
        if (!this.transportExplicitlyClosed && !this.connected && xb()) try {
          await this.confirmOnlineStateOrThrow(), await this.transportOpen();
        } catch (s) {
          this.logger.warn(s, s == null ? void 0 : s.message);
        }
      });
    }
    async onProviderDisconnect() {
      clearTimeout(this.pingTimeout), this.events.emit(qe$2.disconnect), this.connectionAttemptInProgress = false, !this.reconnectInProgress && (this.reconnectInProgress = true, await this.subscriber.stop(), this.subscriber.hasAnyTopics && (this.transportExplicitlyClosed || (this.reconnectTimeout = setTimeout(async () => {
        await this.transportOpen().catch((e) => this.logger.error(e, e == null ? void 0 : e.message)), this.reconnectTimeout = void 0, this.reconnectInProgress = false;
      }, L$3.toMiliseconds(zb)))));
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async toEstablishConnection() {
      if (await this.confirmOnlineStateOrThrow(), !this.connected) {
        if (this.connectPromise) {
          await this.connectPromise;
          return;
        }
        await this.connect();
      }
    }
  }
  function pE() {
  }
  function Gl(t) {
    if (!t || typeof t != "object") return false;
    const e = Object.getPrototypeOf(t);
    return e === null || e === Object.prototype || Object.getPrototypeOf(e) === null ? Object.prototype.toString.call(t) === "[object Object]" : false;
  }
  function Jl(t) {
    return Object.getOwnPropertySymbols(t).filter((e) => Object.prototype.propertyIsEnumerable.call(t, e));
  }
  function Yl(t) {
    return t == null ? t === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(t);
  }
  const fE = "[object RegExp]", gE = "[object String]", mE = "[object Number]", wE = "[object Boolean]", Xl = "[object Arguments]", yE = "[object Symbol]", bE = "[object Date]", vE = "[object Map]", EE = "[object Set]", CE = "[object Array]", IE = "[object Function]", AE = "[object ArrayBuffer]", Jo = "[object Object]", NE = "[object Error]", _E = "[object DataView]", SE = "[object Uint8Array]", PE = "[object Uint8ClampedArray]", OE = "[object Uint16Array]", TE = "[object Uint32Array]", xE = "[object BigUint64Array]", kE = "[object Int8Array]", $E = "[object Int16Array]", RE = "[object Int32Array]", UE = "[object BigInt64Array]", DE = "[object Float32Array]", LE = "[object Float64Array]";
  function ME(t, e) {
    return t === e || Number.isNaN(t) && Number.isNaN(e);
  }
  function BE(t, e, s) {
    return Ii$1(t, e, void 0, void 0, void 0, void 0, s);
  }
  function Ii$1(t, e, s, r, i, n, o) {
    const a = o(t, e, s, r, i, n);
    if (a !== void 0) return a;
    if (typeof t == typeof e) switch (typeof t) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return t === e;
      case "number":
        return t === e || Object.is(t, e);
      case "function":
        return t === e;
      case "object":
        return $i$1(t, e, n, o);
    }
    return $i$1(t, e, n, o);
  }
  function $i$1(t, e, s, r) {
    if (Object.is(t, e)) return true;
    let i = Yl(t), n = Yl(e);
    if (i === Xl && (i = Jo), n === Xl && (n = Jo), i !== n) return false;
    switch (i) {
      case gE:
        return t.toString() === e.toString();
      case mE: {
        const c = t.valueOf(), l = e.valueOf();
        return ME(c, l);
      }
      case wE:
      case bE:
      case yE:
        return Object.is(t.valueOf(), e.valueOf());
      case fE:
        return t.source === e.source && t.flags === e.flags;
      case IE:
        return t === e;
    }
    s = s ?? /* @__PURE__ */ new Map();
    const o = s.get(t), a = s.get(e);
    if (o != null && a != null) return o === e;
    s.set(t, e), s.set(e, t);
    try {
      switch (i) {
        case vE: {
          if (t.size !== e.size) return !1;
          for (const [c, l] of t.entries()) if (!e.has(c) || !Ii$1(l, e.get(c), c, t, e, s, r)) return !1;
          return !0;
        }
        case EE: {
          if (t.size !== e.size) return !1;
          const c = Array.from(t.values()), l = Array.from(e.values());
          for (let u = 0; u < c.length; u++) {
            const d = c[u], h = l.findIndex((p) => Ii$1(d, p, void 0, t, e, s, r));
            if (h === -1) return !1;
            l.splice(h, 1);
          }
          return !0;
        }
        case CE:
        case SE:
        case PE:
        case OE:
        case TE:
        case xE:
        case kE:
        case $E:
        case RE:
        case UE:
        case DE:
        case LE: {
          if (typeof Buffer < "u" && Buffer.isBuffer(t) !== Buffer.isBuffer(e) || t.length !== e.length) return !1;
          for (let c = 0; c < t.length; c++) if (!Ii$1(t[c], e[c], c, t, e, s, r)) return !1;
          return !0;
        }
        case AE:
          return t.byteLength !== e.byteLength ? !1 : $i$1(new Uint8Array(t), new Uint8Array(e), s, r);
        case _E:
          return t.byteLength !== e.byteLength || t.byteOffset !== e.byteOffset ? !1 : $i$1(new Uint8Array(t), new Uint8Array(e), s, r);
        case NE:
          return t.name === e.name && t.message === e.message;
        case Jo: {
          if (!($i$1(t.constructor, e.constructor, s, r) || Gl(t) && Gl(e))) return !1;
          const c = [...Object.keys(t), ...Jl(t)], l = [...Object.keys(e), ...Jl(e)];
          if (c.length !== l.length) return !1;
          for (let u = 0; u < c.length; u++) {
            const d = c[u], h = t[d];
            if (!Object.hasOwn(e, d)) return !1;
            const p = e[d];
            if (!Ii$1(h, p, d, t, e, s, r)) return !1;
          }
          return !0;
        }
        default:
          return !1;
      }
    } finally {
      s.delete(t), s.delete(e);
    }
  }
  function FE(t, e) {
    return BE(t, e, pE);
  }
  var jE = Object.defineProperty, Zl = Object.getOwnPropertySymbols, qE = Object.prototype.hasOwnProperty, WE = Object.prototype.propertyIsEnumerable, Da = (t, e, s) => e in t ? jE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ql = (t, e) => {
    for (var s in e || (e = {})) qE.call(e, s) && Da(t, s, e[s]);
    if (Zl) for (var s of Zl(e)) WE.call(e, s) && Da(t, s, e[s]);
    return t;
  }, at$3 = (t, e, s) => Da(t, typeof e != "symbol" ? e + "" : e, s);
  class lr extends Gf {
    constructor(e, s, r, i = Zt$2, n = void 0) {
      super(e, s, r, i), this.core = e, this.logger = s, this.name = r, at$3(this, "map", /* @__PURE__ */ new Map()), at$3(this, "version", Hb), at$3(this, "cached", []), at$3(this, "initialized", false), at$3(this, "getKey"), at$3(this, "storagePrefix", Zt$2), at$3(this, "recentlyDeleted", []), at$3(this, "recentlyDeletedLimit", 200), at$3(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o) => {
          this.getKey && o !== null && !Je$2(o) ? this.map.set(this.getKey(o), o) : nb(o) ? this.map.set(o.id, o) : ob(o) && this.map.set(o.topic, o);
        }), this.cached = [], this.initialized = true);
      }), at$3(this, "set", async (o, a) => {
        this.isInitialized(), this.map.has(o) ? await this.update(o, a) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o, value: a }), this.map.set(o, a), await this.persist());
      }), at$3(this, "get", (o) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o }), this.getData(o))), at$3(this, "getAll", (o) => (this.isInitialized(), o ? this.values.filter((a) => Object.keys(o).every((c) => FE(a[c], o[c]))) : this.values)), at$3(this, "update", async (o, a) => {
        this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o, update: a });
        const c = Ql(Ql({}, this.getData(o)), a);
        this.map.set(o, c), await this.persist();
      }), at$3(this, "delete", async (o, a) => {
        this.isInitialized(), this.map.has(o) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o, reason: a }), this.map.delete(o), this.addToRecentlyDeleted(o), await this.persist());
      }), this.logger = Me$4(s, this.name), this.storagePrefix = i, this.getKey = n;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.map.size;
    }
    get keys() {
      return Array.from(this.map.keys());
    }
    get values() {
      return Array.from(this.map.values());
    }
    addToRecentlyDeleted(e) {
      this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
    }
    async setDataStore(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getDataStore() {
      return await this.core.storage.getItem(this.storageKey);
    }
    getData(e) {
      const s = this.map.get(e);
      if (!s) {
        if (this.recentlyDeleted.includes(e)) {
          const { message: i } = U$2("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e}`);
          throw this.logger.error(i), new Error(i);
        }
        const { message: r } = U$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw this.logger.error(r), new Error(r);
      }
      return s;
    }
    async persist() {
      await this.setDataStore(this.values);
    }
    async restore() {
      try {
        const e = await this.getDataStore();
        if (typeof e > "u" || !e.length) return;
        if (this.map.size) {
          const { message: s } = U$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(s), new Error(s);
        }
        this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var zE = Object.defineProperty, HE = (t, e, s) => e in t ? zE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, ie$2 = (t, e, s) => HE(t, typeof e != "symbol" ? e + "" : e, s);
  class KE {
    constructor(e, s) {
      this.core = e, this.logger = s, ie$2(this, "name", Jb), ie$2(this, "version", Yb), ie$2(this, "events", new Pa$1()), ie$2(this, "pairings"), ie$2(this, "initialized", false), ie$2(this, "storagePrefix", Zt$2), ie$2(this, "ignoredPayloadTypes", [ds]), ie$2(this, "registeredMethods", []), ie$2(this, "init", async () => {
        this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
      }), ie$2(this, "register", ({ methods: r }) => {
        this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...r])];
      }), ie$2(this, "create", async (r) => {
        this.isInitialized();
        const i = Sa(), n = await this.core.crypto.setSymKey(i), o = De$3(L$3.FIVE_MINUTES), a = { protocol: Qd }, c = { topic: n, expiry: o, relay: a, active: false, methods: r == null ? void 0 : r.methods }, l = Al({ protocol: this.core.protocol, version: this.core.version, topic: n, symKey: i, relay: a, expiryTimestamp: o, methods: r == null ? void 0 : r.methods });
        return this.events.emit(qs.create, c), this.core.expirer.set(n, o), await this.pairings.set(n, c), await this.core.relayer.subscribe(n, { transportType: r == null ? void 0 : r.transportType }), { topic: n, uri: l };
      }), ie$2(this, "pair", async (r) => {
        this.isInitialized();
        const i = this.core.eventClient.createEvent({ properties: { topic: r == null ? void 0 : r.uri, trace: [Kt$2.pairing_started] } });
        this.isValidPair(r, i);
        const { topic: n, symKey: o, relay: a, expiryTimestamp: c, methods: l } = Il(r.uri);
        i.props.properties.topic = n, i.addTrace(Kt$2.pairing_uri_validation_success), i.addTrace(Kt$2.pairing_uri_not_expired);
        let u;
        if (this.pairings.keys.includes(n)) {
          if (u = this.pairings.get(n), i.addTrace(Kt$2.existing_pairing), u.active) throw i.setError(as.active_pairing_already_exists), new Error(`Pairing already exists: ${n}. Please try again with a new connection URI.`);
          i.addTrace(Kt$2.pairing_not_expired);
        }
        const d = c || De$3(L$3.FIVE_MINUTES), h = { topic: n, relay: a, expiry: d, active: false, methods: l };
        this.core.expirer.set(n, d), await this.pairings.set(n, h), i.addTrace(Kt$2.store_new_pairing), r.activatePairing && await this.activate({ topic: n }), this.events.emit(qs.create, h), i.addTrace(Kt$2.emit_inactive_pairing), this.core.crypto.keychain.has(n) || await this.core.crypto.setSymKey(o, n), i.addTrace(Kt$2.subscribing_pairing_topic);
        try {
          await this.core.relayer.confirmOnlineStateOrThrow();
        } catch {
          i.setError(as.no_internet_connection);
        }
        try {
          await this.core.relayer.subscribe(n, { relay: a });
        } catch (p) {
          throw i.setError(as.subscribe_pairing_topic_failure), p;
        }
        return i.addTrace(Kt$2.subscribe_pairing_topic_success), h;
      }), ie$2(this, "activate", async ({ topic: r }) => {
        this.isInitialized();
        const i = De$3(L$3.FIVE_MINUTES);
        this.core.expirer.set(r, i), await this.pairings.update(r, { active: true, expiry: i });
      }), ie$2(this, "ping", async (r) => {
        this.isInitialized(), await this.isValidPing(r), this.logger.warn("ping() is deprecated and will be removed in the next major release.");
        const { topic: i } = r;
        if (this.pairings.keys.includes(i)) {
          const n = await this.sendRequest(i, "wc_pairingPing", {}), { done: o, resolve: a, reject: c } = Bs();
          this.events.once(pe$2("pairing_ping", n), ({ error: l }) => {
            l ? c(l) : a();
          }), await o();
        }
      }), ie$2(this, "updateExpiry", async ({ topic: r, expiry: i }) => {
        this.isInitialized(), await this.pairings.update(r, { expiry: i });
      }), ie$2(this, "updateMetadata", async ({ topic: r, metadata: i }) => {
        this.isInitialized(), await this.pairings.update(r, { peerMetadata: i });
      }), ie$2(this, "getPairings", () => (this.isInitialized(), this.pairings.values)), ie$2(this, "disconnect", async (r) => {
        this.isInitialized(), await this.isValidDisconnect(r);
        const { topic: i } = r;
        this.pairings.keys.includes(i) && (await this.sendRequest(i, "wc_pairingDelete", we$2("USER_DISCONNECTED")), await this.deletePairing(i));
      }), ie$2(this, "formatUriFromPairing", (r) => {
        this.isInitialized();
        const { topic: i, relay: n, expiry: o, methods: a } = r, c = this.core.crypto.keychain.get(i);
        return Al({ protocol: this.core.protocol, version: this.core.version, topic: i, symKey: c, relay: n, expiryTimestamp: o, methods: a });
      }), ie$2(this, "sendRequest", async (r, i, n) => {
        const o = fr$1(i, n), a = await this.core.crypto.encode(r, o), c = fi$1[i].req;
        return this.core.history.set(r, o), this.core.relayer.publish(r, a, c), o.id;
      }), ie$2(this, "sendResult", async (r, i, n) => {
        const o = Un$2(r, n), a = await this.core.crypto.encode(i, o), c = (await this.core.history.get(i, r)).request.method, l = fi$1[c].res;
        await this.core.relayer.publish(i, a, l), await this.core.history.resolve(o);
      }), ie$2(this, "sendError", async (r, i, n) => {
        const o = kn$2(r, n), a = await this.core.crypto.encode(i, o), c = (await this.core.history.get(i, r)).request.method, l = fi$1[c] ? fi$1[c].res : fi$1.unregistered_method.res;
        await this.core.relayer.publish(i, a, l), await this.core.history.resolve(o);
      }), ie$2(this, "deletePairing", async (r, i) => {
        await this.core.relayer.unsubscribe(r), await Promise.all([this.pairings.delete(r, we$2("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(r), i ? Promise.resolve() : this.core.expirer.del(r)]);
      }), ie$2(this, "cleanup", async () => {
        const r = this.pairings.getAll().filter((i) => vs(i.expiry));
        await Promise.all(r.map((i) => this.deletePairing(i.topic)));
      }), ie$2(this, "onRelayEventRequest", async (r) => {
        const { topic: i, payload: n } = r;
        switch (n.method) {
          case "wc_pairingPing":
            return await this.onPairingPingRequest(i, n);
          case "wc_pairingDelete":
            return await this.onPairingDeleteRequest(i, n);
          default:
            return await this.onUnknownRpcMethodRequest(i, n);
        }
      }), ie$2(this, "onRelayEventResponse", async (r) => {
        const { topic: i, payload: n } = r, o = (await this.core.history.get(i, n.id)).request.method;
        switch (o) {
          case "wc_pairingPing":
            return this.onPairingPingResponse(i, n);
          default:
            return this.onUnknownRpcMethodResponse(o);
        }
      }), ie$2(this, "onPairingPingRequest", async (r, i) => {
        const { id: n } = i;
        try {
          this.isValidPing({ topic: r }), await this.sendResult(n, r, !0), this.events.emit(qs.ping, { id: n, topic: r });
        } catch (o) {
          await this.sendError(n, r, o), this.logger.error(o);
        }
      }), ie$2(this, "onPairingPingResponse", (r, i) => {
        const { id: n } = i;
        setTimeout(() => {
          Ct$3(i) ? this.events.emit(pe$2("pairing_ping", n), {}) : ct$3(i) && this.events.emit(pe$2("pairing_ping", n), { error: i.error });
        }, 500);
      }), ie$2(this, "onPairingDeleteRequest", async (r, i) => {
        const { id: n } = i;
        try {
          this.isValidDisconnect({ topic: r }), await this.deletePairing(r), this.events.emit(qs.delete, { id: n, topic: r });
        } catch (o) {
          await this.sendError(n, r, o), this.logger.error(o);
        }
      }), ie$2(this, "onUnknownRpcMethodRequest", async (r, i) => {
        const { id: n, method: o } = i;
        try {
          if (this.registeredMethods.includes(o)) return;
          const a = we$2("WC_METHOD_UNSUPPORTED", o);
          await this.sendError(n, r, a), this.logger.error(a);
        } catch (a) {
          await this.sendError(n, r, a), this.logger.error(a);
        }
      }), ie$2(this, "onUnknownRpcMethodResponse", (r) => {
        this.registeredMethods.includes(r) || this.logger.error(we$2("WC_METHOD_UNSUPPORTED", r));
      }), ie$2(this, "isValidPair", (r, i) => {
        var n;
        if (!ut$3(r)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `pair() params: ${r}`);
          throw i.setError(as.malformed_pairing_uri), new Error(a);
        }
        if (!ib(r.uri)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `pair() uri: ${r.uri}`);
          throw i.setError(as.malformed_pairing_uri), new Error(a);
        }
        const o = Il(r == null ? void 0 : r.uri);
        if (!((n = o == null ? void 0 : o.relay) != null && n.protocol)) {
          const { message: a } = U$2("MISSING_OR_INVALID", "pair() uri#relay-protocol");
          throw i.setError(as.malformed_pairing_uri), new Error(a);
        }
        if (!(o != null && o.symKey)) {
          const { message: a } = U$2("MISSING_OR_INVALID", "pair() uri#symKey");
          throw i.setError(as.malformed_pairing_uri), new Error(a);
        }
        if (o != null && o.expiryTimestamp && L$3.toMiliseconds(o == null ? void 0 : o.expiryTimestamp) < Date.now()) {
          i.setError(as.pairing_expired);
          const { message: a } = U$2("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
          throw new Error(a);
        }
      }), ie$2(this, "isValidPing", async (r) => {
        if (!ut$3(r)) {
          const { message: n } = U$2("MISSING_OR_INVALID", `ping() params: ${r}`);
          throw new Error(n);
        }
        const { topic: i } = r;
        await this.isValidPairingTopic(i);
      }), ie$2(this, "isValidDisconnect", async (r) => {
        if (!ut$3(r)) {
          const { message: n } = U$2("MISSING_OR_INVALID", `disconnect() params: ${r}`);
          throw new Error(n);
        }
        const { topic: i } = r;
        await this.isValidPairingTopic(i);
      }), ie$2(this, "isValidPairingTopic", async (r) => {
        if (!ke$1(r, false)) {
          const { message: i } = U$2("MISSING_OR_INVALID", `pairing topic should be a string: ${r}`);
          throw new Error(i);
        }
        if (!this.pairings.keys.includes(r)) {
          const { message: i } = U$2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${r}`);
          throw new Error(i);
        }
        if (vs(this.pairings.get(r).expiry)) {
          await this.deletePairing(r);
          const { message: i } = U$2("EXPIRED", `pairing topic: ${r}`);
          throw new Error(i);
        }
      }), this.core = e, this.logger = Me$4(s, this.name), this.pairings = new lr(this.core, this.logger, this.name, this.storagePrefix);
    }
    get context() {
      return Ze$4(this.logger);
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    registerRelayerEvents() {
      this.core.relayer.on(qe$2.message, async (e) => {
        const { topic: s, message: r, transportType: i } = e;
        if (this.pairings.keys.includes(s) && i !== Ne$3.link_mode && !this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(r))) try {
          const n = await this.core.crypto.decode(s, r);
          cc$1(n) ? (this.core.history.set(s, n), await this.onRelayEventRequest({ topic: s, payload: n })) : Ln$2(n) && (await this.core.history.resolve(n), await this.onRelayEventResponse({ topic: s, payload: n }), this.core.history.delete(s, n.id)), await this.core.relayer.messages.ack(s, r);
        } catch (n) {
          this.logger.error(n);
        }
      });
    }
    registerExpirerEvents() {
      this.core.expirer.on(Tt$2.expired, async (e) => {
        const { topic: s } = gd(e.target);
        s && this.pairings.keys.includes(s) && (await this.deletePairing(s, true), this.events.emit(qs.expire, { topic: s }));
      });
    }
  }
  var VE = Object.defineProperty, GE = (t, e, s) => e in t ? VE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ge$2 = (t, e, s) => GE(t, typeof e != "symbol" ? e + "" : e, s);
  class JE extends zf {
    constructor(e, s) {
      super(e, s), this.core = e, this.logger = s, Ge$2(this, "records", /* @__PURE__ */ new Map()), Ge$2(this, "events", new st$3.EventEmitter()), Ge$2(this, "name", Xb), Ge$2(this, "version", Zb), Ge$2(this, "cached", []), Ge$2(this, "initialized", false), Ge$2(this, "storagePrefix", Zt$2), Ge$2(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((r) => this.records.set(r.id, r)), this.cached = [], this.registerEventListeners(), this.initialized = true);
      }), Ge$2(this, "set", (r, i, n) => {
        if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: r, request: i, chainId: n }), this.records.has(i.id)) return;
        const o = { id: i.id, topic: r, request: { method: i.method, params: i.params || null }, chainId: n, expiry: De$3(L$3.THIRTY_DAYS) };
        this.records.set(o.id, o), this.persist(), this.events.emit(Rt$2.created, o);
      }), Ge$2(this, "resolve", async (r) => {
        if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: r }), !this.records.has(r.id)) return;
        const i = await this.getRecord(r.id);
        typeof i.response > "u" && (i.response = ct$3(r) ? { error: r.error } : { result: r.result }, this.records.set(i.id, i), this.persist(), this.events.emit(Rt$2.updated, i));
      }), Ge$2(this, "get", async (r, i) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: r, id: i }), await this.getRecord(i))), Ge$2(this, "delete", (r, i) => {
        this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: i }), this.values.forEach((n) => {
          if (n.topic === r) {
            if (typeof i < "u" && n.id !== i) return;
            this.records.delete(n.id), this.events.emit(Rt$2.deleted, n);
          }
        }), this.persist();
      }), Ge$2(this, "exists", async (r, i) => (this.isInitialized(), this.records.has(i) ? (await this.getRecord(i)).topic === r : false)), Ge$2(this, "on", (r, i) => {
        this.events.on(r, i);
      }), Ge$2(this, "once", (r, i) => {
        this.events.once(r, i);
      }), Ge$2(this, "off", (r, i) => {
        this.events.off(r, i);
      }), Ge$2(this, "removeListener", (r, i) => {
        this.events.removeListener(r, i);
      }), this.logger = Me$4(s, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get size() {
      return this.records.size;
    }
    get keys() {
      return Array.from(this.records.keys());
    }
    get values() {
      return Array.from(this.records.values());
    }
    get pending() {
      const e = [];
      return this.values.forEach((s) => {
        if (typeof s.response < "u") return;
        const r = { topic: s.topic, request: fr$1(s.request.method, s.request.params, s.id), chainId: s.chainId };
        return e.push(r);
      }), e;
    }
    async setJsonRpcRecords(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getJsonRpcRecords() {
      return await this.core.storage.getItem(this.storageKey);
    }
    getRecord(e) {
      this.isInitialized();
      const s = this.records.get(e);
      if (!s) {
        const { message: r } = U$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw new Error(r);
      }
      return s;
    }
    async persist() {
      await this.setJsonRpcRecords(this.values), this.events.emit(Rt$2.sync);
    }
    async restore() {
      try {
        const e = await this.getJsonRpcRecords();
        if (typeof e > "u" || !e.length) return;
        if (this.records.size) {
          const { message: s } = U$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(s), new Error(s);
        }
        this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
      }
    }
    registerEventListeners() {
      this.events.on(Rt$2.created, (e) => {
        const s = Rt$2.created;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, record: e });
      }), this.events.on(Rt$2.updated, (e) => {
        const s = Rt$2.updated;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, record: e });
      }), this.events.on(Rt$2.deleted, (e) => {
        const s = Rt$2.deleted;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, record: e });
      }), this.core.heartbeat.on(Lr$1.pulse, () => {
        this.cleanup();
      });
    }
    cleanup() {
      try {
        this.isInitialized();
        let e = !1;
        this.records.forEach((s) => {
          L$3.toMiliseconds(s.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${s.id}`), this.records.delete(s.id), this.events.emit(Rt$2.deleted, s, !1), e = !0);
        }), e && this.persist();
      } catch (e) {
        this.logger.warn(e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var YE = Object.defineProperty, XE = (t, e, s) => e in t ? YE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ze$2 = (t, e, s) => XE(t, typeof e != "symbol" ? e + "" : e, s);
  class ZE extends Yf {
    constructor(e, s) {
      super(e, s), this.core = e, this.logger = s, Ze$2(this, "expirations", /* @__PURE__ */ new Map()), Ze$2(this, "events", new st$3.EventEmitter()), Ze$2(this, "name", Qb), Ze$2(this, "version", ev), Ze$2(this, "cached", []), Ze$2(this, "initialized", false), Ze$2(this, "storagePrefix", Zt$2), Ze$2(this, "init", async () => {
        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((r) => this.expirations.set(r.target, r)), this.cached = [], this.registerEventListeners(), this.initialized = true);
      }), Ze$2(this, "has", (r) => {
        try {
          const i = this.formatTarget(r);
          return typeof this.getExpiration(i) < "u";
        } catch {
          return false;
        }
      }), Ze$2(this, "set", (r, i) => {
        this.isInitialized();
        const n = this.formatTarget(r), o = { target: n, expiry: i };
        this.expirations.set(n, o), this.checkExpiry(n, o), this.events.emit(Tt$2.created, { target: n, expiration: o });
      }), Ze$2(this, "get", (r) => {
        this.isInitialized();
        const i = this.formatTarget(r);
        return this.getExpiration(i);
      }), Ze$2(this, "del", (r) => {
        if (this.isInitialized(), this.has(r)) {
          const i = this.formatTarget(r), n = this.getExpiration(i);
          this.expirations.delete(i), this.events.emit(Tt$2.deleted, { target: i, expiration: n });
        }
      }), Ze$2(this, "on", (r, i) => {
        this.events.on(r, i);
      }), Ze$2(this, "once", (r, i) => {
        this.events.once(r, i);
      }), Ze$2(this, "off", (r, i) => {
        this.events.off(r, i);
      }), Ze$2(this, "removeListener", (r, i) => {
        this.events.removeListener(r, i);
      }), this.logger = Me$4(s, this.name);
    }
    get context() {
      return Ze$4(this.logger);
    }
    get storageKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
    get length() {
      return this.expirations.size;
    }
    get keys() {
      return Array.from(this.expirations.keys());
    }
    get values() {
      return Array.from(this.expirations.values());
    }
    formatTarget(e) {
      if (typeof e == "string") return am(e);
      if (typeof e == "number") return cm(e);
      const { message: s } = U$2("UNKNOWN_TYPE", `Target type: ${typeof e}`);
      throw new Error(s);
    }
    async setExpirations(e) {
      await this.core.storage.setItem(this.storageKey, e);
    }
    async getExpirations() {
      return await this.core.storage.getItem(this.storageKey);
    }
    async persist() {
      await this.setExpirations(this.values), this.events.emit(Tt$2.sync);
    }
    async restore() {
      try {
        const e = await this.getExpirations();
        if (typeof e > "u" || !e.length) return;
        if (this.expirations.size) {
          const { message: s } = U$2("RESTORE_WILL_OVERRIDE", this.name);
          throw this.logger.error(s), new Error(s);
        }
        this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
      } catch (e) {
        this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
      }
    }
    getExpiration(e) {
      const s = this.expirations.get(e);
      if (!s) {
        const { message: r } = U$2("NO_MATCHING_KEY", `${this.name}: ${e}`);
        throw this.logger.warn(r), new Error(r);
      }
      return s;
    }
    checkExpiry(e, s) {
      const { expiry: r } = s;
      L$3.toMiliseconds(r) - Date.now() <= 0 && this.expire(e, s);
    }
    expire(e, s) {
      this.expirations.delete(e), this.events.emit(Tt$2.expired, { target: e, expiration: s });
    }
    checkExpirations() {
      this.core.relayer.connected && this.expirations.forEach((e, s) => this.checkExpiry(s, e));
    }
    registerEventListeners() {
      this.core.heartbeat.on(Lr$1.pulse, () => this.checkExpirations()), this.events.on(Tt$2.created, (e) => {
        const s = Tt$2.created;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, data: e }), this.persist();
      }), this.events.on(Tt$2.expired, (e) => {
        const s = Tt$2.expired;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, data: e }), this.persist();
      }), this.events.on(Tt$2.deleted, (e) => {
        const s = Tt$2.deleted;
        this.logger.info(`Emitting ${s}`), this.logger.debug({ type: "event", event: s, data: e }), this.persist();
      });
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
  }
  var QE = Object.defineProperty, e1 = (t, e, s) => e in t ? QE(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, xe$2 = (t, e, s) => e1(t, typeof e != "symbol" ? e + "" : e, s);
  class t1 extends Xf {
    constructor(e, s, r) {
      super(e, s, r), this.core = e, this.logger = s, this.store = r, xe$2(this, "name", tv), xe$2(this, "abortController"), xe$2(this, "isDevEnv"), xe$2(this, "verifyUrlV3", rv), xe$2(this, "storagePrefix", Zt$2), xe$2(this, "version", Zd), xe$2(this, "publicKey"), xe$2(this, "fetchPromise"), xe$2(this, "init", async () => {
        var i;
        this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && L$3.toMiliseconds((i = this.publicKey) == null ? void 0 : i.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()));
      }), xe$2(this, "register", async (i) => {
        if (!ii$1() || this.isDevEnv) return;
        const n = window.location.origin, { id: o, decryptedId: a } = i, c = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${n}&id=${o}&decryptedId=${a}`;
        try {
          const l = Tr$1(), u = this.startAbortTimer(L$3.ONE_SECOND * 5), d = await new Promise((h, p) => {
            const g = () => {
              window.removeEventListener("message", w), l.body.removeChild(f), p("attestation aborted");
            };
            this.abortController.signal.addEventListener("abort", g);
            const f = l.createElement("iframe");
            f.src = c, f.style.display = "none", f.addEventListener("error", g, { signal: this.abortController.signal });
            const w = (y) => {
              if (y.data && typeof y.data == "string") try {
                const b = JSON.parse(y.data);
                if (b.type === "verify_attestation") {
                  if (Ho$1(b.attestation).payload.id !== o) return;
                  clearInterval(u), l.body.removeChild(f), this.abortController.signal.removeEventListener("abort", g), window.removeEventListener("message", w), h(b.attestation === null ? "" : b.attestation);
                }
              } catch (b) {
                this.logger.warn(b);
              }
            };
            l.body.appendChild(f), window.addEventListener("message", w, { signal: this.abortController.signal });
          });
          return this.logger.debug("jwt attestation", d), d;
        } catch (l) {
          this.logger.warn(l);
        }
        return "";
      }), xe$2(this, "resolve", async (i) => {
        if (this.isDevEnv) return "";
        const { attestationId: n, hash: o, encryptedId: a } = i;
        if (n === "") {
          this.logger.debug("resolve: attestationId is empty, skipping");
          return;
        }
        if (n) {
          if (Ho$1(n).payload.id !== a) return;
          const l = await this.isValidJwtAttestation(n);
          if (l) {
            if (!l.isVerified) {
              this.logger.warn("resolve: jwt attestation: origin url not verified");
              return;
            }
            return l;
          }
        }
        if (!o) return;
        const c = this.getVerifyUrl(i == null ? void 0 : i.verifyUrl);
        return this.fetchAttestation(o, c);
      }), xe$2(this, "fetchAttestation", async (i, n) => {
        this.logger.debug(`resolving attestation: ${i} from url: ${n}`);
        const o = this.startAbortTimer(L$3.ONE_SECOND * 5), a = await fetch(`${n}/attestation/${i}?v2Supported=true`, { signal: this.abortController.signal });
        return clearTimeout(o), a.status === 200 ? await a.json() : void 0;
      }), xe$2(this, "getVerifyUrl", (i) => {
        let n = i || ki$1;
        return iv.includes(n) || (this.logger.info(`verify url: ${n}, not included in trusted list, assigning default: ${ki$1}`), n = ki$1), n;
      }), xe$2(this, "fetchPublicKey", async () => {
        try {
          this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
          const i = this.startAbortTimer(L$3.FIVE_SECONDS), n = await fetch(`${this.verifyUrlV3}/public-key`, { signal: this.abortController.signal });
          return clearTimeout(i), await n.json();
        } catch (i) {
          this.logger.warn(i);
        }
      }), xe$2(this, "persistPublicKey", async (i) => {
        this.logger.debug("persisting public key to local storage", i), await this.store.setItem(this.storeKey, i), this.publicKey = i;
      }), xe$2(this, "removePublicKey", async () => {
        this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
      }), xe$2(this, "isValidJwtAttestation", async (i) => {
        const n = await this.getPublicKey();
        try {
          if (n) return this.validateAttestation(i, n);
        } catch (a) {
          this.logger.error(a), this.logger.warn("error validating attestation");
        }
        const o = await this.fetchAndPersistPublicKey();
        try {
          if (o) return this.validateAttestation(i, o);
        } catch (a) {
          this.logger.error(a), this.logger.warn("error validating attestation");
        }
      }), xe$2(this, "getPublicKey", async () => this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey()), xe$2(this, "fetchAndPersistPublicKey", async () => {
        if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
        this.fetchPromise = new Promise(async (n) => {
          const o = await this.fetchPublicKey();
          o && (await this.persistPublicKey(o), n(o));
        });
        const i = await this.fetchPromise;
        return this.fetchPromise = void 0, i;
      }), xe$2(this, "validateAttestation", (i, n) => {
        const o = Ly(i, n.publicKey), a = { hasExpired: L$3.toMiliseconds(o.exp) < Date.now(), payload: o };
        if (a.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
        return { origin: a.payload.origin, isScam: a.payload.isScam, isVerified: a.payload.isVerified };
      }), this.logger = Me$4(s, this.name), this.abortController = new AbortController(), this.isDevEnv = Qa(), this.init();
    }
    get storeKey() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
    }
    get context() {
      return Ze$4(this.logger);
    }
    startAbortTimer(e) {
      return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), L$3.toMiliseconds(e));
    }
  }
  var s1 = Object.defineProperty, r1 = (t, e, s) => e in t ? s1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, eu = (t, e, s) => r1(t, typeof e != "symbol" ? e + "" : e, s);
  class i1 extends Zf {
    constructor(e, s) {
      super(e, s), this.projectId = e, this.logger = s, eu(this, "context", nv), eu(this, "registerDeviceToken", async (r) => {
        const { clientId: i, token: n, notificationType: o, enableEncrypted: a = false } = r, c = `${ov}/${this.projectId}/clients`;
        await fetch(c, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: i, type: o, token: n, always_raw: a }) });
      }), this.logger = Me$4(s, this.context);
    }
  }
  var n1 = Object.defineProperty, tu = Object.getOwnPropertySymbols, o1 = Object.prototype.hasOwnProperty, a1 = Object.prototype.propertyIsEnumerable, La = (t, e, s) => e in t ? n1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, wi$1 = (t, e) => {
    for (var s in e || (e = {})) o1.call(e, s) && La(t, s, e[s]);
    if (tu) for (var s of tu(e)) a1.call(e, s) && La(t, s, e[s]);
    return t;
  }, Me$2 = (t, e, s) => La(t, typeof e != "symbol" ? e + "" : e, s);
  class c1 extends Qf {
    constructor(e, s, r = true) {
      super(e, s, r), this.core = e, this.logger = s, Me$2(this, "context", cv), Me$2(this, "storagePrefix", Zt$2), Me$2(this, "storageVersion", av), Me$2(this, "events", /* @__PURE__ */ new Map()), Me$2(this, "shouldPersist", false), Me$2(this, "init", async () => {
        if (!Qa()) try {
          const i = { eventId: Vc(), timestamp: Date.now(), domain: this.getAppDomain(), props: { event: "INIT", type: "", properties: { client_id: await this.core.crypto.getClientId(), user_agent: pd(this.core.relayer.protocol, this.core.relayer.version, Oa) } } };
          await this.sendEvent([i]);
        } catch (i) {
          this.logger.warn(i);
        }
      }), Me$2(this, "createEvent", (i) => {
        const { event: n = "ERROR", type: o = "", properties: { topic: a, trace: c } } = i, l = Vc(), u = this.core.projectId || "", d = Date.now(), h = wi$1({ eventId: l, timestamp: d, props: { event: n, type: o, properties: { topic: a, trace: c } }, bundleId: u, domain: this.getAppDomain() }, this.setMethods(l));
        return this.telemetryEnabled && (this.events.set(l, h), this.shouldPersist = true), h;
      }), Me$2(this, "getEvent", (i) => {
        const { eventId: n, topic: o } = i;
        if (n) return this.events.get(n);
        const a = Array.from(this.events.values()).find((c) => c.props.properties.topic === o);
        if (a) return wi$1(wi$1({}, a), this.setMethods(a.eventId));
      }), Me$2(this, "deleteEvent", (i) => {
        const { eventId: n } = i;
        this.events.delete(n), this.shouldPersist = true;
      }), Me$2(this, "setEventListeners", () => {
        this.core.heartbeat.on(Lr$1.pulse, async () => {
          this.shouldPersist && await this.persist(), this.events.forEach((i) => {
            L$3.fromMiliseconds(Date.now()) - L$3.fromMiliseconds(i.timestamp) > lv && (this.events.delete(i.eventId), this.shouldPersist = true);
          });
        });
      }), Me$2(this, "setMethods", (i) => ({ addTrace: (n) => this.addTrace(i, n), setError: (n) => this.setError(i, n) })), Me$2(this, "addTrace", (i, n) => {
        const o = this.events.get(i);
        o && (o.props.properties.trace.push(n), this.events.set(i, o), this.shouldPersist = true);
      }), Me$2(this, "setError", (i, n) => {
        const o = this.events.get(i);
        o && (o.props.type = n, o.timestamp = Date.now(), this.events.set(i, o), this.shouldPersist = true);
      }), Me$2(this, "persist", async () => {
        await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = false;
      }), Me$2(this, "restore", async () => {
        try {
          const i = await this.core.storage.getItem(this.storageKey) || [];
          if (!i.length) return;
          i.forEach((n) => {
            this.events.set(n.eventId, wi$1(wi$1({}, n), this.setMethods(n.eventId)));
          });
        } catch (i) {
          this.logger.warn(i);
        }
      }), Me$2(this, "submit", async () => {
        if (!this.telemetryEnabled || this.events.size === 0) return;
        const i = [];
        for (const [n, o] of this.events) o.props.type && i.push(o);
        if (i.length !== 0) try {
          if ((await this.sendEvent(i)).ok) for (const n of i) this.events.delete(n.eventId), this.shouldPersist = !0;
        } catch (n) {
          this.logger.warn(n);
        }
      }), Me$2(this, "sendEvent", async (i) => {
        const n = this.getAppDomain() ? "" : "&sp=desktop";
        return await fetch(`${uv}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${Oa}${n}`, { method: "POST", body: JSON.stringify(i) });
      }), Me$2(this, "getAppDomain", () => hd().url), this.logger = Me$4(s, this.context), this.telemetryEnabled = r, r ? this.restore().then(async () => {
        await this.submit(), this.setEventListeners();
      }) : this.persist();
    }
    get storageKey() {
      return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
    }
  }
  var l1 = Object.defineProperty, su = Object.getOwnPropertySymbols, u1 = Object.prototype.hasOwnProperty, d1 = Object.prototype.propertyIsEnumerable, Ma = (t, e, s) => e in t ? l1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, ru = (t, e) => {
    for (var s in e || (e = {})) u1.call(e, s) && Ma(t, s, e[s]);
    if (su) for (var s of su(e)) d1.call(e, s) && Ma(t, s, e[s]);
    return t;
  }, Ae$2 = (t, e, s) => Ma(t, typeof e != "symbol" ? e + "" : e, s);
  let h1 = class hh extends Ff {
    constructor(e) {
      var s;
      super(e), Ae$2(this, "protocol", Xd), Ae$2(this, "version", Zd), Ae$2(this, "name", Pa), Ae$2(this, "relayUrl"), Ae$2(this, "projectId"), Ae$2(this, "customStoragePrefix"), Ae$2(this, "events", new st$3.EventEmitter()), Ae$2(this, "logger"), Ae$2(this, "heartbeat"), Ae$2(this, "relayer"), Ae$2(this, "crypto"), Ae$2(this, "storage"), Ae$2(this, "history"), Ae$2(this, "expirer"), Ae$2(this, "pairing"), Ae$2(this, "verify"), Ae$2(this, "echoClient"), Ae$2(this, "linkModeSupportedApps"), Ae$2(this, "eventClient"), Ae$2(this, "initialized", false), Ae$2(this, "logChunkController"), Ae$2(this, "on", (a, c) => this.events.on(a, c)), Ae$2(this, "once", (a, c) => this.events.once(a, c)), Ae$2(this, "off", (a, c) => this.events.off(a, c)), Ae$2(this, "removeListener", (a, c) => this.events.removeListener(a, c)), Ae$2(this, "dispatchEnvelope", ({ topic: a, message: c, sessionExists: l }) => {
        if (!a || !c) return;
        const u = { topic: a, message: c, publishedAt: Date.now(), transportType: Ne$3.link_mode };
        this.relayer.onLinkMessageEvent(u, { sessionExists: l });
      });
      const r = this.getGlobalCore(e == null ? void 0 : e.customStoragePrefix);
      if (r) try {
        return this.customStoragePrefix = r.customStoragePrefix, this.logger = r.logger, this.heartbeat = r.heartbeat, this.crypto = r.crypto, this.history = r.history, this.expirer = r.expirer, this.storage = r.storage, this.relayer = r.relayer, this.pairing = r.pairing, this.verify = r.verify, this.echoClient = r.echoClient, this.linkModeSupportedApps = r.linkModeSupportedApps, this.eventClient = r.eventClient, this.initialized = r.initialized, this.logChunkController = r.logChunkController, r;
      } catch (a) {
        console.warn("Failed to copy global core", a);
      }
      this.projectId = e == null ? void 0 : e.projectId, this.relayUrl = (e == null ? void 0 : e.relayUrl) || eh, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : "";
      const i = Nn$2({ level: typeof (e == null ? void 0 : e.logger) == "string" && e.logger ? e.logger : kb.logger, name: Pa }), { logger: n, chunkLoggerController: o } = rI$1({ opts: i, maxSizeInBytes: e == null ? void 0 : e.maxLogBlobSizeInBytes, loggerOverride: e == null ? void 0 : e.logger });
      this.logChunkController = o, (s = this.logChunkController) != null && s.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
        var a, c;
        (a = this.logChunkController) != null && a.downloadLogsBlobInBrowser && ((c = this.logChunkController) == null || c.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
      }), this.logger = Me$4(n, this.name), this.heartbeat = new G3(), this.crypto = new B0(this, this.logger, e == null ? void 0 : e.keychain), this.history = new JE(this, this.logger), this.expirer = new ZE(this, this.logger), this.storage = e != null && e.storage ? e.storage : new Lf(ru(ru({}, $b), e == null ? void 0 : e.storageOptions)), this.relayer = new hE({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new KE(this, this.logger), this.verify = new t1(this, this.logger, this.storage), this.echoClient = new i1(this.projectId || "", this.logger), this.linkModeSupportedApps = [], this.eventClient = new c1(this, this.logger, e == null ? void 0 : e.telemetryEnabled), this.setGlobalCore(this);
    }
    static async init(e) {
      const s = new hh(e);
      await s.initialize();
      const r = await s.crypto.getClientId();
      return await s.storage.setItem(Kb, r), s;
    }
    get context() {
      return Ze$4(this.logger);
    }
    async start() {
      this.initialized || await this.initialize();
    }
    async getLogsBlob() {
      var e;
      return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({ clientId: await this.crypto.getClientId() });
    }
    async addLinkModeSupportedApp(e) {
      this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(Dl, this.linkModeSupportedApps));
    }
    async initialize() {
      this.logger.trace("Initialized");
      try {
        await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.linkModeSupportedApps = await this.storage.getItem(Dl) || [], this.initialized = !0, this.logger.info("Core Initialization Success");
      } catch (e) {
        throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
      }
    }
    getGlobalCore(e = "") {
      try {
        if (this.isGlobalCoreDisabled()) return;
        const s = `_walletConnectCore_${e}`, r = `${s}_count`;
        return globalThis[r] = (globalThis[r] || 0) + 1, globalThis[r] > 1 && console.warn(`WalletConnect Core is already initialized. This is probably a mistake and can lead to unexpected behavior. Init() was called ${globalThis[r]} times.`), globalThis[s];
      } catch (s) {
        console.warn("Failed to get global WalletConnect core", s);
        return;
      }
    }
    setGlobalCore(e) {
      var s;
      try {
        if (this.isGlobalCoreDisabled()) return;
        const r = `_walletConnectCore_${((s = e.opts) == null ? void 0 : s.customStoragePrefix) || ""}`;
        globalThis[r] = e;
      } catch (r) {
        console.warn("Failed to set global WalletConnect core", r);
      }
    }
    isGlobalCoreDisabled() {
      try {
        return typeof process < "u" && process.env.DISABLE_GLOBAL_CORE === "true";
      } catch {
        return true;
      }
    }
  };
  const p1 = h1, ph = "wc", fh = 2, gh = "client", ac = `${ph}@${fh}:${gh}:`, Yo = { name: gh, logger: "error" }, iu = "WALLETCONNECT_DEEPLINK_CHOICE", f1 = "proposal", nu = "Proposal expired", g1 = "session", mr = L$3.SEVEN_DAYS, m1 = "engine", Be$3 = { wc_sessionPropose: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: L$3.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: L$3.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: L$3.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: L$3.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: L$3.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: L$3.FIVE_MINUTES, prompt: false, tag: 1119 } } }, Xo = { min: L$3.FIVE_MINUTES, max: L$3.SEVEN_DAYS }, Ht$2 = { idle: "IDLE", active: "ACTIVE" }, ou = { eth_sendTransaction: { key: "" }, eth_sendRawTransaction: { key: "" }, wallet_sendCalls: { key: "" }, solana_signTransaction: { key: "signature" }, solana_signAllTransactions: { key: "transactions" }, solana_signAndSendTransaction: { key: "signature" } }, w1 = "request", y1 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"], b1 = "wc", v1 = "auth", E1 = "authKeys", C1 = "pairingTopics", I1 = "requests", Io$1 = `${b1}@${1.5}:${v1}:`, Xn$1 = `${Io$1}:PUB_KEY`;
  var A1 = Object.defineProperty, N1 = Object.defineProperties, _1 = Object.getOwnPropertyDescriptors, au = Object.getOwnPropertySymbols, S1 = Object.prototype.hasOwnProperty, P1 = Object.prototype.propertyIsEnumerable, Ba = (t, e, s) => e in t ? A1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, ve$2 = (t, e) => {
    for (var s in e || (e = {})) S1.call(e, s) && Ba(t, s, e[s]);
    if (au) for (var s of au(e)) P1.call(e, s) && Ba(t, s, e[s]);
    return t;
  }, tt$2 = (t, e) => N1(t, _1(e)), P = (t, e, s) => Ba(t, typeof e != "symbol" ? e + "" : e, s);
  class O1 extends rg {
    constructor(e) {
      super(e), P(this, "name", m1), P(this, "events", new Pa$1()), P(this, "initialized", false), P(this, "requestQueue", { state: Ht$2.idle, queue: [] }), P(this, "sessionRequestQueue", { state: Ht$2.idle, queue: [] }), P(this, "requestQueueDelay", L$3.ONE_SECOND), P(this, "expectedPairingMethodMap", /* @__PURE__ */ new Map()), P(this, "recentlyDeletedMap", /* @__PURE__ */ new Map()), P(this, "recentlyDeletedLimit", 200), P(this, "relayMessageCache", []), P(this, "pendingSessions", /* @__PURE__ */ new Map()), P(this, "init", async () => {
        this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({ methods: Object.keys(Be$3) }), this.initialized = true, setTimeout(async () => {
          await this.processPendingMessageEvents(), this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
        }, L$3.toMiliseconds(this.requestQueueDelay)));
      }), P(this, "connect", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        const r = tt$2(ve$2({}, s), { requiredNamespaces: s.requiredNamespaces || {}, optionalNamespaces: s.optionalNamespaces || {} });
        await this.isValidConnect(r), r.optionalNamespaces = Qy(r.requiredNamespaces, r.optionalNamespaces), r.requiredNamespaces = {};
        const { pairingTopic: i, requiredNamespaces: n, optionalNamespaces: o, sessionProperties: a, scopedProperties: c, relays: l } = r;
        let u = i, d, h = false;
        try {
          if (u) {
            const A = this.client.core.pairing.pairings.get(u);
            this.client.logger.warn("connect() with existing pairing topic is deprecated and will be removed in the next major release."), h = A.active;
          }
        } catch (A) {
          throw this.client.logger.error(`connect() -> pairing.get(${u}) failed`), A;
        }
        if (!u || !h) {
          const { topic: A, uri: N } = await this.client.core.pairing.create();
          u = A, d = N;
        }
        if (!u) {
          const { message: A } = U$2("NO_MATCHING_KEY", `connect() pairing topic: ${u}`);
          throw new Error(A);
        }
        const p = await this.client.core.crypto.generateKeyPair(), g = Be$3.wc_sessionPropose.req.ttl || L$3.FIVE_MINUTES, f = De$3(g), w = tt$2(ve$2(ve$2({ requiredNamespaces: n, optionalNamespaces: o, relays: l ?? [{ protocol: Qd }], proposer: { publicKey: p, metadata: this.client.metadata }, expiryTimestamp: f, pairingTopic: u }, a && { sessionProperties: a }), c && { scopedProperties: c }), { id: Pt$4() }), y = pe$2("session_connect", w.id), { reject: b, resolve: v, done: C } = Bs(g, nu), S = ({ id: A }) => {
          A === w.id && (this.client.events.off("proposal_expire", S), this.pendingSessions.delete(w.id), this.events.emit(y, { error: { message: nu, code: 0 } }));
        };
        return this.client.events.on("proposal_expire", S), this.events.once(y, ({ error: A, session: N }) => {
          this.client.events.off("proposal_expire", S), A ? b(A) : N && v(N);
        }), await this.sendRequest({ topic: u, method: "wc_sessionPropose", params: w, throwOnFailedPublish: true, clientRpcId: w.id }), await this.setProposal(w.id, w), { uri: d, approval: C };
      }), P(this, "pair", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          return await this.client.core.pairing.pair(s);
        } catch (r) {
          throw this.client.logger.error("pair() failed"), r;
        }
      }), P(this, "approve", async (s) => {
        var r, i, n;
        const o = this.client.core.eventClient.createEvent({ properties: { topic: (r = s == null ? void 0 : s.id) == null ? void 0 : r.toString(), trace: [Ut$2.session_approve_started] } });
        try {
          this.isInitialized(), await this.confirmOnlineStateOrThrow();
        } catch (E) {
          throw o.setError(Us.no_internet_connection), E;
        }
        try {
          await this.isValidProposalId(s == null ? void 0 : s.id);
        } catch (E) {
          throw this.client.logger.error(`approve() -> proposal.get(${s == null ? void 0 : s.id}) failed`), o.setError(Us.proposal_not_found), E;
        }
        try {
          await this.isValidApprove(s);
        } catch (E) {
          throw this.client.logger.error("approve() -> isValidApprove() failed"), o.setError(Us.session_approve_namespace_validation_failure), E;
        }
        const { id: a, relayProtocol: c, namespaces: l, sessionProperties: u, scopedProperties: d, sessionConfig: h } = s, p = this.client.proposal.get(a);
        this.client.core.eventClient.deleteEvent({ eventId: o.eventId });
        const { pairingTopic: g, proposer: f, requiredNamespaces: w, optionalNamespaces: y } = p;
        let b = (i = this.client.core.eventClient) == null ? void 0 : i.getEvent({ topic: g });
        b || (b = (n = this.client.core.eventClient) == null ? void 0 : n.createEvent({ type: Ut$2.session_approve_started, properties: { topic: g, trace: [Ut$2.session_approve_started, Ut$2.session_namespaces_validation_success] } }));
        const v = await this.client.core.crypto.generateKeyPair(), C = f.publicKey, S = await this.client.core.crypto.generateSharedKey(v, C), A = ve$2(ve$2(ve$2({ relay: { protocol: c ?? "irn" }, namespaces: l, controller: { publicKey: v, metadata: this.client.metadata }, expiry: De$3(mr) }, u && { sessionProperties: u }), d && { scopedProperties: d }), h && { sessionConfig: h }), N = Ne$3.relay;
        b.addTrace(Ut$2.subscribing_session_topic);
        try {
          await this.client.core.relayer.subscribe(S, { transportType: N });
        } catch (E) {
          throw b.setError(Us.subscribe_session_topic_failure), E;
        }
        b.addTrace(Ut$2.subscribe_session_topic_success);
        const R = tt$2(ve$2({}, A), { topic: S, requiredNamespaces: w, optionalNamespaces: y, pairingTopic: g, acknowledged: false, self: A.controller, peer: { publicKey: f.publicKey, metadata: f.metadata }, controller: v, transportType: Ne$3.relay });
        await this.client.session.set(S, R), b.addTrace(Ut$2.store_session);
        try {
          b.addTrace(Ut$2.publishing_session_settle), await this.sendRequest({ topic: S, method: "wc_sessionSettle", params: A, throwOnFailedPublish: !0 }).catch((E) => {
            throw b == null || b.setError(Us.session_settle_publish_failure), E;
          }), b.addTrace(Ut$2.session_settle_publish_success), b.addTrace(Ut$2.publishing_session_approve), await this.sendResult({ id: a, topic: g, result: { relay: { protocol: c ?? "irn" }, responderPublicKey: v }, throwOnFailedPublish: !0 }).catch((E) => {
            throw b == null || b.setError(Us.session_approve_publish_failure), E;
          }), b.addTrace(Ut$2.session_approve_publish_success);
        } catch (E) {
          throw this.client.logger.error(E), this.client.session.delete(S, we$2("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(S), E;
        }
        return this.client.core.eventClient.deleteEvent({ eventId: b.eventId }), await this.client.core.pairing.updateMetadata({ topic: g, metadata: f.metadata }), await this.client.proposal.delete(a, we$2("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: g }), await this.setExpiry(S, De$3(mr)), { topic: S, acknowledged: () => Promise.resolve(this.client.session.get(S)) };
      }), P(this, "reject", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidReject(s);
        } catch (o) {
          throw this.client.logger.error("reject() -> isValidReject() failed"), o;
        }
        const { id: r, reason: i } = s;
        let n;
        try {
          n = this.client.proposal.get(r).pairingTopic;
        } catch (o) {
          throw this.client.logger.error(`reject() -> proposal.get(${r}) failed`), o;
        }
        n && (await this.sendError({ id: r, topic: n, error: i, rpcOpts: Be$3.wc_sessionPropose.reject }), await this.client.proposal.delete(r, we$2("USER_DISCONNECTED")));
      }), P(this, "update", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidUpdate(s);
        } catch (d) {
          throw this.client.logger.error("update() -> isValidUpdate() failed"), d;
        }
        const { topic: r, namespaces: i } = s, { done: n, resolve: o, reject: a } = Bs(), c = Pt$4(), l = Cr$1().toString(), u = this.client.session.get(r).namespaces;
        return this.events.once(pe$2("session_update", c), ({ error: d }) => {
          d ? a(d) : o();
        }), await this.client.session.update(r, { namespaces: i }), await this.sendRequest({ topic: r, method: "wc_sessionUpdate", params: { namespaces: i }, throwOnFailedPublish: true, clientRpcId: c, relayRpcId: l }).catch((d) => {
          this.client.logger.error(d), this.client.session.update(r, { namespaces: u }), a(d);
        }), { acknowledged: n };
      }), P(this, "extend", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidExtend(s);
        } catch (c) {
          throw this.client.logger.error("extend() -> isValidExtend() failed"), c;
        }
        const { topic: r } = s, i = Pt$4(), { done: n, resolve: o, reject: a } = Bs();
        return this.events.once(pe$2("session_extend", i), ({ error: c }) => {
          c ? a(c) : o();
        }), await this.setExpiry(r, De$3(mr)), this.sendRequest({ topic: r, method: "wc_sessionExtend", params: {}, clientRpcId: i, throwOnFailedPublish: true }).catch((c) => {
          a(c);
        }), { acknowledged: n };
      }), P(this, "request", async (s) => {
        this.isInitialized();
        try {
          await this.isValidRequest(s);
        } catch (y) {
          throw this.client.logger.error("request() -> isValidRequest() failed"), y;
        }
        const { chainId: r, request: i, topic: n, expiry: o = Be$3.wc_sessionRequest.req.ttl } = s, a = this.client.session.get(n);
        (a == null ? void 0 : a.transportType) === Ne$3.relay && await this.confirmOnlineStateOrThrow();
        const c = Pt$4(), l = Cr$1().toString(), { done: u, resolve: d, reject: h } = Bs(o, "Request expired. Please try again.");
        this.events.once(pe$2("session_request", c), ({ error: y, result: b }) => {
          y ? h(y) : d(b);
        });
        const p = "wc_sessionRequest", g = this.getAppLinkIfEnabled(a.peer.metadata, a.transportType);
        if (g) return await this.sendRequest({ clientRpcId: c, relayRpcId: l, topic: n, method: p, params: { request: tt$2(ve$2({}, i), { expiryTimestamp: De$3(o) }), chainId: r }, expiry: o, throwOnFailedPublish: true, appLink: g }).catch((y) => h(y)), this.client.events.emit("session_request_sent", { topic: n, request: i, chainId: r, id: c }), await u();
        const f = { request: tt$2(ve$2({}, i), { expiryTimestamp: De$3(o) }), chainId: r }, w = this.shouldSetTVF(p, f);
        return await Promise.all([new Promise(async (y) => {
          await this.sendRequest(ve$2({ clientRpcId: c, relayRpcId: l, topic: n, method: p, params: f, expiry: o, throwOnFailedPublish: true }, w && { tvf: this.getTVFParams(c, f) })).catch((b) => h(b)), this.client.events.emit("session_request_sent", { topic: n, request: i, chainId: r, id: c }), y();
        }), new Promise(async (y) => {
          var b;
          if (!((b = a.sessionConfig) != null && b.disableDeepLink)) {
            const v = await hm(this.client.core.storage, iu);
            await lm({ id: c, topic: n, wcDeepLink: v });
          }
          y();
        }), u()]).then((y) => y[2]);
      }), P(this, "respond", async (s) => {
        this.isInitialized(), await this.isValidRespond(s);
        const { topic: r, response: i } = s, { id: n } = i, o = this.client.session.get(r);
        o.transportType === Ne$3.relay && await this.confirmOnlineStateOrThrow();
        const a = this.getAppLinkIfEnabled(o.peer.metadata, o.transportType);
        Ct$3(i) ? await this.sendResult({ id: n, topic: r, result: i.result, throwOnFailedPublish: true, appLink: a }) : ct$3(i) && await this.sendError({ id: n, topic: r, error: i.error, appLink: a }), this.cleanupAfterResponse(s);
      }), P(this, "ping", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
        try {
          await this.isValidPing(s);
        } catch (i) {
          throw this.client.logger.error("ping() -> isValidPing() failed"), i;
        }
        const { topic: r } = s;
        if (this.client.session.keys.includes(r)) {
          const i = Pt$4(), n = Cr$1().toString(), { done: o, resolve: a, reject: c } = Bs();
          this.events.once(pe$2("session_ping", i), ({ error: l }) => {
            l ? c(l) : a();
          }), await Promise.all([this.sendRequest({ topic: r, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: i, relayRpcId: n }), o()]);
        } else this.client.core.pairing.pairings.keys.includes(r) && (this.client.logger.warn("ping() on pairing topic is deprecated and will be removed in the next major release."), await this.client.core.pairing.ping({ topic: r }));
      }), P(this, "emit", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(s);
        const { topic: r, event: i, chainId: n } = s, o = Cr$1().toString(), a = Pt$4();
        await this.sendRequest({ topic: r, method: "wc_sessionEvent", params: { event: i, chainId: n }, throwOnFailedPublish: true, relayRpcId: o, clientRpcId: a });
      }), P(this, "disconnect", async (s) => {
        this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(s);
        const { topic: r } = s;
        if (this.client.session.keys.includes(r)) await this.sendRequest({ topic: r, method: "wc_sessionDelete", params: we$2("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: r, emitEvent: false });
        else if (this.client.core.pairing.pairings.keys.includes(r)) await this.client.core.pairing.disconnect({ topic: r });
        else {
          const { message: i } = U$2("MISMATCHED_TOPIC", `Session or pairing topic not found: ${r}`);
          throw new Error(i);
        }
      }), P(this, "find", (s) => (this.isInitialized(), this.client.session.getAll().filter((r) => sb(r, s)))), P(this, "getPendingSessionRequests", () => this.client.pendingRequest.getAll()), P(this, "authenticate", async (s, r) => {
        var i;
        this.isInitialized(), this.isValidAuthenticate(s);
        const n = r && this.client.core.linkModeSupportedApps.includes(r) && ((i = this.client.metadata.redirect) == null ? void 0 : i.linkMode), o = n ? Ne$3.link_mode : Ne$3.relay;
        o === Ne$3.relay && await this.confirmOnlineStateOrThrow();
        const { chains: a, statement: c = "", uri: l, domain: u, nonce: d, type: h, exp: p, nbf: g, methods: f = [], expiry: w } = s, y = [...s.resources || []], { topic: b, uri: v } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"], transportType: o });
        this.client.logger.info({ message: "Generated new pairing", pairing: { topic: b, uri: v } });
        const C = await this.client.core.crypto.generateKeyPair(), S = Jn$1(C);
        if (await Promise.all([this.client.auth.authKeys.set(Xn$1, { responseTopic: S, publicKey: C }), this.client.auth.pairingTopics.set(S, { topic: S, pairingTopic: b })]), await this.client.core.relayer.subscribe(S, { transportType: o }), this.client.logger.info(`sending request to new pairing topic: ${b}`), f.length > 0) {
          const { namespace: k } = Dr(a[0]);
          let G = iw(k, "request", f);
          Gn$1(y) && (G = ow(G, y.pop())), y.push(G);
        }
        const A = w && w > Be$3.wc_sessionAuthenticate.req.ttl ? w : Be$3.wc_sessionAuthenticate.req.ttl, N = { authPayload: { type: h ?? "caip122", chains: a, statement: c, aud: l, domain: u, version: "1", nonce: d, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: p, nbf: g, resources: y }, requester: { publicKey: C, metadata: this.client.metadata }, expiryTimestamp: De$3(A) }, R = { eip155: { chains: a, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...f])], events: ["chainChanged", "accountsChanged"] } }, E = { requiredNamespaces: {}, optionalNamespaces: R, relays: [{ protocol: "irn" }], pairingTopic: b, proposer: { publicKey: C, metadata: this.client.metadata }, expiryTimestamp: De$3(Be$3.wc_sessionPropose.req.ttl), id: Pt$4() }, { done: $, resolve: I, reject: L } = Bs(A, "Request expired"), H = Pt$4(), _ = pe$2("session_connect", E.id), x = pe$2("session_request", H), O = async ({ error: k, session: G }) => {
          this.events.off(x, B), k ? L(k) : G && I({ session: G });
        }, B = async (k) => {
          var G, Q, se;
          if (await this.deletePendingAuthRequest(H, { message: "fulfilled", code: 0 }), k.error) {
            const Re = we$2("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
            return k.error.code === Re.code ? void 0 : (this.events.off(_, O), L(k.error.message));
          }
          await this.deleteProposal(E.id), this.events.off(_, O);
          const { cacaos: Ce, responder: he } = k.result, Te = [], Le = [];
          for (const Re of Ce) {
            await tl({ cacao: Re, projectId: this.client.core.projectId }) || (this.client.logger.error(Re, "Signature verification failed"), L(we$2("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
            const { p: $s } = Re, Qt = Gn$1($s.resources), qt = [ya($s.iss)], es = oo$1($s.iss);
            if (Qt) {
              const ts = sl(Qt), _n = rl(Qt);
              Te.push(...ts), qt.push(..._n);
            }
            for (const ts of qt) Le.push(`${ts}:${es}`);
          }
          const Xe = await this.client.core.crypto.generateSharedKey(C, he.publicKey);
          let $e;
          Te.length > 0 && ($e = { topic: Xe, acknowledged: true, self: { publicKey: C, metadata: this.client.metadata }, peer: he, controller: he.publicKey, expiry: De$3(mr), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: b, namespaces: Pl([...new Set(Te)], [...new Set(Le)]), transportType: o }, await this.client.core.relayer.subscribe(Xe, { transportType: o }), await this.client.session.set(Xe, $e), b && await this.client.core.pairing.updateMetadata({ topic: b, metadata: he.metadata }), $e = this.client.session.get(Xe)), (G = this.client.metadata.redirect) != null && G.linkMode && (Q = he.metadata.redirect) != null && Q.linkMode && (se = he.metadata.redirect) != null && se.universal && r && (this.client.core.addLinkModeSupportedApp(he.metadata.redirect.universal), this.client.session.update(Xe, { transportType: Ne$3.link_mode })), I({ auths: Ce, session: $e });
        };
        this.events.once(_, O), this.events.once(x, B);
        let j;
        try {
          if (n) {
            const k = fr$1("wc_sessionAuthenticate", N, H);
            this.client.core.history.set(b, k);
            const G = await this.client.core.crypto.encode("", k, { type: Cn$1, encoding: Es });
            j = Mn$1(r, b, G);
          } else await Promise.all([this.sendRequest({ topic: b, method: "wc_sessionAuthenticate", params: N, expiry: s.expiry, throwOnFailedPublish: !0, clientRpcId: H }), this.sendRequest({ topic: b, method: "wc_sessionPropose", params: E, expiry: Be$3.wc_sessionPropose.req.ttl, throwOnFailedPublish: !0, clientRpcId: E.id })]);
        } catch (k) {
          throw this.events.off(_, O), this.events.off(x, B), k;
        }
        return await this.setProposal(E.id, E), await this.setAuthRequest(H, { request: tt$2(ve$2({}, N), { verifyContext: {} }), pairingTopic: b, transportType: o }), { uri: j ?? v, response: $ };
      }), P(this, "approveSessionAuthenticate", async (s) => {
        const { id: r, auths: i } = s, n = this.client.core.eventClient.createEvent({ properties: { topic: r.toString(), trace: [Ds.authenticated_session_approve_started] } });
        try {
          this.isInitialized();
        } catch (w) {
          throw n.setError(gi$1.no_internet_connection), w;
        }
        const o = this.getPendingAuthRequest(r);
        if (!o) throw n.setError(gi$1.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${r}`);
        const a = o.transportType || Ne$3.relay;
        a === Ne$3.relay && await this.confirmOnlineStateOrThrow();
        const c = o.requester.publicKey, l = await this.client.core.crypto.generateKeyPair(), u = Jn$1(c), d = { type: ds, receiverPublicKey: c, senderPublicKey: l }, h = [], p = [];
        for (const w of i) {
          if (!await tl({ cacao: w, projectId: this.client.core.projectId })) {
            n.setError(gi$1.invalid_cacao);
            const S = we$2("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
            throw await this.sendError({ id: r, topic: u, error: S, encodeOpts: d }), new Error(S.message);
          }
          n.addTrace(Ds.cacaos_verified);
          const { p: y } = w, b = Gn$1(y.resources), v = [ya(y.iss)], C = oo$1(y.iss);
          if (b) {
            const S = sl(b), A = rl(b);
            h.push(...S), v.push(...A);
          }
          for (const S of v) p.push(`${S}:${C}`);
        }
        const g = await this.client.core.crypto.generateSharedKey(l, c);
        n.addTrace(Ds.create_authenticated_session_topic);
        let f;
        if ((h == null ? void 0 : h.length) > 0) {
          f = { topic: g, acknowledged: true, self: { publicKey: l, metadata: this.client.metadata }, peer: { publicKey: c, metadata: o.requester.metadata }, controller: c, expiry: De$3(mr), authentication: i, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: o.pairingTopic, namespaces: Pl([...new Set(h)], [...new Set(p)]), transportType: a }, n.addTrace(Ds.subscribing_authenticated_session_topic);
          try {
            await this.client.core.relayer.subscribe(g, { transportType: a });
          } catch (w) {
            throw n.setError(gi$1.subscribe_authenticated_session_topic_failure), w;
          }
          n.addTrace(Ds.subscribe_authenticated_session_topic_success), await this.client.session.set(g, f), n.addTrace(Ds.store_authenticated_session), await this.client.core.pairing.updateMetadata({ topic: o.pairingTopic, metadata: o.requester.metadata });
        }
        n.addTrace(Ds.publishing_authenticated_session_approve);
        try {
          await this.sendResult({ topic: u, id: r, result: { cacaos: i, responder: { publicKey: l, metadata: this.client.metadata } }, encodeOpts: d, throwOnFailedPublish: !0, appLink: this.getAppLinkIfEnabled(o.requester.metadata, a) });
        } catch (w) {
          throw n.setError(gi$1.authenticated_session_approve_publish_failure), w;
        }
        return await this.client.auth.requests.delete(r, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: o.pairingTopic }), this.client.core.eventClient.deleteEvent({ eventId: n.eventId }), { session: f };
      }), P(this, "rejectSessionAuthenticate", async (s) => {
        this.isInitialized();
        const { id: r, reason: i } = s, n = this.getPendingAuthRequest(r);
        if (!n) throw new Error(`Could not find pending auth request with id ${r}`);
        n.transportType === Ne$3.relay && await this.confirmOnlineStateOrThrow();
        const o = n.requester.publicKey, a = await this.client.core.crypto.generateKeyPair(), c = Jn$1(o), l = { type: ds, receiverPublicKey: o, senderPublicKey: a };
        await this.sendError({ id: r, topic: c, error: i, encodeOpts: l, rpcOpts: Be$3.wc_sessionAuthenticate.reject, appLink: this.getAppLinkIfEnabled(n.requester.metadata, n.transportType) }), await this.client.auth.requests.delete(r, { message: "rejected", code: 0 }), await this.client.proposal.delete(r, we$2("USER_DISCONNECTED"));
      }), P(this, "formatAuthMessage", (s) => {
        this.isInitialized();
        const { request: r, iss: i } = s;
        return Ad(r, i);
      }), P(this, "processRelayMessageCache", () => {
        setTimeout(async () => {
          if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
            const s = this.relayMessageCache.shift();
            s && await this.onRelayMessage(s);
          } catch (s) {
            this.client.logger.error(s);
          }
        }, 50);
      }), P(this, "cleanupDuplicatePairings", async (s) => {
        if (s.pairingTopic) try {
          const r = this.client.core.pairing.pairings.get(s.pairingTopic), i = this.client.core.pairing.pairings.getAll().filter((n) => {
            var o, a;
            return ((o = n.peerMetadata) == null ? void 0 : o.url) && ((a = n.peerMetadata) == null ? void 0 : a.url) === s.peer.metadata.url && n.topic && n.topic !== r.topic;
          });
          if (i.length === 0) return;
          this.client.logger.info(`Cleaning up ${i.length} duplicate pairing(s)`), await Promise.all(i.map((n) => this.client.core.pairing.disconnect({ topic: n.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
        } catch (r) {
          this.client.logger.error(r);
        }
      }), P(this, "deleteSession", async (s) => {
        var r;
        const { topic: i, expirerHasDeleted: n = false, emitEvent: o = true, id: a = 0 } = s, { self: c } = this.client.session.get(i);
        await this.client.core.relayer.unsubscribe(i), await this.client.session.delete(i, we$2("USER_DISCONNECTED")), this.addToRecentlyDeleted(i, "session"), this.client.core.crypto.keychain.has(c.publicKey) && await this.client.core.crypto.deleteKeyPair(c.publicKey), this.client.core.crypto.keychain.has(i) && await this.client.core.crypto.deleteSymKey(i), n || this.client.core.expirer.del(i), this.client.core.storage.removeItem(iu).catch((l) => this.client.logger.warn(l)), this.getPendingSessionRequests().forEach((l) => {
          l.topic === i && this.deletePendingSessionRequest(l.id, we$2("USER_DISCONNECTED"));
        }), i === ((r = this.sessionRequestQueue.queue[0]) == null ? void 0 : r.topic) && (this.sessionRequestQueue.state = Ht$2.idle), o && this.client.events.emit("session_delete", { id: a, topic: i });
      }), P(this, "deleteProposal", async (s, r) => {
        if (r) try {
          const i = this.client.proposal.get(s), n = this.client.core.eventClient.getEvent({ topic: i.pairingTopic });
          n == null || n.setError(Us.proposal_expired);
        } catch {
        }
        await Promise.all([this.client.proposal.delete(s, we$2("USER_DISCONNECTED")), r ? Promise.resolve() : this.client.core.expirer.del(s)]), this.addToRecentlyDeleted(s, "proposal");
      }), P(this, "deletePendingSessionRequest", async (s, r, i = false) => {
        await Promise.all([this.client.pendingRequest.delete(s, r), i ? Promise.resolve() : this.client.core.expirer.del(s)]), this.addToRecentlyDeleted(s, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((n) => n.id !== s), i && (this.sessionRequestQueue.state = Ht$2.idle, this.client.events.emit("session_request_expire", { id: s }));
      }), P(this, "deletePendingAuthRequest", async (s, r, i = false) => {
        await Promise.all([this.client.auth.requests.delete(s, r), i ? Promise.resolve() : this.client.core.expirer.del(s)]);
      }), P(this, "setExpiry", async (s, r) => {
        this.client.session.keys.includes(s) && (this.client.core.expirer.set(s, r), await this.client.session.update(s, { expiry: r }));
      }), P(this, "setProposal", async (s, r) => {
        this.client.core.expirer.set(s, De$3(Be$3.wc_sessionPropose.req.ttl)), await this.client.proposal.set(s, r);
      }), P(this, "setAuthRequest", async (s, r) => {
        const { request: i, pairingTopic: n, transportType: o = Ne$3.relay } = r;
        this.client.core.expirer.set(s, i.expiryTimestamp), await this.client.auth.requests.set(s, { authPayload: i.authPayload, requester: i.requester, expiryTimestamp: i.expiryTimestamp, id: s, pairingTopic: n, verifyContext: i.verifyContext, transportType: o });
      }), P(this, "setPendingSessionRequest", async (s) => {
        const { id: r, topic: i, params: n, verifyContext: o } = s, a = n.request.expiryTimestamp || De$3(Be$3.wc_sessionRequest.req.ttl);
        this.client.core.expirer.set(r, a), await this.client.pendingRequest.set(r, { id: r, topic: i, params: n, verifyContext: o });
      }), P(this, "sendRequest", async (s) => {
        const { topic: r, method: i, params: n, expiry: o, relayRpcId: a, clientRpcId: c, throwOnFailedPublish: l, appLink: u, tvf: d } = s, h = fr$1(i, n, c);
        let p;
        const g = !!u;
        try {
          const y = g ? Es : Ft$2;
          p = await this.client.core.crypto.encode(r, h, { encoding: y });
        } catch (y) {
          throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${r} failed`), y;
        }
        let f;
        if (y1.includes(i)) {
          const y = Jt$1(JSON.stringify(h)), b = Jt$1(p);
          f = await this.client.core.verify.register({ id: b, decryptedId: y });
        }
        const w = Be$3[i].req;
        if (w.attestation = f, o && (w.ttl = o), a && (w.id = a), this.client.core.history.set(r, h), g) {
          const y = Mn$1(u, r, p);
          await global.Linking.openURL(y, this.client.name);
        } else {
          const y = Be$3[i].req;
          o && (y.ttl = o), a && (y.id = a), y.tvf = tt$2(ve$2({}, d), { correlationId: h.id }), l ? (y.internal = tt$2(ve$2({}, y.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(r, p, y)) : this.client.core.relayer.publish(r, p, y).catch((b) => this.client.logger.error(b));
        }
        return h.id;
      }), P(this, "sendResult", async (s) => {
        const { id: r, topic: i, result: n, throwOnFailedPublish: o, encodeOpts: a, appLink: c } = s, l = Un$2(r, n);
        let u;
        const d = c && typeof (global == null ? void 0 : global.Linking) < "u";
        try {
          const g = d ? Es : Ft$2;
          u = await this.client.core.crypto.encode(i, l, tt$2(ve$2({}, a || {}), { encoding: g }));
        } catch (g) {
          throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${i} failed`), g;
        }
        let h, p;
        try {
          h = await this.client.core.history.get(i, r);
          const g = h.request;
          try {
            this.shouldSetTVF(g.method, g.params) && (p = this.getTVFParams(r, g.params, n));
          } catch (f) {
            this.client.logger.warn("sendResult() -> getTVFParams() failed", f);
          }
        } catch (g) {
          throw this.client.logger.error(`sendResult() -> history.get(${i}, ${r}) failed`), g;
        }
        if (d) {
          const g = Mn$1(c, i, u);
          await global.Linking.openURL(g, this.client.name);
        } else {
          const g = h.request.method, f = Be$3[g].res;
          f.tvf = tt$2(ve$2({}, p), { correlationId: r }), o ? (f.internal = tt$2(ve$2({}, f.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(i, u, f)) : this.client.core.relayer.publish(i, u, f).catch((w) => this.client.logger.error(w));
        }
        await this.client.core.history.resolve(l);
      }), P(this, "sendError", async (s) => {
        const { id: r, topic: i, error: n, encodeOpts: o, rpcOpts: a, appLink: c } = s, l = kn$2(r, n);
        let u;
        const d = c && typeof (global == null ? void 0 : global.Linking) < "u";
        try {
          const p = d ? Es : Ft$2;
          u = await this.client.core.crypto.encode(i, l, tt$2(ve$2({}, o || {}), { encoding: p }));
        } catch (p) {
          throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${i} failed`), p;
        }
        let h;
        try {
          h = await this.client.core.history.get(i, r);
        } catch (p) {
          throw this.client.logger.error(`sendError() -> history.get(${i}, ${r}) failed`), p;
        }
        if (d) {
          const p = Mn$1(c, i, u);
          await global.Linking.openURL(p, this.client.name);
        } else {
          const p = h.request.method, g = a || Be$3[p].res;
          this.client.core.relayer.publish(i, u, g);
        }
        await this.client.core.history.resolve(l);
      }), P(this, "cleanup", async () => {
        const s = [], r = [];
        this.client.session.getAll().forEach((i) => {
          let n = false;
          vs(i.expiry) && (n = true), this.client.core.crypto.keychain.has(i.topic) || (n = true), n && s.push(i.topic);
        }), this.client.proposal.getAll().forEach((i) => {
          vs(i.expiryTimestamp) && r.push(i.id);
        }), await Promise.all([...s.map((i) => this.deleteSession({ topic: i })), ...r.map((i) => this.deleteProposal(i))]);
      }), P(this, "onProviderMessageEvent", async (s) => {
        !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(s) : await this.onRelayMessage(s);
      }), P(this, "onRelayEventRequest", async (s) => {
        this.requestQueue.queue.push(s), await this.processRequestsQueue();
      }), P(this, "processRequestsQueue", async () => {
        if (this.requestQueue.state === Ht$2.active) {
          this.client.logger.info("Request queue already active, skipping...");
          return;
        }
        for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
          this.requestQueue.state = Ht$2.active;
          const s = this.requestQueue.queue.shift();
          if (s) try {
            await this.processRequest(s);
          } catch (r) {
            this.client.logger.warn(r);
          }
        }
        this.requestQueue.state = Ht$2.idle;
      }), P(this, "processRequest", async (s) => {
        const { topic: r, payload: i, attestation: n, transportType: o, encryptedId: a } = s, c = i.method;
        if (!this.shouldIgnorePairingRequest({ topic: r, requestMethod: c })) switch (c) {
          case "wc_sessionPropose":
            return await this.onSessionProposeRequest({ topic: r, payload: i, attestation: n, encryptedId: a });
          case "wc_sessionSettle":
            return await this.onSessionSettleRequest(r, i);
          case "wc_sessionUpdate":
            return await this.onSessionUpdateRequest(r, i);
          case "wc_sessionExtend":
            return await this.onSessionExtendRequest(r, i);
          case "wc_sessionPing":
            return await this.onSessionPingRequest(r, i);
          case "wc_sessionDelete":
            return await this.onSessionDeleteRequest(r, i);
          case "wc_sessionRequest":
            return await this.onSessionRequest({ topic: r, payload: i, attestation: n, encryptedId: a, transportType: o });
          case "wc_sessionEvent":
            return await this.onSessionEventRequest(r, i);
          case "wc_sessionAuthenticate":
            return await this.onSessionAuthenticateRequest({ topic: r, payload: i, attestation: n, encryptedId: a, transportType: o });
          default:
            return this.client.logger.info(`Unsupported request method ${c}`);
        }
      }), P(this, "onRelayEventResponse", async (s) => {
        const { topic: r, payload: i, transportType: n } = s, o = (await this.client.core.history.get(r, i.id)).request.method;
        switch (o) {
          case "wc_sessionPropose":
            return this.onSessionProposeResponse(r, i, n);
          case "wc_sessionSettle":
            return this.onSessionSettleResponse(r, i);
          case "wc_sessionUpdate":
            return this.onSessionUpdateResponse(r, i);
          case "wc_sessionExtend":
            return this.onSessionExtendResponse(r, i);
          case "wc_sessionPing":
            return this.onSessionPingResponse(r, i);
          case "wc_sessionRequest":
            return this.onSessionRequestResponse(r, i);
          case "wc_sessionAuthenticate":
            return this.onSessionAuthenticateResponse(r, i);
          default:
            return this.client.logger.info(`Unsupported response method ${o}`);
        }
      }), P(this, "onRelayEventUnknownPayload", (s) => {
        const { topic: r } = s, { message: i } = U$2("MISSING_OR_INVALID", `Decoded payload on topic ${r} is not identifiable as a JSON-RPC request or a response.`);
        throw new Error(i);
      }), P(this, "shouldIgnorePairingRequest", (s) => {
        const { topic: r, requestMethod: i } = s, n = this.expectedPairingMethodMap.get(r);
        return !n || n.includes(i) ? false : !!(n.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
      }), P(this, "onSessionProposeRequest", async (s) => {
        const { topic: r, payload: i, attestation: n, encryptedId: o } = s, { params: a, id: c } = i;
        try {
          const l = this.client.core.eventClient.getEvent({ topic: r });
          this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), l == null || l.setError(as.proposal_listener_not_found)), this.isValidConnect(ve$2({}, i.params));
          const u = a.expiryTimestamp || De$3(Be$3.wc_sessionPropose.req.ttl), d = ve$2({ id: c, pairingTopic: r, expiryTimestamp: u }, a);
          await this.setProposal(c, d);
          const h = await this.getVerifyContext({ attestationId: n, hash: Jt$1(JSON.stringify(i)), encryptedId: o, metadata: d.proposer.metadata });
          l == null || l.addTrace(Kt$2.emit_session_proposal), this.client.events.emit("session_proposal", { id: c, params: d, verifyContext: h });
        } catch (l) {
          await this.sendError({ id: c, topic: r, error: l, rpcOpts: Be$3.wc_sessionPropose.autoReject }), this.client.logger.error(l);
        }
      }), P(this, "onSessionProposeResponse", async (s, r, i) => {
        const { id: n } = r;
        if (Ct$3(r)) {
          const { result: o } = r;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: o });
          const a = this.client.proposal.get(n);
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: a });
          const c = a.proposer.publicKey;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: c });
          const l = o.responderPublicKey;
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: l });
          const u = await this.client.core.crypto.generateSharedKey(c, l);
          this.pendingSessions.set(n, { sessionTopic: u, pairingTopic: s, proposalId: n, publicKey: c });
          const d = await this.client.core.relayer.subscribe(u, { transportType: i });
          this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: d }), await this.client.core.pairing.activate({ topic: s });
        } else if (ct$3(r)) {
          await this.client.proposal.delete(n, we$2("USER_DISCONNECTED"));
          const o = pe$2("session_connect", n);
          if (this.events.listenerCount(o) === 0) throw new Error(`emitting ${o} without any listeners, 954`);
          this.events.emit(o, { error: r.error });
        }
      }), P(this, "onSessionSettleRequest", async (s, r) => {
        const { id: i, params: n } = r;
        try {
          this.isValidSessionSettleRequest(n);
          const { relay: o, controller: a, expiry: c, namespaces: l, sessionProperties: u, scopedProperties: d, sessionConfig: h } = r.params, p = [...this.pendingSessions.values()].find((w) => w.sessionTopic === s);
          if (!p) return this.client.logger.error(`Pending session not found for topic ${s}`);
          const g = this.client.proposal.get(p.proposalId), f = tt$2(ve$2(ve$2(ve$2({ topic: s, relay: o, expiry: c, namespaces: l, acknowledged: !0, pairingTopic: p.pairingTopic, requiredNamespaces: g.requiredNamespaces, optionalNamespaces: g.optionalNamespaces, controller: a.publicKey, self: { publicKey: p.publicKey, metadata: this.client.metadata }, peer: { publicKey: a.publicKey, metadata: a.metadata } }, u && { sessionProperties: u }), d && { scopedProperties: d }), h && { sessionConfig: h }), { transportType: Ne$3.relay });
          await this.client.session.set(f.topic, f), await this.setExpiry(f.topic, f.expiry), await this.client.core.pairing.updateMetadata({ topic: p.pairingTopic, metadata: f.peer.metadata }), this.client.events.emit("session_connect", { session: f }), this.events.emit(pe$2("session_connect", p.proposalId), { session: f }), this.pendingSessions.delete(p.proposalId), this.deleteProposal(p.proposalId, !1), this.cleanupDuplicatePairings(f), await this.sendResult({ id: r.id, topic: s, result: !0, throwOnFailedPublish: !0 });
        } catch (o) {
          await this.sendError({ id: i, topic: s, error: o }), this.client.logger.error(o);
        }
      }), P(this, "onSessionSettleResponse", async (s, r) => {
        const { id: i } = r;
        Ct$3(r) ? (await this.client.session.update(s, { acknowledged: true }), this.events.emit(pe$2("session_approve", i), {})) : ct$3(r) && (await this.client.session.delete(s, we$2("USER_DISCONNECTED")), this.events.emit(pe$2("session_approve", i), { error: r.error }));
      }), P(this, "onSessionUpdateRequest", async (s, r) => {
        const { params: i, id: n } = r;
        try {
          const o = `${s}_session_update`, a = pi$1.get(o);
          if (a && this.isRequestOutOfSync(a, n)) {
            this.client.logger.warn(`Discarding out of sync request - ${n}`), this.sendError({ id: n, topic: s, error: we$2("INVALID_UPDATE_REQUEST") });
            return;
          }
          this.isValidUpdate(ve$2({ topic: s }, i));
          try {
            pi$1.set(o, n), await this.client.session.update(s, { namespaces: i.namespaces }), await this.sendResult({ id: n, topic: s, result: !0, throwOnFailedPublish: !0 });
          } catch (c) {
            throw pi$1.delete(o), c;
          }
          this.client.events.emit("session_update", { id: n, topic: s, params: i });
        } catch (o) {
          await this.sendError({ id: n, topic: s, error: o }), this.client.logger.error(o);
        }
      }), P(this, "isRequestOutOfSync", (s, r) => r.toString().slice(0, -3) < s.toString().slice(0, -3)), P(this, "onSessionUpdateResponse", (s, r) => {
        const { id: i } = r, n = pe$2("session_update", i);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(r) ? this.events.emit(pe$2("session_update", i), {}) : ct$3(r) && this.events.emit(pe$2("session_update", i), { error: r.error });
      }), P(this, "onSessionExtendRequest", async (s, r) => {
        const { id: i } = r;
        try {
          this.isValidExtend({ topic: s }), await this.setExpiry(s, De$3(mr)), await this.sendResult({ id: i, topic: s, result: !0, throwOnFailedPublish: !0 }), this.client.events.emit("session_extend", { id: i, topic: s });
        } catch (n) {
          await this.sendError({ id: i, topic: s, error: n }), this.client.logger.error(n);
        }
      }), P(this, "onSessionExtendResponse", (s, r) => {
        const { id: i } = r, n = pe$2("session_extend", i);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(r) ? this.events.emit(pe$2("session_extend", i), {}) : ct$3(r) && this.events.emit(pe$2("session_extend", i), { error: r.error });
      }), P(this, "onSessionPingRequest", async (s, r) => {
        const { id: i } = r;
        try {
          this.isValidPing({ topic: s }), await this.sendResult({ id: i, topic: s, result: !0, throwOnFailedPublish: !0 }), this.client.events.emit("session_ping", { id: i, topic: s });
        } catch (n) {
          await this.sendError({ id: i, topic: s, error: n }), this.client.logger.error(n);
        }
      }), P(this, "onSessionPingResponse", (s, r) => {
        const { id: i } = r, n = pe$2("session_ping", i);
        setTimeout(() => {
          if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners 2176`);
          Ct$3(r) ? this.events.emit(pe$2("session_ping", i), {}) : ct$3(r) && this.events.emit(pe$2("session_ping", i), { error: r.error });
        }, 500);
      }), P(this, "onSessionDeleteRequest", async (s, r) => {
        const { id: i } = r;
        try {
          this.isValidDisconnect({ topic: s, reason: r.params }), Promise.all([new Promise((n) => {
            this.client.core.relayer.once(qe$2.publish, async () => {
              n(await this.deleteSession({ topic: s, id: i }));
            });
          }), this.sendResult({ id: i, topic: s, result: !0, throwOnFailedPublish: !0 }), this.cleanupPendingSentRequestsForTopic({ topic: s, error: we$2("USER_DISCONNECTED") })]).catch((n) => this.client.logger.error(n));
        } catch (n) {
          this.client.logger.error(n);
        }
      }), P(this, "onSessionRequest", async (s) => {
        var r, i, n;
        const { topic: o, payload: a, attestation: c, encryptedId: l, transportType: u } = s, { id: d, params: h } = a;
        try {
          await this.isValidRequest(ve$2({ topic: o }, h));
          const p = this.client.session.get(o), g = await this.getVerifyContext({ attestationId: c, hash: Jt$1(JSON.stringify(fr$1("wc_sessionRequest", h, d))), encryptedId: l, metadata: p.peer.metadata, transportType: u }), f = { id: d, topic: o, params: h, verifyContext: g };
          await this.setPendingSessionRequest(f), u === Ne$3.link_mode && (r = p.peer.metadata.redirect) != null && r.universal && this.client.core.addLinkModeSupportedApp((i = p.peer.metadata.redirect) == null ? void 0 : i.universal), (n = this.client.signConfig) != null && n.disableRequestQueue ? this.emitSessionRequest(f) : (this.addSessionRequestToSessionRequestQueue(f), this.processSessionRequestQueue());
        } catch (p) {
          await this.sendError({ id: d, topic: o, error: p }), this.client.logger.error(p);
        }
      }), P(this, "onSessionRequestResponse", (s, r) => {
        const { id: i } = r, n = pe$2("session_request", i);
        if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);
        Ct$3(r) ? this.events.emit(pe$2("session_request", i), { result: r.result }) : ct$3(r) && this.events.emit(pe$2("session_request", i), { error: r.error });
      }), P(this, "onSessionEventRequest", async (s, r) => {
        const { id: i, params: n } = r;
        try {
          const o = `${s}_session_event_${n.event.name}`, a = pi$1.get(o);
          if (a && this.isRequestOutOfSync(a, i)) {
            this.client.logger.info(`Discarding out of sync request - ${i}`);
            return;
          }
          this.isValidEmit(ve$2({ topic: s }, n)), this.client.events.emit("session_event", { id: i, topic: s, params: n }), pi$1.set(o, i);
        } catch (o) {
          await this.sendError({ id: i, topic: s, error: o }), this.client.logger.error(o);
        }
      }), P(this, "onSessionAuthenticateResponse", (s, r) => {
        const { id: i } = r;
        this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: s, payload: r }), Ct$3(r) ? this.events.emit(pe$2("session_request", i), { result: r.result }) : ct$3(r) && this.events.emit(pe$2("session_request", i), { error: r.error });
      }), P(this, "onSessionAuthenticateRequest", async (s) => {
        var r;
        const { topic: i, payload: n, attestation: o, encryptedId: a, transportType: c } = s;
        try {
          const { requester: l, authPayload: u, expiryTimestamp: d } = n.params, h = await this.getVerifyContext({ attestationId: o, hash: Jt$1(JSON.stringify(n)), encryptedId: a, metadata: l.metadata, transportType: c }), p = { requester: l, pairingTopic: i, id: n.id, authPayload: u, verifyContext: h, expiryTimestamp: d };
          await this.setAuthRequest(n.id, { request: p, pairingTopic: i, transportType: c }), c === Ne$3.link_mode && (r = l.metadata.redirect) != null && r.universal && this.client.core.addLinkModeSupportedApp(l.metadata.redirect.universal), this.client.events.emit("session_authenticate", { topic: i, params: n.params, id: n.id, verifyContext: h });
        } catch (l) {
          this.client.logger.error(l);
          const u = n.params.requester.publicKey, d = await this.client.core.crypto.generateKeyPair(), h = this.getAppLinkIfEnabled(n.params.requester.metadata, c), p = { type: ds, receiverPublicKey: u, senderPublicKey: d };
          await this.sendError({ id: n.id, topic: i, error: l, encodeOpts: p, rpcOpts: Be$3.wc_sessionAuthenticate.autoReject, appLink: h });
        }
      }), P(this, "addSessionRequestToSessionRequestQueue", (s) => {
        this.sessionRequestQueue.queue.push(s);
      }), P(this, "cleanupAfterResponse", (s) => {
        this.deletePendingSessionRequest(s.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
          this.sessionRequestQueue.state = Ht$2.idle, this.processSessionRequestQueue();
        }, L$3.toMiliseconds(this.requestQueueDelay));
      }), P(this, "cleanupPendingSentRequestsForTopic", ({ topic: s, error: r }) => {
        const i = this.client.core.history.pending;
        i.length > 0 && i.filter((n) => n.topic === s && n.request.method === "wc_sessionRequest").forEach((n) => {
          const o = n.request.id, a = pe$2("session_request", o);
          if (this.events.listenerCount(a) === 0) throw new Error(`emitting ${a} without any listeners`);
          this.events.emit(pe$2("session_request", n.request.id), { error: r });
        });
      }), P(this, "processSessionRequestQueue", () => {
        if (this.sessionRequestQueue.state === Ht$2.active) {
          this.client.logger.info("session request queue is already active.");
          return;
        }
        const s = this.sessionRequestQueue.queue[0];
        if (!s) {
          this.client.logger.info("session request queue is empty.");
          return;
        }
        try {
          this.sessionRequestQueue.state = Ht$2.active, this.emitSessionRequest(s);
        } catch (r) {
          this.client.logger.error(r);
        }
      }), P(this, "emitSessionRequest", (s) => {
        this.client.events.emit("session_request", s);
      }), P(this, "onPairingCreated", (s) => {
        if (s.methods && this.expectedPairingMethodMap.set(s.topic, s.methods), s.active) return;
        const r = this.client.proposal.getAll().find((i) => i.pairingTopic === s.topic);
        r && this.onSessionProposeRequest({ topic: s.topic, payload: fr$1("wc_sessionPropose", tt$2(ve$2({}, r), { requiredNamespaces: r.requiredNamespaces, optionalNamespaces: r.optionalNamespaces, relays: r.relays, proposer: r.proposer, sessionProperties: r.sessionProperties, scopedProperties: r.scopedProperties }), r.id) });
      }), P(this, "isValidConnect", async (s) => {
        if (!ut$3(s)) {
          const { message: l } = U$2("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(s)}`);
          throw new Error(l);
        }
        const { pairingTopic: r, requiredNamespaces: i, optionalNamespaces: n, sessionProperties: o, scopedProperties: a, relays: c } = s;
        if (Je$2(r) || await this.isValidPairingTopic(r), !fb(c)) {
          const { message: l } = U$2("MISSING_OR_INVALID", `connect() relays: ${c}`);
          throw new Error(l);
        }
        if (!Je$2(i) && Ps(i) !== 0) {
          const l = "requiredNamespaces are deprecated and are automatically assigned to optionalNamespaces";
          ["fatal", "error", "silent"].includes(this.client.logger.level) ? console.warn(l) : this.client.logger.warn(l), this.validateNamespaces(i, "requiredNamespaces");
        }
        if (!Je$2(n) && Ps(n) !== 0 && this.validateNamespaces(n, "optionalNamespaces"), Je$2(o) || this.validateSessionProps(o, "sessionProperties"), !Je$2(a)) {
          this.validateSessionProps(a, "scopedProperties");
          const l = Object.keys(i || {}).concat(Object.keys(n || {}));
          if (!Object.keys(a).every((u) => l.includes(u))) throw new Error(`Scoped properties must be a subset of required/optional namespaces, received: ${JSON.stringify(a)}, required/optional namespaces: ${JSON.stringify(l)}`);
        }
      }), P(this, "validateNamespaces", (s, r) => {
        const i = pb(s, "connect()", r);
        if (i) throw new Error(i.message);
      }), P(this, "isValidApprove", async (s) => {
        if (!ut$3(s)) throw new Error(U$2("MISSING_OR_INVALID", `approve() params: ${s}`).message);
        const { id: r, namespaces: i, relayProtocol: n, sessionProperties: o, scopedProperties: a } = s;
        this.checkRecentlyDeleted(r), await this.isValidProposalId(r);
        const c = this.client.proposal.get(r), l = zo(i, "approve()");
        if (l) throw new Error(l.message);
        const u = xl(c.requiredNamespaces, i, "approve()");
        if (u) throw new Error(u.message);
        if (!ke$1(n, true)) {
          const { message: d } = U$2("MISSING_OR_INVALID", `approve() relayProtocol: ${n}`);
          throw new Error(d);
        }
        if (Je$2(o) || this.validateSessionProps(o, "sessionProperties"), !Je$2(a)) {
          this.validateSessionProps(a, "scopedProperties");
          const d = new Set(Object.keys(i));
          if (!Object.keys(a).every((h) => d.has(h))) throw new Error(`Scoped properties must be a subset of approved namespaces, received: ${JSON.stringify(a)}, approved namespaces: ${Array.from(d).join(", ")}`);
        }
      }), P(this, "isValidReject", async (s) => {
        if (!ut$3(s)) {
          const { message: n } = U$2("MISSING_OR_INVALID", `reject() params: ${s}`);
          throw new Error(n);
        }
        const { id: r, reason: i } = s;
        if (this.checkRecentlyDeleted(r), await this.isValidProposalId(r), !mb(i)) {
          const { message: n } = U$2("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(i)}`);
          throw new Error(n);
        }
      }), P(this, "isValidSessionSettleRequest", (s) => {
        if (!ut$3(s)) {
          const { message: l } = U$2("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${s}`);
          throw new Error(l);
        }
        const { relay: r, controller: i, namespaces: n, expiry: o } = s;
        if (!Yd(r)) {
          const { message: l } = U$2("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
          throw new Error(l);
        }
        const a = ab(i, "onSessionSettleRequest()");
        if (a) throw new Error(a.message);
        const c = zo(n, "onSessionSettleRequest()");
        if (c) throw new Error(c.message);
        if (vs(o)) {
          const { message: l } = U$2("EXPIRED", "onSessionSettleRequest()");
          throw new Error(l);
        }
      }), P(this, "isValidUpdate", async (s) => {
        if (!ut$3(s)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `update() params: ${s}`);
          throw new Error(c);
        }
        const { topic: r, namespaces: i } = s;
        this.checkRecentlyDeleted(r), await this.isValidSessionTopic(r);
        const n = this.client.session.get(r), o = zo(i, "update()");
        if (o) throw new Error(o.message);
        const a = xl(n.requiredNamespaces, i, "update()");
        if (a) throw new Error(a.message);
      }), P(this, "isValidExtend", async (s) => {
        if (!ut$3(s)) {
          const { message: i } = U$2("MISSING_OR_INVALID", `extend() params: ${s}`);
          throw new Error(i);
        }
        const { topic: r } = s;
        this.checkRecentlyDeleted(r), await this.isValidSessionTopic(r);
      }), P(this, "isValidRequest", async (s) => {
        if (!ut$3(s)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `request() params: ${s}`);
          throw new Error(c);
        }
        const { topic: r, request: i, chainId: n, expiry: o } = s;
        this.checkRecentlyDeleted(r), await this.isValidSessionTopic(r);
        const { namespaces: a } = this.client.session.get(r);
        if (!Tl(a, n)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `request() chainId: ${n}`);
          throw new Error(c);
        }
        if (!wb(i)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `request() ${JSON.stringify(i)}`);
          throw new Error(c);
        }
        if (!vb(a, n, i.method)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `request() method: ${i.method}`);
          throw new Error(c);
        }
        if (o && !Ab(o, Xo)) {
          const { message: c } = U$2("MISSING_OR_INVALID", `request() expiry: ${o}. Expiry must be a number (in seconds) between ${Xo.min} and ${Xo.max}`);
          throw new Error(c);
        }
      }), P(this, "isValidRespond", async (s) => {
        var r;
        if (!ut$3(s)) {
          const { message: o } = U$2("MISSING_OR_INVALID", `respond() params: ${s}`);
          throw new Error(o);
        }
        const { topic: i, response: n } = s;
        try {
          await this.isValidSessionTopic(i);
        } catch (o) {
          throw (r = s == null ? void 0 : s.response) != null && r.id && this.cleanupAfterResponse(s), o;
        }
        if (!yb(n)) {
          const { message: o } = U$2("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(n)}`);
          throw new Error(o);
        }
      }), P(this, "isValidPing", async (s) => {
        if (!ut$3(s)) {
          const { message: i } = U$2("MISSING_OR_INVALID", `ping() params: ${s}`);
          throw new Error(i);
        }
        const { topic: r } = s;
        await this.isValidSessionOrPairingTopic(r);
      }), P(this, "isValidEmit", async (s) => {
        if (!ut$3(s)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `emit() params: ${s}`);
          throw new Error(a);
        }
        const { topic: r, event: i, chainId: n } = s;
        await this.isValidSessionTopic(r);
        const { namespaces: o } = this.client.session.get(r);
        if (!Tl(o, n)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `emit() chainId: ${n}`);
          throw new Error(a);
        }
        if (!bb(i)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(i)}`);
          throw new Error(a);
        }
        if (!Eb(o, n, i.name)) {
          const { message: a } = U$2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(i)}`);
          throw new Error(a);
        }
      }), P(this, "isValidDisconnect", async (s) => {
        if (!ut$3(s)) {
          const { message: i } = U$2("MISSING_OR_INVALID", `disconnect() params: ${s}`);
          throw new Error(i);
        }
        const { topic: r } = s;
        await this.isValidSessionOrPairingTopic(r);
      }), P(this, "isValidAuthenticate", (s) => {
        const { chains: r, uri: i, domain: n, nonce: o } = s;
        if (!Array.isArray(r) || r.length === 0) throw new Error("chains is required and must be a non-empty array");
        if (!ke$1(i, false)) throw new Error("uri is required parameter");
        if (!ke$1(n, false)) throw new Error("domain is required parameter");
        if (!ke$1(o, false)) throw new Error("nonce is required parameter");
        if ([...new Set(r.map((c) => Dr(c).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
        const { namespace: a } = Dr(r[0]);
        if (a !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
      }), P(this, "getVerifyContext", async (s) => {
        const { attestationId: r, hash: i, encryptedId: n, metadata: o, transportType: a } = s, c = { verified: { verifyUrl: o.verifyUrl || ki$1, validation: "UNKNOWN", origin: o.url || "" } };
        try {
          if (a === Ne$3.link_mode) {
            const u = this.getAppLinkIfEnabled(o, a);
            return c.verified.validation = u && new URL(u).origin === new URL(o.url).origin ? "VALID" : "INVALID", c;
          }
          const l = await this.client.core.verify.resolve({ attestationId: r, hash: i, encryptedId: n, verifyUrl: o.verifyUrl });
          l && (c.verified.origin = l.origin, c.verified.isScam = l.isScam, c.verified.validation = l.origin === new URL(o.url).origin ? "VALID" : "INVALID");
        } catch (l) {
          this.client.logger.warn(l);
        }
        return this.client.logger.debug(`Verify context: ${JSON.stringify(c)}`), c;
      }), P(this, "validateSessionProps", (s, r) => {
        Object.values(s).forEach((i, n) => {
          if (i == null) {
            const { message: o } = U$2("MISSING_OR_INVALID", `${r} must contain an existing value for each key. Received: ${i} for key ${Object.keys(s)[n]}`);
            throw new Error(o);
          }
        });
      }), P(this, "getPendingAuthRequest", (s) => {
        const r = this.client.auth.requests.get(s);
        return typeof r == "object" ? r : void 0;
      }), P(this, "addToRecentlyDeleted", (s, r) => {
        if (this.recentlyDeletedMap.set(s, r), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
          let i = 0;
          const n = this.recentlyDeletedLimit / 2;
          for (const o of this.recentlyDeletedMap.keys()) {
            if (i++ >= n) break;
            this.recentlyDeletedMap.delete(o);
          }
        }
      }), P(this, "checkRecentlyDeleted", (s) => {
        const r = this.recentlyDeletedMap.get(s);
        if (r) {
          const { message: i } = U$2("MISSING_OR_INVALID", `Record was recently deleted - ${r}: ${s}`);
          throw new Error(i);
        }
      }), P(this, "isLinkModeEnabled", (s, r) => {
        var i, n, o, a, c, l, u, d, h;
        return !s || r !== Ne$3.link_mode ? false : ((n = (i = this.client.metadata) == null ? void 0 : i.redirect) == null ? void 0 : n.linkMode) === true && ((a = (o = this.client.metadata) == null ? void 0 : o.redirect) == null ? void 0 : a.universal) !== void 0 && ((l = (c = this.client.metadata) == null ? void 0 : c.redirect) == null ? void 0 : l.universal) !== "" && ((u = s == null ? void 0 : s.redirect) == null ? void 0 : u.universal) !== void 0 && ((d = s == null ? void 0 : s.redirect) == null ? void 0 : d.universal) !== "" && ((h = s == null ? void 0 : s.redirect) == null ? void 0 : h.linkMode) === true && this.client.core.linkModeSupportedApps.includes(s.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < "u";
      }), P(this, "getAppLinkIfEnabled", (s, r) => {
        var i;
        return this.isLinkModeEnabled(s, r) ? (i = s == null ? void 0 : s.redirect) == null ? void 0 : i.universal : void 0;
      }), P(this, "handleLinkModeMessage", ({ url: s }) => {
        if (!s || !s.includes("wc_ev") || !s.includes("topic")) return;
        const r = Kc(s, "topic") || "", i = decodeURIComponent(Kc(s, "wc_ev") || ""), n = this.client.session.keys.includes(r);
        n && this.client.session.update(r, { transportType: Ne$3.link_mode }), this.client.core.dispatchEnvelope({ topic: r, message: i, sessionExists: n });
      }), P(this, "registerLinkModeListeners", async () => {
        var s;
        if (Qa() || ks() && (s = this.client.metadata.redirect) != null && s.linkMode) {
          const r = global == null ? void 0 : global.Linking;
          if (typeof r < "u") {
            r.addEventListener("url", this.handleLinkModeMessage, this.client.name);
            const i = await r.getInitialURL();
            i && setTimeout(() => {
              this.handleLinkModeMessage({ url: i });
            }, 50);
          }
        }
      }), P(this, "shouldSetTVF", (s, r) => {
        if (!r || s !== "wc_sessionRequest") return false;
        const { request: i } = r;
        return Object.keys(ou).includes(i.method);
      }), P(this, "getTVFParams", (s, r, i) => {
        var n, o;
        try {
          const a = r.request.method, c = this.extractTxHashesFromResult(a, i);
          return tt$2(ve$2({ correlationId: s, rpcMethods: [a], chainId: r.chainId }, this.isValidContractData(r.request.params) && { contractAddresses: [(o = (n = r.request.params) == null ? void 0 : n[0]) == null ? void 0 : o.to] }), { txHashes: c });
        } catch (a) {
          this.client.logger.warn("Error getting TVF params", a);
        }
        return {};
      }), P(this, "isValidContractData", (s) => {
        var r;
        if (!s) return false;
        try {
          const i = (s == null ? void 0 : s.data) || ((r = s == null ? void 0 : s[0]) == null ? void 0 : r.data);
          if (!i.startsWith("0x")) return !1;
          const n = i.slice(2);
          return /^[0-9a-fA-F]*$/.test(n) ? n.length % 2 === 0 : !1;
        } catch {
        }
        return false;
      }), P(this, "extractTxHashesFromResult", (s, r) => {
        try {
          const i = ou[s];
          if (typeof r == "string") return [r];
          const n = r[i.key];
          if (Ss(n)) return s === "solana_signAllTransactions" ? n.map((o) => zm(o)) : n;
          if (typeof n == "string") return [n];
        } catch (i) {
          this.client.logger.warn("Error extracting tx hashes from result", i);
        }
        return [];
      });
    }
    async processPendingMessageEvents() {
      try {
        const e = this.client.session.keys, s = this.client.core.relayer.messages.getWithoutAck(e);
        for (const [r, i] of Object.entries(s)) for (const n of i) try {
          await this.onProviderMessageEvent({ topic: r, message: n, publishedAt: Date.now() });
        } catch {
          this.client.logger.warn(`Error processing pending message event for topic: ${r}, message: ${n}`);
        }
      } catch (e) {
        this.client.logger.warn("processPendingMessageEvents failed", e);
      }
    }
    isInitialized() {
      if (!this.initialized) {
        const { message: e } = U$2("NOT_INITIALIZED", this.name);
        throw new Error(e);
      }
    }
    async confirmOnlineStateOrThrow() {
      await this.client.core.relayer.confirmOnlineStateOrThrow();
    }
    registerRelayerEvents() {
      this.client.core.relayer.on(qe$2.message, (e) => {
        this.onProviderMessageEvent(e);
      });
    }
    async onRelayMessage(e) {
      const { topic: s, message: r, attestation: i, transportType: n } = e, { publicKey: o } = this.client.auth.authKeys.keys.includes(Xn$1) ? this.client.auth.authKeys.get(Xn$1) : { publicKey: void 0 };
      try {
        const a = await this.client.core.crypto.decode(s, r, { receiverPublicKey: o, encoding: n === Ne$3.link_mode ? Es : Ft$2 });
        cc$1(a) ? (this.client.core.history.set(s, a), await this.onRelayEventRequest({ topic: s, payload: a, attestation: i, transportType: n, encryptedId: Jt$1(r) })) : Ln$2(a) ? (await this.client.core.history.resolve(a), await this.onRelayEventResponse({ topic: s, payload: a, transportType: n }), this.client.core.history.delete(s, a.id)) : await this.onRelayEventUnknownPayload({ topic: s, payload: a, transportType: n }), await this.client.core.relayer.messages.ack(s, r);
      } catch (a) {
        this.client.logger.error(a);
      }
    }
    registerExpirerEvents() {
      this.client.core.expirer.on(Tt$2.expired, async (e) => {
        const { topic: s, id: r } = gd(e.target);
        if (r && this.client.pendingRequest.keys.includes(r)) return await this.deletePendingSessionRequest(r, U$2("EXPIRED"), true);
        if (r && this.client.auth.requests.keys.includes(r)) return await this.deletePendingAuthRequest(r, U$2("EXPIRED"), true);
        s ? this.client.session.keys.includes(s) && (await this.deleteSession({ topic: s, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: s })) : r && (await this.deleteProposal(r, true), this.client.events.emit("proposal_expire", { id: r }));
      });
    }
    registerPairingEvents() {
      this.client.core.pairing.events.on(qs.create, (e) => this.onPairingCreated(e)), this.client.core.pairing.events.on(qs.delete, (e) => {
        this.addToRecentlyDeleted(e.topic, "pairing");
      });
    }
    isValidPairingTopic(e) {
      if (!ke$1(e, false)) {
        const { message: s } = U$2("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
        throw new Error(s);
      }
      if (!this.client.core.pairing.pairings.keys.includes(e)) {
        const { message: s } = U$2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
        throw new Error(s);
      }
      if (vs(this.client.core.pairing.pairings.get(e).expiry)) {
        const { message: s } = U$2("EXPIRED", `pairing topic: ${e}`);
        throw new Error(s);
      }
    }
    async isValidSessionTopic(e) {
      if (!ke$1(e, false)) {
        const { message: s } = U$2("MISSING_OR_INVALID", `session topic should be a string: ${e}`);
        throw new Error(s);
      }
      if (this.checkRecentlyDeleted(e), !this.client.session.keys.includes(e)) {
        const { message: s } = U$2("NO_MATCHING_KEY", `session topic doesn't exist: ${e}`);
        throw new Error(s);
      }
      if (vs(this.client.session.get(e).expiry)) {
        await this.deleteSession({ topic: e });
        const { message: s } = U$2("EXPIRED", `session topic: ${e}`);
        throw new Error(s);
      }
      if (!this.client.core.crypto.keychain.has(e)) {
        const { message: s } = U$2("MISSING_OR_INVALID", `session topic does not exist in keychain: ${e}`);
        throw await this.deleteSession({ topic: e }), new Error(s);
      }
    }
    async isValidSessionOrPairingTopic(e) {
      if (this.checkRecentlyDeleted(e), this.client.session.keys.includes(e)) await this.isValidSessionTopic(e);
      else if (this.client.core.pairing.pairings.keys.includes(e)) this.isValidPairingTopic(e);
      else if (ke$1(e, false)) {
        const { message: s } = U$2("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${e}`);
        throw new Error(s);
      } else {
        const { message: s } = U$2("MISSING_OR_INVALID", `session or pairing topic should be a string: ${e}`);
        throw new Error(s);
      }
    }
    async isValidProposalId(e) {
      if (!gb(e)) {
        const { message: s } = U$2("MISSING_OR_INVALID", `proposal id should be a number: ${e}`);
        throw new Error(s);
      }
      if (!this.client.proposal.keys.includes(e)) {
        const { message: s } = U$2("NO_MATCHING_KEY", `proposal id doesn't exist: ${e}`);
        throw new Error(s);
      }
      if (vs(this.client.proposal.get(e).expiryTimestamp)) {
        await this.deleteProposal(e);
        const { message: s } = U$2("EXPIRED", `proposal id: ${e}`);
        throw new Error(s);
      }
    }
  }
  class T1 extends lr {
    constructor(e, s) {
      super(e, s, f1, ac), this.core = e, this.logger = s;
    }
  }
  let x1 = class extends lr {
    constructor(e, s) {
      super(e, s, g1, ac), this.core = e, this.logger = s;
    }
  };
  class k1 extends lr {
    constructor(e, s) {
      super(e, s, w1, ac, (r) => r.id), this.core = e, this.logger = s;
    }
  }
  class $1 extends lr {
    constructor(e, s) {
      super(e, s, E1, Io$1, () => Xn$1), this.core = e, this.logger = s;
    }
  }
  class R1 extends lr {
    constructor(e, s) {
      super(e, s, C1, Io$1), this.core = e, this.logger = s;
    }
  }
  class U1 extends lr {
    constructor(e, s) {
      super(e, s, I1, Io$1, (r) => r.id), this.core = e, this.logger = s;
    }
  }
  var D1 = Object.defineProperty, L1 = (t, e, s) => e in t ? D1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Zo = (t, e, s) => L1(t, typeof e != "symbol" ? e + "" : e, s);
  class M1 {
    constructor(e, s) {
      this.core = e, this.logger = s, Zo(this, "authKeys"), Zo(this, "pairingTopics"), Zo(this, "requests"), this.authKeys = new $1(this.core, this.logger), this.pairingTopics = new R1(this.core, this.logger), this.requests = new U1(this.core, this.logger);
    }
    async init() {
      await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
    }
  }
  var B1 = Object.defineProperty, F1 = (t, e, s) => e in t ? B1(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, ne$3 = (t, e, s) => F1(t, typeof e != "symbol" ? e + "" : e, s);
  let j1 = class mh extends sg {
    constructor(e) {
      super(e), ne$3(this, "protocol", ph), ne$3(this, "version", fh), ne$3(this, "name", Yo.name), ne$3(this, "metadata"), ne$3(this, "core"), ne$3(this, "logger"), ne$3(this, "events", new st$3.EventEmitter()), ne$3(this, "engine"), ne$3(this, "session"), ne$3(this, "proposal"), ne$3(this, "pendingRequest"), ne$3(this, "auth"), ne$3(this, "signConfig"), ne$3(this, "on", (r, i) => this.events.on(r, i)), ne$3(this, "once", (r, i) => this.events.once(r, i)), ne$3(this, "off", (r, i) => this.events.off(r, i)), ne$3(this, "removeListener", (r, i) => this.events.removeListener(r, i)), ne$3(this, "removeAllListeners", (r) => this.events.removeAllListeners(r)), ne$3(this, "connect", async (r) => {
        try {
          return await this.engine.connect(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "pair", async (r) => {
        try {
          return await this.engine.pair(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "approve", async (r) => {
        try {
          return await this.engine.approve(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "reject", async (r) => {
        try {
          return await this.engine.reject(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "update", async (r) => {
        try {
          return await this.engine.update(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "extend", async (r) => {
        try {
          return await this.engine.extend(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "request", async (r) => {
        try {
          return await this.engine.request(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "respond", async (r) => {
        try {
          return await this.engine.respond(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "ping", async (r) => {
        try {
          return await this.engine.ping(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "emit", async (r) => {
        try {
          return await this.engine.emit(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "disconnect", async (r) => {
        try {
          return await this.engine.disconnect(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "find", (r) => {
        try {
          return this.engine.find(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "getPendingSessionRequests", () => {
        try {
          return this.engine.getPendingSessionRequests();
        } catch (r) {
          throw this.logger.error(r.message), r;
        }
      }), ne$3(this, "authenticate", async (r, i) => {
        try {
          return await this.engine.authenticate(r, i);
        } catch (n) {
          throw this.logger.error(n.message), n;
        }
      }), ne$3(this, "formatAuthMessage", (r) => {
        try {
          return this.engine.formatAuthMessage(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "approveSessionAuthenticate", async (r) => {
        try {
          return await this.engine.approveSessionAuthenticate(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), ne$3(this, "rejectSessionAuthenticate", async (r) => {
        try {
          return await this.engine.rejectSessionAuthenticate(r);
        } catch (i) {
          throw this.logger.error(i.message), i;
        }
      }), this.name = (e == null ? void 0 : e.name) || Yo.name, this.metadata = rm(e == null ? void 0 : e.metadata), this.signConfig = e == null ? void 0 : e.signConfig;
      const s = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : _s$1(Nn$2({ level: (e == null ? void 0 : e.logger) || Yo.logger }));
      this.core = (e == null ? void 0 : e.core) || new p1(e), this.logger = Me$4(s, this.name), this.session = new x1(this.core, this.logger), this.proposal = new T1(this.core, this.logger), this.pendingRequest = new k1(this.core, this.logger), this.engine = new O1(this), this.auth = new M1(this.core, this.logger);
    }
    static async init(e) {
      const s = new mh(e);
      return await s.initialize(), s;
    }
    get context() {
      return Ze$4(this.logger);
    }
    get pairing() {
      return this.core.pairing.pairings;
    }
    async initialize() {
      this.logger.trace("Initialized");
      try {
        await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info("SignClient Initialization Success"), setTimeout(() => {
          this.engine.processRelayMessageCache();
        }, L$3.toMiliseconds(L$3.ONE_SECOND));
      } catch (e) {
        throw this.logger.info("SignClient Initialization Failure"), this.logger.error(e.message), e;
      }
    }
  };
  const cu = "error", q1 = "wss://relay.walletconnect.org", W1 = "wc", z1 = "universal_provider", Fn$1 = `${W1}@2:${z1}:`, wh = "https://rpc.walletconnect.org/v1/", Or = "generic", H1 = `${wh}bundler`, $t$2 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
  function K1() {
  }
  function cc(t) {
    return t == null || typeof t != "object" && typeof t != "function";
  }
  function lc(t) {
    return ArrayBuffer.isView(t) && !(t instanceof DataView);
  }
  function V1(t) {
    if (cc(t)) return t;
    if (Array.isArray(t) || lc(t) || t instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && t instanceof SharedArrayBuffer) return t.slice(0);
    const e = Object.getPrototypeOf(t), s = e.constructor;
    if (t instanceof Date || t instanceof Map || t instanceof Set) return new s(t);
    if (t instanceof RegExp) {
      const r = new s(t);
      return r.lastIndex = t.lastIndex, r;
    }
    if (t instanceof DataView) return new s(t.buffer.slice(0));
    if (t instanceof Error) {
      const r = new s(t.message);
      return r.stack = t.stack, r.name = t.name, r.cause = t.cause, r;
    }
    if (typeof File < "u" && t instanceof File) return new s([t], t.name, { type: t.type, lastModified: t.lastModified });
    if (typeof t == "object") {
      const r = Object.create(e);
      return Object.assign(r, t);
    }
    return t;
  }
  function lu(t) {
    return typeof t == "object" && t !== null;
  }
  function yh(t) {
    return Object.getOwnPropertySymbols(t).filter((e) => Object.prototype.propertyIsEnumerable.call(t, e));
  }
  function bh(t) {
    return t == null ? t === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(t);
  }
  const G1 = "[object RegExp]", vh = "[object String]", Eh = "[object Number]", Ch = "[object Boolean]", Ih = "[object Arguments]", J1 = "[object Symbol]", Y1 = "[object Date]", X1 = "[object Map]", Z1 = "[object Set]", Q1 = "[object Array]", eC = "[object ArrayBuffer]", tC = "[object Object]", sC = "[object DataView]", rC = "[object Uint8Array]", iC = "[object Uint8ClampedArray]", nC = "[object Uint16Array]", oC = "[object Uint32Array]", aC = "[object Int8Array]", cC = "[object Int16Array]", lC = "[object Int32Array]", uC = "[object Float32Array]", dC = "[object Float64Array]";
  function hC(t, e) {
    return Ur(t, void 0, t, /* @__PURE__ */ new Map(), e);
  }
  function Ur(t, e, s, r = /* @__PURE__ */ new Map(), i = void 0) {
    const n = i == null ? void 0 : i(t, e, s, r);
    if (n != null) return n;
    if (cc(t)) return t;
    if (r.has(t)) return r.get(t);
    if (Array.isArray(t)) {
      const o = new Array(t.length);
      r.set(t, o);
      for (let a = 0; a < t.length; a++) o[a] = Ur(t[a], a, s, r, i);
      return Object.hasOwn(t, "index") && (o.index = t.index), Object.hasOwn(t, "input") && (o.input = t.input), o;
    }
    if (t instanceof Date) return new Date(t.getTime());
    if (t instanceof RegExp) {
      const o = new RegExp(t.source, t.flags);
      return o.lastIndex = t.lastIndex, o;
    }
    if (t instanceof Map) {
      const o = /* @__PURE__ */ new Map();
      r.set(t, o);
      for (const [a, c] of t) o.set(a, Ur(c, a, s, r, i));
      return o;
    }
    if (t instanceof Set) {
      const o = /* @__PURE__ */ new Set();
      r.set(t, o);
      for (const a of t) o.add(Ur(a, void 0, s, r, i));
      return o;
    }
    if (typeof Buffer < "u" && Buffer.isBuffer(t)) return t.subarray();
    if (lc(t)) {
      const o = new (Object.getPrototypeOf(t)).constructor(t.length);
      r.set(t, o);
      for (let a = 0; a < t.length; a++) o[a] = Ur(t[a], a, s, r, i);
      return o;
    }
    if (t instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && t instanceof SharedArrayBuffer) return t.slice(0);
    if (t instanceof DataView) {
      const o = new DataView(t.buffer.slice(0), t.byteOffset, t.byteLength);
      return r.set(t, o), Ws(o, t, s, r, i), o;
    }
    if (typeof File < "u" && t instanceof File) {
      const o = new File([t], t.name, { type: t.type });
      return r.set(t, o), Ws(o, t, s, r, i), o;
    }
    if (t instanceof Blob) {
      const o = new Blob([t], { type: t.type });
      return r.set(t, o), Ws(o, t, s, r, i), o;
    }
    if (t instanceof Error) {
      const o = new t.constructor();
      return r.set(t, o), o.message = t.message, o.name = t.name, o.stack = t.stack, o.cause = t.cause, Ws(o, t, s, r, i), o;
    }
    if (typeof t == "object" && pC(t)) {
      const o = Object.create(Object.getPrototypeOf(t));
      return r.set(t, o), Ws(o, t, s, r, i), o;
    }
    return t;
  }
  function Ws(t, e, s = t, r, i) {
    const n = [...Object.keys(e), ...yh(e)];
    for (let o = 0; o < n.length; o++) {
      const a = n[o], c = Object.getOwnPropertyDescriptor(t, a);
      (c == null || c.writable) && (t[a] = Ur(e[a], a, s, r, i));
    }
  }
  function pC(t) {
    switch (bh(t)) {
      case Ih:
      case Q1:
      case eC:
      case sC:
      case Ch:
      case Y1:
      case uC:
      case dC:
      case aC:
      case cC:
      case lC:
      case X1:
      case Eh:
      case tC:
      case G1:
      case Z1:
      case vh:
      case J1:
      case rC:
      case iC:
      case nC:
      case oC:
        return true;
      default:
        return false;
    }
  }
  function fC(t, e) {
    return hC(t, (s, r, i, n) => {
      if (typeof t == "object") switch (Object.prototype.toString.call(t)) {
        case Eh:
        case vh:
        case Ch: {
          const o = new t.constructor(t == null ? void 0 : t.valueOf());
          return Ws(o, t), o;
        }
        case Ih: {
          const o = {};
          return Ws(o, t), o.length = t.length, o[Symbol.iterator] = t[Symbol.iterator], o;
        }
        default:
          return;
      }
    });
  }
  function uu(t) {
    return fC(t);
  }
  function du(t) {
    return t !== null && typeof t == "object" && bh(t) === "[object Arguments]";
  }
  function gC(t) {
    return lc(t);
  }
  function mC(t) {
    var s;
    if (typeof t != "object" || t == null) return false;
    if (Object.getPrototypeOf(t) === null) return true;
    if (Object.prototype.toString.call(t) !== "[object Object]") {
      const r = t[Symbol.toStringTag];
      return r == null || !((s = Object.getOwnPropertyDescriptor(t, Symbol.toStringTag)) != null && s.writable) ? false : t.toString() === `[object ${r}]`;
    }
    let e = t;
    for (; Object.getPrototypeOf(e) !== null; ) e = Object.getPrototypeOf(e);
    return Object.getPrototypeOf(t) === e;
  }
  function wC(t, ...e) {
    const s = e.slice(0, -1), r = e[e.length - 1];
    let i = t;
    for (let n = 0; n < s.length; n++) {
      const o = s[n];
      i = Fa(i, o, r, /* @__PURE__ */ new Map());
    }
    return i;
  }
  function Fa(t, e, s, r) {
    if (cc(t) && (t = Object(t)), e == null || typeof e != "object") return t;
    if (r.has(e)) return V1(r.get(e));
    if (r.set(e, t), Array.isArray(e)) {
      e = e.slice();
      for (let n = 0; n < e.length; n++) e[n] = e[n] ?? void 0;
    }
    const i = [...Object.keys(e), ...yh(e)];
    for (let n = 0; n < i.length; n++) {
      const o = i[n];
      let a = e[o], c = t[o];
      if (du(a) && (a = { ...a }), du(c) && (c = { ...c }), typeof Buffer < "u" && Buffer.isBuffer(a) && (a = uu(a)), Array.isArray(a)) if (typeof c == "object" && c != null) {
        const u = [], d = Reflect.ownKeys(c);
        for (let h = 0; h < d.length; h++) {
          const p = d[h];
          u[p] = c[p];
        }
        c = u;
      } else c = [];
      const l = s(c, a, o, t, e, r);
      l != null ? t[o] = l : Array.isArray(a) || lu(c) && lu(a) ? t[o] = Fa(c, a, s, r) : c == null && mC(a) ? t[o] = Fa({}, a, s, r) : c == null && gC(a) ? t[o] = uu(a) : (c === void 0 || a !== void 0) && (t[o] = a);
    }
    return t;
  }
  function yC(t, ...e) {
    return wC(t, ...e, K1);
  }
  var bC = Object.defineProperty, vC = Object.defineProperties, EC = Object.getOwnPropertyDescriptors, hu = Object.getOwnPropertySymbols, CC = Object.prototype.hasOwnProperty, IC = Object.prototype.propertyIsEnumerable, pu = (t, e, s) => e in t ? bC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, jn$1 = (t, e) => {
    for (var s in e || (e = {})) CC.call(e, s) && pu(t, s, e[s]);
    if (hu) for (var s of hu(e)) IC.call(e, s) && pu(t, s, e[s]);
    return t;
  }, AC = (t, e) => vC(t, EC(e));
  function Et(t, e, s) {
    var r;
    const i = Dr(t);
    return ((r = e.rpcMap) == null ? void 0 : r[i.reference]) || `${wh}?chainId=${i.namespace}:${i.reference}&projectId=${s}`;
  }
  function ur(t) {
    return t.includes(":") ? t.split(":")[1] : t;
  }
  function Ah(t) {
    return t.map((e) => `${e.split(":")[0]}:${e.split(":")[1]}`);
  }
  function NC(t, e) {
    const s = Object.keys(e.namespaces).filter((i) => i.includes(t));
    if (!s.length) return [];
    const r = [];
    return s.forEach((i) => {
      const n = e.namespaces[i].accounts;
      r.push(...n);
    }), r;
  }
  function qn$1(t = {}, e = {}) {
    const s = fu(t), r = fu(e);
    return yC(s, r);
  }
  function fu(t) {
    var e, s, r, i, n;
    const o = {};
    if (!Ps(t)) return o;
    for (const [a, c] of Object.entries(t)) {
      const l = Eo$1(a) ? [a] : c.chains, u = c.methods || [], d = c.events || [], h = c.rpcMap || {}, p = Rr(a);
      o[p] = AC(jn$1(jn$1({}, o[p]), c), { chains: Xt$2(l, (e = o[p]) == null ? void 0 : e.chains), methods: Xt$2(u, (s = o[p]) == null ? void 0 : s.methods), events: Xt$2(d, (r = o[p]) == null ? void 0 : r.events) }), (Ps(h) || Ps(((i = o[p]) == null ? void 0 : i.rpcMap) || {})) && (o[p].rpcMap = jn$1(jn$1({}, h), (n = o[p]) == null ? void 0 : n.rpcMap));
    }
    return o;
  }
  function gu(t) {
    return t.includes(":") ? t.split(":")[2] : t;
  }
  function mu(t) {
    const e = {};
    for (const [s, r] of Object.entries(t)) {
      const i = r.methods || [], n = r.events || [], o = r.accounts || [], a = Eo$1(s) ? [s] : r.chains ? r.chains : Ah(r.accounts);
      e[s] = { chains: a, methods: i, events: n, accounts: o };
    }
    return e;
  }
  function Qo(t) {
    return typeof t == "number" ? t : t.includes("0x") ? parseInt(t, 16) : (t = t.includes(":") ? t.split(":")[1] : t, isNaN(Number(t)) ? t : Number(t));
  }
  const Nh = {}, ue$3 = (t) => Nh[t], ea = (t, e) => {
    Nh[t] = e;
  };
  var _C = Object.defineProperty, SC = (t, e, s) => e in t ? _C(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, wr = (t, e, s) => SC(t, typeof e != "symbol" ? e + "" : e, s);
  class PC {
    constructor(e) {
      wr(this, "name", "polkadot"), wr(this, "client"), wr(this, "httpProviders"), wr(this, "events"), wr(this, "namespace"), wr(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = ur(s);
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var OC = Object.defineProperty, TC = Object.defineProperties, xC = Object.getOwnPropertyDescriptors, wu = Object.getOwnPropertySymbols, kC = Object.prototype.hasOwnProperty, $C = Object.prototype.propertyIsEnumerable, ja = (t, e, s) => e in t ? OC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, yu = (t, e) => {
    for (var s in e || (e = {})) kC.call(e, s) && ja(t, s, e[s]);
    if (wu) for (var s of wu(e)) $C.call(e, s) && ja(t, s, e[s]);
    return t;
  }, bu = (t, e) => TC(t, xC(e)), yr = (t, e, s) => ja(t, typeof e != "symbol" ? e + "" : e, s);
  class RC {
    constructor(e) {
      yr(this, "name", "eip155"), yr(this, "client"), yr(this, "chainId"), yr(this, "namespace"), yr(this, "httpProviders"), yr(this, "events"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
    }
    async request(e) {
      switch (e.request.method) {
        case "eth_requestAccounts":
          return this.getAccounts();
        case "eth_accounts":
          return this.getAccounts();
        case "wallet_switchEthereumChain":
          return await this.handleSwitchChain(e);
        case "eth_chainId":
          return parseInt(this.getDefaultChain());
        case "wallet_getCapabilities":
          return await this.getCapabilities(e);
        case "wallet_getCallsStatus":
          return await this.getCallStatus(e);
      }
      return this.namespace.methods.includes(e.request.method) ? await this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(parseInt(e), s), this.chainId = parseInt(e), this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId.toString();
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    createHttpProvider(e, s) {
      const r = s || Et(`${this.name}:${e}`, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = parseInt(ur(s));
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    getHttpProvider() {
      const e = this.chainId, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    async handleSwitchChain(e) {
      var s, r;
      let i = e.request.params ? (s = e.request.params[0]) == null ? void 0 : s.chainId : "0x0";
      i = i.startsWith("0x") ? i : `0x${i}`;
      const n = parseInt(i, 16);
      if (this.isChainApproved(n)) this.setDefaultChain(`${n}`);
      else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({ topic: e.topic, request: { method: e.request.method, params: [{ chainId: i }] }, chainId: (r = this.namespace.chains) == null ? void 0 : r[0] }), this.setDefaultChain(`${n}`);
      else throw new Error(`Failed to switch to chain 'eip155:${n}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
      return null;
    }
    isChainApproved(e) {
      return this.namespace.chains.includes(`${this.name}:${e}`);
    }
    async getCapabilities(e) {
      var s, r, i, n, o;
      const a = (r = (s = e.request) == null ? void 0 : s.params) == null ? void 0 : r[0], c = ((n = (i = e.request) == null ? void 0 : i.params) == null ? void 0 : n[1]) || [], l = `${a}${c.join(",")}`;
      if (!a) throw new Error("Missing address parameter in `wallet_getCapabilities` request");
      const u = this.client.session.get(e.topic), d = ((o = u == null ? void 0 : u.sessionProperties) == null ? void 0 : o.capabilities) || {};
      if (d != null && d[l]) return d == null ? void 0 : d[l];
      const h = await this.client.request(e);
      try {
        await this.client.session.update(e.topic, { sessionProperties: bu(yu({}, u.sessionProperties || {}), { capabilities: bu(yu({}, d || {}), { [l]: h }) }) });
      } catch (p) {
        console.warn("Failed to update session with capabilities", p);
      }
      return h;
    }
    async getCallStatus(e) {
      var s, r;
      const i = this.client.session.get(e.topic), n = (s = i.sessionProperties) == null ? void 0 : s.bundler_name;
      if (n) {
        const a = this.getBundlerUrl(e.chainId, n);
        try {
          return await this.getUserOperationReceipt(a, e);
        } catch (c) {
          console.warn("Failed to fetch call status from bundler", c, a);
        }
      }
      const o = (r = i.sessionProperties) == null ? void 0 : r.bundler_url;
      if (o) try {
        return await this.getUserOperationReceipt(o, e);
      } catch (a) {
        console.warn("Failed to fetch call status from custom bundler", a, o);
      }
      if (this.namespace.methods.includes(e.request.method)) return await this.client.request(e);
      throw new Error("Fetching call status not approved by the wallet.");
    }
    async getUserOperationReceipt(e, s) {
      var r;
      const i = new URL(e), n = await fetch(i, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(fr$1("eth_getUserOperationReceipt", [(r = s.request.params) == null ? void 0 : r[0]])) });
      if (!n.ok) throw new Error(`Failed to fetch user operation receipt - ${n.status}`);
      return await n.json();
    }
    getBundlerUrl(e, s) {
      return `${H1}?projectId=${this.client.core.projectId}&chainId=${e}&bundler=${s}`;
    }
  }
  var UC = Object.defineProperty, DC = (t, e, s) => e in t ? UC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, br = (t, e, s) => DC(t, typeof e != "symbol" ? e + "" : e, s);
  class LC {
    constructor(e) {
      br(this, "name", "solana"), br(this, "client"), br(this, "httpProviders"), br(this, "events"), br(this, "namespace"), br(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = ur(s);
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var MC = Object.defineProperty, BC = (t, e, s) => e in t ? MC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, vr = (t, e, s) => BC(t, typeof e != "symbol" ? e + "" : e, s);
  class FC {
    constructor(e) {
      vr(this, "name", "cosmos"), vr(this, "client"), vr(this, "httpProviders"), vr(this, "events"), vr(this, "namespace"), vr(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = ur(s);
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var jC = Object.defineProperty, qC = (t, e, s) => e in t ? jC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Er = (t, e, s) => qC(t, typeof e != "symbol" ? e + "" : e, s);
  class WC {
    constructor(e) {
      Er(this, "name", "algorand"), Er(this, "client"), Er(this, "httpProviders"), Er(this, "events"), Er(this, "namespace"), Er(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      if (!this.httpProviders[e]) {
        const r = s || Et(`${this.name}:${e}`, this.namespace, this.client.core.projectId);
        if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, r);
      }
      this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        e[s] = this.createHttpProvider(s, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      return typeof r > "u" ? void 0 : new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var zC = Object.defineProperty, HC = (t, e, s) => e in t ? zC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Cr = (t, e, s) => HC(t, typeof e != "symbol" ? e + "" : e, s);
  class KC {
    constructor(e) {
      Cr(this, "name", "cip34"), Cr(this, "client"), Cr(this, "httpProviders"), Cr(this, "events"), Cr(this, "namespace"), Cr(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        const r = this.getCardanoRPCUrl(s), i = ur(s);
        e[i] = this.createHttpProvider(i, r);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    getCardanoRPCUrl(e) {
      const s = this.namespace.rpcMap;
      if (s) return s[e];
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || this.getCardanoRPCUrl(e);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var VC = Object.defineProperty, GC = (t, e, s) => e in t ? VC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ir = (t, e, s) => GC(t, typeof e != "symbol" ? e + "" : e, s);
  class JC {
    constructor(e) {
      Ir(this, "name", "elrond"), Ir(this, "client"), Ir(this, "httpProviders"), Ir(this, "events"), Ir(this, "namespace"), Ir(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = ur(s);
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var YC = Object.defineProperty, XC = (t, e, s) => e in t ? YC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Ar = (t, e, s) => XC(t, typeof e != "symbol" ? e + "" : e, s);
  class ZC {
    constructor(e) {
      Ar(this, "name", "multiversx"), Ar(this, "client"), Ar(this, "httpProviders"), Ar(this, "events"), Ar(this, "namespace"), Ar(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        const i = ur(s);
        e[i] = this.createHttpProvider(i, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var QC = Object.defineProperty, eI = (t, e, s) => e in t ? QC(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Nr = (t, e, s) => eI(t, typeof e != "symbol" ? e + "" : e, s);
  class tI {
    constructor(e) {
      Nr(this, "name", "near"), Nr(this, "client"), Nr(this, "httpProviders"), Nr(this, "events"), Nr(this, "namespace"), Nr(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      if (this.chainId = e, !this.httpProviders[e]) {
        const r = s || Et(`${this.name}:${e}`, this.namespace);
        if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, r);
      }
      this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        var r;
        e[s] = this.createHttpProvider(s, (r = this.namespace.rpcMap) == null ? void 0 : r[s]);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace);
      return typeof r > "u" ? void 0 : new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var sI = Object.defineProperty, rI = (t, e, s) => e in t ? sI(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, _r = (t, e, s) => rI(t, typeof e != "symbol" ? e + "" : e, s);
  class iI {
    constructor(e) {
      _r(this, "name", "tezos"), _r(this, "client"), _r(this, "httpProviders"), _r(this, "events"), _r(this, "namespace"), _r(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace = Object.assign(this.namespace, e);
    }
    requestAccounts() {
      return this.getAccounts();
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request);
    }
    setDefaultChain(e, s) {
      if (this.chainId = e, !this.httpProviders[e]) {
        const r = s || Et(`${this.name}:${e}`, this.namespace);
        if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
        this.setHttpProvider(e, r);
      }
      this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]) || [] : [];
    }
    createHttpProviders() {
      const e = {};
      return this.namespace.chains.forEach((s) => {
        e[s] = this.createHttpProvider(s);
      }), e;
    }
    getHttpProvider() {
      const e = `${this.name}:${this.chainId}`, s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace);
      return typeof r > "u" ? void 0 : new pt$4(new xt$4(r));
    }
  }
  var nI = Object.defineProperty, oI = (t, e, s) => e in t ? nI(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Sr = (t, e, s) => oI(t, typeof e != "symbol" ? e + "" : e, s);
  class aI {
    constructor(e) {
      Sr(this, "name", Or), Sr(this, "client"), Sr(this, "httpProviders"), Sr(this, "events"), Sr(this, "namespace"), Sr(this, "chainId"), this.namespace = e.namespace, this.events = ue$3("events"), this.client = ue$3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
    }
    updateNamespace(e) {
      this.namespace.chains = [...new Set((this.namespace.chains || []).concat(e.chains || []))], this.namespace.accounts = [...new Set((this.namespace.accounts || []).concat(e.accounts || []))], this.namespace.methods = [...new Set((this.namespace.methods || []).concat(e.methods || []))], this.namespace.events = [...new Set((this.namespace.events || []).concat(e.events || []))], this.httpProviders = this.createHttpProviders();
    }
    requestAccounts() {
      return this.getAccounts();
    }
    request(e) {
      return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider(e.chainId).request(e.request);
    }
    setDefaultChain(e, s) {
      this.httpProviders[e] || this.setHttpProvider(e, s), this.chainId = e, this.events.emit($t$2.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`);
    }
    getDefaultChain() {
      if (this.chainId) return this.chainId;
      if (this.namespace.defaultChain) return this.namespace.defaultChain;
      const e = this.namespace.chains[0];
      if (!e) throw new Error("ChainId not found");
      return e.split(":")[1];
    }
    getAccounts() {
      const e = this.namespace.accounts;
      return e ? [...new Set(e.filter((s) => s.split(":")[1] === this.chainId.toString()).map((s) => s.split(":")[2]))] : [];
    }
    createHttpProviders() {
      var e, s;
      const r = {};
      return (s = (e = this.namespace) == null ? void 0 : e.accounts) == null || s.forEach((i) => {
        const n = Dr(i);
        r[`${n.namespace}:${n.reference}`] = this.createHttpProvider(i);
      }), r;
    }
    getHttpProvider(e) {
      const s = this.httpProviders[e];
      if (typeof s > "u") throw new Error(`JSON-RPC provider for ${e} not found`);
      return s;
    }
    setHttpProvider(e, s) {
      const r = this.createHttpProvider(e, s);
      r && (this.httpProviders[e] = r);
    }
    createHttpProvider(e, s) {
      const r = s || Et(e, this.namespace, this.client.core.projectId);
      if (!r) throw new Error(`No RPC url provided for chainId: ${e}`);
      return new pt$4(new xt$4(r, ue$3("disableProviderPing")));
    }
  }
  var cI = Object.defineProperty, lI = Object.defineProperties, uI = Object.getOwnPropertyDescriptors, vu = Object.getOwnPropertySymbols, dI = Object.prototype.hasOwnProperty, hI = Object.prototype.propertyIsEnumerable, qa = (t, e, s) => e in t ? cI(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s, Wn$1 = (t, e) => {
    for (var s in e || (e = {})) dI.call(e, s) && qa(t, s, e[s]);
    if (vu) for (var s of vu(e)) hI.call(e, s) && qa(t, s, e[s]);
    return t;
  }, ta = (t, e) => lI(t, uI(e)), Pt$2 = (t, e, s) => qa(t, typeof e != "symbol" ? e + "" : e, s);
  let pI = class _h {
    constructor(e) {
      Pt$2(this, "client"), Pt$2(this, "namespaces"), Pt$2(this, "optionalNamespaces"), Pt$2(this, "sessionProperties"), Pt$2(this, "scopedProperties"), Pt$2(this, "events", new Pa$1()), Pt$2(this, "rpcProviders", {}), Pt$2(this, "session"), Pt$2(this, "providerOpts"), Pt$2(this, "logger"), Pt$2(this, "uri"), Pt$2(this, "disableProviderPing", false), this.providerOpts = e, this.logger = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : _s$1(Nn$2({ level: (e == null ? void 0 : e.logger) || cu })), this.disableProviderPing = (e == null ? void 0 : e.disableProviderPing) || false;
    }
    static async init(e) {
      const s = new _h(e);
      return await s.initialize(), s;
    }
    async request(e, s, r) {
      const [i, n] = this.validateChain(s);
      if (!this.session) throw new Error("Please call connect() before request()");
      return await this.getProvider(i).request({ request: Wn$1({}, e), chainId: `${i}:${n}`, topic: this.session.topic, expiry: r });
    }
    sendAsync(e, s, r, i) {
      const n = (/* @__PURE__ */ new Date()).getTime();
      this.request(e, r, i).then((o) => s(null, Un$2(n, o))).catch((o) => s(o, void 0));
    }
    async enable() {
      if (!this.client) throw new Error("Sign Client not initialized");
      return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties, scopedProperties: this.scopedProperties }), await this.requestAccounts();
    }
    async disconnect() {
      var e;
      if (!this.session) throw new Error("Please call connect() before enable()");
      await this.client.disconnect({ topic: (e = this.session) == null ? void 0 : e.topic, reason: we$2("USER_DISCONNECTED") }), await this.cleanup();
    }
    async connect(e) {
      if (!this.client) throw new Error("Sign Client not initialized");
      if (this.setNamespaces(e), await this.cleanupPendingPairings(), !e.skipPairing) return await this.pair(e.pairingTopic);
    }
    async authenticate(e, s) {
      if (!this.client) throw new Error("Sign Client not initialized");
      this.setNamespaces(e), await this.cleanupPendingPairings();
      const { uri: r, response: i } = await this.client.authenticate(e, s);
      r && (this.uri = r, this.events.emit("display_uri", r));
      const n = await i();
      if (this.session = n.session, this.session) {
        const o = mu(this.session.namespaces);
        this.namespaces = qn$1(this.namespaces, o), await this.persist("namespaces", this.namespaces), this.onConnect();
      }
      return n;
    }
    on(e, s) {
      this.events.on(e, s);
    }
    once(e, s) {
      this.events.once(e, s);
    }
    removeListener(e, s) {
      this.events.removeListener(e, s);
    }
    off(e, s) {
      this.events.off(e, s);
    }
    get isWalletConnect() {
      return true;
    }
    async pair(e) {
      const { uri: s, approval: r } = await this.client.connect({ pairingTopic: e, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties, scopedProperties: this.scopedProperties });
      s && (this.uri = s, this.events.emit("display_uri", s));
      const i = await r();
      this.session = i;
      const n = mu(i.namespaces);
      return this.namespaces = qn$1(this.namespaces, n), await this.persist("namespaces", this.namespaces), await this.persist("optionalNamespaces", this.optionalNamespaces), this.onConnect(), this.session;
    }
    setDefaultChain(e, s) {
      try {
        if (!this.session) return;
        const [r, i] = this.validateChain(e), n = this.getProvider(r);
        n.name === Or ? n.setDefaultChain(`${r}:${i}`, s) : n.setDefaultChain(i, s);
      } catch (r) {
        if (!/Please call connect/.test(r.message)) throw r;
      }
    }
    async cleanupPendingPairings(e = {}) {
      this.logger.info("Cleaning up inactive pairings...");
      const s = this.client.pairing.getAll();
      if (Ss(s)) {
        for (const r of s) e.deletePairings ? this.client.core.expirer.set(r.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(r.topic);
        this.logger.info(`Inactive pairings cleared: ${s.length}`);
      }
    }
    abortPairingAttempt() {
      this.logger.warn("abortPairingAttempt is deprecated. This is now a no-op.");
    }
    async checkStorage() {
      this.namespaces = await this.getFromStore("namespaces") || {}, this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.session && this.createProviders();
    }
    async initialize() {
      this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
    }
    async createClient() {
      var e, s;
      if (this.client = this.providerOpts.client || await j1.init({ core: this.providerOpts.core, logger: this.providerOpts.logger || cu, relayUrl: this.providerOpts.relayUrl || q1, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, storage: this.providerOpts.storage, name: this.providerOpts.name, customStoragePrefix: this.providerOpts.customStoragePrefix, telemetryEnabled: this.providerOpts.telemetryEnabled }), this.providerOpts.session) try {
        this.session = this.client.session.get(this.providerOpts.session.topic);
      } catch (r) {
        throw this.logger.error("Failed to get session", r), new Error(`The provided session: ${(s = (e = this.providerOpts) == null ? void 0 : e.session) == null ? void 0 : s.topic} doesn't exist in the Sign client`);
      }
      else {
        const r = this.client.session.getAll();
        this.session = r[0];
      }
      this.logger.trace("SignClient Initialized");
    }
    createProviders() {
      if (!this.client) throw new Error("Sign Client not initialized");
      if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
      const e = [...new Set(Object.keys(this.session.namespaces).map((s) => Rr(s)))];
      ea("client", this.client), ea("events", this.events), ea("disableProviderPing", this.disableProviderPing), e.forEach((s) => {
        if (!this.session) return;
        const r = NC(s, this.session), i = Ah(r), n = qn$1(this.namespaces, this.optionalNamespaces), o = ta(Wn$1({}, n[s]), { accounts: r, chains: i });
        switch (s) {
          case "eip155":
            this.rpcProviders[s] = new RC({ namespace: o });
            break;
          case "algorand":
            this.rpcProviders[s] = new WC({ namespace: o });
            break;
          case "solana":
            this.rpcProviders[s] = new LC({ namespace: o });
            break;
          case "cosmos":
            this.rpcProviders[s] = new FC({ namespace: o });
            break;
          case "polkadot":
            this.rpcProviders[s] = new PC({ namespace: o });
            break;
          case "cip34":
            this.rpcProviders[s] = new KC({ namespace: o });
            break;
          case "elrond":
            this.rpcProviders[s] = new JC({ namespace: o });
            break;
          case "multiversx":
            this.rpcProviders[s] = new ZC({ namespace: o });
            break;
          case "near":
            this.rpcProviders[s] = new tI({ namespace: o });
            break;
          case "tezos":
            this.rpcProviders[s] = new iI({ namespace: o });
            break;
          default:
            this.rpcProviders[Or] ? this.rpcProviders[Or].updateNamespace(o) : this.rpcProviders[Or] = new aI({ namespace: o });
        }
      });
    }
    registerEventListeners() {
      if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
      this.client.on("session_ping", (e) => {
        var s;
        const { topic: r } = e;
        r === ((s = this.session) == null ? void 0 : s.topic) && this.events.emit("session_ping", e);
      }), this.client.on("session_event", (e) => {
        var s;
        const { params: r, topic: i } = e;
        if (i !== ((s = this.session) == null ? void 0 : s.topic)) return;
        const { event: n } = r;
        if (n.name === "accountsChanged") {
          const o = n.data;
          o && Ss(o) && this.events.emit("accountsChanged", o.map(gu));
        } else if (n.name === "chainChanged") {
          const o = r.chainId, a = r.event.data, c = Rr(o), l = Qo(o) !== Qo(a) ? `${c}:${Qo(a)}` : o;
          this.onChainChanged(l);
        } else this.events.emit(n.name, n.data);
        this.events.emit("session_event", e);
      }), this.client.on("session_update", ({ topic: e, params: s }) => {
        var r, i;
        if (e !== ((r = this.session) == null ? void 0 : r.topic)) return;
        const { namespaces: n } = s, o = (i = this.client) == null ? void 0 : i.session.get(e);
        this.session = ta(Wn$1({}, o), { namespaces: n }), this.onSessionUpdate(), this.events.emit("session_update", { topic: e, params: s });
      }), this.client.on("session_delete", async (e) => {
        var s;
        e.topic === ((s = this.session) == null ? void 0 : s.topic) && (await this.cleanup(), this.events.emit("session_delete", e), this.events.emit("disconnect", ta(Wn$1({}, we$2("USER_DISCONNECTED")), { data: e.topic })));
      }), this.on($t$2.DEFAULT_CHAIN_CHANGED, (e) => {
        this.onChainChanged(e, true);
      });
    }
    getProvider(e) {
      return this.rpcProviders[e] || this.rpcProviders[Or];
    }
    onSessionUpdate() {
      Object.keys(this.rpcProviders).forEach((e) => {
        var s;
        this.getProvider(e).updateNamespace((s = this.session) == null ? void 0 : s.namespaces[e]);
      });
    }
    setNamespaces(e) {
      const { namespaces: s = {}, optionalNamespaces: r = {}, sessionProperties: i, scopedProperties: n } = e;
      this.optionalNamespaces = qn$1(s, r), this.sessionProperties = i, this.scopedProperties = n;
    }
    validateChain(e) {
      const [s, r] = (e == null ? void 0 : e.split(":")) || ["", ""];
      if (!this.namespaces || !Object.keys(this.namespaces).length) return [s, r];
      if (s && !Object.keys(this.namespaces || {}).map((o) => Rr(o)).includes(s)) throw new Error(`Namespace '${s}' is not configured. Please call connect() first with namespace config.`);
      if (s && r) return [s, r];
      const i = Rr(Object.keys(this.namespaces)[0]), n = this.rpcProviders[i].getDefaultChain();
      return [i, n];
    }
    async requestAccounts() {
      const [e] = this.validateChain();
      return await this.getProvider(e).requestAccounts();
    }
    async onChainChanged(e, s = false) {
      if (!this.namespaces) return;
      const [r, i] = this.validateChain(e);
      if (!i) return;
      this.updateNamespaceChain(r, i), this.events.emit("chainChanged", i);
      const n = this.getProvider(r).getDefaultChain();
      s || this.getProvider(r).setDefaultChain(i), this.emitAccountsChangedOnChainChange({ namespace: r, previousChainId: n, newChainId: e }), await this.persist("namespaces", this.namespaces);
    }
    emitAccountsChangedOnChainChange({ namespace: e, previousChainId: s, newChainId: r }) {
      var i, n;
      try {
        if (s === r) return;
        const o = (n = (i = this.session) == null ? void 0 : i.namespaces[e]) == null ? void 0 : n.accounts;
        if (!o) return;
        const a = o.filter((c) => c.includes(`${r}:`)).map(gu);
        if (!Ss(a)) return;
        this.events.emit("accountsChanged", a);
      } catch (o) {
        this.logger.warn("Failed to emit accountsChanged on chain change", o);
      }
    }
    updateNamespaceChain(e, s) {
      if (!this.namespaces) return;
      const r = this.namespaces[e] ? e : `${e}:${s}`, i = { chains: [], methods: [], events: [], defaultChain: s };
      this.namespaces[r] ? this.namespaces[r] && (this.namespaces[r].defaultChain = s) : this.namespaces[r] = i;
    }
    onConnect() {
      this.createProviders(), this.events.emit("connect", { session: this.session });
    }
    async cleanup() {
      this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, await this.deleteFromStore("namespaces"), await this.deleteFromStore("optionalNamespaces"), await this.deleteFromStore("sessionProperties"), this.session = void 0, await this.cleanupPendingPairings({ deletePairings: true }), await this.cleanupStorage();
    }
    async persist(e, s) {
      var r;
      const i = ((r = this.session) == null ? void 0 : r.topic) || "";
      await this.client.core.storage.setItem(`${Fn$1}/${e}${i}`, s);
    }
    async getFromStore(e) {
      var s;
      const r = ((s = this.session) == null ? void 0 : s.topic) || "";
      return await this.client.core.storage.getItem(`${Fn$1}/${e}${r}`);
    }
    async deleteFromStore(e) {
      var s;
      const r = ((s = this.session) == null ? void 0 : s.topic) || "";
      await this.client.core.storage.removeItem(`${Fn$1}/${e}${r}`);
    }
    async cleanupStorage() {
      var e;
      try {
        if (((e = this.client) == null ? void 0 : e.session.length) > 0) return;
        const s = await this.client.core.storage.getKeys();
        for (const r of s) r.startsWith(Fn$1) && await this.client.core.storage.removeItem(r);
      } catch (s) {
        this.logger.warn("Failed to cleanup storage", s);
      }
    }
  };
  function zn$1(t, e) {
    return F$2.getConnectorId(t) === e;
  }
  function fI(t) {
    const e = Array.from(m.state.chains.keys());
    let s = [];
    return t ? (s.push([t, m.state.chains.get(t)]), zn$1(t, z$3.CONNECTOR_ID.WALLET_CONNECT) ? e.forEach((r) => {
      r !== t && zn$1(r, z$3.CONNECTOR_ID.WALLET_CONNECT) && s.push([r, m.state.chains.get(r)]);
    }) : zn$1(t, z$3.CONNECTOR_ID.AUTH) && e.forEach((r) => {
      r !== t && zn$1(r, z$3.CONNECTOR_ID.AUTH) && s.push([r, m.state.chains.get(r)]);
    })) : s = Array.from(m.state.chains.entries()), s;
  }
  const ys = {
    EIP155: "eip155",
    CONNECTOR_TYPE_WALLET_CONNECT: "WALLET_CONNECT",
    CONNECTOR_TYPE_INJECTED: "INJECTED",
    CONNECTOR_TYPE_ANNOUNCED: "ANNOUNCED"
  }, lo$1 = {
    NetworkImageIds: {
      1: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
      42161: "3bff954d-5cb0-47a0-9a23-d20192e74600",
      43114: "30c46e53-e989-45fb-4549-be3bd4eb3b00",
      56: "93564157-2e8e-4ce7-81df-b264dbee9b00",
      250: "06b26297-fe0c-4733-5d6b-ffa5498aac00",
      10: "ab9c186a-c52f-464b-2906-ca59d760a400",
      137: "41d04d42-da3b-4453-8506-668cc0727900",
      5e3: "e86fae9b-b770-4eea-e520-150e12c81100",
      295: "6a97d510-cac8-4e58-c7ce-e8681b044c00",
      11155111: "e909ea0a-f92a-4512-c8fc-748044ea6800",
      84532: "a18a7ecd-e307-4360-4746-283182228e00",
      1301: "4eeea7ef-0014-4649-5d1d-07271a80f600",
      130: "2257980a-3463-48c6-cbac-a42d2a956e00",
      10143: "0a728e83-bacb-46db-7844-948f05434900",
      100: "02b53f6a-e3d4-479e-1cb4-21178987d100",
      9001: "f926ff41-260d-4028-635e-91913fc28e00",
      324: "b310f07f-4ef7-49f3-7073-2a0a39685800",
      314: "5a73b3dd-af74-424e-cae0-0de859ee9400",
      4689: "34e68754-e536-40da-c153-6ef2e7188a00",
      1088: "3897a66d-40b9-4833-162f-a2c90531c900",
      1284: "161038da-44ae-4ec7-1208-0ea569454b00",
      1285: "f1d73bb6-5450-4e18-38f7-fb6484264a00",
      7777777: "845c60df-d429-4991-e687-91ae45791600",
      42220: "ab781bbc-ccc6-418d-d32d-789b15da1f00",
      8453: "7289c336-3981-4081-c5f4-efc26ac64a00",
      1313161554: "3ff73439-a619-4894-9262-4470c773a100",
      2020: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
      2021: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
      80094: "e329c2c9-59b0-4a02-83e4-212ff3779900",
      2741: "fc2427d1-5af9-4a9c-8da5-6f94627cd900",
      "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp": "a1b58899-f671-4276-6a5e-56ca5bd59700",
      "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z": "a1b58899-f671-4276-6a5e-56ca5bd59700",
      EtWTRABZaYq6iMfeYKouRu166VU2xqa1: "a1b58899-f671-4276-6a5e-56ca5bd59700",
      "000000000019d6689c085ae165831e93": "0b4838db-0161-4ffe-022d-532bf03dba00",
      "000000000933ea01ad0ee984209779ba": "39354064-d79b-420b-065d-f980c4b78200"
    },
    ConnectorImageIds: {
      [z$3.CONNECTOR_ID.COINBASE]: "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
      [z$3.CONNECTOR_ID.COINBASE_SDK]: "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
      [z$3.CONNECTOR_ID.SAFE]: "461db637-8616-43ce-035a-d89b8a1d5800",
      [z$3.CONNECTOR_ID.LEDGER]: "54a1aa77-d202-4f8d-0fb2-5d2bb6db0300",
      [z$3.CONNECTOR_ID.WALLET_CONNECT]: "ef1a1fcf-7fe8-4d69-bd6d-fda1345b4400",
      [z$3.CONNECTOR_ID.INJECTED]: "07ba87ed-43aa-4adf-4540-9e6a2b9cae00"
    },
    ConnectorNamesMap: {
      [z$3.CONNECTOR_ID.INJECTED]: "Browser Wallet",
      [z$3.CONNECTOR_ID.WALLET_CONNECT]: "WalletConnect",
      [z$3.CONNECTOR_ID.COINBASE]: "Coinbase",
      [z$3.CONNECTOR_ID.COINBASE_SDK]: "Coinbase",
      [z$3.CONNECTOR_ID.LEDGER]: "Ledger",
      [z$3.CONNECTOR_ID.SAFE]: "Safe"
    }
  }, uc = {
    getCaipTokens(t) {
      if (!t)
        return;
      const e = {};
      return Object.entries(t).forEach(([s, r]) => {
        e[`${ys.EIP155}:${s}`] = r;
      }), e;
    },
    isLowerCaseMatch(t, e) {
      return (t == null ? void 0 : t.toLowerCase()) === (e == null ? void 0 : e.toLowerCase());
    }
  };
  new AbortController();
  const Pr = {
    UniversalProviderErrors: {
      UNAUTHORIZED_DOMAIN_NOT_ALLOWED: {
        message: "Unauthorized: origin not allowed",
        alertErrorKey: "INVALID_APP_CONFIGURATION"
      },
      JWT_VALIDATION_ERROR: {
        message: "JWT validation error: JWT Token is not yet valid",
        alertErrorKey: "JWT_TOKEN_NOT_VALID"
      },
      INVALID_KEY: {
        message: "Unauthorized: invalid key",
        alertErrorKey: "INVALID_PROJECT_ID"
      }
    },
    ALERT_ERRORS: {
      SWITCH_NETWORK_NOT_FOUND: {
        shortMessage: "Network Not Found",
        longMessage: "Network not found - please make sure it is included in 'networks' array in createAppKit function"
      },
      INVALID_APP_CONFIGURATION: {
        shortMessage: "Invalid App Configuration",
        longMessage: () => `Origin ${gI() ? window.origin : "unknown"} not found on Allowlist - update configuration on cloud.reown.com`
      },
      IFRAME_LOAD_FAILED: {
        shortMessage: "Network Error - Could not load embedded wallet",
        longMessage: () => "There was an issue loading the embedded wallet. Please try again later."
      },
      IFRAME_REQUEST_TIMEOUT: {
        shortMessage: "Embedded Wallet Request Timed Out",
        longMessage: () => "There was an issue doing the request to the embedded wallet. Please try again later."
      },
      UNVERIFIED_DOMAIN: {
        shortMessage: "Invalid App Configuration",
        longMessage: () => "There was an issue loading the embedded wallet. Please verify that your domain is allowed at cloud.reown.com"
      },
      JWT_TOKEN_NOT_VALID: {
        shortMessage: "Session Expired",
        longMessage: "Invalid session found on UniversalProvider - please check your time settings and connect again"
      },
      INVALID_PROJECT_ID: {
        shortMessage: "Invalid App Configuration",
        longMessage: "Invalid Project ID - update configuration"
      },
      PROJECT_ID_NOT_CONFIGURED: {
        shortMessage: "Project ID Not Configured",
        longMessage: "Project ID Not Configured - update configuration on cloud.reown.com"
      }
    }
  };
  function gI() {
    return typeof window < "u";
  }
  const mI = {
    createLogger(t, e = "error") {
      const s = Nn$2({
        level: e
      }), { logger: r } = rI$1({
        opts: s
      });
      return r.error = (...i) => {
        for (const n of i)
          if (n instanceof Error) {
            t(n, ...i);
            return;
          }
        t(void 0, ...i);
      }, r;
    }
  }, wI = "rpc.walletconnect.org";
  function Eu(t, e) {
    const s = new URL("https://rpc.walletconnect.org/v1/");
    return s.searchParams.set("chainId", t), s.searchParams.set("projectId", e), s.toString();
  }
  const sa = [
    "near:mainnet",
    "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
    "eip155:1101",
    "eip155:56",
    "eip155:42161",
    "eip155:7777777",
    "eip155:59144",
    "eip155:324",
    "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
    "eip155:5000",
    "solana:4sgjmw1sunhzsxgspuhpqldx6wiyjntz",
    "eip155:80084",
    "eip155:5003",
    "eip155:100",
    "eip155:8453",
    "eip155:42220",
    "eip155:1313161555",
    "eip155:17000",
    "eip155:1",
    "eip155:300",
    "eip155:1313161554",
    "eip155:1329",
    "eip155:84532",
    "eip155:421614",
    "eip155:11155111",
    "eip155:8217",
    "eip155:43114",
    "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
    "eip155:999999999",
    "eip155:11155420",
    "eip155:80002",
    "eip155:97",
    "eip155:43113",
    "eip155:137",
    "eip155:10",
    "eip155:1301",
    "bip122:000000000019d6689c085ae165831e93",
    "bip122:000000000933ea01ad0ee984209779ba"
  ], Tr = {
    extendRpcUrlWithProjectId(t, e) {
      let s = false;
      try {
        s = new URL(t).host === wI;
      } catch {
        s = false;
      }
      if (s) {
        const r = new URL(t);
        return r.searchParams.has("projectId") || r.searchParams.set("projectId", e), r.toString();
      }
      return t;
    },
    isCaipNetwork(t) {
      return "chainNamespace" in t && "caipNetworkId" in t;
    },
    getChainNamespace(t) {
      return this.isCaipNetwork(t) ? t.chainNamespace : z$3.CHAIN.EVM;
    },
    getCaipNetworkId(t) {
      return this.isCaipNetwork(t) ? t.caipNetworkId : `${z$3.CHAIN.EVM}:${t.id}`;
    },
    getDefaultRpcUrl(t, e, s) {
      var i, n, o;
      const r = (o = (n = (i = t.rpcUrls) == null ? void 0 : i.default) == null ? void 0 : n.http) == null ? void 0 : o[0];
      return sa.includes(e) ? Eu(e, s) : r || "";
    },
    extendCaipNetwork(t, { customNetworkImageUrls: e, projectId: s, customRpcUrls: r }) {
      var h, p, g, f, w;
      const i = this.getChainNamespace(t), n = this.getCaipNetworkId(t), o = (h = t.rpcUrls.default.http) == null ? void 0 : h[0], a = this.getDefaultRpcUrl(t, n, s), c = ((f = (g = (p = t == null ? void 0 : t.rpcUrls) == null ? void 0 : p.chainDefault) == null ? void 0 : g.http) == null ? void 0 : f[0]) || o, l = ((w = r == null ? void 0 : r[n]) == null ? void 0 : w.map((y) => y.url)) || [], u = [...l, a], d = [...l];
      return c && !d.includes(c) && d.push(c), {
        ...t,
        chainNamespace: i,
        caipNetworkId: n,
        assets: {
          imageId: lo$1.NetworkImageIds[t.id],
          imageUrl: e == null ? void 0 : e[t.id]
        },
        rpcUrls: {
          ...t.rpcUrls,
          default: {
            http: u
          },
          chainDefault: {
            http: d
          }
        }
      };
    },
    extendCaipNetworks(t, { customNetworkImageUrls: e, projectId: s, customRpcUrls: r }) {
      return t.map((i) => Tr.extendCaipNetwork(i, {
        customNetworkImageUrls: e,
        customRpcUrls: r,
        projectId: s
      }));
    },
    getViemTransport(t, e, s) {
      var i, n, o;
      const r = [];
      return s == null || s.forEach((a) => {
        r.push(xn$1(a.url, a.config));
      }), sa.includes(t.caipNetworkId) && r.push(xn$1(Eu(t.caipNetworkId, e), {
        fetchOptions: {
          headers: {
            "Content-Type": "text/plain"
          }
        }
      })), (o = (n = (i = t == null ? void 0 : t.rpcUrls) == null ? void 0 : i.default) == null ? void 0 : n.http) == null || o.forEach((a) => {
        r.push(xn$1(a));
      }), bc(r);
    },
    extendWagmiTransports(t, e, s) {
      if (sa.includes(t.caipNetworkId)) {
        const r = this.getDefaultRpcUrl(t, t.caipNetworkId, e);
        return bc([s, xn$1(r)]);
      }
      return s;
    },
    getUnsupportedNetwork(t) {
      return {
        id: t.split(":")[1],
        caipNetworkId: t,
        name: z$3.UNSUPPORTED_NETWORK_NAME,
        chainNamespace: t.split(":")[0],
        nativeCurrency: {
          name: "",
          decimals: 0,
          symbol: ""
        },
        rpcUrls: {
          default: {
            http: []
          }
        }
      };
    },
    getCaipNetworkFromStorage(t) {
      var c;
      const e = q$1.getActiveCaipNetworkId(), s = m.getAllRequestedCaipNetworks(), r = Array.from(((c = m.state.chains) == null ? void 0 : c.keys()) || []), i = e == null ? void 0 : e.split(":")[0], n = i ? r.includes(i) : false, o = s == null ? void 0 : s.find((l) => l.caipNetworkId === e);
      return n && !o && e ? this.getUnsupportedNetwork(e) : o || t || (s == null ? void 0 : s[0]);
    }
  }, uo$1 = {
    eip155: void 0,
    solana: void 0,
    polkadot: void 0,
    bip122: void 0,
    cosmos: void 0
  }, ct$2 = _e$3({
    providers: { ...uo$1 },
    providerIds: { ...uo$1 }
  }), Se$2 = {
    state: ct$2,
    subscribeKey(t, e) {
      return et$2(ct$2, t, e);
    },
    subscribe(t) {
      return Qe$1(ct$2, () => {
        t(ct$2);
      });
    },
    subscribeProviders(t) {
      return Qe$1(ct$2.providers, () => t(ct$2.providers));
    },
    setProvider(t, e) {
      e && (ct$2.providers[t] = Zs(e));
    },
    getProvider(t) {
      return ct$2.providers[t];
    },
    setProviderId(t, e) {
      e && (ct$2.providerIds[t] = e);
    },
    getProviderId(t) {
      if (t)
        return ct$2.providerIds[t];
    },
    reset() {
      ct$2.providers = { ...uo$1 }, ct$2.providerIds = { ...uo$1 };
    },
    resetChain(t) {
      ct$2.providers[t] = void 0, ct$2.providerIds[t] = void 0;
    }
  }, yI = {
    SECURE_SITE_ORIGIN: (typeof process < "u" && typeof process.env < "u" ? process.env.NEXT_PUBLIC_SECURE_SITE_ORIGIN : void 0) || "https://secure.walletconnect.org",
    VIEW_DIRECTION: {
      Next: "next",
      Prev: "prev"
    },
    DEFAULT_CONNECT_METHOD_ORDER: ["email", "social", "wallet"],
    ANIMATION_DURATIONS: {
      HeaderText: 120,
      ModalHeight: 150,
      ViewTransition: 150
    }
  }, Wa = {
    filterOutDuplicatesByRDNS(t) {
      const e = T$2.state.enableEIP6963 ? F$2.state.connectors : [], s = q$1.getRecentWallets(), r = e.map((a) => {
        var c;
        return (c = a.info) == null ? void 0 : c.rdns;
      }).filter(Boolean), i = s.map((a) => a.rdns).filter(Boolean), n = r.concat(i);
      if (n.includes("io.metamask.mobile") && X$3.isMobile()) {
        const a = n.indexOf("io.metamask.mobile");
        n[a] = "io.metamask";
      }
      return t.filter((a) => !n.includes(String(a == null ? void 0 : a.rdns)));
    },
    filterOutDuplicatesByIds(t) {
      const e = F$2.state.connectors.filter((a) => a.type === "ANNOUNCED" || a.type === "INJECTED"), s = q$1.getRecentWallets(), r = e.map((a) => a.explorerId), i = s.map((a) => a.id), n = r.concat(i);
      return t.filter((a) => !n.includes(a == null ? void 0 : a.id));
    },
    filterOutDuplicateWallets(t) {
      const e = this.filterOutDuplicatesByRDNS(t);
      return this.filterOutDuplicatesByIds(e);
    },
    markWalletsAsInstalled(t) {
      const { connectors: e } = F$2.state, { featuredWalletIds: s } = T$2.state, r = e.filter((o) => o.type === "ANNOUNCED").reduce((o, a) => {
        var c;
        return (c = a.info) != null && c.rdns && (o[a.info.rdns] = true), o;
      }, {});
      return t.map((o) => ({
        ...o,
        installed: !!o.rdns && !!r[o.rdns ?? ""]
      })).sort((o, a) => {
        const c = Number(a.installed) - Number(o.installed);
        if (c !== 0)
          return c;
        if (s != null && s.length) {
          const l = s.indexOf(o.id), u = s.indexOf(a.id);
          if (l !== -1 && u !== -1)
            return l - u;
          if (l !== -1)
            return -1;
          if (u !== -1)
            return 1;
        }
        return 0;
      });
    },
    getConnectOrderMethod(t, e) {
      var c;
      const s = (t == null ? void 0 : t.connectMethodsOrder) || ((c = T$2.state.features) == null ? void 0 : c.connectMethodsOrder), r = e || F$2.state.connectors;
      if (s)
        return s;
      const { injected: i, announced: n } = Zn$1.getConnectorsByType(r, K$3.state.recommended, K$3.state.featured), o = i.filter(Zn$1.showConnector), a = n.filter(Zn$1.showConnector);
      return o.length || a.length ? ["wallet", "email", "social"] : yI.DEFAULT_CONNECT_METHOD_ORDER;
    },
    isExcluded(t) {
      const e = !!t.rdns && K$3.state.excludedWallets.some((r) => r.rdns === t.rdns), s = !!t.name && K$3.state.excludedWallets.some((r) => uc.isLowerCaseMatch(r.name, t.name));
      return e || s;
    }
  }, Zn$1 = {
    getConnectorsByType(t, e, s) {
      const { customWallets: r } = T$2.state, i = q$1.getRecentWallets(), n = Wa.filterOutDuplicateWallets(e), o = Wa.filterOutDuplicateWallets(s), a = t.filter((d) => d.type === "MULTI_CHAIN"), c = t.filter((d) => d.type === "ANNOUNCED"), l = t.filter((d) => d.type === "INJECTED"), u = t.filter((d) => d.type === "EXTERNAL");
      return {
        custom: r,
        recent: i,
        external: u,
        multiChain: a,
        announced: c,
        injected: l,
        recommended: n,
        featured: o
      };
    },
    showConnector(t) {
      var i;
      const e = (i = t.info) == null ? void 0 : i.rdns, s = !!e && K$3.state.excludedWallets.some((n) => !!n.rdns && n.rdns === e), r = !!t.name && K$3.state.excludedWallets.some((n) => uc.isLowerCaseMatch(n.name, t.name));
      return !(t.type === "INJECTED" && (t.name === "Browser Wallet" && (!X$3.isMobile() || X$3.isMobile() && !e && !Y$1.checkInstalled()) || s || r) || (t.type === "ANNOUNCED" || t.type === "EXTERNAL") && (s || r));
    },
    getIsConnectedWithWC() {
      return Array.from(m.state.chains.values()).some((s) => F$2.getConnectorId(s.namespace) === z$3.CONNECTOR_ID.WALLET_CONNECT);
    },
    getConnectorTypeOrder({ recommended: t, featured: e, custom: s, recent: r, announced: i, injected: n, multiChain: o, external: a, overriddenConnectors: c = ((l) => (l = T$2.state.features) == null ? void 0 : l.connectorTypeOrder)() ?? [] }) {
      const u = Zn$1.getIsConnectedWithWC(), p = [
        { type: "walletConnect", isEnabled: T$2.state.enableWalletConnect && !u },
        { type: "recent", isEnabled: r.length > 0 },
        { type: "injected", isEnabled: [...n, ...i, ...o].length > 0 },
        { type: "featured", isEnabled: e.length > 0 },
        { type: "custom", isEnabled: s && s.length > 0 },
        { type: "external", isEnabled: a.length > 0 },
        { type: "recommended", isEnabled: t.length > 0 }
      ].filter((y) => y.isEnabled), g = new Set(p.map((y) => y.type)), f = c.filter((y) => g.has(y)).map((y) => ({ type: y, isEnabled: true })), w = p.filter(({ type: y }) => !f.some(({ type: v }) => v === y));
      return Array.from(new Set([...f, ...w].map(({ type: y }) => y)));
    }
  };
  /**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const Qn$1 = globalThis, dc = Qn$1.ShadowRoot && (Qn$1.ShadyCSS === void 0 || Qn$1.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, hc = Symbol(), Cu = /* @__PURE__ */ new WeakMap();
  let Sh = class {
    constructor(e, s, r) {
      if (this._$cssResult$ = true, r !== hc) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
      this.cssText = e, this.t = s;
    }
    get styleSheet() {
      let e = this.o;
      const s = this.t;
      if (dc && e === void 0) {
        const r = s !== void 0 && s.length === 1;
        r && (e = Cu.get(s)), e === void 0 && ((this.o = e = new CSSStyleSheet()).replaceSync(this.cssText), r && Cu.set(s, e));
      }
      return e;
    }
    toString() {
      return this.cssText;
    }
  };
  const Ot$2 = (t) => new Sh(typeof t == "string" ? t : t + "", void 0, hc), Lr = (t, ...e) => {
    const s = t.length === 1 ? t[0] : e.reduce((r, i, n) => r + ((o) => {
      if (o._$cssResult$ === true) return o.cssText;
      if (typeof o == "number") return o;
      throw Error("Value passed to 'css' function must be a 'css' function result: " + o + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
    })(i) + t[n + 1], t[0]);
    return new Sh(s, t, hc);
  }, bI = (t, e) => {
    if (dc) t.adoptedStyleSheets = e.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);
    else for (const s of e) {
      const r = document.createElement("style"), i = Qn$1.litNonce;
      i !== void 0 && r.setAttribute("nonce", i), r.textContent = s.cssText, t.appendChild(r);
    }
  }, Iu = dc ? (t) => t : (t) => t instanceof CSSStyleSheet ? ((e) => {
    let s = "";
    for (const r of e.cssRules) s += r.cssText;
    return Ot$2(s);
  })(t) : t;
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const { is: vI, defineProperty: EI, getOwnPropertyDescriptor: CI, getOwnPropertyNames: II, getOwnPropertySymbols: AI, getPrototypeOf: NI } = Object, Os = globalThis, Au = Os.trustedTypes, _I = Au ? Au.emptyScript : "", ra = Os.reactiveElementPolyfillSupport, Ri$1 = (t, e) => t, za = { toAttribute(t, e) {
    switch (e) {
      case Boolean:
        t = t ? _I : null;
        break;
      case Object:
      case Array:
        t = t == null ? t : JSON.stringify(t);
    }
    return t;
  }, fromAttribute(t, e) {
    let s = t;
    switch (e) {
      case Boolean:
        s = t !== null;
        break;
      case Number:
        s = t === null ? null : Number(t);
        break;
      case Object:
      case Array:
        try {
          s = JSON.parse(t);
        } catch {
          s = null;
        }
    }
    return s;
  } }, Ph = (t, e) => !vI(t, e), Nu = { attribute: true, type: String, converter: za, reflect: false, useDefault: false, hasChanged: Ph };
  Symbol.metadata ?? (Symbol.metadata = Symbol("metadata")), Os.litPropertyMetadata ?? (Os.litPropertyMetadata = /* @__PURE__ */ new WeakMap());
  let xr = class extends HTMLElement {
    static addInitializer(e) {
      this._$Ei(), (this.l ?? (this.l = [])).push(e);
    }
    static get observedAttributes() {
      return this.finalize(), this._$Eh && [...this._$Eh.keys()];
    }
    static createProperty(e, s = Nu) {
      if (s.state && (s.attribute = false), this._$Ei(), this.prototype.hasOwnProperty(e) && ((s = Object.create(s)).wrapped = true), this.elementProperties.set(e, s), !s.noAccessor) {
        const r = Symbol(), i = this.getPropertyDescriptor(e, r, s);
        i !== void 0 && EI(this.prototype, e, i);
      }
    }
    static getPropertyDescriptor(e, s, r) {
      const { get: i, set: n } = CI(this.prototype, e) ?? { get() {
        return this[s];
      }, set(o) {
        this[s] = o;
      } };
      return { get: i, set(o) {
        const a = i == null ? void 0 : i.call(this);
        n == null || n.call(this, o), this.requestUpdate(e, a, r);
      }, configurable: true, enumerable: true };
    }
    static getPropertyOptions(e) {
      return this.elementProperties.get(e) ?? Nu;
    }
    static _$Ei() {
      if (this.hasOwnProperty(Ri$1("elementProperties"))) return;
      const e = NI(this);
      e.finalize(), e.l !== void 0 && (this.l = [...e.l]), this.elementProperties = new Map(e.elementProperties);
    }
    static finalize() {
      if (this.hasOwnProperty(Ri$1("finalized"))) return;
      if (this.finalized = true, this._$Ei(), this.hasOwnProperty(Ri$1("properties"))) {
        const s = this.properties, r = [...II(s), ...AI(s)];
        for (const i of r) this.createProperty(i, s[i]);
      }
      const e = this[Symbol.metadata];
      if (e !== null) {
        const s = litPropertyMetadata.get(e);
        if (s !== void 0) for (const [r, i] of s) this.elementProperties.set(r, i);
      }
      this._$Eh = /* @__PURE__ */ new Map();
      for (const [s, r] of this.elementProperties) {
        const i = this._$Eu(s, r);
        i !== void 0 && this._$Eh.set(i, s);
      }
      this.elementStyles = this.finalizeStyles(this.styles);
    }
    static finalizeStyles(e) {
      const s = [];
      if (Array.isArray(e)) {
        const r = new Set(e.flat(1 / 0).reverse());
        for (const i of r) s.unshift(Iu(i));
      } else e !== void 0 && s.push(Iu(e));
      return s;
    }
    static _$Eu(e, s) {
      const r = s.attribute;
      return r === false ? void 0 : typeof r == "string" ? r : typeof e == "string" ? e.toLowerCase() : void 0;
    }
    constructor() {
      super(), this._$Ep = void 0, this.isUpdatePending = false, this.hasUpdated = false, this._$Em = null, this._$Ev();
    }
    _$Ev() {
      var e;
      this._$ES = new Promise((s) => this.enableUpdating = s), this._$AL = /* @__PURE__ */ new Map(), this._$E_(), this.requestUpdate(), (e = this.constructor.l) == null || e.forEach((s) => s(this));
    }
    addController(e) {
      var s;
      (this._$EO ?? (this._$EO = /* @__PURE__ */ new Set())).add(e), this.renderRoot !== void 0 && this.isConnected && ((s = e.hostConnected) == null || s.call(e));
    }
    removeController(e) {
      var s;
      (s = this._$EO) == null || s.delete(e);
    }
    _$E_() {
      const e = /* @__PURE__ */ new Map(), s = this.constructor.elementProperties;
      for (const r of s.keys()) this.hasOwnProperty(r) && (e.set(r, this[r]), delete this[r]);
      e.size > 0 && (this._$Ep = e);
    }
    createRenderRoot() {
      const e = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
      return bI(e, this.constructor.elementStyles), e;
    }
    connectedCallback() {
      var e;
      this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this.enableUpdating(true), (e = this._$EO) == null || e.forEach((s) => {
        var r;
        return (r = s.hostConnected) == null ? void 0 : r.call(s);
      });
    }
    enableUpdating(e) {
    }
    disconnectedCallback() {
      var e;
      (e = this._$EO) == null || e.forEach((s) => {
        var r;
        return (r = s.hostDisconnected) == null ? void 0 : r.call(s);
      });
    }
    attributeChangedCallback(e, s, r) {
      this._$AK(e, r);
    }
    _$ET(e, s) {
      var n;
      const r = this.constructor.elementProperties.get(e), i = this.constructor._$Eu(e, r);
      if (i !== void 0 && r.reflect === true) {
        const o = (((n = r.converter) == null ? void 0 : n.toAttribute) !== void 0 ? r.converter : za).toAttribute(s, r.type);
        this._$Em = e, o == null ? this.removeAttribute(i) : this.setAttribute(i, o), this._$Em = null;
      }
    }
    _$AK(e, s) {
      var n, o;
      const r = this.constructor, i = r._$Eh.get(e);
      if (i !== void 0 && this._$Em !== i) {
        const a = r.getPropertyOptions(i), c = typeof a.converter == "function" ? { fromAttribute: a.converter } : ((n = a.converter) == null ? void 0 : n.fromAttribute) !== void 0 ? a.converter : za;
        this._$Em = i, this[i] = c.fromAttribute(s, a.type) ?? ((o = this._$Ej) == null ? void 0 : o.get(i)) ?? null, this._$Em = null;
      }
    }
    requestUpdate(e, s, r) {
      var i;
      if (e !== void 0) {
        const n = this.constructor, o = this[e];
        if (r ?? (r = n.getPropertyOptions(e)), !((r.hasChanged ?? Ph)(o, s) || r.useDefault && r.reflect && o === ((i = this._$Ej) == null ? void 0 : i.get(e)) && !this.hasAttribute(n._$Eu(e, r)))) return;
        this.C(e, s, r);
      }
      this.isUpdatePending === false && (this._$ES = this._$EP());
    }
    C(e, s, { useDefault: r, reflect: i, wrapped: n }, o) {
      r && !(this._$Ej ?? (this._$Ej = /* @__PURE__ */ new Map())).has(e) && (this._$Ej.set(e, o ?? s ?? this[e]), n !== true || o !== void 0) || (this._$AL.has(e) || (this.hasUpdated || r || (s = void 0), this._$AL.set(e, s)), i === true && this._$Em !== e && (this._$Eq ?? (this._$Eq = /* @__PURE__ */ new Set())).add(e));
    }
    async _$EP() {
      this.isUpdatePending = true;
      try {
        await this._$ES;
      } catch (s) {
        Promise.reject(s);
      }
      const e = this.scheduleUpdate();
      return e != null && await e, !this.isUpdatePending;
    }
    scheduleUpdate() {
      return this.performUpdate();
    }
    performUpdate() {
      var r;
      if (!this.isUpdatePending) return;
      if (!this.hasUpdated) {
        if (this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this._$Ep) {
          for (const [n, o] of this._$Ep) this[n] = o;
          this._$Ep = void 0;
        }
        const i = this.constructor.elementProperties;
        if (i.size > 0) for (const [n, o] of i) {
          const { wrapped: a } = o, c = this[n];
          a !== true || this._$AL.has(n) || c === void 0 || this.C(n, void 0, o, c);
        }
      }
      let e = false;
      const s = this._$AL;
      try {
        e = this.shouldUpdate(s), e ? (this.willUpdate(s), (r = this._$EO) == null || r.forEach((i) => {
          var n;
          return (n = i.hostUpdate) == null ? void 0 : n.call(i);
        }), this.update(s)) : this._$EM();
      } catch (i) {
        throw e = false, this._$EM(), i;
      }
      e && this._$AE(s);
    }
    willUpdate(e) {
    }
    _$AE(e) {
      var s;
      (s = this._$EO) == null || s.forEach((r) => {
        var i;
        return (i = r.hostUpdated) == null ? void 0 : i.call(r);
      }), this.hasUpdated || (this.hasUpdated = true, this.firstUpdated(e)), this.updated(e);
    }
    _$EM() {
      this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = false;
    }
    get updateComplete() {
      return this.getUpdateComplete();
    }
    getUpdateComplete() {
      return this._$ES;
    }
    shouldUpdate(e) {
      return true;
    }
    update(e) {
      this._$Eq && (this._$Eq = this._$Eq.forEach((s) => this._$ET(s, this[s]))), this._$EM();
    }
    updated(e) {
    }
    firstUpdated(e) {
    }
  };
  xr.elementStyles = [], xr.shadowRootOptions = { mode: "open" }, xr[Ri$1("elementProperties")] = /* @__PURE__ */ new Map(), xr[Ri$1("finalized")] = /* @__PURE__ */ new Map(), ra == null || ra({ ReactiveElement: xr }), (Os.reactiveElementVersions ?? (Os.reactiveElementVersions = [])).push("2.1.0");
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const Ui$1 = globalThis, ho$1 = Ui$1.trustedTypes, _u = ho$1 ? ho$1.createPolicy("lit-html", { createHTML: (t) => t }) : void 0, Oh = "$lit$", Cs = `lit$${Math.random().toFixed(9).slice(2)}$`, Th = "?" + Cs, SI = `<${Th}>`, rr = document, dn$1 = () => rr.createComment(""), hn$1 = (t) => t === null || typeof t != "object" && typeof t != "function", pc = Array.isArray, PI = (t) => pc(t) || typeof (t == null ? void 0 : t[Symbol.iterator]) == "function", ia = `[ 	
\f\r]`, yi = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, Su = /-->/g, Pu = />/g, Ls = RegExp(`>|${ia}(?:([^\\s"'>=/]+)(${ia}*=${ia}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), Ou = /'/g, Tu = /"/g, xh = /^(?:script|style|textarea|title)$/i, kh = (t) => (e, ...s) => ({ _$litType$: t, strings: e, values: s }), vA = kh(1), EA = kh(2), Xr = Symbol.for("lit-noChange"), We$2 = Symbol.for("lit-nothing"), xu = /* @__PURE__ */ new WeakMap(), Vs = rr.createTreeWalker(rr, 129);
  function $h(t, e) {
    if (!pc(t) || !t.hasOwnProperty("raw")) throw Error("invalid template strings array");
    return _u !== void 0 ? _u.createHTML(e) : e;
  }
  const OI = (t, e) => {
    const s = t.length - 1, r = [];
    let i, n = e === 2 ? "<svg>" : e === 3 ? "<math>" : "", o = yi;
    for (let a = 0; a < s; a++) {
      const c = t[a];
      let l, u, d = -1, h = 0;
      for (; h < c.length && (o.lastIndex = h, u = o.exec(c), u !== null); ) h = o.lastIndex, o === yi ? u[1] === "!--" ? o = Su : u[1] !== void 0 ? o = Pu : u[2] !== void 0 ? (xh.test(u[2]) && (i = RegExp("</" + u[2], "g")), o = Ls) : u[3] !== void 0 && (o = Ls) : o === Ls ? u[0] === ">" ? (o = i ?? yi, d = -1) : u[1] === void 0 ? d = -2 : (d = o.lastIndex - u[2].length, l = u[1], o = u[3] === void 0 ? Ls : u[3] === '"' ? Tu : Ou) : o === Tu || o === Ou ? o = Ls : o === Su || o === Pu ? o = yi : (o = Ls, i = void 0);
      const p = o === Ls && t[a + 1].startsWith("/>") ? " " : "";
      n += o === yi ? c + SI : d >= 0 ? (r.push(l), c.slice(0, d) + Oh + c.slice(d) + Cs + p) : c + Cs + (d === -2 ? a : p);
    }
    return [$h(t, n + (t[s] || "<?>") + (e === 2 ? "</svg>" : e === 3 ? "</math>" : "")), r];
  };
  let pn$1 = class pn {
    constructor({ strings: e, _$litType$: s }, r) {
      let i;
      this.parts = [];
      let n = 0, o = 0;
      const a = e.length - 1, c = this.parts, [l, u] = OI(e, s);
      if (this.el = pn.createElement(l, r), Vs.currentNode = this.el.content, s === 2 || s === 3) {
        const d = this.el.content.firstChild;
        d.replaceWith(...d.childNodes);
      }
      for (; (i = Vs.nextNode()) !== null && c.length < a; ) {
        if (i.nodeType === 1) {
          if (i.hasAttributes()) for (const d of i.getAttributeNames()) if (d.endsWith(Oh)) {
            const h = u[o++], p = i.getAttribute(d).split(Cs), g = /([.?@])?(.*)/.exec(h);
            c.push({ type: 1, index: n, name: g[2], strings: p, ctor: g[1] === "." ? xI : g[1] === "?" ? kI : g[1] === "@" ? $I : Ao }), i.removeAttribute(d);
          } else d.startsWith(Cs) && (c.push({ type: 6, index: n }), i.removeAttribute(d));
          if (xh.test(i.tagName)) {
            const d = i.textContent.split(Cs), h = d.length - 1;
            if (h > 0) {
              i.textContent = ho$1 ? ho$1.emptyScript : "";
              for (let p = 0; p < h; p++) i.append(d[p], dn$1()), Vs.nextNode(), c.push({ type: 2, index: ++n });
              i.append(d[h], dn$1());
            }
          }
        } else if (i.nodeType === 8) if (i.data === Th) c.push({ type: 2, index: n });
        else {
          let d = -1;
          for (; (d = i.data.indexOf(Cs, d + 1)) !== -1; ) c.push({ type: 7, index: n }), d += Cs.length - 1;
        }
        n++;
      }
    }
    static createElement(e, s) {
      const r = rr.createElement("template");
      return r.innerHTML = e, r;
    }
  };
  function Zr(t, e, s = t, r) {
    var o, a;
    if (e === Xr) return e;
    let i = r !== void 0 ? (o = s._$Co) == null ? void 0 : o[r] : s._$Cl;
    const n = hn$1(e) ? void 0 : e._$litDirective$;
    return (i == null ? void 0 : i.constructor) !== n && ((a = i == null ? void 0 : i._$AO) == null || a.call(i, false), n === void 0 ? i = void 0 : (i = new n(t), i._$AT(t, s, r)), r !== void 0 ? (s._$Co ?? (s._$Co = []))[r] = i : s._$Cl = i), i !== void 0 && (e = Zr(t, i._$AS(t, e.values), i, r)), e;
  }
  class TI {
    constructor(e, s) {
      this._$AV = [], this._$AN = void 0, this._$AD = e, this._$AM = s;
    }
    get parentNode() {
      return this._$AM.parentNode;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    u(e) {
      const { el: { content: s }, parts: r } = this._$AD, i = ((e == null ? void 0 : e.creationScope) ?? rr).importNode(s, true);
      Vs.currentNode = i;
      let n = Vs.nextNode(), o = 0, a = 0, c = r[0];
      for (; c !== void 0; ) {
        if (o === c.index) {
          let l;
          c.type === 2 ? l = new An$1(n, n.nextSibling, this, e) : c.type === 1 ? l = new c.ctor(n, c.name, c.strings, this, e) : c.type === 6 && (l = new RI(n, this, e)), this._$AV.push(l), c = r[++a];
        }
        o !== (c == null ? void 0 : c.index) && (n = Vs.nextNode(), o++);
      }
      return Vs.currentNode = rr, i;
    }
    p(e) {
      let s = 0;
      for (const r of this._$AV) r !== void 0 && (r.strings !== void 0 ? (r._$AI(e, r, s), s += r.strings.length - 2) : r._$AI(e[s])), s++;
    }
  }
  let An$1 = class An {
    get _$AU() {
      var e;
      return ((e = this._$AM) == null ? void 0 : e._$AU) ?? this._$Cv;
    }
    constructor(e, s, r, i) {
      this.type = 2, this._$AH = We$2, this._$AN = void 0, this._$AA = e, this._$AB = s, this._$AM = r, this.options = i, this._$Cv = (i == null ? void 0 : i.isConnected) ?? true;
    }
    get parentNode() {
      let e = this._$AA.parentNode;
      const s = this._$AM;
      return s !== void 0 && (e == null ? void 0 : e.nodeType) === 11 && (e = s.parentNode), e;
    }
    get startNode() {
      return this._$AA;
    }
    get endNode() {
      return this._$AB;
    }
    _$AI(e, s = this) {
      e = Zr(this, e, s), hn$1(e) ? e === We$2 || e == null || e === "" ? (this._$AH !== We$2 && this._$AR(), this._$AH = We$2) : e !== this._$AH && e !== Xr && this._(e) : e._$litType$ !== void 0 ? this.$(e) : e.nodeType !== void 0 ? this.T(e) : PI(e) ? this.k(e) : this._(e);
    }
    O(e) {
      return this._$AA.parentNode.insertBefore(e, this._$AB);
    }
    T(e) {
      this._$AH !== e && (this._$AR(), this._$AH = this.O(e));
    }
    _(e) {
      this._$AH !== We$2 && hn$1(this._$AH) ? this._$AA.nextSibling.data = e : this.T(rr.createTextNode(e)), this._$AH = e;
    }
    $(e) {
      var n;
      const { values: s, _$litType$: r } = e, i = typeof r == "number" ? this._$AC(e) : (r.el === void 0 && (r.el = pn$1.createElement($h(r.h, r.h[0]), this.options)), r);
      if (((n = this._$AH) == null ? void 0 : n._$AD) === i) this._$AH.p(s);
      else {
        const o = new TI(i, this), a = o.u(this.options);
        o.p(s), this.T(a), this._$AH = o;
      }
    }
    _$AC(e) {
      let s = xu.get(e.strings);
      return s === void 0 && xu.set(e.strings, s = new pn$1(e)), s;
    }
    k(e) {
      pc(this._$AH) || (this._$AH = [], this._$AR());
      const s = this._$AH;
      let r, i = 0;
      for (const n of e) i === s.length ? s.push(r = new An(this.O(dn$1()), this.O(dn$1()), this, this.options)) : r = s[i], r._$AI(n), i++;
      i < s.length && (this._$AR(r && r._$AB.nextSibling, i), s.length = i);
    }
    _$AR(e = this._$AA.nextSibling, s) {
      var r;
      for ((r = this._$AP) == null ? void 0 : r.call(this, false, true, s); e && e !== this._$AB; ) {
        const i = e.nextSibling;
        e.remove(), e = i;
      }
    }
    setConnected(e) {
      var s;
      this._$AM === void 0 && (this._$Cv = e, (s = this._$AP) == null || s.call(this, e));
    }
  };
  class Ao {
    get tagName() {
      return this.element.tagName;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    constructor(e, s, r, i, n) {
      this.type = 1, this._$AH = We$2, this._$AN = void 0, this.element = e, this.name = s, this._$AM = i, this.options = n, r.length > 2 || r[0] !== "" || r[1] !== "" ? (this._$AH = Array(r.length - 1).fill(new String()), this.strings = r) : this._$AH = We$2;
    }
    _$AI(e, s = this, r, i) {
      const n = this.strings;
      let o = false;
      if (n === void 0) e = Zr(this, e, s, 0), o = !hn$1(e) || e !== this._$AH && e !== Xr, o && (this._$AH = e);
      else {
        const a = e;
        let c, l;
        for (e = n[0], c = 0; c < n.length - 1; c++) l = Zr(this, a[r + c], s, c), l === Xr && (l = this._$AH[c]), o || (o = !hn$1(l) || l !== this._$AH[c]), l === We$2 ? e = We$2 : e !== We$2 && (e += (l ?? "") + n[c + 1]), this._$AH[c] = l;
      }
      o && !i && this.j(e);
    }
    j(e) {
      e === We$2 ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, e ?? "");
    }
  }
  class xI extends Ao {
    constructor() {
      super(...arguments), this.type = 3;
    }
    j(e) {
      this.element[this.name] = e === We$2 ? void 0 : e;
    }
  }
  class kI extends Ao {
    constructor() {
      super(...arguments), this.type = 4;
    }
    j(e) {
      this.element.toggleAttribute(this.name, !!e && e !== We$2);
    }
  }
  class $I extends Ao {
    constructor(e, s, r, i, n) {
      super(e, s, r, i, n), this.type = 5;
    }
    _$AI(e, s = this) {
      if ((e = Zr(this, e, s, 0) ?? We$2) === Xr) return;
      const r = this._$AH, i = e === We$2 && r !== We$2 || e.capture !== r.capture || e.once !== r.once || e.passive !== r.passive, n = e !== We$2 && (r === We$2 || i);
      i && this.element.removeEventListener(this.name, this, r), n && this.element.addEventListener(this.name, this, e), this._$AH = e;
    }
    handleEvent(e) {
      var s;
      typeof this._$AH == "function" ? this._$AH.call(((s = this.options) == null ? void 0 : s.host) ?? this.element, e) : this._$AH.handleEvent(e);
    }
  }
  class RI {
    constructor(e, s, r) {
      this.element = e, this.type = 6, this._$AN = void 0, this._$AM = s, this.options = r;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    _$AI(e) {
      Zr(this, e);
    }
  }
  const na = Ui$1.litHtmlPolyfillSupport;
  na == null || na(pn$1, An$1), (Ui$1.litHtmlVersions ?? (Ui$1.litHtmlVersions = [])).push("3.3.0");
  const UI = (t, e, s) => {
    const r = (s == null ? void 0 : s.renderBefore) ?? e;
    let i = r._$litPart$;
    if (i === void 0) {
      const n = (s == null ? void 0 : s.renderBefore) ?? null;
      r._$litPart$ = i = new An$1(e.insertBefore(dn$1(), n), n, void 0, s ?? {});
    }
    return i._$AI(t), i;
  };
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const Xs = globalThis;
  let eo$1 = class eo extends xr {
    constructor() {
      super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
    }
    createRenderRoot() {
      var s;
      const e = super.createRenderRoot();
      return (s = this.renderOptions).renderBefore ?? (s.renderBefore = e.firstChild), e;
    }
    update(e) {
      const s = this.render();
      this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(e), this._$Do = UI(s, this.renderRoot, this.renderOptions);
    }
    connectedCallback() {
      var e;
      super.connectedCallback(), (e = this._$Do) == null || e.setConnected(true);
    }
    disconnectedCallback() {
      var e;
      super.disconnectedCallback(), (e = this._$Do) == null || e.setConnected(false);
    }
    render() {
      return Xr;
    }
  };
  var Uu;
  eo$1._$litElement$ = true, eo$1.finalized = true, (Uu = Xs.litElementHydrateSupport) == null || Uu.call(Xs, { LitElement: eo$1 });
  const oa = Xs.litElementPolyfillSupport;
  oa == null || oa({ LitElement: eo$1 });
  (Xs.litElementVersions ?? (Xs.litElementVersions = [])).push("4.2.0");
  let Di$1, Ts, xs;
  function CA(t, e) {
    Di$1 = document.createElement("style"), Ts = document.createElement("style"), xs = document.createElement("style"), Di$1.textContent = Mr(t).core.cssText, Ts.textContent = Mr(t).dark.cssText, xs.textContent = Mr(t).light.cssText, document.head.appendChild(Di$1), document.head.appendChild(Ts), document.head.appendChild(xs), Rh(e);
  }
  function Rh(t) {
    Ts && xs && (t === "light" ? (Ts.removeAttribute("media"), xs.media = "enabled") : (xs.removeAttribute("media"), Ts.media = "enabled"));
  }
  function DI(t) {
    Di$1 && Ts && xs && (Di$1.textContent = Mr(t).core.cssText, Ts.textContent = Mr(t).dark.cssText, xs.textContent = Mr(t).light.cssText);
  }
  function Mr(t) {
    return {
      core: Lr`
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
      @keyframes w3m-shake {
        0% {
          transform: scale(1) rotate(0deg);
        }
        20% {
          transform: scale(1) rotate(-1deg);
        }
        40% {
          transform: scale(1) rotate(1.5deg);
        }
        60% {
          transform: scale(1) rotate(-1.5deg);
        }
        80% {
          transform: scale(1) rotate(1deg);
        }
        100% {
          transform: scale(1) rotate(0deg);
        }
      }
      @keyframes w3m-iframe-fade-out {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
      @keyframes w3m-iframe-zoom-in {
        0% {
          transform: translateY(50px);
          opacity: 0;
        }
        100% {
          transform: translateY(0px);
          opacity: 1;
        }
      }
      @keyframes w3m-iframe-zoom-in-mobile {
        0% {
          transform: scale(0.95);
          opacity: 0;
        }
        100% {
          transform: scale(1);
          opacity: 1;
        }
      }
      :root {
        --w3m-modal-width: 360px;
        --w3m-color-mix-strength: ${Ot$2(t != null && t["--w3m-color-mix-strength"] ? `${t["--w3m-color-mix-strength"]}%` : "0%")};
        --w3m-font-family: ${Ot$2((t == null ? void 0 : t["--w3m-font-family"]) || "Inter, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;")};
        --w3m-font-size-master: ${Ot$2((t == null ? void 0 : t["--w3m-font-size-master"]) || "10px")};
        --w3m-border-radius-master: ${Ot$2((t == null ? void 0 : t["--w3m-border-radius-master"]) || "4px")};
        --w3m-z-index: ${Ot$2((t == null ? void 0 : t["--w3m-z-index"]) || 999)};

        --wui-font-family: var(--w3m-font-family);

        --wui-font-size-mini: calc(var(--w3m-font-size-master) * 0.8);
        --wui-font-size-micro: var(--w3m-font-size-master);
        --wui-font-size-tiny: calc(var(--w3m-font-size-master) * 1.2);
        --wui-font-size-small: calc(var(--w3m-font-size-master) * 1.4);
        --wui-font-size-paragraph: calc(var(--w3m-font-size-master) * 1.6);
        --wui-font-size-medium: calc(var(--w3m-font-size-master) * 1.8);
        --wui-font-size-large: calc(var(--w3m-font-size-master) * 2);
        --wui-font-size-title-6: calc(var(--w3m-font-size-master) * 2.2);
        --wui-font-size-medium-title: calc(var(--w3m-font-size-master) * 2.4);
        --wui-font-size-2xl: calc(var(--w3m-font-size-master) * 4);

        --wui-border-radius-5xs: var(--w3m-border-radius-master);
        --wui-border-radius-4xs: calc(var(--w3m-border-radius-master) * 1.5);
        --wui-border-radius-3xs: calc(var(--w3m-border-radius-master) * 2);
        --wui-border-radius-xxs: calc(var(--w3m-border-radius-master) * 3);
        --wui-border-radius-xs: calc(var(--w3m-border-radius-master) * 4);
        --wui-border-radius-s: calc(var(--w3m-border-radius-master) * 5);
        --wui-border-radius-m: calc(var(--w3m-border-radius-master) * 7);
        --wui-border-radius-l: calc(var(--w3m-border-radius-master) * 9);
        --wui-border-radius-3xl: calc(var(--w3m-border-radius-master) * 20);

        --wui-font-weight-light: 400;
        --wui-font-weight-regular: 500;
        --wui-font-weight-medium: 600;
        --wui-font-weight-bold: 700;

        --wui-letter-spacing-2xl: -1.6px;
        --wui-letter-spacing-medium-title: -0.96px;
        --wui-letter-spacing-title-6: -0.88px;
        --wui-letter-spacing-large: -0.8px;
        --wui-letter-spacing-medium: -0.72px;
        --wui-letter-spacing-paragraph: -0.64px;
        --wui-letter-spacing-small: -0.56px;
        --wui-letter-spacing-tiny: -0.48px;
        --wui-letter-spacing-micro: -0.2px;
        --wui-letter-spacing-mini: -0.16px;

        --wui-spacing-0: 0px;
        --wui-spacing-4xs: 2px;
        --wui-spacing-3xs: 4px;
        --wui-spacing-xxs: 6px;
        --wui-spacing-2xs: 7px;
        --wui-spacing-xs: 8px;
        --wui-spacing-1xs: 10px;
        --wui-spacing-s: 12px;
        --wui-spacing-m: 14px;
        --wui-spacing-l: 16px;
        --wui-spacing-2l: 18px;
        --wui-spacing-xl: 20px;
        --wui-spacing-xxl: 24px;
        --wui-spacing-2xl: 32px;
        --wui-spacing-3xl: 40px;
        --wui-spacing-4xl: 90px;
        --wui-spacing-5xl: 95px;

        --wui-icon-box-size-xxs: 14px;
        --wui-icon-box-size-xs: 20px;
        --wui-icon-box-size-sm: 24px;
        --wui-icon-box-size-md: 32px;
        --wui-icon-box-size-mdl: 36px;
        --wui-icon-box-size-lg: 40px;
        --wui-icon-box-size-2lg: 48px;
        --wui-icon-box-size-xl: 64px;

        --wui-icon-size-inherit: inherit;
        --wui-icon-size-xxs: 10px;
        --wui-icon-size-xs: 12px;
        --wui-icon-size-sm: 14px;
        --wui-icon-size-md: 16px;
        --wui-icon-size-mdl: 18px;
        --wui-icon-size-lg: 20px;
        --wui-icon-size-xl: 24px;
        --wui-icon-size-xxl: 28px;

        --wui-wallet-image-size-inherit: inherit;
        --wui-wallet-image-size-sm: 40px;
        --wui-wallet-image-size-md: 56px;
        --wui-wallet-image-size-lg: 80px;

        --wui-visual-size-size-inherit: inherit;
        --wui-visual-size-sm: 40px;
        --wui-visual-size-md: 55px;
        --wui-visual-size-lg: 80px;

        --wui-box-size-md: 100px;
        --wui-box-size-lg: 120px;

        --wui-ease-out-power-2: cubic-bezier(0, 0, 0.22, 1);
        --wui-ease-out-power-1: cubic-bezier(0, 0, 0.55, 1);

        --wui-ease-in-power-3: cubic-bezier(0.66, 0, 1, 1);
        --wui-ease-in-power-2: cubic-bezier(0.45, 0, 1, 1);
        --wui-ease-in-power-1: cubic-bezier(0.3, 0, 1, 1);

        --wui-ease-inout-power-1: cubic-bezier(0.45, 0, 0.55, 1);

        --wui-duration-lg: 200ms;
        --wui-duration-md: 125ms;
        --wui-duration-sm: 75ms;

        --wui-path-network-sm: path(
          'M15.4 2.1a5.21 5.21 0 0 1 5.2 0l11.61 6.7a5.21 5.21 0 0 1 2.61 4.52v13.4c0 1.87-1 3.59-2.6 4.52l-11.61 6.7c-1.62.93-3.6.93-5.22 0l-11.6-6.7a5.21 5.21 0 0 1-2.61-4.51v-13.4c0-1.87 1-3.6 2.6-4.52L15.4 2.1Z'
        );

        --wui-path-network-md: path(
          'M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z'
        );

        --wui-path-network-lg: path(
          'M78.3244 18.926L50.1808 2.45078C45.7376 -0.150261 40.2624 -0.150262 35.8192 2.45078L7.6756 18.926C3.23322 21.5266 0.5 26.3301 0.5 31.5248V64.4752C0.5 69.6699 3.23322 74.4734 7.6756 77.074L35.8192 93.5492C40.2624 96.1503 45.7376 96.1503 50.1808 93.5492L78.3244 77.074C82.7668 74.4734 85.5 69.6699 85.5 64.4752V31.5248C85.5 26.3301 82.7668 21.5266 78.3244 18.926Z'
        );

        --wui-width-network-sm: 36px;
        --wui-width-network-md: 48px;
        --wui-width-network-lg: 86px;

        --wui-height-network-sm: 40px;
        --wui-height-network-md: 54px;
        --wui-height-network-lg: 96px;

        --wui-icon-size-network-xs: 12px;
        --wui-icon-size-network-sm: 16px;
        --wui-icon-size-network-md: 24px;
        --wui-icon-size-network-lg: 42px;

        --wui-color-inherit: inherit;

        --wui-color-inverse-100: #fff;
        --wui-color-inverse-000: #000;

        --wui-cover: rgba(20, 20, 20, 0.8);

        --wui-color-modal-bg: var(--wui-color-modal-bg-base);

        --wui-color-accent-100: var(--wui-color-accent-base-100);
        --wui-color-accent-090: var(--wui-color-accent-base-090);
        --wui-color-accent-080: var(--wui-color-accent-base-080);

        --wui-color-success-100: var(--wui-color-success-base-100);
        --wui-color-success-125: var(--wui-color-success-base-125);

        --wui-color-warning-100: var(--wui-color-warning-base-100);

        --wui-color-error-100: var(--wui-color-error-base-100);
        --wui-color-error-125: var(--wui-color-error-base-125);

        --wui-color-blue-100: var(--wui-color-blue-base-100);
        --wui-color-blue-90: var(--wui-color-blue-base-90);

        --wui-icon-box-bg-error-100: var(--wui-icon-box-bg-error-base-100);
        --wui-icon-box-bg-blue-100: var(--wui-icon-box-bg-blue-base-100);
        --wui-icon-box-bg-success-100: var(--wui-icon-box-bg-success-base-100);
        --wui-icon-box-bg-inverse-100: var(--wui-icon-box-bg-inverse-base-100);

        --wui-all-wallets-bg-100: var(--wui-all-wallets-bg-100);

        --wui-avatar-border: var(--wui-avatar-border-base);

        --wui-thumbnail-border: var(--wui-thumbnail-border-base);

        --wui-wallet-button-bg: var(--wui-wallet-button-bg-base);

        --wui-box-shadow-blue: var(--wui-color-accent-glass-020);
      }

      @supports (background: color-mix(in srgb, white 50%, black)) {
        :root {
          --wui-color-modal-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-modal-bg-base)
          );

          --wui-box-shadow-blue: color-mix(in srgb, var(--wui-color-accent-100) 20%, transparent);

          --wui-color-accent-100: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 100%,
            transparent
          );
          --wui-color-accent-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-glass-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-020: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 20%,
            transparent
          );
          --wui-color-accent-glass-015: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 15%,
            transparent
          );
          --wui-color-accent-glass-010: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 10%,
            transparent
          );
          --wui-color-accent-glass-005: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 5%,
            transparent
          );
          --wui-color-accent-002: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 2%,
            transparent
          );

          --wui-color-fg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-100)
          );
          --wui-color-fg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-125)
          );
          --wui-color-fg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-150)
          );
          --wui-color-fg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-175)
          );
          --wui-color-fg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-200)
          );
          --wui-color-fg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-225)
          );
          --wui-color-fg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-250)
          );
          --wui-color-fg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-275)
          );
          --wui-color-fg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-300)
          );
          --wui-color-fg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-325)
          );
          --wui-color-fg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-350)
          );

          --wui-color-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-100)
          );
          --wui-color-bg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-125)
          );
          --wui-color-bg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-150)
          );
          --wui-color-bg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-175)
          );
          --wui-color-bg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-200)
          );
          --wui-color-bg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-225)
          );
          --wui-color-bg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-250)
          );
          --wui-color-bg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-275)
          );
          --wui-color-bg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-300)
          );
          --wui-color-bg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-325)
          );
          --wui-color-bg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-350)
          );

          --wui-color-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-100)
          );
          --wui-color-success-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-125)
          );

          --wui-color-warning-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-warning-base-100)
          );

          --wui-color-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-100)
          );
          --wui-color-blue-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-100)
          );
          --wui-color-blue-90: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-90)
          );
          --wui-color-error-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-125)
          );

          --wui-icon-box-bg-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-error-base-100)
          );
          --wui-icon-box-bg-accent-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-blue-base-100)
          );
          --wui-icon-box-bg-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-success-base-100)
          );
          --wui-icon-box-bg-inverse-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-inverse-base-100)
          );

          --wui-all-wallets-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-all-wallets-bg-100)
          );

          --wui-avatar-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-avatar-border-base)
          );

          --wui-thumbnail-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-thumbnail-border-base)
          );

          --wui-wallet-button-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-wallet-button-bg-base)
          );
        }
      }
    `,
      light: Lr`
      :root {
        --w3m-color-mix: ${Ot$2((t == null ? void 0 : t["--w3m-color-mix"]) || "#fff")};
        --w3m-accent: ${Ot$2(Is(t, "dark")["--w3m-accent"])};
        --w3m-default: #fff;

        --wui-color-modal-bg-base: ${Ot$2(Is(t, "dark")["--w3m-background"])};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(230, 100%, 67%, 1);
        --wui-color-blueberry-090: hsla(231, 76%, 61%, 1);
        --wui-color-blueberry-080: hsla(230, 59%, 55%, 1);
        --wui-color-blueberry-050: hsla(231, 100%, 70%, 0.1);

        --wui-color-fg-100: #e4e7e7;
        --wui-color-fg-125: #d0d5d5;
        --wui-color-fg-150: #a8b1b1;
        --wui-color-fg-175: #a8b0b0;
        --wui-color-fg-200: #949e9e;
        --wui-color-fg-225: #868f8f;
        --wui-color-fg-250: #788080;
        --wui-color-fg-275: #788181;
        --wui-color-fg-300: #6e7777;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #363636;

        --wui-color-bg-100: #141414;
        --wui-color-bg-125: #191a1a;
        --wui-color-bg-150: #1e1f1f;
        --wui-color-bg-175: #222525;
        --wui-color-bg-200: #272a2a;
        --wui-color-bg-225: #2c3030;
        --wui-color-bg-250: #313535;
        --wui-color-bg-275: #363b3b;
        --wui-color-bg-300: #3b4040;
        --wui-color-bg-325: #252525;
        --wui-color-bg-350: #ffffff;

        --wui-color-success-base-100: #26d962;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f25a67;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 217, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 217, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 217, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 217, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 217, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 217, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 217, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 217, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 217, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 217, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(242, 90, 103, 0.01);
        --wui-color-error-glass-002: rgba(242, 90, 103, 0.02);
        --wui-color-error-glass-005: rgba(242, 90, 103, 0.05);
        --wui-color-error-glass-010: rgba(242, 90, 103, 0.1);
        --wui-color-error-glass-015: rgba(242, 90, 103, 0.15);
        --wui-color-error-glass-020: rgba(242, 90, 103, 0.2);
        --wui-color-error-glass-025: rgba(242, 90, 103, 0.25);
        --wui-color-error-glass-030: rgba(242, 90, 103, 0.3);
        --wui-color-error-glass-060: rgba(242, 90, 103, 0.6);
        --wui-color-error-glass-080: rgba(242, 90, 103, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-color-gray-glass-001: rgba(255, 255, 255, 0.01);
        --wui-color-gray-glass-002: rgba(255, 255, 255, 0.02);
        --wui-color-gray-glass-005: rgba(255, 255, 255, 0.05);
        --wui-color-gray-glass-010: rgba(255, 255, 255, 0.1);
        --wui-color-gray-glass-015: rgba(255, 255, 255, 0.15);
        --wui-color-gray-glass-020: rgba(255, 255, 255, 0.2);
        --wui-color-gray-glass-025: rgba(255, 255, 255, 0.25);
        --wui-color-gray-glass-030: rgba(255, 255, 255, 0.3);
        --wui-color-gray-glass-060: rgba(255, 255, 255, 0.6);
        --wui-color-gray-glass-080: rgba(255, 255, 255, 0.8);
        --wui-color-gray-glass-090: rgba(255, 255, 255, 0.9);

        --wui-color-dark-glass-100: rgba(42, 42, 42, 1);

        --wui-icon-box-bg-error-base-100: #3c2426;
        --wui-icon-box-bg-blue-base-100: #20303f;
        --wui-icon-box-bg-success-base-100: #1f3a28;
        --wui-icon-box-bg-inverse-base-100: #243240;

        --wui-all-wallets-bg-100: #222b35;

        --wui-avatar-border-base: #252525;

        --wui-thumbnail-border-base: #252525;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --w3m-card-embedded-shadow-color: rgb(17 17 18 / 25%);
      }
    `,
      dark: Lr`
      :root {
        --w3m-color-mix: ${Ot$2((t == null ? void 0 : t["--w3m-color-mix"]) || "#000")};
        --w3m-accent: ${Ot$2(Is(t, "light")["--w3m-accent"])};
        --w3m-default: #000;

        --wui-color-modal-bg-base: ${Ot$2(Is(t, "light")["--w3m-background"])};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(231, 100%, 70%, 1);
        --wui-color-blueberry-090: hsla(231, 97%, 72%, 1);
        --wui-color-blueberry-080: hsla(231, 92%, 74%, 1);

        --wui-color-fg-100: #141414;
        --wui-color-fg-125: #2d3131;
        --wui-color-fg-150: #474d4d;
        --wui-color-fg-175: #636d6d;
        --wui-color-fg-200: #798686;
        --wui-color-fg-225: #828f8f;
        --wui-color-fg-250: #8b9797;
        --wui-color-fg-275: #95a0a0;
        --wui-color-fg-300: #9ea9a9;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #d0d0d0;

        --wui-color-bg-100: #ffffff;
        --wui-color-bg-125: #f5fafa;
        --wui-color-bg-150: #f3f8f8;
        --wui-color-bg-175: #eef4f4;
        --wui-color-bg-200: #eaf1f1;
        --wui-color-bg-225: #e5eded;
        --wui-color-bg-250: #e1e9e9;
        --wui-color-bg-275: #dce7e7;
        --wui-color-bg-300: #d8e3e3;
        --wui-color-bg-325: #f3f3f3;
        --wui-color-bg-350: #202020;

        --wui-color-success-base-100: #26b562;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f05142;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 181, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 181, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 181, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 181, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 181, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 181, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 181, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 181, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 181, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 181, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(240, 81, 66, 0.01);
        --wui-color-error-glass-002: rgba(240, 81, 66, 0.02);
        --wui-color-error-glass-005: rgba(240, 81, 66, 0.05);
        --wui-color-error-glass-010: rgba(240, 81, 66, 0.1);
        --wui-color-error-glass-015: rgba(240, 81, 66, 0.15);
        --wui-color-error-glass-020: rgba(240, 81, 66, 0.2);
        --wui-color-error-glass-025: rgba(240, 81, 66, 0.25);
        --wui-color-error-glass-030: rgba(240, 81, 66, 0.3);
        --wui-color-error-glass-060: rgba(240, 81, 66, 0.6);
        --wui-color-error-glass-080: rgba(240, 81, 66, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-icon-box-bg-error-base-100: #f4dfdd;
        --wui-icon-box-bg-blue-base-100: #d9ecfb;
        --wui-icon-box-bg-success-base-100: #daf0e4;
        --wui-icon-box-bg-inverse-base-100: #dcecfc;

        --wui-all-wallets-bg-100: #e8f1fa;

        --wui-avatar-border-base: #f3f4f4;

        --wui-thumbnail-border-base: #eaefef;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --wui-color-gray-glass-001: rgba(0, 0, 0, 0.01);
        --wui-color-gray-glass-002: rgba(0, 0, 0, 0.02);
        --wui-color-gray-glass-005: rgba(0, 0, 0, 0.05);
        --wui-color-gray-glass-010: rgba(0, 0, 0, 0.1);
        --wui-color-gray-glass-015: rgba(0, 0, 0, 0.15);
        --wui-color-gray-glass-020: rgba(0, 0, 0, 0.2);
        --wui-color-gray-glass-025: rgba(0, 0, 0, 0.25);
        --wui-color-gray-glass-030: rgba(0, 0, 0, 0.3);
        --wui-color-gray-glass-060: rgba(0, 0, 0, 0.6);
        --wui-color-gray-glass-080: rgba(0, 0, 0, 0.8);
        --wui-color-gray-glass-090: rgba(0, 0, 0, 0.9);

        --wui-color-dark-glass-100: rgba(233, 233, 233, 1);

        --w3m-card-embedded-shadow-color: rgb(224 225 233 / 25%);
      }
    `
    };
  }
  const IA = Lr`
  *,
  *::after,
  *::before,
  :host {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-style: normal;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-tap-highlight-color: transparent;
    font-family: var(--wui-font-family);
    backface-visibility: hidden;
  }
`, AA = Lr`
  button,
  a {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transition:
      color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      box-shadow var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color, color, border, box-shadow, border-radius;
    outline: none;
    border: none;
    column-gap: var(--wui-spacing-3xs);
    background-color: transparent;
    text-decoration: none;
  }

  wui-flex {
    transition: border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius;
  }

  button:disabled > wui-wallet-image,
  button:disabled > wui-all-wallets-image,
  button:disabled > wui-network-image,
  button:disabled > wui-image,
  button:disabled > wui-transaction-visual,
  button:disabled > wui-logo {
    filter: grayscale(1);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-005);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-010);
    }
  }

  button:disabled > wui-icon-box {
    opacity: 0.5;
  }

  input {
    border: none;
    outline: none;
    appearance: none;
  }
`, NA = Lr`
  .wui-color-inherit {
    color: var(--wui-color-inherit);
  }

  .wui-color-accent-100 {
    color: var(--wui-color-accent-100);
  }

  .wui-color-error-100 {
    color: var(--wui-color-error-100);
  }

  .wui-color-blue-100 {
    color: var(--wui-color-blue-100);
  }

  .wui-color-blue-90 {
    color: var(--wui-color-blue-90);
  }

  .wui-color-error-125 {
    color: var(--wui-color-error-125);
  }

  .wui-color-success-100 {
    color: var(--wui-color-success-100);
  }

  .wui-color-success-125 {
    color: var(--wui-color-success-125);
  }

  .wui-color-inverse-100 {
    color: var(--wui-color-inverse-100);
  }

  .wui-color-inverse-000 {
    color: var(--wui-color-inverse-000);
  }

  .wui-color-fg-100 {
    color: var(--wui-color-fg-100);
  }

  .wui-color-fg-200 {
    color: var(--wui-color-fg-200);
  }

  .wui-color-fg-300 {
    color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    color: var(--wui-color-fg-350);
  }

  .wui-bg-color-inherit {
    background-color: var(--wui-color-inherit);
  }

  .wui-bg-color-blue-100 {
    background-color: var(--wui-color-accent-100);
  }

  .wui-bg-color-error-100 {
    background-color: var(--wui-color-error-100);
  }

  .wui-bg-color-error-125 {
    background-color: var(--wui-color-error-125);
  }

  .wui-bg-color-success-100 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-success-125 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-inverse-100 {
    background-color: var(--wui-color-inverse-100);
  }

  .wui-bg-color-inverse-000 {
    background-color: var(--wui-color-inverse-000);
  }

  .wui-bg-color-fg-100 {
    background-color: var(--wui-color-fg-100);
  }

  .wui-bg-color-fg-200 {
    background-color: var(--wui-color-fg-200);
  }

  .wui-bg-color-fg-300 {
    background-color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    background-color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    background-color: var(--wui-color-fg-350);
  }
`, Ai$1 = {
    ERROR_CODE_UNRECOGNIZED_CHAIN_ID: 4902,
    ERROR_CODE_DEFAULT: 5e3,
    ERROR_INVALID_CHAIN_ID: 32603,
    DEFAULT_ALLOWED_ANCESTORS: [
      "http://localhost:*",
      "https://*.pages.dev",
      "https://*.vercel.app",
      "https://*.ngrok-free.app",
      "https://secure-mobile.walletconnect.com",
      "https://secure-mobile.walletconnect.org"
    ]
  };
  function Nn$1(t) {
    return {
      formatters: void 0,
      fees: void 0,
      serializers: void 0,
      ...t
    };
  }
  const ku = Nn$1({
    id: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
    name: "Solana",
    network: "solana-mainnet",
    nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
    rpcUrls: {
      default: { http: ["https://rpc.walletconnect.org/v1"] }
    },
    blockExplorers: { default: { name: "Solscan", url: "https://solscan.io" } },
    testnet: false,
    chainNamespace: "solana",
    caipNetworkId: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
    deprecatedCaipNetworkId: "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ"
  }), $u = Nn$1({
    id: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
    name: "Solana Devnet",
    network: "solana-devnet",
    nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
    rpcUrls: {
      default: { http: ["https://rpc.walletconnect.org/v1"] }
    },
    blockExplorers: { default: { name: "Solscan", url: "https://solscan.io" } },
    testnet: true,
    chainNamespace: "solana",
    caipNetworkId: "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
    deprecatedCaipNetworkId: "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K"
  });
  Nn$1({
    id: "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
    name: "Solana Testnet",
    network: "solana-testnet",
    nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
    rpcUrls: {
      default: { http: ["https://rpc.walletconnect.org/v1"] }
    },
    blockExplorers: { default: { name: "Solscan", url: "https://solscan.io" } },
    testnet: true,
    chainNamespace: "solana",
    caipNetworkId: "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z"
  });
  Nn$1({
    id: "000000000019d6689c085ae165831e93",
    caipNetworkId: "bip122:000000000019d6689c085ae165831e93",
    chainNamespace: "bip122",
    name: "Bitcoin",
    nativeCurrency: {
      name: "Bitcoin",
      symbol: "BTC",
      decimals: 8
    },
    rpcUrls: {
      default: { http: ["https://rpc.walletconnect.org/v1"] }
    }
  });
  Nn$1({
    id: "000000000933ea01ad0ee984209779ba",
    caipNetworkId: "bip122:000000000933ea01ad0ee984209779ba",
    chainNamespace: "bip122",
    name: "Bitcoin Testnet",
    nativeCurrency: {
      name: "Bitcoin",
      symbol: "BTC",
      decimals: 8
    },
    rpcUrls: {
      default: { http: ["https://rpc.walletconnect.org/v1"] }
    },
    testnet: true
  });
  const LI = {
    solana: [
      "solana_signMessage",
      "solana_signTransaction",
      "solana_requestAccounts",
      "solana_getAccounts",
      "solana_signAllTransactions",
      "solana_signAndSendTransaction"
    ],
    eip155: [
      "eth_accounts",
      "eth_requestAccounts",
      "eth_sendRawTransaction",
      "eth_sign",
      "eth_signTransaction",
      "eth_signTypedData",
      "eth_signTypedData_v3",
      "eth_signTypedData_v4",
      "eth_sendTransaction",
      "personal_sign",
      "wallet_switchEthereumChain",
      "wallet_addEthereumChain",
      "wallet_getPermissions",
      "wallet_requestPermissions",
      "wallet_registerOnboarding",
      "wallet_watchAsset",
      "wallet_scanQRCode",
      // EIP-5792
      "wallet_getCallsStatus",
      "wallet_showCallsStatus",
      "wallet_sendCalls",
      "wallet_getCapabilities",
      // EIP-7715
      "wallet_grantPermissions",
      "wallet_revokePermissions",
      //EIP-7811
      "wallet_getAssets"
    ],
    bip122: ["sendTransfer", "signMessage", "signPsbt", "getAccountAddresses"]
  }, to$1 = {
    getMethodsByChainNamespace(t) {
      return LI[t] || [];
    },
    createDefaultNamespace(t) {
      return {
        methods: this.getMethodsByChainNamespace(t),
        events: ["accountsChanged", "chainChanged"],
        chains: [],
        rpcMap: {}
      };
    },
    applyNamespaceOverrides(t, e) {
      if (!e)
        return { ...t };
      const s = { ...t }, r = /* @__PURE__ */ new Set();
      if (e.methods && Object.keys(e.methods).forEach((i) => r.add(i)), e.chains && Object.keys(e.chains).forEach((i) => r.add(i)), e.events && Object.keys(e.events).forEach((i) => r.add(i)), e.rpcMap && Object.keys(e.rpcMap).forEach((i) => {
        const [n] = i.split(":");
        n && r.add(n);
      }), r.forEach((i) => {
        s[i] || (s[i] = this.createDefaultNamespace(i));
      }), e.methods && Object.entries(e.methods).forEach(([i, n]) => {
        s[i] && (s[i].methods = n);
      }), e.chains && Object.entries(e.chains).forEach(([i, n]) => {
        s[i] && (s[i].chains = n);
      }), e.events && Object.entries(e.events).forEach(([i, n]) => {
        s[i] && (s[i].events = n);
      }), e.rpcMap) {
        const i = /* @__PURE__ */ new Set();
        Object.entries(e.rpcMap).forEach(([n, o]) => {
          const [a, c] = n.split(":");
          !a || !c || !s[a] || (s[a].rpcMap || (s[a].rpcMap = {}), i.has(a) || (s[a].rpcMap = {}, i.add(a)), s[a].rpcMap[c] = o);
        });
      }
      return s;
    },
    createNamespaces(t, e) {
      const s = t.reduce((r, i) => {
        const { id: n, chainNamespace: o, rpcUrls: a } = i, c = a.default.http[0];
        r[o] || (r[o] = this.createDefaultNamespace(o));
        const l = `${o}:${n}`, u = r[o];
        switch (u.chains.push(l), l) {
          case ku.caipNetworkId:
            u.chains.push(ku.deprecatedCaipNetworkId);
            break;
          case $u.caipNetworkId:
            u.chains.push($u.deprecatedCaipNetworkId);
            break;
        }
        return u != null && u.rpcMap && c && (u.rpcMap[n] = c), r;
      }, {});
      return this.applyNamespaceOverrides(s, e);
    },
    resolveReownName: async (t) => {
      var r;
      const e = await Pi$1.resolveName(t);
      return ((r = (Object.values(e == null ? void 0 : e.addresses) || [])[0]) == null ? void 0 : r.address) || false;
    },
    getChainsFromNamespaces(t = {}) {
      return Object.values(t).flatMap((e) => {
        const s = e.chains || [], r = e.accounts.map((i) => {
          const [n, o] = i.split(":");
          return `${n}:${o}`;
        });
        return Array.from(/* @__PURE__ */ new Set([...s, ...r]));
      });
    },
    isSessionEventData(t) {
      return typeof t == "object" && t !== null && "id" in t && "topic" in t && "params" in t && typeof t.params == "object" && t.params !== null && "chainId" in t.params && "event" in t.params && typeof t.params.event == "object" && t.params.event !== null;
    },
    isOriginAllowed(t, e, s) {
      for (const r of [...e, ...s])
        if (r.includes("*")) {
          const n = `^${r.replace(/[.*+?^${}()|[\]\\]/gu, "\\$&").replace(/\\\*/gu, ".*")}$`;
          if (new RegExp(n, "u").test(t))
            return true;
        } else
          try {
            if (new URL(r).origin === t)
              return !0;
          } catch {
            if (r === t)
              return true;
          }
      return false;
    }
  };
  class Uh {
    constructor({ provider: e, namespace: s }) {
      this.id = z$3.CONNECTOR_ID.WALLET_CONNECT, this.name = lo$1.ConnectorNamesMap[z$3.CONNECTOR_ID.WALLET_CONNECT], this.type = "WALLET_CONNECT", this.imageId = lo$1.ConnectorImageIds[z$3.CONNECTOR_ID.WALLET_CONNECT], this.getCaipNetworks = m.getCaipNetworks.bind(m), this.caipNetworks = this.getCaipNetworks(), this.provider = e, this.chain = s;
    }
    get chains() {
      return this.getCaipNetworks();
    }
    async connectWalletConnect() {
      if (!await this.authenticate()) {
        const s = this.getCaipNetworks(), r = T$2.state.universalProviderConfigOverride, i = to$1.createNamespaces(s, r);
        await this.provider.connect({ optionalNamespaces: i });
      }
      return {
        clientId: await this.provider.client.core.crypto.getClientId(),
        session: this.provider.session
      };
    }
    async disconnect() {
      await this.provider.disconnect();
    }
    async authenticate() {
      const e = this.chains.map((s) => s.caipNetworkId);
      return Oi$1.universalProviderAuthenticate({
        universalProvider: this.provider,
        chains: e,
        methods: MI
      });
    }
  }
  const MI = [
    "eth_accounts",
    "eth_requestAccounts",
    "eth_sendRawTransaction",
    "eth_sign",
    "eth_signTransaction",
    "eth_signTypedData",
    "eth_signTypedData_v3",
    "eth_signTypedData_v4",
    "eth_sendTransaction",
    "personal_sign",
    "wallet_switchEthereumChain",
    "wallet_addEthereumChain",
    "wallet_getPermissions",
    "wallet_requestPermissions",
    "wallet_registerOnboarding",
    "wallet_watchAsset",
    "wallet_scanQRCode",
    // EIP-5792
    "wallet_getCallsStatus",
    "wallet_sendCalls",
    "wallet_getCapabilities",
    // EIP-7715
    "wallet_grantPermissions",
    "wallet_revokePermissions",
    //EIP-7811
    "wallet_getAssets"
  ];
  class BI {
    /**
     * Creates an instance of AdapterBlueprint.
     * @param {AdapterBlueprint.Params} params - The parameters for initializing the adapter
     */
    constructor(e) {
      this.availableConnectors = [], this.eventListeners = /* @__PURE__ */ new Map(), this.getCaipNetworks = (s) => m.getCaipNetworks(s), e && this.construct(e);
    }
    /**
     * Initializes the adapter with the given parameters.
     * @param {AdapterBlueprint.Params} params - The parameters for initializing the adapter
     */
    construct(e) {
      this.projectId = e.projectId, this.namespace = e.namespace, this.adapterType = e.adapterType;
    }
    /**
     * Gets the available connectors.
     * @returns {Connector[]} An array of available connectors
     */
    get connectors() {
      return this.availableConnectors;
    }
    /**
     * Gets the supported networks.
     * @returns {CaipNetwork[]} An array of supported networks
     */
    get networks() {
      return this.getCaipNetworks(this.namespace);
    }
    /**
     * Sets the auth provider.
     * @param {W3mFrameProvider} authProvider - The auth provider instance
     */
    setAuthProvider(e) {
      this.addConnector({
        id: z$3.CONNECTOR_ID.AUTH,
        type: "AUTH",
        name: z$3.CONNECTOR_NAMES.AUTH,
        provider: e,
        imageId: lo$1.ConnectorImageIds[z$3.CONNECTOR_ID.AUTH],
        chain: this.namespace,
        chains: []
      });
    }
    /**
     * Adds one or more connectors to the available connectors list.
     * @param {...Connector} connectors - The connectors to add
     */
    addConnector(...e) {
      const s = /* @__PURE__ */ new Set();
      this.availableConnectors = [...e, ...this.availableConnectors].filter((r) => s.has(r.id) ? false : (s.add(r.id), true)), this.emit("connectors", this.availableConnectors);
    }
    setStatus(e, s) {
      W$2.setStatus(e, s);
    }
    /**
     * Adds an event listener for a specific event.
     * @template T
     * @param {T} eventName - The name of the event
     * @param {EventCallback<T>} callback - The callback function to be called when the event is emitted
     */
    on(e, s) {
      var r;
      this.eventListeners.has(e) || this.eventListeners.set(e, /* @__PURE__ */ new Set()), (r = this.eventListeners.get(e)) == null || r.add(s);
    }
    /**
     * Removes an event listener for a specific event.
     * @template T
     * @param {T} eventName - The name of the event
     * @param {EventCallback<T>} callback - The callback function to be removed
     */
    off(e, s) {
      const r = this.eventListeners.get(e);
      r && r.delete(s);
    }
    /**
     * Removes all event listeners.
     */
    removeAllEventListeners() {
      this.eventListeners.forEach((e) => {
        e.clear();
      });
    }
    /**
     * Emits an event with the given name and optional data.
     * @template T
     * @param {T} eventName - The name of the event to emit
     * @param {EventData[T]} [data] - The optional data to be passed to the event listeners
     */
    emit(e, s) {
      const r = this.eventListeners.get(e);
      r && r.forEach((i) => i(s));
    }
    /**
     * Connects to WalletConnect.
     * @param {number | string} [_chainId] - Optional chain ID to connect to
     */
    async connectWalletConnect(e) {
      return { clientId: (await this.getWalletConnectConnector().connectWalletConnect()).clientId };
    }
    /**
     * Switches the network.
     * @param {AdapterBlueprint.SwitchNetworkParams} params - Network switching parameters
     */
    async switchNetwork(e) {
      var n;
      const { caipNetwork: s, providerType: r } = e;
      if (!e.provider)
        return;
      const i = "provider" in e.provider ? e.provider.provider : e.provider;
      if (r === "WALLET_CONNECT") {
        i.setDefaultChain(s.caipNetworkId);
        return;
      }
      if (i && r === "AUTH") {
        const o = i, a = (n = W$2.state.preferredAccountTypes) == null ? void 0 : n[s.chainNamespace];
        await o.switchNetwork(s.caipNetworkId);
        const c = await o.getUser({
          chainId: s.caipNetworkId,
          preferredAccountType: a
        });
        this.emit("switchNetwork", c);
      }
    }
    getWalletConnectConnector() {
      const e = this.connectors.find((s) => s instanceof Uh);
      if (!e)
        throw new Error("WalletConnectConnector not found");
      return e;
    }
  }
  class FI extends BI {
    setUniversalProvider(e) {
      this.addConnector(new Uh({
        provider: e,
        caipNetworks: this.getCaipNetworks(),
        namespace: this.namespace
      }));
    }
    async connect(e) {
      return Promise.resolve({
        id: "WALLET_CONNECT",
        type: "WALLET_CONNECT",
        chainId: Number(e.chainId),
        provider: this.provider,
        address: ""
      });
    }
    async disconnect() {
      try {
        await this.getWalletConnectConnector().disconnect();
      } catch (e) {
        console.warn("UniversalAdapter:disconnect - error", e);
      }
    }
    async getAccounts({ namespace: e }) {
      var i, n, o, a;
      const s = this.provider, r = ((a = (o = (n = (i = s == null ? void 0 : s.session) == null ? void 0 : i.namespaces) == null ? void 0 : n[e]) == null ? void 0 : o.accounts) == null ? void 0 : a.map((c) => {
        const [, , l] = c.split(":");
        return l;
      }).filter((c, l, u) => u.indexOf(c) === l)) || [];
      return Promise.resolve({
        accounts: r.map((c) => X$3.createAccount(e, c, e === "bip122" ? "payment" : "eoa"))
      });
    }
    async syncConnectors() {
      return Promise.resolve();
    }
    async getBalance(e) {
      var n, o, a, c, l;
      if (!(e.caipNetwork && Ee$3.BALANCE_SUPPORTED_CHAINS.includes((n = e.caipNetwork) == null ? void 0 : n.chainNamespace)) || (o = e.caipNetwork) != null && o.testnet)
        return {
          balance: "0.00",
          symbol: ((a = e.caipNetwork) == null ? void 0 : a.nativeCurrency.symbol) || ""
        };
      if (W$2.state.balanceLoading && e.chainId === ((c = m.state.activeCaipNetwork) == null ? void 0 : c.id))
        return {
          balance: W$2.state.balance || "0.00",
          symbol: W$2.state.balanceSymbol || ""
        };
      const i = (await W$2.fetchTokenBalance()).find((u) => {
        var d, h;
        return u.chainId === `${(d = e.caipNetwork) == null ? void 0 : d.chainNamespace}:${e.chainId}` && u.symbol === ((h = e.caipNetwork) == null ? void 0 : h.nativeCurrency.symbol);
      });
      return {
        balance: (i == null ? void 0 : i.quantity.numeric) || "0.00",
        symbol: (i == null ? void 0 : i.symbol) || ((l = e.caipNetwork) == null ? void 0 : l.nativeCurrency.symbol) || ""
      };
    }
    async signMessage(e) {
      var o, a, c;
      const { provider: s, message: r, address: i } = e;
      if (!s)
        throw new Error("UniversalAdapter:signMessage - provider is undefined");
      let n = "";
      return ((o = m.state.activeCaipNetwork) == null ? void 0 : o.chainNamespace) === z$3.CHAIN.SOLANA ? n = (await s.request({
        method: "solana_signMessage",
        params: {
          message: ps$1.encode(new TextEncoder().encode(r)),
          pubkey: i
        }
      }, (a = m.state.activeCaipNetwork) == null ? void 0 : a.caipNetworkId)).signature : n = await s.request({
        method: "personal_sign",
        params: [r, i]
      }, (c = m.state.activeCaipNetwork) == null ? void 0 : c.caipNetworkId), { signature: n };
    }
    // -- Transaction methods ---------------------------------------------------
    /**
     *
     * These methods are supported only on `wagmi` and `ethers` since the Solana SDK does not support them in the same way.
     * These function definition is to have a type parity between the clients. Currently not in use.
     */
    async estimateGas() {
      return Promise.resolve({
        gas: BigInt(0)
      });
    }
    async sendTransaction() {
      return Promise.resolve({
        hash: ""
      });
    }
    walletGetAssets(e) {
      return Promise.resolve({});
    }
    async writeContract() {
      return Promise.resolve({
        hash: ""
      });
    }
    parseUnits() {
      return 0n;
    }
    formatUnits() {
      return "0";
    }
    async getCapabilities() {
      return Promise.resolve({});
    }
    async grantPermissions() {
      return Promise.resolve({});
    }
    async revokePermissions() {
      return Promise.resolve("0x");
    }
    async syncConnection() {
      return Promise.resolve({
        id: "WALLET_CONNECT",
        type: "WALLET_CONNECT",
        chainId: 1,
        provider: this.provider,
        address: ""
      });
    }
    // eslint-disable-next-line @typescript-eslint/require-await
    async switchNetwork(e) {
      var i, n, o, a, c, l;
      const { caipNetwork: s } = e, r = this.getWalletConnectConnector();
      if (s.chainNamespace === z$3.CHAIN.EVM)
        try {
          await ((i = r.provider) == null ? void 0 : i.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: Fo$1(s.id) }]
          }));
        } catch (u) {
          if (u.code === Ai$1.ERROR_CODE_UNRECOGNIZED_CHAIN_ID || u.code === Ai$1.ERROR_INVALID_CHAIN_ID || u.code === Ai$1.ERROR_CODE_DEFAULT || ((o = (n = u == null ? void 0 : u.data) == null ? void 0 : n.originalError) == null ? void 0 : o.code) === Ai$1.ERROR_CODE_UNRECOGNIZED_CHAIN_ID)
            try {
              await ((l = r.provider) == null ? void 0 : l.request({
                method: "wallet_addEthereumChain",
                params: [
                  {
                    chainId: Fo$1(s.id),
                    rpcUrls: [(a = s == null ? void 0 : s.rpcUrls.chainDefault) == null ? void 0 : a.http],
                    chainName: s.name,
                    nativeCurrency: s.nativeCurrency,
                    blockExplorerUrls: [(c = s.blockExplorers) == null ? void 0 : c.default.url]
                  }
                ]
              }));
            } catch {
              throw new Error("Chain is not supported");
            }
        }
      r.provider.setDefaultChain(s.caipNetworkId);
    }
    getWalletConnectProvider() {
      const e = this.connectors.find((r) => r.type === "WALLET_CONNECT");
      return e == null ? void 0 : e.provider;
    }
  }
  const jI = [
    "email",
    "socials",
    "swaps",
    "onramp",
    "activity",
    "reownBranding"
  ], Hn$1 = {
    email: {
      apiFeatureName: "social_login",
      localFeatureName: "email",
      returnType: false,
      isLegacy: false,
      isAvailableOnBasic: false,
      processApi: (t) => {
        if (!(t != null && t.config))
          return false;
        const e = t.config;
        return !!t.isEnabled && e.includes("email");
      },
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.email : !!t
    },
    socials: {
      apiFeatureName: "social_login",
      localFeatureName: "socials",
      returnType: false,
      isLegacy: false,
      isAvailableOnBasic: false,
      processApi: (t) => {
        if (!(t != null && t.config))
          return false;
        const e = t.config;
        return t.isEnabled && e.length > 0 ? e.filter((s) => s !== "email") : false;
      },
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.socials : typeof t == "boolean" ? t ? Ee$3.DEFAULT_REMOTE_FEATURES.socials : false : t
    },
    swaps: {
      apiFeatureName: "swap",
      localFeatureName: "swaps",
      returnType: false,
      isLegacy: false,
      isAvailableOnBasic: false,
      processApi: (t) => {
        if (!(t != null && t.config))
          return false;
        const e = t.config;
        return t.isEnabled && e.length > 0 ? e : false;
      },
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.swaps : typeof t == "boolean" ? t ? Ee$3.DEFAULT_REMOTE_FEATURES.swaps : false : t
    },
    onramp: {
      apiFeatureName: "onramp",
      localFeatureName: "onramp",
      returnType: false,
      isLegacy: false,
      isAvailableOnBasic: false,
      processApi: (t) => {
        if (!(t != null && t.config))
          return false;
        const e = t.config;
        return t.isEnabled && e.length > 0 ? e : false;
      },
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.onramp : typeof t == "boolean" ? t ? Ee$3.DEFAULT_REMOTE_FEATURES.onramp : false : t
    },
    activity: {
      apiFeatureName: "activity",
      localFeatureName: "history",
      returnType: false,
      isLegacy: true,
      isAvailableOnBasic: false,
      processApi: (t) => !!t.isEnabled,
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.activity : !!t
    },
    reownBranding: {
      apiFeatureName: "reown_branding",
      localFeatureName: "reownBranding",
      returnType: false,
      isLegacy: false,
      isAvailableOnBasic: false,
      processApi: (t) => !!t.isEnabled,
      processFallback: (t) => t === void 0 ? Ee$3.DEFAULT_REMOTE_FEATURES.reownBranding : !!t
    }
  }, qI = {
    localSettingsOverridden: /* @__PURE__ */ new Set(),
    getApiConfig(t, e) {
      return e == null ? void 0 : e.find((s) => s.id === t);
    },
    addWarning(t, e) {
      if (t !== void 0) {
        const s = Hn$1[e], r = s.isLegacy ? `"features.${s.localFeatureName}" (now "${e}")` : `"features.${e}"`;
        this.localSettingsOverridden.add(r);
      }
    },
    processFeature(t, e, s, r, i) {
      const n = Hn$1[t], o = e[n.localFeatureName];
      if (i && !n.isAvailableOnBasic)
        return false;
      if (r) {
        const a = this.getApiConfig(n.apiFeatureName, s);
        return (a == null ? void 0 : a.config) === null ? this.processFallbackFeature(t, o) : a != null && a.config ? (o !== void 0 && this.addWarning(o, t), this.processApiFeature(t, a)) : false;
      }
      return this.processFallbackFeature(t, o);
    },
    processApiFeature(t, e) {
      return Hn$1[t].processApi(e);
    },
    processFallbackFeature(t, e) {
      return Hn$1[t].processFallback(e);
    },
    async fetchRemoteFeatures(t) {
      const e = t.basic ?? false, s = t.features || {};
      this.localSettingsOverridden.clear();
      let r = null, i = false;
      try {
        r = await K$3.fetchProjectConfig(), i = r != null;
      } catch (o) {
        console.warn("[Reown Config] Failed to fetch remote project configuration. Using local/default values.", o);
      }
      const n = i && !e ? Ee$3.DEFAULT_REMOTE_FEATURES : Ee$3.DEFAULT_REMOTE_FEATURES_DISABLED;
      try {
        for (const o of jI) {
          const a = this.processFeature(o, s, r, i, e);
          Object.assign(n, { [o]: a });
        }
      } catch (o) {
        return console.warn("[Reown Config] Failed to process the configuration from Cloud. Using default values.", o), Ee$3.DEFAULT_REMOTE_FEATURES;
      }
      if (i && this.localSettingsOverridden.size > 0) {
        const o = `Your local configuration for ${Array.from(this.localSettingsOverridden).join(", ")} was ignored because a remote configuration was successfully fetched. Please manage these features via your project dashboard on dashboard.reown.com.`;
        Fs.open({
          shortMessage: "Local configuration ignored",
          longMessage: `[Reown Config Notice] ${o}`
        }, "warning");
      }
      return n;
    }
  };
  class WI {
    constructor(e) {
      this.chainNamespaces = [], this.remoteFeatures = {}, this.reportedAlertErrors = {}, this.getCaipNetwork = (s, r) => {
        var i, n, o, a;
        if (s) {
          const c = (n = (i = m.getNetworkData(s)) == null ? void 0 : i.requestedCaipNetworks) == null ? void 0 : n.find((d) => d.id === r);
          if (c)
            return c;
          const l = (o = m.getNetworkData(s)) == null ? void 0 : o.caipNetwork;
          return l || ((a = m.getRequestedCaipNetworks(s).filter((d) => d.chainNamespace === s)) == null ? void 0 : a[0]);
        }
        return m.state.activeCaipNetwork || this.defaultCaipNetwork;
      }, this.getCaipNetworkId = () => {
        const s = this.getCaipNetwork();
        if (s)
          return s.id;
      }, this.getCaipNetworks = (s) => m.getCaipNetworks(s), this.getActiveChainNamespace = () => m.state.activeChain, this.setRequestedCaipNetworks = (s, r) => {
        m.setRequestedCaipNetworks(s, r);
      }, this.getApprovedCaipNetworkIds = () => m.getAllApprovedCaipNetworkIds(), this.getCaipAddress = (s) => m.state.activeChain === s || !s ? m.state.activeCaipAddress : m.getAccountProp("caipAddress", s), this.setClientId = (s) => {
        J$3.setClientId(s);
      }, this.getProvider = (s) => Se$2.getProvider(s), this.getProviderType = (s) => Se$2.getProviderId(s), this.getPreferredAccountType = (s) => {
        var r;
        return (r = W$2.state.preferredAccountTypes) == null ? void 0 : r[s];
      }, this.setCaipAddress = (s, r) => {
        W$2.setCaipAddress(s, r), s && T$2.state.enableEmbedded && this.close();
      }, this.setBalance = (s, r, i) => {
        W$2.setBalance(s, r, i);
      }, this.setProfileName = (s, r) => {
        W$2.setProfileName(s, r);
      }, this.setProfileImage = (s, r) => {
        W$2.setProfileImage(s, r);
      }, this.setUser = (s, r) => {
        W$2.setUser(s, r);
      }, this.resetAccount = (s) => {
        W$2.resetAccount(s);
      }, this.setCaipNetwork = (s) => {
        m.setActiveCaipNetwork(s);
      }, this.setCaipNetworkOfNamespace = (s, r) => {
        m.setChainNetworkData(r, { caipNetwork: s });
      }, this.setAllAccounts = (s, r) => {
        W$2.setAllAccounts(s, r), T$2.setHasMultipleAddresses((s == null ? void 0 : s.length) > 1);
      }, this.setStatus = (s, r) => {
        W$2.setStatus(s, r), F$2.isConnected() ? q$1.setConnectionStatus("connected") : q$1.setConnectionStatus("disconnected");
      }, this.getAddressByChainNamespace = (s) => m.getAccountProp("address", s), this.setConnectors = (s) => {
        const r = [...F$2.state.allConnectors, ...s];
        F$2.setConnectors(r);
      }, this.setConnections = (s, r) => {
        Y$1.setConnections(s, r);
      }, this.fetchIdentity = (s) => J$3.fetchIdentity(s), this.getReownName = (s) => Pi$1.getNamesForAddress(s), this.getConnectors = () => F$2.getConnectors(), this.getConnectorImage = (s) => Vu.getConnectorImage(s), this.setConnectedWalletInfo = (s, r) => {
        const i = Se$2.getProviderId(r), n = s ? { ...s, type: i } : void 0;
        W$2.setConnectedWalletInfo(n, r);
      }, this.getIsConnectedState = () => !!m.state.activeCaipAddress, this.addAddressLabel = (s, r, i) => {
        W$2.addAddressLabel(s, r, i);
      }, this.removeAddressLabel = (s, r) => {
        W$2.removeAddressLabel(s, r);
      }, this.getAddress = (s) => m.state.activeChain === s || !s ? W$2.state.address : m.getAccountProp("address", s), this.setApprovedCaipNetworksData = (s) => m.setApprovedCaipNetworksData(s), this.resetNetwork = (s) => {
        m.resetNetwork(s);
      }, this.addConnector = (s) => {
        F$2.addConnector(s);
      }, this.resetWcConnection = () => {
        Y$1.resetWcConnection();
      }, this.setAddressExplorerUrl = (s, r) => {
        W$2.setAddressExplorerUrl(s, r);
      }, this.setSmartAccountDeployed = (s, r) => {
        W$2.setSmartAccountDeployed(s, r);
      }, this.setSmartAccountEnabledNetworks = (s, r) => {
        m.setSmartAccountEnabledNetworks(s, r);
      }, this.setPreferredAccountType = (s, r) => {
        W$2.setPreferredAccountType(s, r);
      }, this.setEIP6963Enabled = (s) => {
        T$2.setEIP6963Enabled(s);
      }, this.handleUnsafeRPCRequest = () => {
        if (this.isOpen()) {
          if (this.isTransactionStackEmpty())
            return;
          this.redirect("ApproveTransaction");
        } else
          this.open({ view: "ApproveTransaction" });
      }, this.options = e, this.version = e.sdkVersion, this.caipNetworks = this.extendCaipNetworks(e), this.chainNamespaces = this.getChainNamespacesSet(e.adapters, this.caipNetworks), this.defaultCaipNetwork = this.extendDefaultCaipNetwork(e), this.chainAdapters = this.createAdapters(e.adapters), this.readyPromise = this.initialize(e);
    }
    getChainNamespacesSet(e, s) {
      const r = e == null ? void 0 : e.map((n) => n.namespace).filter((n) => !!n);
      if (r != null && r.length)
        return [...new Set(r)];
      const i = s == null ? void 0 : s.map((n) => n.chainNamespace);
      return [...new Set(i)];
    }
    async initialize(e) {
      var s, r, i;
      this.initializeProjectSettings(e), this.initControllers(e), await this.initChainAdapters(), this.sendInitializeEvent(e), await this.syncExistingConnection(), this.remoteFeatures = await qI.fetchRemoteFeatures(e), T$2.setRemoteFeatures(this.remoteFeatures), this.remoteFeatures.onramp && ha.setOnrampProviders(this.remoteFeatures.onramp), ((s = T$2.state.remoteFeatures) != null && s.email || Array.isArray((r = T$2.state.remoteFeatures) == null ? void 0 : r.socials) && ((i = T$2.state.remoteFeatures) == null ? void 0 : i.socials.length) > 0) && await this.checkAllowedOrigins();
    }
    async checkAllowedOrigins() {
      const e = await K$3.fetchAllowedOrigins();
      if (e && X$3.isClient()) {
        const s = window.location.origin;
        to$1.isOriginAllowed(s, e, Ai$1.DEFAULT_ALLOWED_ANCESTORS) || Fs.open(Pr.ALERT_ERRORS.INVALID_APP_CONFIGURATION, "error");
      } else
        Fs.open(Pr.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED, "error");
    }
    sendInitializeEvent(e) {
      var r;
      const { ...s } = e;
      delete s.adapters, delete s.universalProvider, Pe$3.sendEvent({
        type: "track",
        event: "INITIALIZE",
        properties: {
          ...s,
          networks: e.networks.map((i) => i.id),
          siweConfig: {
            options: ((r = e.siweConfig) == null ? void 0 : r.options) || {}
          }
        }
      });
    }
    // -- Controllers initialization ---------------------------------------------------
    initControllers(e) {
      this.initializeOptionsController(e), this.initializeChainController(e), this.initializeThemeController(e), this.initializeConnectionController(e), this.initializeConnectorController();
    }
    initializeThemeController(e) {
      e.themeMode && wt$2.setThemeMode(e.themeMode), e.themeVariables && wt$2.setThemeVariables(e.themeVariables);
    }
    initializeChainController(e) {
      if (!this.connectionControllerClient || !this.networkControllerClient)
        throw new Error("ConnectionControllerClient and NetworkControllerClient must be set");
      m.initialize(e.adapters ?? [], this.caipNetworks, {
        connectionControllerClient: this.connectionControllerClient,
        networkControllerClient: this.networkControllerClient
      });
      const s = this.getDefaultNetwork();
      s && m.setActiveCaipNetwork(s);
    }
    initializeConnectionController(e) {
      Y$1.setWcBasic(e.basic ?? false);
    }
    initializeConnectorController() {
      F$2.initialize(this.chainNamespaces);
    }
    initializeProjectSettings(e) {
      T$2.setProjectId(e.projectId), T$2.setSdkVersion(e.sdkVersion);
    }
    initializeOptionsController(e) {
      var o;
      T$2.setDebug(e.debug !== false), T$2.setEnableWalletConnect(e.enableWalletConnect !== false), T$2.setEnableWalletGuide(e.enableWalletGuide !== false), T$2.setEnableWallets(e.enableWallets !== false), T$2.setEIP6963Enabled(e.enableEIP6963 !== false), T$2.setEnableNetworkSwitch(e.enableNetworkSwitch !== false), T$2.setEnableAuthLogger(e.enableAuthLogger !== false), T$2.setCustomRpcUrls(e.customRpcUrls), T$2.setEnableEmbedded(e.enableEmbedded), T$2.setAllWallets(e.allWallets), T$2.setIncludeWalletIds(e.includeWalletIds), T$2.setExcludeWalletIds(e.excludeWalletIds), T$2.setFeaturedWalletIds(e.featuredWalletIds), T$2.setTokens(e.tokens), T$2.setTermsConditionsUrl(e.termsConditionsUrl), T$2.setPrivacyPolicyUrl(e.privacyPolicyUrl), T$2.setCustomWallets(e.customWallets), T$2.setFeatures(e.features), T$2.setAllowUnsupportedChain(e.allowUnsupportedChain), T$2.setUniversalProviderConfigOverride(e.universalProviderConfigOverride), T$2.setPreferUniversalLinks(e.experimental_preferUniversalLinks), T$2.setDefaultAccountTypes(e.defaultAccountTypes);
      const s = q$1.getPreferredAccountTypes() || {}, r = { ...T$2.state.defaultAccountTypes, ...s };
      W$2.setPreferredAccountTypes(r);
      const i = this.getDefaultMetaData();
      if (!e.metadata && i && (e.metadata = i), T$2.setMetadata(e.metadata), T$2.setDisableAppend(e.disableAppend), T$2.setEnableEmbedded(e.enableEmbedded), T$2.setSIWX(e.siwx), !e.projectId) {
        Fs.open(Pr.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED, "error");
        return;
      }
      if (((o = e.adapters) == null ? void 0 : o.find((a) => a.namespace === z$3.CHAIN.EVM)) && e.siweConfig) {
        if (e.siwx)
          throw new Error("Cannot set both `siweConfig` and `siwx` options");
        T$2.setSIWX(e.siweConfig.mapToSIWX());
      }
    }
    getDefaultMetaData() {
      var e, s, r, i;
      return X$3.isClient() ? {
        name: ((s = (e = document.getElementsByTagName("title")) == null ? void 0 : e[0]) == null ? void 0 : s.textContent) || "",
        description: ((r = document.querySelector('meta[property="og:description"]')) == null ? void 0 : r.content) || "",
        url: window.location.origin,
        icons: [((i = document.querySelector('link[rel~="icon"]')) == null ? void 0 : i.href) || ""]
      } : null;
    }
    // -- Network Initialization ---------------------------------------------------
    setUnsupportedNetwork(e) {
      const s = this.getActiveChainNamespace();
      if (s) {
        const r = Tr.getUnsupportedNetwork(`${s}:${e}`);
        m.setActiveCaipNetwork(r);
      }
    }
    getDefaultNetwork() {
      return Tr.getCaipNetworkFromStorage(this.defaultCaipNetwork);
    }
    extendCaipNetwork(e, s) {
      return Tr.extendCaipNetwork(e, {
        customNetworkImageUrls: s.chainImages,
        projectId: s.projectId
      });
    }
    extendCaipNetworks(e) {
      return Tr.extendCaipNetworks(e.networks, {
        customNetworkImageUrls: e.chainImages,
        customRpcUrls: e.customRpcUrls,
        projectId: e.projectId
      });
    }
    extendDefaultCaipNetwork(e) {
      const s = e.networks.find((i) => {
        var n;
        return i.id === ((n = e.defaultNetwork) == null ? void 0 : n.id);
      });
      return s ? Tr.extendCaipNetwork(s, {
        customNetworkImageUrls: e.chainImages,
        customRpcUrls: e.customRpcUrls,
        projectId: e.projectId
      }) : void 0;
    }
    async disconnectNamespace(e) {
      try {
        const s = this.getAdapter(e), r = Se$2.getProvider(e), i = Se$2.getProviderId(e), { caipAddress: n } = m.getAccountData(e) || {};
        this.setLoading(!0, e), n && (s != null && s.disconnect) && await s.disconnect({ provider: r, providerType: i }), q$1.removeConnectedNamespace(e), Se$2.resetChain(e), this.setUser(void 0, e), this.setStatus("disconnected", e), this.setConnectedWalletInfo(void 0, e), F$2.removeConnectorId(e), m.resetAccount(e), m.resetNetwork(e), this.setLoading(!1, e);
      } catch (s) {
        throw this.setLoading(false, e), new Error(`Failed to disconnect chain ${e}: ${s.message}`);
      }
    }
    // -- Client Initialization ---------------------------------------------------
    createClients() {
      this.connectionControllerClient = {
        connectWalletConnect: async () => {
          var n;
          const e = m.state.activeChain, s = this.getAdapter(e), r = (n = this.getCaipNetwork(e)) == null ? void 0 : n.id;
          if (!s)
            throw new Error("Adapter not found");
          const i = await s.connectWalletConnect(r);
          this.close(), this.setClientId((i == null ? void 0 : i.clientId) || null), q$1.setConnectedNamespaces([...m.state.chains.keys()]), this.chainNamespaces.forEach((o) => {
            F$2.setConnectorId(ys.CONNECTOR_TYPE_WALLET_CONNECT, o);
          }), await this.syncWalletConnectAccount();
        },
        connectExternal: async ({ id: e, info: s, type: r, provider: i, chain: n, caipNetwork: o, socialUri: a }) => {
          var f, w, y, b, v, C;
          const c = m.state.activeChain, l = n || c, u = this.getAdapter(l);
          if (n && n !== c && !o) {
            const S = this.getCaipNetworks().find((A) => A.chainNamespace === n);
            S && this.setCaipNetwork(S);
          }
          if (!u)
            throw new Error("Adapter not found");
          const d = this.getCaipNetwork(l), h = await u.connect({
            id: e,
            info: s,
            type: r,
            provider: i,
            socialUri: a,
            chainId: (o == null ? void 0 : o.id) || (d == null ? void 0 : d.id),
            rpcUrl: ((y = (w = (f = o == null ? void 0 : o.rpcUrls) == null ? void 0 : f.default) == null ? void 0 : w.http) == null ? void 0 : y[0]) || ((C = (v = (b = d == null ? void 0 : d.rpcUrls) == null ? void 0 : b.default) == null ? void 0 : v.http) == null ? void 0 : C[0])
          });
          if (!h)
            return;
          q$1.addConnectedNamespace(l), this.syncProvider({ ...h, chainNamespace: l });
          const p = W$2.state.allAccounts, { accounts: g } = (p == null ? void 0 : p.length) > 0 ? (
            // eslint-disable-next-line line-comment-position
            // Using new array else the accounts will have the same reference and react will not re-render
            { accounts: [...p] }
          ) : await u.getAccounts({ namespace: l, id: e });
          this.setAllAccounts(g, l), this.setStatus("connected", l), this.syncConnectedWalletInfo(l);
        },
        reconnectExternal: async ({ id: e, info: s, type: r, provider: i }) => {
          var a;
          const n = m.state.activeChain, o = this.getAdapter(n);
          o != null && o.reconnect && (await (o == null ? void 0 : o.reconnect({ id: e, info: s, type: r, provider: i, chainId: (a = this.getCaipNetwork()) == null ? void 0 : a.id })), q$1.addConnectedNamespace(n), this.syncConnectedWalletInfo(n));
        },
        disconnect: async (e) => {
          const s = fI(e);
          try {
            const r = await Promise.allSettled(s.map(async ([n]) => this.disconnectNamespace(n)));
            de$1.resetSend(), Y$1.resetWcConnection(), await Oi$1.clearSessions(), F$2.setFilterByNamespace(void 0);
            const i = r.filter((n) => n.status === "rejected");
            if (i.length > 0)
              throw new Error(i.map((n) => n.reason.message).join(", "));
            q$1.deleteConnectedSocialProvider(), Pe$3.sendEvent({
              type: "track",
              event: "DISCONNECT_SUCCESS",
              properties: {
                namespace: e || "all"
              }
            });
          } catch (r) {
            throw new Error(`Failed to disconnect chains: ${r.message}`);
          }
        },
        checkInstalled: (e) => e ? e.some((s) => {
          var r;
          return !!((r = window.ethereum) != null && r[String(s)]);
        }) : !!window.ethereum,
        signMessage: async (e) => {
          const s = this.getAdapter(m.state.activeChain), r = await (s == null ? void 0 : s.signMessage({
            message: e,
            address: W$2.state.address,
            provider: Se$2.getProvider(m.state.activeChain)
          }));
          return (r == null ? void 0 : r.signature) || "";
        },
        sendTransaction: async (e) => {
          const s = e.chainNamespace;
          if (Ee$3.SEND_SUPPORTED_NAMESPACES.includes(s)) {
            const r = this.getAdapter(m.state.activeChain), i = Se$2.getProvider(s), n = await (r == null ? void 0 : r.sendTransaction({
              ...e,
              caipNetwork: this.getCaipNetwork(),
              provider: i
            }));
            return (n == null ? void 0 : n.hash) || "";
          }
          return "";
        },
        estimateGas: async (e) => {
          if (e.chainNamespace === z$3.CHAIN.EVM) {
            const s = this.getAdapter(m.state.activeChain), r = Se$2.getProvider(m.state.activeChain), i = this.getCaipNetwork();
            if (!i)
              throw new Error("CaipNetwork is undefined");
            const n = await (s == null ? void 0 : s.estimateGas({
              ...e,
              provider: r,
              caipNetwork: i
            }));
            return (n == null ? void 0 : n.gas) || 0n;
          }
          return 0n;
        },
        getEnsAvatar: async () => {
          var e;
          return await this.syncIdentity({
            address: W$2.state.address,
            chainId: Number((e = this.getCaipNetwork()) == null ? void 0 : e.id),
            chainNamespace: m.state.activeChain
          }), W$2.state.profileImage || false;
        },
        getEnsAddress: async (e) => await to$1.resolveReownName(e),
        writeContract: async (e) => {
          const s = this.getAdapter(m.state.activeChain), r = this.getCaipNetwork(), i = this.getCaipAddress(), n = Se$2.getProvider(m.state.activeChain);
          if (!r || !i)
            throw new Error("CaipNetwork or CaipAddress is undefined");
          const o = await (s == null ? void 0 : s.writeContract({ ...e, caipNetwork: r, provider: n, caipAddress: i }));
          return o == null ? void 0 : o.hash;
        },
        parseUnits: (e, s) => {
          const r = this.getAdapter(m.state.activeChain);
          return (r == null ? void 0 : r.parseUnits({ value: e, decimals: s })) ?? 0n;
        },
        formatUnits: (e, s) => {
          const r = this.getAdapter(m.state.activeChain);
          return (r == null ? void 0 : r.formatUnits({ value: e, decimals: s })) ?? "0";
        },
        getCapabilities: async (e) => {
          const s = this.getAdapter(m.state.activeChain);
          return await (s == null ? void 0 : s.getCapabilities(e));
        },
        grantPermissions: async (e) => {
          const s = this.getAdapter(m.state.activeChain);
          return await (s == null ? void 0 : s.grantPermissions(e));
        },
        revokePermissions: async (e) => {
          const s = this.getAdapter(m.state.activeChain);
          return s != null && s.revokePermissions ? await s.revokePermissions(e) : "0x";
        },
        walletGetAssets: async (e) => {
          const s = this.getAdapter(m.state.activeChain);
          return await (s == null ? void 0 : s.walletGetAssets(e)) ?? {};
        },
        updateBalance: (e) => {
          const s = this.getCaipNetwork(e);
          !s || !W$2.state.address || this.updateNativeBalance(W$2.state.address, s == null ? void 0 : s.id, e);
        }
      }, this.networkControllerClient = {
        switchCaipNetwork: async (e) => await this.switchCaipNetwork(e),
        // eslint-disable-next-line @typescript-eslint/require-await
        getApprovedCaipNetworksData: async () => this.getApprovedCaipNetworksData()
      }, Y$1.setClient(this.connectionControllerClient);
    }
    getApprovedCaipNetworksData() {
      var s, r, i, n, o;
      if (Se$2.getProviderId(m.state.activeChain) === ys.CONNECTOR_TYPE_WALLET_CONNECT) {
        const a = (r = (s = this.universalProvider) == null ? void 0 : s.session) == null ? void 0 : r.namespaces;
        return {
          /*
           * MetaMask Wallet only returns 1 namespace in the session object. This makes it imposible
           * to switch to other networks. Setting supportsAllNetworks to true for MetaMask Wallet
           * will make it possible to switch to other networks.
           */
          supportsAllNetworks: ((o = (n = (i = this.universalProvider) == null ? void 0 : i.session) == null ? void 0 : n.peer) == null ? void 0 : o.metadata.name) === "MetaMask Wallet",
          approvedCaipNetworkIds: this.getChainsFromNamespaces(a)
        };
      }
      return { supportsAllNetworks: true, approvedCaipNetworkIds: [] };
    }
    async switchCaipNetwork(e) {
      if (!e)
        return;
      const s = e.chainNamespace;
      if (this.getAddressByChainNamespace(e.chainNamespace)) {
        const i = Se$2.getProvider(s), n = Se$2.getProviderId(s);
        if (e.chainNamespace === m.state.activeChain) {
          const o = this.getAdapter(s);
          await (o == null ? void 0 : o.switchNetwork({ caipNetwork: e, provider: i, providerType: n }));
        } else if (this.setCaipNetwork(e), n === ys.CONNECTOR_TYPE_WALLET_CONNECT)
          this.syncWalletConnectAccount();
        else {
          const o = this.getAddressByChainNamespace(s);
          o && this.syncAccount({
            address: o,
            chainId: e.id,
            chainNamespace: s
          });
        }
      } else
        this.setCaipNetwork(e);
    }
    getChainsFromNamespaces(e = {}) {
      return Object.values(e).flatMap((s) => {
        const r = s.chains || [], i = s.accounts.map((n) => {
          const { chainId: o, chainNamespace: a } = ps.parseCaipAddress(n);
          return `${a}:${o}`;
        });
        return Array.from(/* @__PURE__ */ new Set([...r, ...i]));
      });
    }
    // -- Adapter Initialization ---------------------------------------------------
    createAdapters(e) {
      return this.createClients(), this.chainNamespaces.reduce((s, r) => {
        var n;
        const i = e == null ? void 0 : e.find((o) => o.namespace === r);
        return i ? (i.construct({
          namespace: r,
          projectId: (n = this.options) == null ? void 0 : n.projectId,
          networks: this.getCaipNetworks()
        }), s[r] = i) : s[r] = new FI({
          namespace: r,
          networks: this.getCaipNetworks()
        }), s;
      }, {});
    }
    async initChainAdapter(e) {
      var s;
      this.onConnectors(e), this.listenAdapter(e), await ((s = this.chainAdapters) == null ? void 0 : s[e].syncConnectors(this.options, this)), await this.createUniversalProviderForAdapter(e);
    }
    async initChainAdapters() {
      await Promise.all(this.chainNamespaces.map(async (e) => {
        await this.initChainAdapter(e);
      }));
    }
    onConnectors(e) {
      const s = this.getAdapter(e);
      s == null || s.on("connectors", this.setConnectors.bind(this));
    }
    listenAdapter(e) {
      const s = this.getAdapter(e);
      if (!s)
        return;
      const r = q$1.getConnectionStatus();
      r === "connected" ? this.setStatus("connecting", e) : r === "disconnected" ? (q$1.clearAddressCache(), this.setStatus(r, e)) : this.setStatus(r, e), s.on("switchNetwork", ({ address: i, chainId: n }) => {
        const o = this.getCaipNetworks().find((l) => l.id === n || l.caipNetworkId === n), a = m.state.activeChain === e, c = m.getAccountProp("address", e);
        if (o) {
          const l = a && i ? i : c;
          l && this.syncAccount({ address: l, chainId: o.id, chainNamespace: e });
        } else
          this.setUnsupportedNetwork(n);
      }), s.on("disconnect", this.disconnect.bind(this, e)), s.on("connections", (i) => {
        this.setConnections(i, e);
      }), s.on("pendingTransactions", () => {
        const i = W$2.state.address, n = m.state.activeCaipNetwork;
        !i || !(n != null && n.id) || this.updateNativeBalance(i, n.id, n.chainNamespace);
      }), s.on("accountChanged", ({ address: i, chainId: n }) => {
        var a, c;
        const o = m.state.activeChain === e;
        o && n ? this.syncAccount({
          address: i,
          chainId: n,
          chainNamespace: e
        }) : o && ((a = m.state.activeCaipNetwork) != null && a.id) ? this.syncAccount({
          address: i,
          chainId: (c = m.state.activeCaipNetwork) == null ? void 0 : c.id,
          chainNamespace: e
        }) : this.syncAccountInfo(i, n, e), this.syncAllAccounts(e);
      });
    }
    async createUniversalProviderForAdapter(e) {
      var s, r, i;
      await this.getUniversalProvider(), this.universalProvider && ((i = (r = (s = this.chainAdapters) == null ? void 0 : s[e]) == null ? void 0 : r.setUniversalProvider) == null || i.call(r, this.universalProvider));
    }
    // -- Connection Sync ---------------------------------------------------
    async syncExistingConnection() {
      await Promise.allSettled(this.chainNamespaces.map((e) => this.syncNamespaceConnection(e)));
    }
    async syncNamespaceConnection(e) {
      try {
        e === z$3.CHAIN.EVM && X$3.isSafeApp() && F$2.setConnectorId(z$3.CONNECTOR_ID.SAFE, e);
        const s = F$2.getConnectorId(e);
        switch (this.setStatus("connecting", e), s) {
          case z$3.CONNECTOR_ID.WALLET_CONNECT:
            await this.syncWalletConnectAccount();
            break;
          case z$3.CONNECTOR_ID.AUTH:
            break;
          default:
            await this.syncAdapterConnection(e);
        }
      } catch (s) {
        console.warn("AppKit couldn't sync existing connection", s), this.setStatus("disconnected", e);
      }
    }
    async syncAdapterConnection(e) {
      var a, c, l;
      const s = this.getAdapter(e), r = F$2.getConnectorId(e), i = this.getCaipNetwork(e), o = F$2.getConnectors(e).find((u) => u.id === r);
      try {
        if (!s || !o)
          throw new Error(`Adapter or connector not found for namespace ${e}`);
        if (!(i != null && i.id))
          throw new Error("CaipNetwork not found");
        const u = await (s == null ? void 0 : s.syncConnection({
          namespace: e,
          id: o.id,
          chainId: i.id,
          rpcUrl: (l = (c = (a = i == null ? void 0 : i.rpcUrls) == null ? void 0 : a.default) == null ? void 0 : c.http) == null ? void 0 : l[0]
        }));
        if (u) {
          const d = await (s == null ? void 0 : s.getAccounts({
            namespace: e,
            id: o.id
          }));
          d && d.accounts.length > 0 ? this.setAllAccounts(d.accounts, e) : this.setAllAccounts([X$3.createAccount(e, u.address, "eoa")], e), this.syncProvider({ ...u, chainNamespace: e }), await this.syncAccount({ ...u, chainNamespace: e }), this.setStatus("connected", e);
        } else
          this.setStatus("disconnected", e);
      } catch {
        this.setStatus("disconnected", e);
      }
    }
    async syncWalletConnectAccount() {
      const e = this.chainNamespaces.map(async (s) => {
        var a, c, l, u, d;
        const r = this.getAdapter(s), i = ((u = (l = (c = (a = this.universalProvider) == null ? void 0 : a.session) == null ? void 0 : c.namespaces) == null ? void 0 : l[s]) == null ? void 0 : u.accounts) || [], n = (d = m.state.activeCaipNetwork) == null ? void 0 : d.id, o = i.find((h) => {
          const { chainId: p } = ps.parseCaipAddress(h);
          return p === (n == null ? void 0 : n.toString());
        }) || i[0];
        if (o) {
          const h = ps.validateCaipAddress(o), { chainId: p, address: g } = ps.parseCaipAddress(h);
          if (Se$2.setProviderId(s, ys.CONNECTOR_TYPE_WALLET_CONNECT), this.caipNetworks && m.state.activeCaipNetwork && (r == null ? void 0 : r.namespace) !== z$3.CHAIN.EVM) {
            const f = r == null ? void 0 : r.getWalletConnectProvider({
              caipNetworks: this.getCaipNetworks(),
              provider: this.universalProvider,
              activeCaipNetwork: m.state.activeCaipNetwork
            });
            Se$2.setProvider(s, f);
          } else
            Se$2.setProvider(s, this.universalProvider);
          F$2.setConnectorId(z$3.CONNECTOR_ID.WALLET_CONNECT, s), q$1.addConnectedNamespace(s), this.syncWalletConnectAccounts(s), await this.syncAccount({
            address: g,
            chainId: p,
            chainNamespace: s
          });
        } else
          this.setStatus("disconnected", s);
        this.syncConnectedWalletInfo(s), await m.setApprovedCaipNetworksData(s);
      });
      await Promise.all(e);
    }
    syncWalletConnectAccounts(e) {
      var r, i, n, o, a;
      const s = (a = (o = (n = (i = (r = this.universalProvider) == null ? void 0 : r.session) == null ? void 0 : i.namespaces) == null ? void 0 : n[e]) == null ? void 0 : o.accounts) == null ? void 0 : a.map((c) => {
        const { address: l } = ps.parseCaipAddress(c);
        return l;
      }).filter((c, l, u) => u.indexOf(c) === l);
      s && this.setAllAccounts(s.map((c) => X$3.createAccount(e, c, e === "bip122" ? "payment" : "eoa")), e);
    }
    syncProvider({ type: e, provider: s, id: r, chainNamespace: i }) {
      Se$2.setProviderId(i, e), Se$2.setProvider(i, s), F$2.setConnectorId(r, i);
    }
    async syncAllAccounts(e) {
      const s = F$2.getConnectorId(e);
      if (!s)
        return;
      const r = this.getAdapter(e), i = await (r == null ? void 0 : r.getAccounts({ namespace: e, id: s }));
      i && i.accounts.length > 0 && this.setAllAccounts(i.accounts, e);
    }
    async syncAccount(e) {
      var d, h;
      const s = e.chainNamespace === m.state.activeChain, r = m.getCaipNetworkByNamespace(e.chainNamespace, e.chainId), { address: i, chainId: n, chainNamespace: o } = e, { chainId: a } = q$1.getActiveNetworkProps(), c = n || a, l = ((d = m.state.activeCaipNetwork) == null ? void 0 : d.name) === z$3.UNSUPPORTED_NETWORK_NAME, u = m.getNetworkProp("supportsAllNetworks", o);
      if (this.setStatus("connected", o), !(l && !u) && c) {
        let p = this.getCaipNetworks().find((w) => w.id.toString() === c.toString()), g = this.getCaipNetworks().find((w) => w.chainNamespace === o);
        if (!u && !p && !g) {
          const w = this.getApprovedCaipNetworkIds() || [], y = w.find((v) => {
            var C;
            return ((C = ps.parseCaipNetworkId(v)) == null ? void 0 : C.chainId) === c.toString();
          }), b = w.find((v) => {
            var C;
            return ((C = ps.parseCaipNetworkId(v)) == null ? void 0 : C.chainNamespace) === o;
          });
          p = this.getCaipNetworks().find((v) => v.caipNetworkId === y), g = this.getCaipNetworks().find((v) => v.caipNetworkId === b || // This is a workaround used in Solana network to support deprecated caipNetworkId
          "deprecatedCaipNetworkId" in v && v.deprecatedCaipNetworkId === b);
        }
        const f = p || g;
        (f == null ? void 0 : f.chainNamespace) === m.state.activeChain ? T$2.state.enableNetworkSwitch && !T$2.state.allowUnsupportedChain && ((h = m.state.activeCaipNetwork) == null ? void 0 : h.name) === z$3.UNSUPPORTED_NETWORK_NAME ? m.showUnsupportedChainUI() : this.setCaipNetwork(f) : s || r && this.setCaipNetworkOfNamespace(r, o), this.syncConnectedWalletInfo(o), uc.isLowerCaseMatch(i, W$2.state.address) || this.syncAccountInfo(i, f == null ? void 0 : f.id, o), s ? await this.syncBalance({ address: i, chainId: f == null ? void 0 : f.id, chainNamespace: o }) : await this.syncBalance({ address: i, chainId: r == null ? void 0 : r.id, chainNamespace: o });
      }
    }
    async syncAccountInfo(e, s, r) {
      const i = this.getCaipAddress(r), n = s || (i == null ? void 0 : i.split(":")[1]);
      if (!n)
        return;
      const o = `${r}:${n}:${e}`;
      this.setCaipAddress(o, r), await this.syncIdentity({
        address: e,
        chainId: n,
        chainNamespace: r
      });
    }
    async syncReownName(e, s) {
      try {
        const r = await this.getReownName(e);
        if (r[0]) {
          const i = r[0];
          this.setProfileName(i.name, s);
        } else
          this.setProfileName(null, s);
      } catch {
        this.setProfileName(null, s);
      }
    }
    syncConnectedWalletInfo(e) {
      var i;
      const s = F$2.getConnectorId(e), r = Se$2.getProviderId(e);
      if (r === ys.CONNECTOR_TYPE_ANNOUNCED || r === ys.CONNECTOR_TYPE_INJECTED) {
        if (s) {
          const n = this.getConnectors().find((o) => o.id === s);
          if (n) {
            const { info: o, name: a, imageUrl: c } = n, l = c || this.getConnectorImage(n);
            this.setConnectedWalletInfo({ name: a, icon: l, ...o }, e);
          }
        }
      } else if (r === ys.CONNECTOR_TYPE_WALLET_CONNECT) {
        const n = Se$2.getProvider(e);
        n != null && n.session && this.setConnectedWalletInfo({
          ...n.session.peer.metadata,
          name: n.session.peer.metadata.name,
          icon: (i = n.session.peer.metadata.icons) == null ? void 0 : i[0]
        }, e);
      } else if (s && s === z$3.CONNECTOR_ID.COINBASE) {
        const n = this.getConnectors().find((o) => o.id === z$3.CONNECTOR_ID.COINBASE);
        this.setConnectedWalletInfo({ name: "Coinbase Wallet", icon: this.getConnectorImage(n) }, e);
      }
    }
    async syncBalance(e) {
      !Wu.getNetworksByNamespace(this.getCaipNetworks(), e.chainNamespace).find((r) => {
        var i;
        return r.id.toString() === ((i = e.chainId) == null ? void 0 : i.toString());
      }) || !e.chainId || await this.updateNativeBalance(e.address, e.chainId, e.chainNamespace);
    }
    async ready() {
      await this.readyPromise;
    }
    async updateNativeBalance(e, s, r) {
      const i = this.getAdapter(r), n = m.getCaipNetworkByNamespace(r, s);
      if (i) {
        const o = await i.getBalance({
          address: e,
          chainId: s,
          caipNetwork: n,
          tokens: this.options.tokens
        });
        return this.setBalance(o.balance, o.symbol, r), o;
      }
    }
    // -- Universal Provider ---------------------------------------------------
    async initializeUniversalAdapter() {
      var r, i, n, o, a, c, l, u, d, h;
      const e = mI.createLogger((p, ...g) => {
        p && this.handleAlertError(p), console.error(...g);
      }), s = {
        projectId: (r = this.options) == null ? void 0 : r.projectId,
        metadata: {
          name: (i = this.options) != null && i.metadata ? (n = this.options) == null ? void 0 : n.metadata.name : "",
          description: (o = this.options) != null && o.metadata ? (a = this.options) == null ? void 0 : a.metadata.description : "",
          url: (c = this.options) != null && c.metadata ? (l = this.options) == null ? void 0 : l.metadata.url : "",
          icons: (u = this.options) != null && u.metadata ? (d = this.options) == null ? void 0 : d.metadata.icons : [""]
        },
        logger: e
      };
      T$2.setManualWCControl(!!((h = this.options) != null && h.manualWCControl)), this.universalProvider = this.options.universalProvider ?? await pI.init(s), this.listenWalletConnect();
    }
    listenWalletConnect() {
      this.universalProvider && (this.universalProvider.on("display_uri", (e) => {
        Y$1.setUri(e);
      }), this.universalProvider.on("connect", Y$1.finalizeWcConnection), this.universalProvider.on("disconnect", () => {
        this.chainNamespaces.forEach((e) => {
          this.resetAccount(e);
        }), Y$1.resetWcConnection();
      }), this.universalProvider.on("chainChanged", (e) => {
        const s = this.getCaipNetworks().find((i) => i.id == e), r = this.getCaipNetwork();
        if (!s) {
          this.setUnsupportedNetwork(e);
          return;
        }
        (r == null ? void 0 : r.id) !== (s == null ? void 0 : s.id) && this.setCaipNetwork(s);
      }), this.universalProvider.on("session_event", (e) => {
        if (to$1.isSessionEventData(e)) {
          const { name: s, data: r } = e.params.event;
          s === "accountsChanged" && Array.isArray(r) && X$3.isCaipAddress(r[0]) && this.syncAccount(ps.parseCaipAddress(r[0]));
        }
      }));
    }
    createUniversalProvider() {
      var e;
      return !this.universalProviderInitPromise && X$3.isClient() && ((e = this.options) != null && e.projectId) && (this.universalProviderInitPromise = this.initializeUniversalAdapter()), this.universalProviderInitPromise;
    }
    async getUniversalProvider() {
      if (!this.universalProvider)
        try {
          await this.createUniversalProvider();
        } catch (e) {
          Pe$3.sendEvent({
            type: "error",
            event: "INTERNAL_SDK_ERROR",
            properties: {
              errorType: "UniversalProviderInitError",
              errorMessage: e instanceof Error ? e.message : "Unknown",
              uncaught: false
            }
          }), console.error("AppKit:getUniversalProvider - Cannot create provider", e);
        }
      return this.universalProvider;
    }
    // - Utils -------------------------------------------------------------------
    handleAlertError(e) {
      const s = Object.entries(Pr.UniversalProviderErrors).find(([, { message: a }]) => e.message.includes(a)), [r, i] = s ?? [], { message: n, alertErrorKey: o } = i ?? {};
      if (r && n && !this.reportedAlertErrors[r]) {
        const a = Pr.ALERT_ERRORS[o];
        a && (Fs.open(a, "error"), this.reportedAlertErrors[r] = true);
      }
    }
    getAdapter(e) {
      var s;
      if (e)
        return (s = this.chainAdapters) == null ? void 0 : s[e];
    }
    createAdapter(e) {
      var i;
      if (!e)
        return;
      const s = e.namespace;
      if (!s)
        return;
      this.createClients();
      const r = e;
      r.namespace = s, r.construct({
        namespace: s,
        projectId: (i = this.options) == null ? void 0 : i.projectId,
        networks: this.getCaipNetworks()
      }), this.chainNamespaces.includes(s) || this.chainNamespaces.push(s), this.chainAdapters && (this.chainAdapters[s] = r);
    }
    // -- Public -------------------------------------------------------------------
    async open(e) {
      if (await this.injectModalUi(), e != null && e.uri && Y$1.setUri(e.uri), e != null && e.arguments)
        switch (e == null ? void 0 : e.view) {
          case "Swap":
            return ze$3.open({ ...e, data: { swap: e.arguments } });
        }
      return ze$3.open(e);
    }
    async close() {
      await this.injectModalUi(), ze$3.close();
    }
    setLoading(e, s) {
      ze$3.setLoading(e, s);
    }
    async disconnect(e) {
      await Y$1.disconnect(e);
    }
    getSIWX() {
      return T$2.state.siwx;
    }
    // -- review these -------------------------------------------------------------------
    getError() {
      return "";
    }
    getChainId() {
      var e;
      return (e = m.state.activeCaipNetwork) == null ? void 0 : e.id;
    }
    async switchNetwork(e) {
      const s = this.getCaipNetworks().find((r) => r.id === e.id);
      if (!s) {
        Fs.open(Pr.ALERT_ERRORS.SWITCH_NETWORK_NOT_FOUND, "error");
        return;
      }
      await m.switchActiveNetwork(s);
    }
    getWalletProvider() {
      return m.state.activeChain ? Se$2.state.providers[m.state.activeChain] : null;
    }
    getWalletProviderType() {
      return Se$2.getProviderId(m.state.activeChain);
    }
    subscribeProviders(e) {
      return Se$2.subscribeProviders(e);
    }
    getThemeMode() {
      return wt$2.state.themeMode;
    }
    getThemeVariables() {
      return wt$2.state.themeVariables;
    }
    setThemeMode(e) {
      wt$2.setThemeMode(e), Rh(wt$2.state.themeMode);
    }
    setTermsConditionsUrl(e) {
      T$2.setTermsConditionsUrl(e);
    }
    setPrivacyPolicyUrl(e) {
      T$2.setPrivacyPolicyUrl(e);
    }
    setThemeVariables(e) {
      wt$2.setThemeVariables(e), DI(wt$2.state.themeVariables);
    }
    subscribeTheme(e) {
      return wt$2.subscribe(e);
    }
    getWalletInfo() {
      return W$2.state.connectedWalletInfo;
    }
    getAccount(e) {
      var o;
      const s = F$2.getAuthConnector(e), r = m.getAccountData(e), i = m.state.activeChain, n = q$1.getConnectedConnectorId(e || i);
      if (r)
        return {
          allAccounts: r.allAccounts,
          caipAddress: r.caipAddress,
          address: X$3.getPlainAddress(r.caipAddress),
          isConnected: !!r.caipAddress,
          status: r.status,
          embeddedWalletInfo: s && n === z$3.CONNECTOR_ID.AUTH ? {
            user: r.user ? {
              ...r.user,
              /*
               * Getting the username from the chain controller works well for social logins,
               * but Farcaster uses a different connection flow and doesn't emit the username via events.
               * Since the username is stored in local storage before the chain controller updates,
               * it's safe to use the local storage value here.
               */
              username: q$1.getConnectedSocialUsername()
            } : void 0,
            authProvider: r.socialProvider || "email",
            accountType: (o = r.preferredAccountTypes) == null ? void 0 : o[e || i],
            isSmartAccountDeployed: !!r.smartAccountDeployed
          } : void 0
        };
    }
    subscribeAccount(e, s) {
      const r = () => {
        const i = this.getAccount(s);
        i && e(i);
      };
      s ? m.subscribeChainProp("accountState", r, s) : m.subscribe(r), F$2.subscribe(r);
    }
    subscribeNetwork(e) {
      return m.subscribe(({ activeCaipNetwork: s }) => {
        e({
          caipNetwork: s,
          chainId: s == null ? void 0 : s.id,
          caipNetworkId: s == null ? void 0 : s.caipNetworkId
        });
      });
    }
    subscribeWalletInfo(e) {
      return W$2.subscribeKey("connectedWalletInfo", e);
    }
    subscribeShouldUpdateToAddress(e) {
      W$2.subscribeKey("shouldUpdateToAddress", e);
    }
    subscribeCaipNetworkChange(e) {
      m.subscribeKey("activeCaipNetwork", e);
    }
    getState() {
      return Ns.state;
    }
    subscribeState(e) {
      return Ns.subscribe(e);
    }
    showErrorMessage(e) {
      Bt$2.showError(e);
    }
    showSuccessMessage(e) {
      Bt$2.showSuccess(e);
    }
    getEvent() {
      return { ...Pe$3.state };
    }
    subscribeEvents(e) {
      return Pe$3.subscribe(e);
    }
    replace(e) {
      re$1.replace(e);
    }
    redirect(e) {
      re$1.push(e);
    }
    popTransactionStack(e) {
      re$1.popTransactionStack(e);
    }
    isOpen() {
      return ze$3.state.open;
    }
    isTransactionStackEmpty() {
      return re$1.state.transactionStack.length === 0;
    }
    static getInstance() {
      return this.instance;
    }
    updateFeatures(e) {
      T$2.setFeatures(e);
    }
    updateRemoteFeatures(e) {
      T$2.setRemoteFeatures(e);
    }
    updateOptions(e) {
      const r = { ...T$2.state || {}, ...e };
      T$2.setOptions(r);
    }
    setConnectMethodsOrder(e) {
      T$2.setConnectMethodsOrder(e);
    }
    setWalletFeaturesOrder(e) {
      T$2.setWalletFeaturesOrder(e);
    }
    setCollapseWallets(e) {
      T$2.setCollapseWallets(e);
    }
    setSocialsOrder(e) {
      T$2.setSocialsOrder(e);
    }
    getConnectMethodsOrder() {
      return Wa.getConnectOrderMethod(T$2.state.features, F$2.getConnectors());
    }
    /**
     * Adds a network to an existing adapter in AppKit.
     * @param namespace - The chain namespace to add the network to (e.g. 'eip155', 'solana')
     * @param network - The network configuration to add
     * @throws Error if adapter for namespace doesn't exist
     */
    addNetwork(e, s) {
      if (this.chainAdapters && !this.chainAdapters[e])
        throw new Error(`Adapter for namespace ${e} doesn't exist`);
      const r = this.extendCaipNetwork(s, this.options);
      this.getCaipNetworks().find((i) => i.id === r.id) || m.addNetwork(r);
    }
    /**
     * Removes a network from an existing adapter in AppKit.
     * @param namespace - The chain namespace the network belongs to
     * @param networkId - The network ID to remove
     * @throws Error if adapter for namespace doesn't exist or if removing last network
     */
    removeNetwork(e, s) {
      if (this.chainAdapters && !this.chainAdapters[e])
        throw new Error(`Adapter for namespace ${e} doesn't exist`);
      this.getCaipNetworks().find((i) => i.id === s) && m.removeNetwork(e, s);
    }
  }
  let Ru = false;
  class Dh extends WI {
    // -- Overrides --------------------------------------------------------------
    async open(e) {
      F$2.isConnected() || await super.open(e);
    }
    async close() {
      await super.close(), this.options.manualWCControl && Y$1.finalizeWcConnection();
    }
    async syncIdentity(e) {
      return Promise.resolve();
    }
    async syncBalance(e) {
      return Promise.resolve();
    }
    async injectModalUi() {
      if (!Ru && X$3.isClient()) {
        if (await Promise.resolve().then(function () { return basicOoDKhpA; }), await Promise.resolve().then(function () { return w3mModalZgSRIMCD; }), !document.querySelector("w3m-modal")) {
          const s = document.createElement("w3m-modal");
          !T$2.state.disableAppend && !T$2.state.enableEmbedded && document.body.insertAdjacentElement("beforeend", s);
        }
        Ru = true;
      }
    }
  }
  const zI = "1.7.8";
  function HI(t) {
    return new Dh({
      ...t,
      basic: true,
      sdkVersion: `html-core-${zI}`
    });
  }
  const _A = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    AppKit: Dh,
    createAppKit: HI
  }, Symbol.toStringTag, { value: "Module" }));

  var coreDT8g9mFm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    A: K$3,
    B: Ph,
    C: F$2,
    D: za,
    E: Pe$3,
    F: Xr,
    G: uA,
    H: Pg,
    I: Rc,
    J: rd,
    K: yg,
    L: Og,
    M: ze$3,
    N: dA,
    O: T$2,
    P: lA,
    Q: go$1,
    R: re$1,
    S: q$1,
    T: wt$2,
    U: pA,
    V: hA,
    W: Wa,
    X: _A,
    a: eo$1,
    b: X$3,
    c: Zn$1,
    d: Vu,
    e: AA,
    f: Y$1,
    g: z$3,
    h: m,
    i: Lr,
    j: Mt$2,
    k: Bt$2,
    l: Ee$3,
    m: EA,
    n: We$2,
    o: NA,
    p: _e$3,
    q: Qe$1,
    r: IA,
    s: et$2,
    t: Oi$1,
    u: Fs,
    v: yI,
    w: At$1,
    x: vA,
    y: W$2,
    z: CA
  });

  function ye$1(n, e, t, r) {
    if (typeof n.setBigUint64 == "function")
      return n.setBigUint64(e, t, r);
    const o = BigInt(32), s = BigInt(4294967295), c = Number(t >> o & s), f = Number(t & s), i = r ? 4 : 0, u = r ? 0 : 4;
    n.setUint32(e + i, c, r), n.setUint32(e + u, f, r);
  }
  function me$1(n, e, t) {
    return n & e ^ ~n & t;
  }
  function xe$1(n, e, t) {
    return n & e ^ n & t ^ e & t;
  }
  let Ee$2 = class Ee extends Pg {
    constructor(e, t, r, o) {
      super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = o, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e), this.view = uA(this.buffer);
    }
    update(e) {
      Rc(this);
      const { view: t, buffer: r, blockLen: o } = this;
      e = rd(e);
      const s = e.length;
      for (let c = 0; c < s; ) {
        const f = Math.min(o - this.pos, s - c);
        if (f === o) {
          const i = uA(e);
          for (; o <= s - c; c += o)
            this.process(i, c);
          continue;
        }
        r.set(e.subarray(c, c + f), this.pos), this.pos += f, c += f, this.pos === o && (this.process(t, 0), this.pos = 0);
      }
      return this.length += e.length, this.roundClean(), this;
    }
    digestInto(e) {
      Rc(this), yg(e, this), this.finished = true;
      const { buffer: t, view: r, blockLen: o, isLE: s } = this;
      let { pos: c } = this;
      t[c++] = 128, this.buffer.subarray(c).fill(0), this.padOffset > o - c && (this.process(r, 0), c = 0);
      for (let h = c; h < o; h++)
        t[h] = 0;
      ye$1(r, o - 8, BigInt(this.length * 8), s), this.process(r, 0);
      const f = uA(e), i = this.outputLen;
      if (i % 4)
        throw new Error("_sha2: outputLen should be aligned to 32bit");
      const u = i / 4, y = this.get();
      if (u > y.length)
        throw new Error("_sha2: outputLen bigger than state");
      for (let h = 0; h < u; h++)
        f.setUint32(4 * h, y[h], s);
    }
    digest() {
      const { buffer: e, outputLen: t } = this;
      this.digestInto(e);
      const r = e.slice(0, t);
      return this.destroy(), r;
    }
    _cloneInto(e) {
      e || (e = new this.constructor()), e.set(...this.get());
      const { blockLen: t, buffer: r, length: o, finished: s, destroyed: c, pos: f } = this;
      return e.length = o, e.pos = f, e.finished = s, e.destroyed = c, o % t && e.buffer.set(r), e;
    }
  };
  const Be$2 = /* @__PURE__ */ new Uint32Array([
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
  ]), Q$3 = /* @__PURE__ */ new Uint32Array([
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ]), J$2 = /* @__PURE__ */ new Uint32Array(64);
  let ve$1 = class ve extends Ee$2 {
    constructor() {
      super(64, 32, 8, false), this.A = Q$3[0] | 0, this.B = Q$3[1] | 0, this.C = Q$3[2] | 0, this.D = Q$3[3] | 0, this.E = Q$3[4] | 0, this.F = Q$3[5] | 0, this.G = Q$3[6] | 0, this.H = Q$3[7] | 0;
    }
    get() {
      const { A: e, B: t, C: r, D: o, E: s, F: c, G: f, H: i } = this;
      return [e, t, r, o, s, c, f, i];
    }
    // prettier-ignore
    set(e, t, r, o, s, c, f, i) {
      this.A = e | 0, this.B = t | 0, this.C = r | 0, this.D = o | 0, this.E = s | 0, this.F = c | 0, this.G = f | 0, this.H = i | 0;
    }
    process(e, t) {
      for (let h = 0; h < 16; h++, t += 4)
        J$2[h] = e.getUint32(t, false);
      for (let h = 16; h < 64; h++) {
        const l = J$2[h - 15], m = J$2[h - 2], N = dA(l, 7) ^ dA(l, 18) ^ l >>> 3, b = dA(m, 17) ^ dA(m, 19) ^ m >>> 10;
        J$2[h] = b + J$2[h - 7] + N + J$2[h - 16] | 0;
      }
      let { A: r, B: o, C: s, D: c, E: f, F: i, G: u, H: y } = this;
      for (let h = 0; h < 64; h++) {
        const l = dA(f, 6) ^ dA(f, 11) ^ dA(f, 25), m = y + l + me$1(f, i, u) + Be$2[h] + J$2[h] | 0, b = (dA(r, 2) ^ dA(r, 13) ^ dA(r, 22)) + xe$1(r, o, s) | 0;
        y = u, u = i, i = f, f = c + m | 0, c = s, s = o, o = r, r = m + b | 0;
      }
      r = r + this.A | 0, o = o + this.B | 0, s = s + this.C | 0, c = c + this.D | 0, f = f + this.E | 0, i = i + this.F | 0, u = u + this.G | 0, y = y + this.H | 0, this.set(r, o, s, c, f, i, u, y);
    }
    roundClean() {
      J$2.fill(0);
    }
    destroy() {
      this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
    }
  };
  const Se$1 = /* @__PURE__ */ Og(() => new ve$1());
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Bt$1 = /* @__PURE__ */ BigInt(0), vt$2 = /* @__PURE__ */ BigInt(1), Ae$1 = /* @__PURE__ */ BigInt(2);
  function it$2(n) {
    return n instanceof Uint8Array || ArrayBuffer.isView(n) && n.constructor.name === "Uint8Array";
  }
  function yt$1(n) {
    if (!it$2(n))
      throw new Error("Uint8Array expected");
  }
  function ut$2(n, e) {
    if (typeof e != "boolean")
      throw new Error(n + " boolean expected, got " + e);
  }
  const Ie$2 = /* @__PURE__ */ Array.from({ length: 256 }, (n, e) => e.toString(16).padStart(2, "0"));
  function lt$2(n) {
    yt$1(n);
    let e = "";
    for (let t = 0; t < n.length; t++)
      e += Ie$2[n[t]];
    return e;
  }
  function at$2(n) {
    const e = n.toString(16);
    return e.length & 1 ? "0" + e : e;
  }
  function Rt$1(n) {
    if (typeof n != "string")
      throw new Error("hex string expected, got " + typeof n);
    return n === "" ? Bt$1 : BigInt("0x" + n);
  }
  const D$2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
  function Yt$1(n) {
    if (n >= D$2._0 && n <= D$2._9)
      return n - D$2._0;
    if (n >= D$2.A && n <= D$2.F)
      return n - (D$2.A - 10);
    if (n >= D$2.a && n <= D$2.f)
      return n - (D$2.a - 10);
  }
  function dt$2(n) {
    if (typeof n != "string")
      throw new Error("hex string expected, got " + typeof n);
    const e = n.length, t = e / 2;
    if (e % 2)
      throw new Error("hex string expected, got unpadded hex of length " + e);
    const r = new Uint8Array(t);
    for (let o = 0, s = 0; o < t; o++, s += 2) {
      const c = Yt$1(n.charCodeAt(s)), f = Yt$1(n.charCodeAt(s + 1));
      if (c === void 0 || f === void 0) {
        const i = n[s] + n[s + 1];
        throw new Error('hex string expected, got non-hex character "' + i + '" at index ' + s);
      }
      r[o] = c * 16 + f;
    }
    return r;
  }
  function rt$2(n) {
    return Rt$1(lt$2(n));
  }
  function Vt$1(n) {
    return yt$1(n), Rt$1(lt$2(Uint8Array.from(n).reverse()));
  }
  function ht$2(n, e) {
    return dt$2(n.toString(16).padStart(e * 2, "0"));
  }
  function Mt$1(n, e) {
    return ht$2(n, e).reverse();
  }
  function Ne$2(n) {
    return dt$2(at$2(n));
  }
  function K$2(n, e, t) {
    let r;
    if (typeof e == "string")
      try {
        r = dt$2(e);
      } catch (s) {
        throw new Error(n + " must be hex string or Uint8Array, cause: " + s);
      }
    else if (it$2(e))
      r = Uint8Array.from(e);
    else
      throw new Error(n + " must be hex string or Uint8Array");
    const o = r.length;
    if (typeof t == "number" && o !== t)
      throw new Error(n + " of length " + t + " expected, got " + o);
    return r;
  }
  function bt$2(...n) {
    let e = 0;
    for (let r = 0; r < n.length; r++) {
      const o = n[r];
      yt$1(o), e += o.length;
    }
    const t = new Uint8Array(e);
    for (let r = 0, o = 0; r < n.length; r++) {
      const s = n[r];
      t.set(s, o), o += s.length;
    }
    return t;
  }
  function qe$1(n, e) {
    if (n.length !== e.length)
      return false;
    let t = 0;
    for (let r = 0; r < n.length; r++)
      t |= n[r] ^ e[r];
    return t === 0;
  }
  function Oe$1(n) {
    if (typeof n != "string")
      throw new Error("string expected");
    return new Uint8Array(new TextEncoder().encode(n));
  }
  const qt$1 = (n) => typeof n == "bigint" && Bt$1 <= n;
  function St$2(n, e, t) {
    return qt$1(n) && qt$1(e) && qt$1(t) && e <= n && n < t;
  }
  function ot$2(n, e, t, r) {
    if (!St$2(e, t, r))
      throw new Error("expected valid " + n + ": " + t + " <= n < " + r + ", got " + e);
  }
  function te$1(n) {
    let e;
    for (e = 0; n > Bt$1; n >>= vt$2, e += 1)
      ;
    return e;
  }
  function Le$2(n, e) {
    return n >> BigInt(e) & vt$2;
  }
  function He$1(n, e, t) {
    return n | (t ? vt$2 : Bt$1) << BigInt(e);
  }
  const jt = (n) => (Ae$1 << BigInt(n - 1)) - vt$2, Ot$1 = (n) => new Uint8Array(n), Ft$1 = (n) => Uint8Array.from(n);
  function ee$1(n, e, t) {
    if (typeof n != "number" || n < 2)
      throw new Error("hashLen must be a number");
    if (typeof e != "number" || e < 2)
      throw new Error("qByteLen must be a number");
    if (typeof t != "function")
      throw new Error("hmacFn must be a function");
    let r = Ot$1(n), o = Ot$1(n), s = 0;
    const c = () => {
      r.fill(1), o.fill(0), s = 0;
    }, f = (...h) => t(o, r, ...h), i = (h = Ot$1()) => {
      o = f(Ft$1([0]), h), r = f(), h.length !== 0 && (o = f(Ft$1([1]), h), r = f());
    }, u = () => {
      if (s++ >= 1e3)
        throw new Error("drbg: tried 1000 values");
      let h = 0;
      const l = [];
      for (; h < e; ) {
        r = f();
        const m = r.slice();
        l.push(m), h += r.length;
      }
      return bt$2(...l);
    };
    return (h, l) => {
      c(), i(h);
      let m;
      for (; !(m = l(u())); )
        i();
      return c(), m;
    };
  }
  const Ue$2 = {
    bigint: (n) => typeof n == "bigint",
    function: (n) => typeof n == "function",
    boolean: (n) => typeof n == "boolean",
    string: (n) => typeof n == "string",
    stringOrUint8Array: (n) => typeof n == "string" || it$2(n),
    isSafeInteger: (n) => Number.isSafeInteger(n),
    array: (n) => Array.isArray(n),
    field: (n, e) => e.Fp.isValid(n),
    hash: (n) => typeof n == "function" && Number.isSafeInteger(n.outputLen)
  };
  function mt$2(n, e, t = {}) {
    const r = (o, s, c) => {
      const f = Ue$2[s];
      if (typeof f != "function")
        throw new Error("invalid validator function");
      const i = n[o];
      if (!(c && i === void 0) && !f(i, n))
        throw new Error("param " + String(o) + " is invalid. Expected " + s + ", got " + i);
    };
    for (const [o, s] of Object.entries(e))
      r(o, s, false);
    for (const [o, s] of Object.entries(t))
      r(o, s, true);
    return n;
  }
  const Te$2 = () => {
    throw new Error("not implemented");
  };
  function _t$1(n) {
    const e = /* @__PURE__ */ new WeakMap();
    return (t, ...r) => {
      const o = e.get(t);
      if (o !== void 0)
        return o;
      const s = n(t, ...r);
      return e.set(t, s), s;
    };
  }
  const _e$2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    aInRange: ot$2,
    abool: ut$2,
    abytes: yt$1,
    bitGet: Le$2,
    bitLen: te$1,
    bitMask: jt,
    bitSet: He$1,
    bytesToHex: lt$2,
    bytesToNumberBE: rt$2,
    bytesToNumberLE: Vt$1,
    concatBytes: bt$2,
    createHmacDrbg: ee$1,
    ensureBytes: K$2,
    equalBytes: qe$1,
    hexToBytes: dt$2,
    hexToNumber: Rt$1,
    inRange: St$2,
    isBytes: it$2,
    memoized: _t$1,
    notImplemented: Te$2,
    numberToBytesBE: ht$2,
    numberToBytesLE: Mt$1,
    numberToHexUnpadded: at$2,
    numberToVarBytesBE: Ne$2,
    utf8ToBytes: Oe$1,
    validateObject: mt$2
  }, Symbol.toStringTag, { value: "Module" }));
  let ne$2 = class ne extends Pg {
    constructor(e, t) {
      super(), this.finished = false, this.destroyed = false, lA(e);
      const r = rd(t);
      if (this.iHash = e.create(), typeof this.iHash.update != "function")
        throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const o = this.blockLen, s = new Uint8Array(o);
      s.set(r.length > o ? e.create().update(r).digest() : r);
      for (let c = 0; c < s.length; c++)
        s[c] ^= 54;
      this.iHash.update(s), this.oHash = e.create();
      for (let c = 0; c < s.length; c++)
        s[c] ^= 106;
      this.oHash.update(s), s.fill(0);
    }
    update(e) {
      return Rc(this), this.iHash.update(e), this;
    }
    digestInto(e) {
      Rc(this), go$1(e, this.outputLen), this.finished = true, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
    }
    digest() {
      const e = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(e), e;
    }
    _cloneInto(e) {
      e || (e = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: t, iHash: r, finished: o, destroyed: s, blockLen: c, outputLen: f } = this;
      return e = e, e.finished = o, e.destroyed = s, e.blockLen = c, e.outputLen = f, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e;
    }
    destroy() {
      this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
    }
  };
  const re = (n, e, t) => new ne$2(n, e).update(t).digest();
  re.create = (n, e) => new ne$2(n, e);
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const z$2 = BigInt(0), T$1 = BigInt(1), nt$2 = /* @__PURE__ */ BigInt(2), ke = /* @__PURE__ */ BigInt(3), kt = /* @__PURE__ */ BigInt(4), Kt$1 = /* @__PURE__ */ BigInt(5), Pt$1 = /* @__PURE__ */ BigInt(8);
  function M$2(n, e) {
    const t = n % e;
    return t >= z$2 ? t : e + t;
  }
  function ze$2(n, e, t) {
    if (e < z$2)
      throw new Error("invalid exponent, negatives unsupported");
    if (t <= z$2)
      throw new Error("invalid modulus");
    if (t === T$1)
      return z$2;
    let r = T$1;
    for (; e > z$2; )
      e & T$1 && (r = r * n % t), n = n * n % t, e >>= T$1;
    return r;
  }
  function Y(n, e, t) {
    let r = n;
    for (; e-- > z$2; )
      r *= r, r %= t;
    return r;
  }
  function zt$1(n, e) {
    if (n === z$2)
      throw new Error("invert: expected non-zero number");
    if (e <= z$2)
      throw new Error("invert: expected positive modulus, got " + e);
    let t = M$2(n, e), r = e, o = z$2, s = T$1;
    for (; t !== z$2; ) {
      const f = r / t, i = r % t, u = o - s * f;
      r = t, t = i, o = s, s = u;
    }
    if (r !== T$1)
      throw new Error("invert: does not exist");
    return M$2(o, e);
  }
  function Ce$1(n) {
    const e = (n - T$1) / nt$2;
    let t, r, o;
    for (t = n - T$1, r = 0; t % nt$2 === z$2; t /= nt$2, r++)
      ;
    for (o = nt$2; o < n && ze$2(o, e, n) !== n - T$1; o++)
      if (o > 1e3)
        throw new Error("Cannot find square root: likely non-prime P");
    if (r === 1) {
      const c = (n + T$1) / kt;
      return function(i, u) {
        const y = i.pow(u, c);
        if (!i.eql(i.sqr(y), u))
          throw new Error("Cannot find square root");
        return y;
      };
    }
    const s = (t + T$1) / nt$2;
    return function(f, i) {
      if (f.pow(i, e) === f.neg(f.ONE))
        throw new Error("Cannot find square root");
      let u = r, y = f.pow(f.mul(f.ONE, o), t), h = f.pow(i, s), l = f.pow(i, t);
      for (; !f.eql(l, f.ONE); ) {
        if (f.eql(l, f.ZERO))
          return f.ZERO;
        let m = 1;
        for (let b = f.sqr(l); m < u && !f.eql(b, f.ONE); m++)
          b = f.sqr(b);
        const N = f.pow(y, T$1 << BigInt(u - m - 1));
        y = f.sqr(N), h = f.mul(h, N), l = f.mul(l, y), u = m;
      }
      return h;
    };
  }
  function Ze$1(n) {
    if (n % kt === ke) {
      const e = (n + T$1) / kt;
      return function(r, o) {
        const s = r.pow(o, e);
        if (!r.eql(r.sqr(s), o))
          throw new Error("Cannot find square root");
        return s;
      };
    }
    if (n % Pt$1 === Kt$1) {
      const e = (n - Kt$1) / Pt$1;
      return function(r, o) {
        const s = r.mul(o, nt$2), c = r.pow(s, e), f = r.mul(o, c), i = r.mul(r.mul(f, nt$2), c), u = r.mul(f, r.sub(i, r.ONE));
        if (!r.eql(r.sqr(u), o))
          throw new Error("Cannot find square root");
        return u;
      };
    }
    return Ce$1(n);
  }
  const Re$2 = [
    "create",
    "isValid",
    "is0",
    "neg",
    "inv",
    "sqrt",
    "sqr",
    "eql",
    "add",
    "sub",
    "mul",
    "pow",
    "div",
    "addN",
    "subN",
    "mulN",
    "sqrN"
  ];
  function Ve$1(n) {
    const e = {
      ORDER: "bigint",
      MASK: "bigint",
      BYTES: "isSafeInteger",
      BITS: "isSafeInteger"
    }, t = Re$2.reduce((r, o) => (r[o] = "function", r), e);
    return mt$2(n, t);
  }
  function Me$1(n, e, t) {
    if (t < z$2)
      throw new Error("invalid exponent, negatives unsupported");
    if (t === z$2)
      return n.ONE;
    if (t === T$1)
      return e;
    let r = n.ONE, o = e;
    for (; t > z$2; )
      t & T$1 && (r = n.mul(r, o)), o = n.sqr(o), t >>= T$1;
    return r;
  }
  function je$2(n, e) {
    const t = new Array(e.length), r = e.reduce((s, c, f) => n.is0(c) ? s : (t[f] = s, n.mul(s, c)), n.ONE), o = n.inv(r);
    return e.reduceRight((s, c, f) => n.is0(c) ? s : (t[f] = n.mul(s, t[f]), n.mul(s, c)), o), t;
  }
  function oe$1(n, e) {
    const t = e !== void 0 ? e : n.toString(2).length, r = Math.ceil(t / 8);
    return { nBitLength: t, nByteLength: r };
  }
  function ie$1(n, e, t = false, r = {}) {
    if (n <= z$2)
      throw new Error("invalid field: expected ORDER > 0, got " + n);
    const { nBitLength: o, nByteLength: s } = oe$1(n, e);
    if (s > 2048)
      throw new Error("invalid field: expected ORDER of <= 2048 bytes");
    let c;
    const f = Object.freeze({
      ORDER: n,
      isLE: t,
      BITS: o,
      BYTES: s,
      MASK: jt(o),
      ZERO: z$2,
      ONE: T$1,
      create: (i) => M$2(i, n),
      isValid: (i) => {
        if (typeof i != "bigint")
          throw new Error("invalid field element: expected bigint, got " + typeof i);
        return z$2 <= i && i < n;
      },
      is0: (i) => i === z$2,
      isOdd: (i) => (i & T$1) === T$1,
      neg: (i) => M$2(-i, n),
      eql: (i, u) => i === u,
      sqr: (i) => M$2(i * i, n),
      add: (i, u) => M$2(i + u, n),
      sub: (i, u) => M$2(i - u, n),
      mul: (i, u) => M$2(i * u, n),
      pow: (i, u) => Me$1(f, i, u),
      div: (i, u) => M$2(i * zt$1(u, n), n),
      // Same as above, but doesn't normalize
      sqrN: (i) => i * i,
      addN: (i, u) => i + u,
      subN: (i, u) => i - u,
      mulN: (i, u) => i * u,
      inv: (i) => zt$1(i, n),
      sqrt: r.sqrt || ((i) => (c || (c = Ze$1(n)), c(f, i))),
      invertBatch: (i) => je$2(f, i),
      // TODO: do we really need constant cmov?
      // We don't have const-time bigints anyway, so probably will be not very useful
      cmov: (i, u, y) => y ? u : i,
      toBytes: (i) => t ? Mt$1(i, s) : ht$2(i, s),
      fromBytes: (i) => {
        if (i.length !== s)
          throw new Error("Field.fromBytes: expected " + s + " bytes, got " + i.length);
        return t ? Vt$1(i) : rt$2(i);
      }
    });
    return Object.freeze(f);
  }
  function se$1(n) {
    if (typeof n != "bigint")
      throw new Error("field order must be bigint");
    const e = n.toString(2).length;
    return Math.ceil(e / 8);
  }
  function ce$1(n) {
    const e = se$1(n);
    return e + Math.ceil(e / 2);
  }
  function Ye$1(n, e, t = false) {
    const r = n.length, o = se$1(e), s = ce$1(e);
    if (r < 16 || r < s || r > 1024)
      throw new Error("expected " + s + "-1024 bytes of input, got " + r);
    const c = t ? Vt$1(n) : rt$2(n), f = M$2(c, e - T$1) + T$1;
    return t ? Mt$1(f, o) : ht$2(f, o);
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const Gt$1 = BigInt(0), xt$1 = BigInt(1);
  function Lt$1(n, e) {
    const t = e.negate();
    return n ? t : e;
  }
  function fe$1(n, e) {
    if (!Number.isSafeInteger(n) || n <= 0 || n > e)
      throw new Error("invalid window size, expected [1.." + e + "], got W=" + n);
  }
  function Ht$1(n, e) {
    fe$1(n, e);
    const t = Math.ceil(e / n) + 1, r = 2 ** (n - 1);
    return { windows: t, windowSize: r };
  }
  function Fe$1(n, e) {
    if (!Array.isArray(n))
      throw new Error("array expected");
    n.forEach((t, r) => {
      if (!(t instanceof e))
        throw new Error("invalid point at index " + r);
    });
  }
  function Ke$1(n, e) {
    if (!Array.isArray(n))
      throw new Error("array of scalars expected");
    n.forEach((t, r) => {
      if (!e.isValid(t))
        throw new Error("invalid scalar at index " + r);
    });
  }
  const Ut$1 = /* @__PURE__ */ new WeakMap(), ae$2 = /* @__PURE__ */ new WeakMap();
  function Tt$1(n) {
    return ae$2.get(n) || 1;
  }
  function Pe$2(n, e) {
    return {
      constTimeNegate: Lt$1,
      hasPrecomputes(t) {
        return Tt$1(t) !== 1;
      },
      // non-const time multiplication ladder
      unsafeLadder(t, r, o = n.ZERO) {
        let s = t;
        for (; r > Gt$1; )
          r & xt$1 && (o = o.add(s)), s = s.double(), r >>= xt$1;
        return o;
      },
      /**
       * Creates a wNAF precomputation window. Used for caching.
       * Default window size is set by `utils.precompute()` and is equal to 8.
       * Number of precomputed points depends on the curve size:
       * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
       * - 𝑊 is the window size
       * - 𝑛 is the bitlength of the curve order.
       * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
       * @param elm Point instance
       * @param W window size
       * @returns precomputed point tables flattened to a single array
       */
      precomputeWindow(t, r) {
        const { windows: o, windowSize: s } = Ht$1(r, e), c = [];
        let f = t, i = f;
        for (let u = 0; u < o; u++) {
          i = f, c.push(i);
          for (let y = 1; y < s; y++)
            i = i.add(f), c.push(i);
          f = i.double();
        }
        return c;
      },
      /**
       * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
       * @param W window size
       * @param precomputes precomputed tables
       * @param n scalar (we don't check here, but should be less than curve order)
       * @returns real and fake (for const-time) points
       */
      wNAF(t, r, o) {
        const { windows: s, windowSize: c } = Ht$1(t, e);
        let f = n.ZERO, i = n.BASE;
        const u = BigInt(2 ** t - 1), y = 2 ** t, h = BigInt(t);
        for (let l = 0; l < s; l++) {
          const m = l * c;
          let N = Number(o & u);
          o >>= h, N > c && (N -= y, o += xt$1);
          const b = m, a = m + Math.abs(N) - 1, g = l % 2 !== 0, x = N < 0;
          N === 0 ? i = i.add(Lt$1(g, r[b])) : f = f.add(Lt$1(x, r[a]));
        }
        return { p: f, f: i };
      },
      /**
       * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.
       * @param W window size
       * @param precomputes precomputed tables
       * @param n scalar (we don't check here, but should be less than curve order)
       * @param acc accumulator point to add result of multiplication
       * @returns point
       */
      wNAFUnsafe(t, r, o, s = n.ZERO) {
        const { windows: c, windowSize: f } = Ht$1(t, e), i = BigInt(2 ** t - 1), u = 2 ** t, y = BigInt(t);
        for (let h = 0; h < c; h++) {
          const l = h * f;
          if (o === Gt$1)
            break;
          let m = Number(o & i);
          if (o >>= y, m > f && (m -= u, o += xt$1), m === 0)
            continue;
          let N = r[l + Math.abs(m) - 1];
          m < 0 && (N = N.negate()), s = s.add(N);
        }
        return s;
      },
      getPrecomputes(t, r, o) {
        let s = Ut$1.get(r);
        return s || (s = this.precomputeWindow(r, t), t !== 1 && Ut$1.set(r, o(s))), s;
      },
      wNAFCached(t, r, o) {
        const s = Tt$1(t);
        return this.wNAF(s, this.getPrecomputes(s, t, o), r);
      },
      wNAFCachedUnsafe(t, r, o, s) {
        const c = Tt$1(t);
        return c === 1 ? this.unsafeLadder(t, r, s) : this.wNAFUnsafe(c, this.getPrecomputes(c, t, o), r, s);
      },
      // We calculate precomputes for elliptic curve point multiplication
      // using windowed method. This specifies window size and
      // stores precomputed values. Usually only base point would be precomputed.
      setWindowSize(t, r) {
        fe$1(r, e), ae$2.set(t, r), Ut$1.delete(t);
      }
    };
  }
  function Ge$1(n, e, t, r) {
    if (Fe$1(t, n), Ke$1(r, e), t.length !== r.length)
      throw new Error("arrays of points and scalars must have equal length");
    const o = n.ZERO, s = te$1(BigInt(t.length)), c = s > 12 ? s - 3 : s > 4 ? s - 2 : s ? 2 : 1, f = (1 << c) - 1, i = new Array(f + 1).fill(o), u = Math.floor((e.BITS - 1) / c) * c;
    let y = o;
    for (let h = u; h >= 0; h -= c) {
      i.fill(o);
      for (let m = 0; m < r.length; m++) {
        const N = r[m], b = Number(N >> BigInt(h) & BigInt(f));
        i[b] = i[b].add(t[m]);
      }
      let l = o;
      for (let m = i.length - 1, N = o; m > 0; m--)
        N = N.add(i[m]), l = l.add(N);
      if (y = y.add(l), h !== 0)
        for (let m = 0; m < c; m++)
          y = y.double();
    }
    return y;
  }
  function ue$2(n) {
    return Ve$1(n.Fp), mt$2(n, {
      n: "bigint",
      h: "bigint",
      Gx: "field",
      Gy: "field"
    }, {
      nBitLength: "isSafeInteger",
      nByteLength: "isSafeInteger"
    }), Object.freeze({
      ...oe$1(n.n, n.nBitLength),
      ...n,
      p: n.Fp.ORDER
    });
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function Dt$1(n) {
    n.lowS !== void 0 && ut$2("lowS", n.lowS), n.prehash !== void 0 && ut$2("prehash", n.prehash);
  }
  function De$2(n) {
    const e = ue$2(n);
    mt$2(e, {
      a: "field",
      b: "field"
    }, {
      allowedPrivateKeyLengths: "array",
      wrapPrivateKey: "boolean",
      isTorsionFree: "function",
      clearCofactor: "function",
      allowInfinityPoint: "boolean",
      fromBytes: "function",
      toBytes: "function"
    });
    const { endo: t, Fp: r, a: o } = e;
    if (t) {
      if (!r.eql(o, r.ZERO))
        throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");
      if (typeof t != "object" || typeof t.beta != "bigint" || typeof t.splitScalar != "function")
        throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function");
    }
    return Object.freeze({ ...e });
  }
  const { bytesToNumberBE: $e$2, hexToBytes: We$1 } = _e$2;
  let Xe$1 = class Xe extends Error {
    constructor(e = "") {
      super(e);
    }
  };
  const $$1 = {
    // asn.1 DER encoding utils
    Err: Xe$1,
    // Basic building block is TLV (Tag-Length-Value)
    _tlv: {
      encode: (n, e) => {
        const { Err: t } = $$1;
        if (n < 0 || n > 256)
          throw new t("tlv.encode: wrong tag");
        if (e.length & 1)
          throw new t("tlv.encode: unpadded data");
        const r = e.length / 2, o = at$2(r);
        if (o.length / 2 & 128)
          throw new t("tlv.encode: long form length too big");
        const s = r > 127 ? at$2(o.length / 2 | 128) : "";
        return at$2(n) + s + o + e;
      },
      // v - value, l - left bytes (unparsed)
      decode(n, e) {
        const { Err: t } = $$1;
        let r = 0;
        if (n < 0 || n > 256)
          throw new t("tlv.encode: wrong tag");
        if (e.length < 2 || e[r++] !== n)
          throw new t("tlv.decode: wrong tlv");
        const o = e[r++], s = !!(o & 128);
        let c = 0;
        if (!s)
          c = o;
        else {
          const i = o & 127;
          if (!i)
            throw new t("tlv.decode(long): indefinite length not supported");
          if (i > 4)
            throw new t("tlv.decode(long): byte length is too big");
          const u = e.subarray(r, r + i);
          if (u.length !== i)
            throw new t("tlv.decode: length bytes not complete");
          if (u[0] === 0)
            throw new t("tlv.decode(long): zero leftmost byte");
          for (const y of u)
            c = c << 8 | y;
          if (r += i, c < 128)
            throw new t("tlv.decode(long): not minimal encoding");
        }
        const f = e.subarray(r, r + c);
        if (f.length !== c)
          throw new t("tlv.decode: wrong value length");
        return { v: f, l: e.subarray(r + c) };
      }
    },
    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,
    // since we always use positive integers here. It must always be empty:
    // - add zero byte if exists
    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)
    _int: {
      encode(n) {
        const { Err: e } = $$1;
        if (n < W$1)
          throw new e("integer: negative integers are not allowed");
        let t = at$2(n);
        if (Number.parseInt(t[0], 16) & 8 && (t = "00" + t), t.length & 1)
          throw new e("unexpected DER parsing assertion: unpadded hex");
        return t;
      },
      decode(n) {
        const { Err: e } = $$1;
        if (n[0] & 128)
          throw new e("invalid signature integer: negative");
        if (n[0] === 0 && !(n[1] & 128))
          throw new e("invalid signature integer: unnecessary leading zero");
        return $e$2(n);
      }
    },
    toSig(n) {
      const { Err: e, _int: t, _tlv: r } = $$1, o = typeof n == "string" ? We$1(n) : n;
      yt$1(o);
      const { v: s, l: c } = r.decode(48, o);
      if (c.length)
        throw new e("invalid signature: left bytes after parsing");
      const { v: f, l: i } = r.decode(2, s), { v: u, l: y } = r.decode(2, i);
      if (y.length)
        throw new e("invalid signature: left bytes after parsing");
      return { r: t.decode(f), s: t.decode(u) };
    },
    hexFromSig(n) {
      const { _tlv: e, _int: t } = $$1, r = e.encode(2, t.encode(n.r)), o = e.encode(2, t.encode(n.s)), s = r + o;
      return e.encode(48, s);
    }
  }, W$1 = BigInt(0), k$2 = BigInt(1);
  BigInt(2);
  const $t$1 = BigInt(3);
  BigInt(4);
  function Qe(n) {
    const e = De$2(n), { Fp: t } = e, r = ie$1(e.n, e.nBitLength), o = e.toBytes || ((b, a, g) => {
      const x = a.toAffine();
      return bt$2(Uint8Array.from([4]), t.toBytes(x.x), t.toBytes(x.y));
    }), s = e.fromBytes || ((b) => {
      const a = b.subarray(1), g = t.fromBytes(a.subarray(0, t.BYTES)), x = t.fromBytes(a.subarray(t.BYTES, 2 * t.BYTES));
      return { x: g, y: x };
    });
    function c(b) {
      const { a, b: g } = e, x = t.sqr(b), E = t.mul(x, b);
      return t.add(t.add(E, t.mul(b, a)), g);
    }
    if (!t.eql(t.sqr(e.Gy), c(e.Gx)))
      throw new Error("bad generator point: equation left != right");
    function f(b) {
      return St$2(b, k$2, e.n);
    }
    function i(b) {
      const { allowedPrivateKeyLengths: a, nByteLength: g, wrapPrivateKey: x, n: E } = e;
      if (a && typeof b != "bigint") {
        if (it$2(b) && (b = lt$2(b)), typeof b != "string" || !a.includes(b.length))
          throw new Error("invalid private key");
        b = b.padStart(g * 2, "0");
      }
      let q;
      try {
        q = typeof b == "bigint" ? b : rt$2(K$2("private key", b, g));
      } catch {
        throw new Error("invalid private key, expected hex or " + g + " bytes, got " + typeof b);
      }
      return x && (q = M$2(q, E)), ot$2("private key", q, k$2, E), q;
    }
    function u(b) {
      if (!(b instanceof l))
        throw new Error("ProjectivePoint expected");
    }
    const y = _t$1((b, a) => {
      const { px: g, py: x, pz: E } = b;
      if (t.eql(E, t.ONE))
        return { x: g, y: x };
      const q = b.is0();
      a == null && (a = q ? t.ONE : t.inv(E));
      const L = t.mul(g, a), I = t.mul(x, a), B = t.mul(E, a);
      if (q)
        return { x: t.ZERO, y: t.ZERO };
      if (!t.eql(B, t.ONE))
        throw new Error("invZ was invalid");
      return { x: L, y: I };
    }), h = _t$1((b) => {
      if (b.is0()) {
        if (e.allowInfinityPoint && !t.is0(b.py))
          return;
        throw new Error("bad point: ZERO");
      }
      const { x: a, y: g } = b.toAffine();
      if (!t.isValid(a) || !t.isValid(g))
        throw new Error("bad point: x or y not FE");
      const x = t.sqr(g), E = c(a);
      if (!t.eql(x, E))
        throw new Error("bad point: equation left != right");
      if (!b.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
      return true;
    });
    class l {
      constructor(a, g, x) {
        if (this.px = a, this.py = g, this.pz = x, a == null || !t.isValid(a))
          throw new Error("x required");
        if (g == null || !t.isValid(g))
          throw new Error("y required");
        if (x == null || !t.isValid(x))
          throw new Error("z required");
        Object.freeze(this);
      }
      // Does not validate if the point is on-curve.
      // Use fromHex instead, or call assertValidity() later.
      static fromAffine(a) {
        const { x: g, y: x } = a || {};
        if (!a || !t.isValid(g) || !t.isValid(x))
          throw new Error("invalid affine point");
        if (a instanceof l)
          throw new Error("projective point not allowed");
        const E = (q) => t.eql(q, t.ZERO);
        return E(g) && E(x) ? l.ZERO : new l(g, x, t.ONE);
      }
      get x() {
        return this.toAffine().x;
      }
      get y() {
        return this.toAffine().y;
      }
      /**
       * Takes a bunch of Projective Points but executes only one
       * inversion on all of them. Inversion is very slow operation,
       * so this improves performance massively.
       * Optimization: converts a list of projective points to a list of identical points with Z=1.
       */
      static normalizeZ(a) {
        const g = t.invertBatch(a.map((x) => x.pz));
        return a.map((x, E) => x.toAffine(g[E])).map(l.fromAffine);
      }
      /**
       * Converts hash string or Uint8Array to Point.
       * @param hex short/long ECDSA hex
       */
      static fromHex(a) {
        const g = l.fromAffine(s(K$2("pointHex", a)));
        return g.assertValidity(), g;
      }
      // Multiplies generator point by privateKey.
      static fromPrivateKey(a) {
        return l.BASE.multiply(i(a));
      }
      // Multiscalar Multiplication
      static msm(a, g) {
        return Ge$1(l, r, a, g);
      }
      // "Private method", don't use it directly
      _setWindowSize(a) {
        N.setWindowSize(this, a);
      }
      // A point on curve is valid if it conforms to equation.
      assertValidity() {
        h(this);
      }
      hasEvenY() {
        const { y: a } = this.toAffine();
        if (t.isOdd)
          return !t.isOdd(a);
        throw new Error("Field doesn't support isOdd");
      }
      /**
       * Compare one point to another.
       */
      equals(a) {
        u(a);
        const { px: g, py: x, pz: E } = this, { px: q, py: L, pz: I } = a, B = t.eql(t.mul(g, I), t.mul(q, E)), A = t.eql(t.mul(x, I), t.mul(L, E));
        return B && A;
      }
      /**
       * Flips point to one corresponding to (x, -y) in Affine coordinates.
       */
      negate() {
        return new l(this.px, t.neg(this.py), this.pz);
      }
      // Renes-Costello-Batina exception-free doubling formula.
      // There is 30% faster Jacobian formula, but it is not complete.
      // https://eprint.iacr.org/2015/1060, algorithm 3
      // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
      double() {
        const { a, b: g } = e, x = t.mul(g, $t$1), { px: E, py: q, pz: L } = this;
        let I = t.ZERO, B = t.ZERO, A = t.ZERO, v = t.mul(E, E), C = t.mul(q, q), U = t.mul(L, L), H = t.mul(E, q);
        return H = t.add(H, H), A = t.mul(E, L), A = t.add(A, A), I = t.mul(a, A), B = t.mul(x, U), B = t.add(I, B), I = t.sub(C, B), B = t.add(C, B), B = t.mul(I, B), I = t.mul(H, I), A = t.mul(x, A), U = t.mul(a, U), H = t.sub(v, U), H = t.mul(a, H), H = t.add(H, A), A = t.add(v, v), v = t.add(A, v), v = t.add(v, U), v = t.mul(v, H), B = t.add(B, v), U = t.mul(q, L), U = t.add(U, U), v = t.mul(U, H), I = t.sub(I, v), A = t.mul(U, C), A = t.add(A, A), A = t.add(A, A), new l(I, B, A);
      }
      // Renes-Costello-Batina exception-free addition formula.
      // There is 30% faster Jacobian formula, but it is not complete.
      // https://eprint.iacr.org/2015/1060, algorithm 1
      // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
      add(a) {
        u(a);
        const { px: g, py: x, pz: E } = this, { px: q, py: L, pz: I } = a;
        let B = t.ZERO, A = t.ZERO, v = t.ZERO;
        const C = e.a, U = t.mul(e.b, $t$1);
        let H = t.mul(g, q), j = t.mul(x, L), d = t.mul(E, I), w = t.add(g, x), p = t.add(q, L);
        w = t.mul(w, p), p = t.add(H, j), w = t.sub(w, p), p = t.add(g, E);
        let S = t.add(q, I);
        return p = t.mul(p, S), S = t.add(H, d), p = t.sub(p, S), S = t.add(x, E), B = t.add(L, I), S = t.mul(S, B), B = t.add(j, d), S = t.sub(S, B), v = t.mul(C, p), B = t.mul(U, d), v = t.add(B, v), B = t.sub(j, v), v = t.add(j, v), A = t.mul(B, v), j = t.add(H, H), j = t.add(j, H), d = t.mul(C, d), p = t.mul(U, p), j = t.add(j, d), d = t.sub(H, d), d = t.mul(C, d), p = t.add(p, d), H = t.mul(j, p), A = t.add(A, H), H = t.mul(S, p), B = t.mul(w, B), B = t.sub(B, H), H = t.mul(w, j), v = t.mul(S, v), v = t.add(v, H), new l(B, A, v);
      }
      subtract(a) {
        return this.add(a.negate());
      }
      is0() {
        return this.equals(l.ZERO);
      }
      wNAF(a) {
        return N.wNAFCached(this, a, l.normalizeZ);
      }
      /**
       * Non-constant-time multiplication. Uses double-and-add algorithm.
       * It's faster, but should only be used when you don't care about
       * an exposed private key e.g. sig verification, which works over *public* keys.
       */
      multiplyUnsafe(a) {
        const { endo: g, n: x } = e;
        ot$2("scalar", a, W$1, x);
        const E = l.ZERO;
        if (a === W$1)
          return E;
        if (this.is0() || a === k$2)
          return this;
        if (!g || N.hasPrecomputes(this))
          return N.wNAFCachedUnsafe(this, a, l.normalizeZ);
        let { k1neg: q, k1: L, k2neg: I, k2: B } = g.splitScalar(a), A = E, v = E, C = this;
        for (; L > W$1 || B > W$1; )
          L & k$2 && (A = A.add(C)), B & k$2 && (v = v.add(C)), C = C.double(), L >>= k$2, B >>= k$2;
        return q && (A = A.negate()), I && (v = v.negate()), v = new l(t.mul(v.px, g.beta), v.py, v.pz), A.add(v);
      }
      /**
       * Constant time multiplication.
       * Uses wNAF method. Windowed method may be 10% faster,
       * but takes 2x longer to generate and consumes 2x memory.
       * Uses precomputes when available.
       * Uses endomorphism for Koblitz curves.
       * @param scalar by which the point would be multiplied
       * @returns New point
       */
      multiply(a) {
        const { endo: g, n: x } = e;
        ot$2("scalar", a, k$2, x);
        let E, q;
        if (g) {
          const { k1neg: L, k1: I, k2neg: B, k2: A } = g.splitScalar(a);
          let { p: v, f: C } = this.wNAF(I), { p: U, f: H } = this.wNAF(A);
          v = N.constTimeNegate(L, v), U = N.constTimeNegate(B, U), U = new l(t.mul(U.px, g.beta), U.py, U.pz), E = v.add(U), q = C.add(H);
        } else {
          const { p: L, f: I } = this.wNAF(a);
          E = L, q = I;
        }
        return l.normalizeZ([E, q])[0];
      }
      /**
       * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
       * Not using Strauss-Shamir trick: precomputation tables are faster.
       * The trick could be useful if both P and Q are not G (not in our case).
       * @returns non-zero affine point
       */
      multiplyAndAddUnsafe(a, g, x) {
        const E = l.BASE, q = (I, B) => B === W$1 || B === k$2 || !I.equals(E) ? I.multiplyUnsafe(B) : I.multiply(B), L = q(this, g).add(q(a, x));
        return L.is0() ? void 0 : L;
      }
      // Converts Projective point to affine (x, y) coordinates.
      // Can accept precomputed Z^-1 - for example, from invertBatch.
      // (x, y, z) ∋ (x=x/z, y=y/z)
      toAffine(a) {
        return y(this, a);
      }
      isTorsionFree() {
        const { h: a, isTorsionFree: g } = e;
        if (a === k$2)
          return true;
        if (g)
          return g(l, this);
        throw new Error("isTorsionFree() has not been declared for the elliptic curve");
      }
      clearCofactor() {
        const { h: a, clearCofactor: g } = e;
        return a === k$2 ? this : g ? g(l, this) : this.multiplyUnsafe(e.h);
      }
      toRawBytes(a = true) {
        return ut$2("isCompressed", a), this.assertValidity(), o(l, this, a);
      }
      toHex(a = true) {
        return ut$2("isCompressed", a), lt$2(this.toRawBytes(a));
      }
    }
    l.BASE = new l(e.Gx, e.Gy, t.ONE), l.ZERO = new l(t.ZERO, t.ONE, t.ZERO);
    const m = e.nBitLength, N = Pe$2(l, e.endo ? Math.ceil(m / 2) : m);
    return {
      CURVE: e,
      ProjectivePoint: l,
      normPrivateKeyToScalar: i,
      weierstrassEquation: c,
      isWithinCurveOrder: f
    };
  }
  function Je$1(n) {
    const e = ue$2(n);
    return mt$2(e, {
      hash: "hash",
      hmac: "function",
      randomBytes: "function"
    }, {
      bits2int: "function",
      bits2int_modN: "function",
      lowS: "boolean"
    }), Object.freeze({ lowS: true, ...e });
  }
  function tn$1(n) {
    const e = Je$1(n), { Fp: t, n: r } = e, o = t.BYTES + 1, s = 2 * t.BYTES + 1;
    function c(d) {
      return M$2(d, r);
    }
    function f(d) {
      return zt$1(d, r);
    }
    const { ProjectivePoint: i, normPrivateKeyToScalar: u, weierstrassEquation: y, isWithinCurveOrder: h } = Qe({
      ...e,
      toBytes(d, w, p) {
        const S = w.toAffine(), O = t.toBytes(S.x), _ = bt$2;
        return ut$2("isCompressed", p), p ? _(Uint8Array.from([w.hasEvenY() ? 2 : 3]), O) : _(Uint8Array.from([4]), O, t.toBytes(S.y));
      },
      fromBytes(d) {
        const w = d.length, p = d[0], S = d.subarray(1);
        if (w === o && (p === 2 || p === 3)) {
          const O = rt$2(S);
          if (!St$2(O, k$2, t.ORDER))
            throw new Error("Point is not on curve");
          const _ = y(O);
          let R;
          try {
            R = t.sqrt(_);
          } catch (F) {
            const V = F instanceof Error ? ": " + F.message : "";
            throw new Error("Point is not on curve" + V);
          }
          const Z = (R & k$2) === k$2;
          return (p & 1) === 1 !== Z && (R = t.neg(R)), { x: O, y: R };
        } else if (w === s && p === 4) {
          const O = t.fromBytes(S.subarray(0, t.BYTES)), _ = t.fromBytes(S.subarray(t.BYTES, 2 * t.BYTES));
          return { x: O, y: _ };
        } else {
          const O = o, _ = s;
          throw new Error("invalid Point, expected length of " + O + ", or uncompressed " + _ + ", got " + w);
        }
      }
    }), l = (d) => lt$2(ht$2(d, e.nByteLength));
    function m(d) {
      const w = r >> k$2;
      return d > w;
    }
    function N(d) {
      return m(d) ? c(-d) : d;
    }
    const b = (d, w, p) => rt$2(d.slice(w, p));
    class a {
      constructor(w, p, S) {
        this.r = w, this.s = p, this.recovery = S, this.assertValidity();
      }
      // pair (bytes of r, bytes of s)
      static fromCompact(w) {
        const p = e.nByteLength;
        return w = K$2("compactSignature", w, p * 2), new a(b(w, 0, p), b(w, p, 2 * p));
      }
      // DER encoded ECDSA signature
      // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
      static fromDER(w) {
        const { r: p, s: S } = $$1.toSig(K$2("DER", w));
        return new a(p, S);
      }
      assertValidity() {
        ot$2("r", this.r, k$2, r), ot$2("s", this.s, k$2, r);
      }
      addRecoveryBit(w) {
        return new a(this.r, this.s, w);
      }
      recoverPublicKey(w) {
        const { r: p, s: S, recovery: O } = this, _ = I(K$2("msgHash", w));
        if (O == null || ![0, 1, 2, 3].includes(O))
          throw new Error("recovery id invalid");
        const R = O === 2 || O === 3 ? p + e.n : p;
        if (R >= t.ORDER)
          throw new Error("recovery id 2 or 3 invalid");
        const Z = O & 1 ? "03" : "02", G = i.fromHex(Z + l(R)), F = f(R), V = c(-_ * F), st = c(S * F), X = i.BASE.multiplyAndAddUnsafe(G, V, st);
        if (!X)
          throw new Error("point at infinify");
        return X.assertValidity(), X;
      }
      // Signatures should be low-s, to prevent malleability.
      hasHighS() {
        return m(this.s);
      }
      normalizeS() {
        return this.hasHighS() ? new a(this.r, c(-this.s), this.recovery) : this;
      }
      // DER-encoded
      toDERRawBytes() {
        return dt$2(this.toDERHex());
      }
      toDERHex() {
        return $$1.hexFromSig({ r: this.r, s: this.s });
      }
      // padded bytes of r, then padded bytes of s
      toCompactRawBytes() {
        return dt$2(this.toCompactHex());
      }
      toCompactHex() {
        return l(this.r) + l(this.s);
      }
    }
    const g = {
      isValidPrivateKey(d) {
        try {
          return u(d), !0;
        } catch {
          return false;
        }
      },
      normPrivateKeyToScalar: u,
      /**
       * Produces cryptographically secure private key from random of size
       * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
       */
      randomPrivateKey: () => {
        const d = ce$1(e.n);
        return Ye$1(e.randomBytes(d), e.n);
      },
      /**
       * Creates precompute table for an arbitrary EC point. Makes point "cached".
       * Allows to massively speed-up `point.multiply(scalar)`.
       * @returns cached point
       * @example
       * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
       * fast.multiply(privKey); // much faster ECDH now
       */
      precompute(d = 8, w = i.BASE) {
        return w._setWindowSize(d), w.multiply(BigInt(3)), w;
      }
    };
    function x(d, w = true) {
      return i.fromPrivateKey(d).toRawBytes(w);
    }
    function E(d) {
      const w = it$2(d), p = typeof d == "string", S = (w || p) && d.length;
      return w ? S === o || S === s : p ? S === 2 * o || S === 2 * s : d instanceof i;
    }
    function q(d, w, p = true) {
      if (E(d))
        throw new Error("first arg must be private key");
      if (!E(w))
        throw new Error("second arg must be public key");
      return i.fromHex(w).multiply(u(d)).toRawBytes(p);
    }
    const L = e.bits2int || function(d) {
      if (d.length > 8192)
        throw new Error("input is too large");
      const w = rt$2(d), p = d.length * 8 - e.nBitLength;
      return p > 0 ? w >> BigInt(p) : w;
    }, I = e.bits2int_modN || function(d) {
      return c(L(d));
    }, B = jt(e.nBitLength);
    function A(d) {
      return ot$2("num < 2^" + e.nBitLength, d, W$1, B), ht$2(d, e.nByteLength);
    }
    function v(d, w, p = C) {
      if (["recovered", "canonical"].some((tt) => tt in p))
        throw new Error("sign() legacy options not supported");
      const { hash: S, randomBytes: O } = e;
      let { lowS: _, prehash: R, extraEntropy: Z } = p;
      _ == null && (_ = true), d = K$2("msgHash", d), Dt$1(p), R && (d = K$2("prehashed msgHash", S(d)));
      const G = I(d), F = u(w), V = [A(F), A(G)];
      if (Z != null && Z !== false) {
        const tt = Z === true ? O(t.BYTES) : Z;
        V.push(K$2("extraEntropy", tt));
      }
      const st = bt$2(...V), X = G;
      function At(tt) {
        const ct = L(tt);
        if (!h(ct))
          return;
        const It = f(ct), gt = i.BASE.multiply(ct).toAffine(), et = c(gt.x);
        if (et === W$1)
          return;
        const wt = c(It * c(X + et * F));
        if (wt === W$1)
          return;
        let pt = (gt.x === et ? 0 : 2) | Number(gt.y & k$2), ft = wt;
        return _ && m(wt) && (ft = N(wt), pt ^= 1), new a(et, ft, pt);
      }
      return { seed: st, k2sig: At };
    }
    const C = { lowS: e.lowS, prehash: false }, U = { lowS: e.lowS, prehash: false };
    function H(d, w, p = C) {
      const { seed: S, k2sig: O } = v(d, w, p), _ = e;
      return ee$1(_.hash.outputLen, _.nByteLength, _.hmac)(S, O);
    }
    i.BASE._setWindowSize(8);
    function j(d, w, p, S = U) {
      var pt;
      const O = d;
      w = K$2("msgHash", w), p = K$2("publicKey", p);
      const { lowS: _, prehash: R, format: Z } = S;
      if (Dt$1(S), "strict" in S)
        throw new Error("options.strict was renamed to lowS");
      if (Z !== void 0 && Z !== "compact" && Z !== "der")
        throw new Error("format must be compact or der");
      const G = typeof O == "string" || it$2(O), F = !G && !Z && typeof O == "object" && O !== null && typeof O.r == "bigint" && typeof O.s == "bigint";
      if (!G && !F)
        throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");
      let V, st;
      try {
        if (F && (V = new a(O.r, O.s)), G) {
          try {
            Z !== "compact" && (V = a.fromDER(O));
          } catch (ft) {
            if (!(ft instanceof $$1.Err))
              throw ft;
          }
          !V && Z !== "der" && (V = a.fromCompact(O));
        }
        st = i.fromHex(p);
      } catch {
        return false;
      }
      if (!V || _ && V.hasHighS())
        return false;
      R && (w = e.hash(w));
      const { r: X, s: At } = V, tt = I(w), ct = f(At), It = c(tt * ct), gt = c(X * ct), et = (pt = i.BASE.multiplyAndAddUnsafe(st, It, gt)) == null ? void 0 : pt.toAffine();
      return et ? c(et.x) === X : false;
    }
    return {
      CURVE: e,
      getPublicKey: x,
      getSharedSecret: q,
      sign: H,
      verify: j,
      ProjectivePoint: i,
      Signature: a,
      utils: g
    };
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  function en$1(n) {
    return {
      hash: n,
      hmac: (e, ...t) => re(n, e, hA(...t)),
      randomBytes: pA
    };
  }
  function nn$1(n, e) {
    const t = (r) => tn$1({ ...n, ...en$1(r) });
    return { ...t(e), create: t };
  }
  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  const le$1 = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"), Wt$1 = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), rn$1 = BigInt(1), Ct$1 = BigInt(2), Xt$1 = (n, e) => (n + e / Ct$1) / e;
  function on$1(n) {
    const e = le$1, t = BigInt(3), r = BigInt(6), o = BigInt(11), s = BigInt(22), c = BigInt(23), f = BigInt(44), i = BigInt(88), u = n * n * n % e, y = u * u * n % e, h = Y(y, t, e) * y % e, l = Y(h, t, e) * y % e, m = Y(l, Ct$1, e) * u % e, N = Y(m, o, e) * m % e, b = Y(N, s, e) * N % e, a = Y(b, f, e) * b % e, g = Y(a, i, e) * a % e, x = Y(g, f, e) * b % e, E = Y(x, t, e) * y % e, q = Y(E, c, e) * N % e, L = Y(q, r, e) * u % e, I = Y(L, Ct$1, e);
    if (!Zt$1.eql(Zt$1.sqr(I), n))
      throw new Error("Cannot find square root");
    return I;
  }
  const Zt$1 = ie$1(le$1, void 0, void 0, { sqrt: on$1 }), sn$1 = nn$1({
    a: BigInt(0),
    // equation params: a, b
    b: BigInt(7),
    Fp: Zt$1,
    // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n
    n: Wt$1,
    // Curve order, total count of valid points in the field
    // Base point (x, y) aka generator point
    Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
    Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
    h: BigInt(1),
    // Cofactor
    lowS: true,
    // Allow only low-S signatures by default in sign() and verify()
    endo: {
      // Endomorphism, see above
      beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
      splitScalar: (n) => {
        const e = Wt$1, t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), r = -rn$1 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), o = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), s = t, c = BigInt("0x100000000000000000000000000000000"), f = Xt$1(s * n, e), i = Xt$1(-r * n, e);
        let u = M$2(n - f * t - i * o, e), y = M$2(-f * r - i * s, e);
        const h = u > c, l = y > c;
        if (h && (u = e - u), l && (y = e - y), u > c || y > c)
          throw new Error("splitScalar: Endomorphism failed, k=" + n);
        return { k1neg: h, k1: u, k2neg: l, k2: y };
      }
    }
  }, Se$1);
  BigInt(0);
  sn$1.ProjectivePoint;

  var secp256k1Dv_CZw7K = /*#__PURE__*/Object.freeze({
    __proto__: null,
    secp256k1: sn$1
  });

  const w = {
    getSpacingStyles(e, t) {
      if (Array.isArray(e))
        return e[t] ? `var(--wui-spacing-${e[t]})` : void 0;
      if (typeof e == "string")
        return `var(--wui-spacing-${e})`;
    },
    getFormattedDate(e) {
      return new Intl.DateTimeFormat("en-US", { month: "short", day: "numeric" }).format(e);
    },
    getHostName(e) {
      try {
        return new URL(e).hostname;
      } catch {
        return "";
      }
    },
    getTruncateString({ string: e, charsStart: t, charsEnd: i, truncate: r }) {
      return e.length <= t + i ? e : r === "end" ? `${e.substring(0, t)}...` : r === "start" ? `...${e.substring(e.length - i)}` : `${e.substring(0, Math.floor(t))}...${e.substring(e.length - Math.floor(i))}`;
    },
    generateAvatarColors(e) {
      const i = e.toLowerCase().replace(/^0x/iu, "").replace(/[^a-f0-9]/gu, "").substring(0, 6).padEnd(6, "0"), r = this.hexToRgb(i), a = getComputedStyle(document.documentElement).getPropertyValue("--w3m-border-radius-master"), n = 100 - 3 * Number(a == null ? void 0 : a.replace("px", "")), s = `${n}% ${n}% at 65% 40%`, l = [];
      for (let d = 0; d < 5; d += 1) {
        const g = this.tintColor(r, 0.15 * d);
        l.push(`rgb(${g[0]}, ${g[1]}, ${g[2]})`);
      }
      return `
    --local-color-1: ${l[0]};
    --local-color-2: ${l[1]};
    --local-color-3: ${l[2]};
    --local-color-4: ${l[3]};
    --local-color-5: ${l[4]};
    --local-radial-circle: ${s}
   `;
    },
    hexToRgb(e) {
      const t = parseInt(e, 16), i = t >> 16 & 255, r = t >> 8 & 255, a = t & 255;
      return [i, r, a];
    },
    tintColor(e, t) {
      const [i, r, a] = e, o = Math.round(i + (255 - i) * t), n = Math.round(r + (255 - r) * t), s = Math.round(a + (255 - a) * t);
      return [o, n, s];
    },
    isNumber(e) {
      return {
        number: /^[0-9]+$/u
      }.number.test(e);
    },
    getColorTheme(e) {
      var t;
      return e || (typeof window < "u" && window.matchMedia ? (t = window.matchMedia("(prefers-color-scheme: dark)")) != null && t.matches ? "dark" : "light" : "dark");
    },
    splitBalance(e) {
      const t = e.split(".");
      return t.length === 2 ? [t[0], t[1]] : ["0", "00"];
    },
    roundNumber(e, t, i) {
      return e.toString().length >= t ? Number(e).toFixed(i) : e;
    },
    formatNumberToLocalString(e, t = 2) {
      return e === void 0 ? "0.00" : typeof e == "number" ? e.toLocaleString("en-US", {
        maximumFractionDigits: t,
        minimumFractionDigits: t
      }) : parseFloat(e).toLocaleString("en-US", {
        maximumFractionDigits: t,
        minimumFractionDigits: t
      });
    }
  };
  function X$2(e, t) {
    const { kind: i, elements: r } = t;
    return {
      kind: i,
      elements: r,
      finisher(a) {
        customElements.get(e) || customElements.define(e, a);
      }
    };
  }
  function K$1(e, t) {
    return customElements.get(e) || customElements.define(e, t), t;
  }
  function x$1(e) {
    return function(i) {
      return typeof i == "function" ? K$1(e, i) : X$2(e, i);
    };
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const Z = { attribute: true, type: String, converter: za, reflect: false, hasChanged: Ph }, Q$2 = (e = Z, t, i) => {
    const { kind: r, metadata: a } = i;
    let o = globalThis.litPropertyMetadata.get(a);
    if (o === void 0 && globalThis.litPropertyMetadata.set(a, o = /* @__PURE__ */ new Map()), r === "setter" && ((e = Object.create(e)).wrapped = true), o.set(i.name, e), r === "accessor") {
      const { name: n } = i;
      return { set(s) {
        const l = t.get.call(this);
        t.set.call(this, s), this.requestUpdate(n, l, e);
      }, init(s) {
        return s !== void 0 && this.C(n, void 0, e, s), s;
      } };
    }
    if (r === "setter") {
      const { name: n } = i;
      return function(s) {
        const l = this[n];
        t.call(this, s), this.requestUpdate(n, l, e);
      };
    }
    throw Error("Unsupported decorator location: " + r);
  };
  function c$3(e) {
    return (t, i) => typeof i == "object" ? Q$2(e, t, i) : ((r, a, o) => {
      const n = a.hasOwnProperty(o);
      return a.constructor.createProperty(o, r), n ? Object.getOwnPropertyDescriptor(a, o) : void 0;
    })(e, t, i);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  function bt$1(e) {
    return c$3({ ...e, state: true, attribute: false });
  }
  const J$1 = Lr`
  :host {
    display: flex;
    width: inherit;
    height: inherit;
  }
`;
  var h$2 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let u = class extends eo$1 {
    render() {
      return this.style.cssText = `
      flex-direction: ${this.flexDirection};
      flex-wrap: ${this.flexWrap};
      flex-basis: ${this.flexBasis};
      flex-grow: ${this.flexGrow};
      flex-shrink: ${this.flexShrink};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && w.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && w.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && w.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && w.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && w.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && w.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && w.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && w.getSpacingStyles(this.margin, 3)};
    `, vA`<slot></slot>`;
    }
  };
  u.styles = [IA, J$1];
  h$2([
    c$3()
  ], u.prototype, "flexDirection", void 0);
  h$2([
    c$3()
  ], u.prototype, "flexWrap", void 0);
  h$2([
    c$3()
  ], u.prototype, "flexBasis", void 0);
  h$2([
    c$3()
  ], u.prototype, "flexGrow", void 0);
  h$2([
    c$3()
  ], u.prototype, "flexShrink", void 0);
  h$2([
    c$3()
  ], u.prototype, "alignItems", void 0);
  h$2([
    c$3()
  ], u.prototype, "justifyContent", void 0);
  h$2([
    c$3()
  ], u.prototype, "columnGap", void 0);
  h$2([
    c$3()
  ], u.prototype, "rowGap", void 0);
  h$2([
    c$3()
  ], u.prototype, "gap", void 0);
  h$2([
    c$3()
  ], u.prototype, "padding", void 0);
  h$2([
    c$3()
  ], u.prototype, "margin", void 0);
  u = h$2([
    x$1("wui-flex")
  ], u);
  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const St$1 = (e) => e ?? We$2;
  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const tt$1 = (e) => e === null || typeof e != "object" && typeof e != "function", et$1 = (e) => e.strings === void 0;
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const E = { ATTRIBUTE: 1, CHILD: 2 }, H$1 = (e) => (...t) => ({ _$litDirective$: e, values: t });
  let F$1 = class F {
    constructor(t) {
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    _$AT(t, i, r) {
      this._$Ct = t, this._$AM = i, this._$Ci = r;
    }
    _$AS(t, i) {
      return this.update(t, i);
    }
    update(t, i) {
      return this.render(...i);
    }
  };
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const _$1 = (e, t) => {
    var r;
    const i = e._$AN;
    if (i === void 0) return false;
    for (const a of i) (r = a._$AO) == null || r.call(a, t, false), _$1(a, t);
    return true;
  }, T = (e) => {
    let t, i;
    do {
      if ((t = e._$AM) === void 0) break;
      i = t._$AN, i.delete(e), e = t;
    } while ((i == null ? void 0 : i.size) === 0);
  }, G$1 = (e) => {
    for (let t; t = e._$AM; e = t) {
      let i = t._$AN;
      if (i === void 0) t._$AN = i = /* @__PURE__ */ new Set();
      else if (i.has(e)) break;
      i.add(e), rt$1(t);
    }
  };
  function it$1(e) {
    this._$AN !== void 0 ? (T(this), this._$AM = e, G$1(this)) : this._$AM = e;
  }
  function ot$1(e, t = false, i = 0) {
    const r = this._$AH, a = this._$AN;
    if (a !== void 0 && a.size !== 0) if (t) if (Array.isArray(r)) for (let o = i; o < r.length; o++) _$1(r[o], false), T(r[o]);
    else r != null && (_$1(r, false), T(r));
    else _$1(this, e);
  }
  const rt$1 = (e) => {
    e.type == E.CHILD && (e._$AP ?? (e._$AP = ot$1), e._$AQ ?? (e._$AQ = it$1));
  };
  let at$1 = class at extends F$1 {
    constructor() {
      super(...arguments), this._$AN = void 0;
    }
    _$AT(t, i, r) {
      super._$AT(t, i, r), G$1(this), this.isConnected = t._$AU;
    }
    _$AO(t, i = true) {
      var r, a;
      t !== this.isConnected && (this.isConnected = t, t ? (r = this.reconnected) == null || r.call(this) : (a = this.disconnected) == null || a.call(this)), i && (_$1(this, t), T(this));
    }
    setValue(t) {
      if (et$1(this._$Ct)) this._$Ct._$AI(t, this);
      else {
        const i = [...this._$Ct._$AH];
        i[this._$Ci] = t, this._$Ct._$AI(i, this, 0);
      }
    }
    disconnected() {
    }
    reconnected() {
    }
  };
  /**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  let nt$1 = class nt {
    constructor(t) {
      this.G = t;
    }
    disconnect() {
      this.G = void 0;
    }
    reconnect(t) {
      this.G = t;
    }
    deref() {
      return this.G;
    }
  };
  let st$1 = class st {
    constructor() {
      this.Y = void 0, this.Z = void 0;
    }
    get() {
      return this.Y;
    }
    pause() {
      this.Y ?? (this.Y = new Promise((t) => this.Z = t));
    }
    resume() {
      var t;
      (t = this.Z) == null || t.call(this), this.Y = this.Z = void 0;
    }
  };
  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const D$1 = (e) => !tt$1(e) && typeof e.then == "function", L$2 = 1073741823;
  let ct$1 = class ct extends at$1 {
    constructor() {
      super(...arguments), this._$Cwt = L$2, this._$Cbt = [], this._$CK = new nt$1(this), this._$CX = new st$1();
    }
    render(...t) {
      return t.find((i) => !D$1(i)) ?? Xr;
    }
    update(t, i) {
      const r = this._$Cbt;
      let a = r.length;
      this._$Cbt = i;
      const o = this._$CK, n = this._$CX;
      this.isConnected || this.disconnected();
      for (let s = 0; s < i.length && !(s > this._$Cwt); s++) {
        const l = i[s];
        if (!D$1(l)) return this._$Cwt = s, l;
        s < a && l === r[s] || (this._$Cwt = L$2, a = 0, Promise.resolve(l).then(async (d) => {
          for (; n.get(); ) await n.get();
          const g = o.deref();
          if (g !== void 0) {
            const P = g._$Cbt.indexOf(l);
            P > -1 && P < g._$Cwt && (g._$Cwt = P, g.setValue(d));
          }
        }));
      }
      return Xr;
    }
    disconnected() {
      this._$CK.disconnect(), this._$CX.pause();
    }
    reconnected() {
      this._$CK.reconnect(this), this._$CX.resume();
    }
  };
  const lt$1 = H$1(ct$1);
  let ut$1 = class ut {
    constructor() {
      this.cache = /* @__PURE__ */ new Map();
    }
    set(t, i) {
      this.cache.set(t, i);
    }
    get(t) {
      return this.cache.get(t);
    }
    has(t) {
      return this.cache.has(t);
    }
    delete(t) {
      this.cache.delete(t);
    }
    clear() {
      this.cache.clear();
    }
  };
  const O$1 = new ut$1(), ht$1 = Lr`
  :host {
    display: flex;
    aspect-ratio: var(--local-aspect-ratio);
    color: var(--local-color);
    width: var(--local-width);
  }

  svg {
    width: inherit;
    height: inherit;
    object-fit: contain;
    object-position: center;
  }

  .fallback {
    width: var(--local-width);
    height: var(--local-height);
  }
`;
  var j = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  const U$1 = {
    add: async () => (await Promise.resolve().then(function () { return addCaGj1Avh; })).addSvg,
    allWallets: async () => (await Promise.resolve().then(function () { return allWalletsCuHPigW6; })).allWalletsSvg,
    arrowBottomCircle: async () => (await Promise.resolve().then(function () { return arrowBottomCircleCYY8uLvQ; })).arrowBottomCircleSvg,
    appStore: async () => (await Promise.resolve().then(function () { return appStoreDUxNW7lI; })).appStoreSvg,
    apple: async () => (await Promise.resolve().then(function () { return appleCINi0cqP; })).appleSvg,
    arrowBottom: async () => (await Promise.resolve().then(function () { return arrowBottomDHaJQncA; })).arrowBottomSvg,
    arrowLeft: async () => (await Promise.resolve().then(function () { return arrowLeftDiMGVWlz; })).arrowLeftSvg,
    arrowRight: async () => (await Promise.resolve().then(function () { return arrowRightDBISky9Z; })).arrowRightSvg,
    arrowTop: async () => (await Promise.resolve().then(function () { return arrowTopBTvq4WQ; })).arrowTopSvg,
    bank: async () => (await Promise.resolve().then(function () { return bankIWmwNGaE; })).bankSvg,
    browser: async () => (await Promise.resolve().then(function () { return browserBOTrnQ0L; })).browserSvg,
    card: async () => (await Promise.resolve().then(function () { return cardCfZMN3Y8; })).cardSvg,
    checkmark: async () => (await Promise.resolve().then(function () { return checkmarkDB8C7Ds8; })).checkmarkSvg,
    checkmarkBold: async () => (await Promise.resolve().then(function () { return checkmarkBoldCRAUp3DQ; })).checkmarkBoldSvg,
    chevronBottom: async () => (await Promise.resolve().then(function () { return chevronBottomCucFU2me; })).chevronBottomSvg,
    chevronLeft: async () => (await Promise.resolve().then(function () { return chevronLeftDVxH3cWd; })).chevronLeftSvg,
    chevronRight: async () => (await Promise.resolve().then(function () { return chevronRightDbHcSXWv; })).chevronRightSvg,
    chevronTop: async () => (await Promise.resolve().then(function () { return chevronTopQzcpSyQR; })).chevronTopSvg,
    chromeStore: async () => (await Promise.resolve().then(function () { return chromeStoreDkbZSigc; })).chromeStoreSvg,
    clock: async () => (await Promise.resolve().then(function () { return clockIgad78ae; })).clockSvg,
    close: async () => (await Promise.resolve().then(function () { return closeBMUvrXfi; })).closeSvg,
    compass: async () => (await Promise.resolve().then(function () { return compassCIuQZhE; })).compassSvg,
    coinPlaceholder: async () => (await Promise.resolve().then(function () { return coinPlaceholderCZvvVE15; })).coinPlaceholderSvg,
    copy: async () => (await Promise.resolve().then(function () { return copyMcoqmSgz; })).copySvg,
    cursor: async () => (await Promise.resolve().then(function () { return cursorC_Wbsod3; })).cursorSvg,
    cursorTransparent: async () => (await Promise.resolve().then(function () { return cursorTransparentBIW1XI_n; })).cursorTransparentSvg,
    desktop: async () => (await Promise.resolve().then(function () { return desktopDraveGi6; })).desktopSvg,
    disconnect: async () => (await Promise.resolve().then(function () { return disconnectDTzBpFgW; })).disconnectSvg,
    discord: async () => (await Promise.resolve().then(function () { return discordBg7Jz2BT; })).discordSvg,
    etherscan: async () => (await Promise.resolve().then(function () { return etherscanDLFt0i72; })).etherscanSvg,
    extension: async () => (await Promise.resolve().then(function () { return extensionI75LXaIu; })).extensionSvg,
    externalLink: async () => (await Promise.resolve().then(function () { return externalLinkBEl40fnM; })).externalLinkSvg,
    facebook: async () => (await Promise.resolve().then(function () { return facebookBvG7NUxx; })).facebookSvg,
    farcaster: async () => (await Promise.resolve().then(function () { return farcasterC4MQRz9l; })).farcasterSvg,
    filters: async () => (await Promise.resolve().then(function () { return filtersBk9_JF9W; })).filtersSvg,
    github: async () => (await Promise.resolve().then(function () { return githubWEn1R4a5; })).githubSvg,
    google: async () => (await Promise.resolve().then(function () { return googleKesXJBpA; })).googleSvg,
    helpCircle: async () => (await Promise.resolve().then(function () { return helpCircleCd76os_Z; })).helpCircleSvg,
    image: async () => (await Promise.resolve().then(function () { return imageCOR7JVH1; })).imageSvg,
    id: async () => (await Promise.resolve().then(function () { return idDSZbkLQ_; })).idSvg,
    infoCircle: async () => (await Promise.resolve().then(function () { return infoCircleCVzqyShK; })).infoCircleSvg,
    lightbulb: async () => (await Promise.resolve().then(function () { return lightbulbCtH1FH_0; })).lightbulbSvg,
    mail: async () => (await Promise.resolve().then(function () { return mailBPAnLdGG; })).mailSvg,
    mobile: async () => (await Promise.resolve().then(function () { return mobileCfCUshdA; })).mobileSvg,
    more: async () => (await Promise.resolve().then(function () { return moreCDVHVyF4; })).moreSvg,
    networkPlaceholder: async () => (await Promise.resolve().then(function () { return networkPlaceholderLwSaNTv6; })).networkPlaceholderSvg,
    nftPlaceholder: async () => (await Promise.resolve().then(function () { return nftPlaceholderBi0FWn9b; })).nftPlaceholderSvg,
    off: async () => (await Promise.resolve().then(function () { return offBhx2zlO8; })).offSvg,
    playStore: async () => (await Promise.resolve().then(function () { return playStoreBVj6Q_u1; })).playStoreSvg,
    plus: async () => (await Promise.resolve().then(function () { return plusBIkeS2Sc; })).plusSvg,
    qrCode: async () => (await Promise.resolve().then(function () { return qrCodeWN32VaEB; })).qrCodeIcon,
    recycleHorizontal: async () => (await Promise.resolve().then(function () { return recycleHorizontalBJAhJ4Cq; })).recycleHorizontalSvg,
    refresh: async () => (await Promise.resolve().then(function () { return refresh1plIvE5_; })).refreshSvg,
    search: async () => (await Promise.resolve().then(function () { return searchCIeuN_Yn; })).searchSvg,
    send: async () => (await Promise.resolve().then(function () { return sendBLUrKkuS; })).sendSvg,
    swapHorizontal: async () => (await Promise.resolve().then(function () { return swapHorizontalDUkiMgZh; })).swapHorizontalSvg,
    swapHorizontalMedium: async () => (await Promise.resolve().then(function () { return swapHorizontalMediumCixUKq6d; })).swapHorizontalMediumSvg,
    swapHorizontalBold: async () => (await Promise.resolve().then(function () { return swapHorizontalBold4YH5E2SP; })).swapHorizontalBoldSvg,
    swapHorizontalRoundedBold: async () => (await Promise.resolve().then(function () { return swapHorizontalRoundedBoldDhRzd1B0; })).swapHorizontalRoundedBoldSvg,
    swapVertical: async () => (await Promise.resolve().then(function () { return swapVerticalDM9haKK_; })).swapVerticalSvg,
    telegram: async () => (await Promise.resolve().then(function () { return telegramDNXWEDv1; })).telegramSvg,
    threeDots: async () => (await Promise.resolve().then(function () { return threeDotsISBP0YTM; })).threeDotsSvg,
    twitch: async () => (await Promise.resolve().then(function () { return twitchNbuckBBr; })).twitchSvg,
    twitter: async () => (await Promise.resolve().then(function () { return xDZCRo3OL; })).xSvg,
    twitterIcon: async () => (await Promise.resolve().then(function () { return twitterIconSC_tDwJD; })).twitterIconSvg,
    verify: async () => (await Promise.resolve().then(function () { return verifyCNVnt4Ql; })).verifySvg,
    verifyFilled: async () => (await Promise.resolve().then(function () { return verifyFilledCc1gquGa; })).verifyFilledSvg,
    wallet: async () => (await Promise.resolve().then(function () { return walletByuNiC1g; })).walletSvg,
    walletConnect: async () => (await Promise.resolve().then(function () { return walletconnect25mm2C_2; })).walletConnectSvg,
    walletConnectLightBrown: async () => (await Promise.resolve().then(function () { return walletconnect25mm2C_2; })).walletConnectLightBrownSvg,
    walletConnectBrown: async () => (await Promise.resolve().then(function () { return walletconnect25mm2C_2; })).walletConnectBrownSvg,
    walletPlaceholder: async () => (await Promise.resolve().then(function () { return walletPlaceholderBT1piwN1; })).walletPlaceholderSvg,
    warningCircle: async () => (await Promise.resolve().then(function () { return warningCircleB02Ol9D6; })).warningCircleSvg,
    x: async () => (await Promise.resolve().then(function () { return xDZCRo3OL; })).xSvg,
    info: async () => (await Promise.resolve().then(function () { return infoRTHItMt_; })).infoSvg,
    exclamationTriangle: async () => (await Promise.resolve().then(function () { return exclamationTriangleBnHqAHG; })).exclamationTriangleSvg,
    reown: async () => (await Promise.resolve().then(function () { return reownLogoZY_GtD2i; })).reownSvg
  };
  async function pt$1(e) {
    if (O$1.has(e))
      return O$1.get(e);
    const i = (U$1[e] ?? U$1.copy)();
    return O$1.set(e, i), i;
  }
  let v$4 = class v extends eo$1 {
    constructor() {
      super(...arguments), this.size = "md", this.name = "copy", this.color = "fg-300", this.aspectRatio = "1 / 1";
    }
    render() {
      return this.style.cssText = `
      --local-color: ${`var(--wui-color-${this.color});`}
      --local-width: ${`var(--wui-icon-size-${this.size});`}
      --local-aspect-ratio: ${this.aspectRatio}
    `, vA`${lt$1(pt$1(this.name), vA`<div class="fallback"></div>`)}`;
    }
  };
  v$4.styles = [IA, NA, ht$1];
  j([
    c$3()
  ], v$4.prototype, "size", void 0);
  j([
    c$3()
  ], v$4.prototype, "name", void 0);
  j([
    c$3()
  ], v$4.prototype, "color", void 0);
  j([
    c$3()
  ], v$4.prototype, "aspectRatio", void 0);
  v$4 = j([
    x$1("wui-icon")
  ], v$4);
  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const dt$1 = H$1(class extends F$1 {
    constructor(e) {
      var t;
      if (super(e), e.type !== E.ATTRIBUTE || e.name !== "class" || ((t = e.strings) == null ? void 0 : t.length) > 2) throw Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
    }
    render(e) {
      return " " + Object.keys(e).filter((t) => e[t]).join(" ") + " ";
    }
    update(e, [t]) {
      var r, a;
      if (this.st === void 0) {
        this.st = /* @__PURE__ */ new Set(), e.strings !== void 0 && (this.nt = new Set(e.strings.join(" ").split(/\s/).filter((o) => o !== "")));
        for (const o in t) t[o] && !((r = this.nt) != null && r.has(o)) && this.st.add(o);
        return this.render(t);
      }
      const i = e.element.classList;
      for (const o of this.st) o in t || (i.remove(o), this.st.delete(o));
      for (const o in t) {
        const n = !!t[o];
        n === this.st.has(o) || (a = this.nt) != null && a.has(o) || (n ? (i.add(o), this.st.add(o)) : (i.remove(o), this.st.delete(o)));
      }
      return Xr;
    }
  }), gt = Lr`
  :host {
    display: inline-flex !important;
  }

  slot {
    width: 100%;
    display: inline-block;
    font-style: normal;
    font-family: var(--wui-font-family);
    font-feature-settings:
      'tnum' on,
      'lnum' on,
      'case' on;
    line-height: 130%;
    font-weight: var(--wui-font-weight-regular);
    overflow: inherit;
    text-overflow: inherit;
    text-align: var(--local-align);
    color: var(--local-color);
  }

  .wui-line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .wui-line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .wui-font-medium-400 {
    font-size: var(--wui-font-size-medium);
    font-weight: var(--wui-font-weight-light);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-medium-600 {
    font-size: var(--wui-font-size-medium);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-title-600 {
    font-size: var(--wui-font-size-title);
    letter-spacing: var(--wui-letter-spacing-title);
  }

  .wui-font-title-6-600 {
    font-size: var(--wui-font-size-title-6);
    letter-spacing: var(--wui-letter-spacing-title-6);
  }

  .wui-font-mini-700 {
    font-size: var(--wui-font-size-mini);
    letter-spacing: var(--wui-letter-spacing-mini);
    text-transform: uppercase;
  }

  .wui-font-large-500,
  .wui-font-large-600,
  .wui-font-large-700 {
    font-size: var(--wui-font-size-large);
    letter-spacing: var(--wui-letter-spacing-large);
  }

  .wui-font-2xl-500,
  .wui-font-2xl-600,
  .wui-font-2xl-700 {
    font-size: var(--wui-font-size-2xl);
    letter-spacing: var(--wui-letter-spacing-2xl);
  }

  .wui-font-paragraph-400,
  .wui-font-paragraph-500,
  .wui-font-paragraph-600,
  .wui-font-paragraph-700 {
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
  }

  .wui-font-small-400,
  .wui-font-small-500,
  .wui-font-small-600 {
    font-size: var(--wui-font-size-small);
    letter-spacing: var(--wui-letter-spacing-small);
  }

  .wui-font-tiny-400,
  .wui-font-tiny-500,
  .wui-font-tiny-600 {
    font-size: var(--wui-font-size-tiny);
    letter-spacing: var(--wui-letter-spacing-tiny);
  }

  .wui-font-micro-700,
  .wui-font-micro-600 {
    font-size: var(--wui-font-size-micro);
    letter-spacing: var(--wui-letter-spacing-micro);
    text-transform: uppercase;
  }

  .wui-font-tiny-400,
  .wui-font-small-400,
  .wui-font-medium-400,
  .wui-font-paragraph-400 {
    font-weight: var(--wui-font-weight-light);
  }

  .wui-font-large-700,
  .wui-font-paragraph-700,
  .wui-font-micro-700,
  .wui-font-mini-700 {
    font-weight: var(--wui-font-weight-bold);
  }

  .wui-font-medium-600,
  .wui-font-medium-title-600,
  .wui-font-title-6-600,
  .wui-font-large-600,
  .wui-font-paragraph-600,
  .wui-font-small-600,
  .wui-font-tiny-600,
  .wui-font-micro-600 {
    font-weight: var(--wui-font-weight-medium);
  }

  :host([disabled]) {
    opacity: 0.4;
  }
`;
  var R$1 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let y$1 = class y extends eo$1 {
    constructor() {
      super(...arguments), this.variant = "paragraph-500", this.color = "fg-300", this.align = "left", this.lineClamp = void 0;
    }
    render() {
      const t = {
        [`wui-font-${this.variant}`]: true,
        [`wui-color-${this.color}`]: true,
        [`wui-line-clamp-${this.lineClamp}`]: !!this.lineClamp
      };
      return this.style.cssText = `
      --local-align: ${this.align};
      --local-color: var(--wui-color-${this.color});
    `, vA`<slot class=${dt$1(t)}></slot>`;
    }
  };
  y$1.styles = [IA, gt];
  R$1([
    c$3()
  ], y$1.prototype, "variant", void 0);
  R$1([
    c$3()
  ], y$1.prototype, "color", void 0);
  R$1([
    c$3()
  ], y$1.prototype, "align", void 0);
  R$1([
    c$3()
  ], y$1.prototype, "lineClamp", void 0);
  y$1 = R$1([
    x$1("wui-text")
  ], y$1);
  const ft = Lr`
  :host {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
    background-color: var(--wui-color-gray-glass-020);
    border-radius: var(--local-border-radius);
    border: var(--local-border);
    box-sizing: content-box;
    width: var(--local-size);
    height: var(--local-size);
    min-height: var(--local-size);
    min-width: var(--local-size);
  }

  @supports (background: color-mix(in srgb, white 50%, black)) {
    :host {
      background-color: color-mix(in srgb, var(--local-bg-value) var(--local-bg-mix), transparent);
    }
  }
`;
  var f$2 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let p$1 = class p extends eo$1 {
    constructor() {
      super(...arguments), this.size = "md", this.backgroundColor = "accent-100", this.iconColor = "accent-100", this.background = "transparent", this.border = false, this.borderColor = "wui-color-bg-125", this.icon = "copy";
    }
    render() {
      const t = this.iconSize || this.size, i = this.size === "lg", r = this.size === "xl", a = i ? "12%" : "16%", o = i ? "xxs" : r ? "s" : "3xl", n = this.background === "gray", s = this.background === "opaque", l = this.backgroundColor === "accent-100" && s || this.backgroundColor === "success-100" && s || this.backgroundColor === "error-100" && s || this.backgroundColor === "inverse-100" && s;
      let d = `var(--wui-color-${this.backgroundColor})`;
      return l ? d = `var(--wui-icon-box-bg-${this.backgroundColor})` : n && (d = `var(--wui-color-gray-${this.backgroundColor})`), this.style.cssText = `
       --local-bg-value: ${d};
       --local-bg-mix: ${l || n ? "100%" : a};
       --local-border-radius: var(--wui-border-radius-${o});
       --local-size: var(--wui-icon-box-size-${this.size});
       --local-border: ${this.borderColor === "wui-color-bg-125" ? "2px" : "1px"} solid ${this.border ? `var(--${this.borderColor})` : "transparent"}
   `, vA` <wui-icon color=${this.iconColor} size=${t} name=${this.icon}></wui-icon> `;
    }
  };
  p$1.styles = [IA, AA, ft];
  f$2([
    c$3()
  ], p$1.prototype, "size", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "backgroundColor", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "iconColor", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "iconSize", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "background", void 0);
  f$2([
    c$3({ type: Boolean })
  ], p$1.prototype, "border", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "borderColor", void 0);
  f$2([
    c$3()
  ], p$1.prototype, "icon", void 0);
  p$1 = f$2([
    x$1("wui-icon-box")
  ], p$1);
  const wt$1 = Lr`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
  }
`;
  var A$1 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let C$2 = class C extends eo$1 {
    constructor() {
      super(...arguments), this.src = "./path/to/image.jpg", this.alt = "Image", this.size = void 0;
    }
    render() {
      return this.style.cssText = `
      --local-width: ${this.size ? `var(--wui-icon-size-${this.size});` : "100%"};
      --local-height: ${this.size ? `var(--wui-icon-size-${this.size});` : "100%"};
      `, vA`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`;
    }
    handleImageError() {
      this.dispatchEvent(new CustomEvent("onLoadError", { bubbles: true, composed: true }));
    }
  };
  C$2.styles = [IA, NA, wt$1];
  A$1([
    c$3()
  ], C$2.prototype, "src", void 0);
  A$1([
    c$3()
  ], C$2.prototype, "alt", void 0);
  A$1([
    c$3()
  ], C$2.prototype, "size", void 0);
  C$2 = A$1([
    x$1("wui-image")
  ], C$2);
  const mt$1 = Lr`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    height: var(--wui-spacing-m);
    padding: 0 var(--wui-spacing-3xs) !important;
    border-radius: var(--wui-border-radius-5xs);
    transition:
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius, background-color;
  }

  :host > wui-text {
    transform: translateY(5%);
  }

  :host([data-variant='main']) {
    background-color: var(--wui-color-accent-glass-015);
    color: var(--wui-color-accent-100);
  }

  :host([data-variant='shade']) {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-200);
  }

  :host([data-variant='success']) {
    background-color: var(--wui-icon-box-bg-success-100);
    color: var(--wui-color-success-100);
  }

  :host([data-variant='error']) {
    background-color: var(--wui-icon-box-bg-error-100);
    color: var(--wui-color-error-100);
  }

  :host([data-size='lg']) {
    padding: 11px 5px !important;
  }

  :host([data-size='lg']) > wui-text {
    transform: translateY(2%);
  }
`;
  var I$1 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let z$1 = class z extends eo$1 {
    constructor() {
      super(...arguments), this.variant = "main", this.size = "lg";
    }
    render() {
      this.dataset.variant = this.variant, this.dataset.size = this.size;
      const t = this.size === "md" ? "mini-700" : "micro-700";
      return vA`
      <wui-text data-variant=${this.variant} variant=${t} color="inherit">
        <slot></slot>
      </wui-text>
    `;
    }
  };
  z$1.styles = [IA, mt$1];
  I$1([
    c$3()
  ], z$1.prototype, "variant", void 0);
  I$1([
    c$3()
  ], z$1.prototype, "size", void 0);
  z$1 = I$1([
    x$1("wui-tag")
  ], z$1);
  const vt$1 = Lr`
  :host {
    display: flex;
  }

  :host([data-size='sm']) > svg {
    width: 12px;
    height: 12px;
  }

  :host([data-size='md']) > svg {
    width: 16px;
    height: 16px;
  }

  :host([data-size='lg']) > svg {
    width: 24px;
    height: 24px;
  }

  :host([data-size='xl']) > svg {
    width: 32px;
    height: 32px;
  }

  svg {
    animation: rotate 2s linear infinite;
  }

  circle {
    fill: none;
    stroke: var(--local-color);
    stroke-width: 4px;
    stroke-dasharray: 1, 124;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }

  :host([data-size='md']) > svg > circle {
    stroke-width: 6px;
  }

  :host([data-size='sm']) > svg > circle {
    stroke-width: 8px;
  }

  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes dash {
    0% {
      stroke-dasharray: 1, 124;
      stroke-dashoffset: 0;
    }

    50% {
      stroke-dasharray: 90, 124;
      stroke-dashoffset: -35;
    }

    100% {
      stroke-dashoffset: -125;
    }
  }
`;
  var M$1 = function(e, t, i, r) {
    var a = arguments.length, o = a < 3 ? t : r, n;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") o = Reflect.decorate(e, t, i, r);
    else for (var s = e.length - 1; s >= 0; s--) (n = e[s]) && (o = (a < 3 ? n(o) : a > 3 ? n(t, i, o) : n(t, i)) || o);
    return a > 3 && o && Object.defineProperty(t, i, o), o;
  };
  let k$1 = class k extends eo$1 {
    constructor() {
      super(...arguments), this.color = "accent-100", this.size = "lg";
    }
    render() {
      return this.style.cssText = `--local-color: ${this.color === "inherit" ? "inherit" : `var(--wui-color-${this.color})`}`, this.dataset.size = this.size, vA`<svg viewBox="25 25 50 50">
      <circle r="20" cy="50" cx="50"></circle>
    </svg>`;
    }
  };
  k$1.styles = [IA, vt$1];
  M$1([
    c$3()
  ], k$1.prototype, "color", void 0);
  M$1([
    c$3()
  ], k$1.prototype, "size", void 0);
  k$1 = M$1([
    x$1("wui-loading-spinner")
  ], k$1);

  const Qi = Lr`
  :host {
    position: relative;
    background-color: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--local-size);
    height: var(--local-size);
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host > wui-flex {
    overflow: hidden;
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host([name='Extension'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  :host([data-wallet-icon='allWallets']) {
    background-color: var(--wui-all-wallets-bg-100);
  }

  :host([data-wallet-icon='allWallets'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  wui-icon[data-parent-size='inherit'] {
    width: 75%;
    height: 75%;
    align-items: center;
  }

  wui-icon[data-parent-size='sm'] {
    width: 18px;
    height: 18px;
  }

  wui-icon[data-parent-size='md'] {
    width: 24px;
    height: 24px;
  }

  wui-icon[data-parent-size='lg'] {
    width: 42px;
    height: 42px;
  }

  wui-icon[data-parent-size='full'] {
    width: 100%;
    height: 100%;
  }

  :host > wui-icon-box {
    position: absolute;
    overflow: hidden;
    right: -1px;
    bottom: -2px;
    z-index: 1;
    border: 2px solid var(--wui-color-bg-150, #1e1f1f);
    padding: 1px;
  }
`;
  var xe = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let le = class extends eo$1 {
    constructor() {
      super(...arguments), this.size = "md", this.name = "", this.installed = false, this.badgeSize = "xs";
    }
    render() {
      let e = "xxs";
      return this.size === "lg" ? e = "m" : this.size === "md" ? e = "xs" : e = "xxs", this.style.cssText = `
       --local-border-radius: var(--wui-border-radius-${e});
       --local-size: var(--wui-wallet-image-size-${this.size});
   `, this.walletIcon && (this.dataset.walletIcon = this.walletIcon), vA`
      <wui-flex justifyContent="center" alignItems="center"> ${this.templateVisual()} </wui-flex>
    `;
    }
    templateVisual() {
      return this.imageSrc ? vA`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>` : this.walletIcon ? vA`<wui-icon
        data-parent-size="md"
        size="md"
        color="inherit"
        name=${this.walletIcon}
      ></wui-icon>` : vA`<wui-icon
      data-parent-size=${this.size}
      size="inherit"
      color="inherit"
      name="walletPlaceholder"
    ></wui-icon>`;
    }
  };
  le.styles = [AA, IA, Qi];
  xe([
    c$3()
  ], le.prototype, "size", void 0);
  xe([
    c$3()
  ], le.prototype, "name", void 0);
  xe([
    c$3()
  ], le.prototype, "imageSrc", void 0);
  xe([
    c$3()
  ], le.prototype, "walletIcon", void 0);
  xe([
    c$3({ type: Boolean })
  ], le.prototype, "installed", void 0);
  xe([
    c$3()
  ], le.prototype, "badgeSize", void 0);
  le = xe([
    x$1("wui-wallet-image")
  ], le);
  const Xi = Lr`
  :host {
    position: relative;
    border-radius: var(--wui-border-radius-xxs);
    width: 40px;
    height: 40px;
    overflow: hidden;
    background: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--wui-spacing-4xs);
    padding: 3.75px !important;
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host > wui-wallet-image {
    width: 14px;
    height: 14px;
    border-radius: var(--wui-border-radius-5xs);
  }

  :host > wui-flex {
    padding: 2px;
    position: fixed;
    overflow: hidden;
    left: 34px;
    bottom: 8px;
    background: var(--dark-background-150, #1e1f1f);
    border-radius: 50%;
    z-index: 2;
    display: flex;
  }
`;
  var xi = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  const Wt = 4;
  let Xe = class extends eo$1 {
    constructor() {
      super(...arguments), this.walletImages = [];
    }
    render() {
      const e = this.walletImages.length < Wt;
      return vA`${this.walletImages.slice(0, Wt).map(({ src: i, walletName: n }) => vA`
            <wui-wallet-image
              size="inherit"
              imageSrc=${i}
              name=${St$1(n)}
            ></wui-wallet-image>
          `)}
      ${e ? [...Array(Wt - this.walletImages.length)].map(() => vA` <wui-wallet-image size="inherit" name=""></wui-wallet-image>`) : null}
      <wui-flex>
        <wui-icon-box
          size="xxs"
          iconSize="xxs"
          iconcolor="success-100"
          backgroundcolor="success-100"
          icon="checkmark"
          background="opaque"
        ></wui-icon-box>
      </wui-flex>`;
    }
  };
  Xe.styles = [IA, Xi];
  xi([
    c$3({ type: Array })
  ], Xe.prototype, "walletImages", void 0);
  Xe = xi([
    x$1("wui-all-wallets-image")
  ], Xe);
  const Zi = Lr`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  button > wui-text:nth-child(2) {
    display: flex;
    flex: 1;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-tag {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-300);
  }

  wui-icon {
    color: var(--wui-color-fg-200) !important;
  }
`;
  var U = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let k = class extends eo$1 {
    constructor() {
      super(...arguments), this.walletImages = [], this.imageSrc = "", this.name = "", this.tabIdx = void 0, this.installed = false, this.disabled = false, this.showAllWallets = false, this.loading = false, this.loadingSpinnerColor = "accent-100";
    }
    render() {
      return vA`
      <button ?disabled=${this.disabled} tabindex=${St$1(this.tabIdx)}>
        ${this.templateAllWallets()} ${this.templateWalletImage()}
        <wui-text variant="paragraph-500" color="inherit">${this.name}</wui-text>
        ${this.templateStatus()}
      </button>
    `;
    }
    templateAllWallets() {
      return this.showAllWallets && this.imageSrc ? vA` <wui-all-wallets-image .imageeSrc=${this.imageSrc}> </wui-all-wallets-image> ` : this.showAllWallets && this.walletIcon ? vA` <wui-wallet-image .walletIcon=${this.walletIcon} size="sm"> </wui-wallet-image> ` : null;
    }
    templateWalletImage() {
      return !this.showAllWallets && this.imageSrc ? vA`<wui-wallet-image
        size="sm"
        imageSrc=${this.imageSrc}
        name=${this.name}
        .installed=${this.installed}
      ></wui-wallet-image>` : !this.showAllWallets && !this.imageSrc ? vA`<wui-wallet-image size="sm" name=${this.name}></wui-wallet-image>` : null;
    }
    templateStatus() {
      return this.loading ? vA`<wui-loading-spinner
        size="lg"
        color=${this.loadingSpinnerColor}
      ></wui-loading-spinner>` : this.tagLabel && this.tagVariant ? vA`<wui-tag variant=${this.tagVariant}>${this.tagLabel}</wui-tag>` : this.icon ? vA`<wui-icon color="inherit" size="sm" name=${this.icon}></wui-icon>` : null;
    }
  };
  k.styles = [IA, AA, Zi];
  U([
    c$3({ type: Array })
  ], k.prototype, "walletImages", void 0);
  U([
    c$3()
  ], k.prototype, "imageSrc", void 0);
  U([
    c$3()
  ], k.prototype, "name", void 0);
  U([
    c$3()
  ], k.prototype, "tagLabel", void 0);
  U([
    c$3()
  ], k.prototype, "tagVariant", void 0);
  U([
    c$3()
  ], k.prototype, "icon", void 0);
  U([
    c$3()
  ], k.prototype, "walletIcon", void 0);
  U([
    c$3()
  ], k.prototype, "tabIdx", void 0);
  U([
    c$3({ type: Boolean })
  ], k.prototype, "installed", void 0);
  U([
    c$3({ type: Boolean })
  ], k.prototype, "disabled", void 0);
  U([
    c$3({ type: Boolean })
  ], k.prototype, "showAllWallets", void 0);
  U([
    c$3({ type: Boolean })
  ], k.prototype, "loading", void 0);
  U([
    c$3({ type: String })
  ], k.prototype, "loadingSpinnerColor", void 0);
  k = U([
    x$1("wui-list-wallet")
  ], k);
  var Pe$1 = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let we$1 = class we extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.count = K$3.state.count, this.filteredCount = K$3.state.filteredWallets.length, this.isFetchingRecommendedWallets = K$3.state.isFetchingRecommendedWallets, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e), K$3.subscribeKey("count", (e) => this.count = e), K$3.subscribeKey("filteredWallets", (e) => this.filteredCount = e.length), K$3.subscribeKey("isFetchingRecommendedWallets", (e) => this.isFetchingRecommendedWallets = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const e = this.connectors.find((l) => l.id === "walletConnect"), { allWallets: i } = T$2.state;
      if (!e || i === "HIDE" || i === "ONLY_MOBILE" && !X$3.isMobile())
        return null;
      const n = K$3.state.featured.length, o = this.count + n, t = o < 10 ? o : Math.floor(o / 10) * 10, a = this.filteredCount > 0 ? this.filteredCount : t;
      let s = `${a}`;
      return this.filteredCount > 0 ? s = `${this.filteredCount}` : a < o && (s = `${a}+`), vA`
      <wui-list-wallet
        name="All Wallets"
        walletIcon="allWallets"
        showAllWallets
        @click=${this.onAllWallets.bind(this)}
        tagLabel=${s}
        tagVariant="shade"
        data-testid="all-wallets"
        tabIdx=${St$1(this.tabIdx)}
        .loading=${this.isFetchingRecommendedWallets}
        loadingSpinnerColor=${this.isFetchingRecommendedWallets ? "fg-300" : "accent-100"}
      ></wui-list-wallet>
    `;
    }
    onAllWallets() {
      Pe$3.sendEvent({ type: "track", event: "CLICK_ALL_WALLETS" }), re$1.push("AllWallets");
    }
  };
  Pe$1([
    c$3()
  ], we$1.prototype, "tabIdx", void 0);
  Pe$1([
    bt$1()
  ], we$1.prototype, "connectors", void 0);
  Pe$1([
    bt$1()
  ], we$1.prototype, "count", void 0);
  Pe$1([
    bt$1()
  ], we$1.prototype, "filteredCount", void 0);
  Pe$1([
    bt$1()
  ], we$1.prototype, "isFetchingRecommendedWallets", void 0);
  we$1 = Pe$1([
    x$1("w3m-all-wallets-widget")
  ], we$1);
  var Kt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Ze = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const e = this.connectors.filter((i) => i.type === "ANNOUNCED");
      return e != null && e.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${e.filter(Zn$1.showConnector).map((i) => vA`
              <wui-list-wallet
                imageSrc=${St$1(Vu.getConnectorImage(i))}
                name=${i.name ?? "Unknown"}
                @click=${() => this.onConnector(i)}
                tagVariant="success"
                tagLabel="installed"
                data-testid=${`wallet-selector-${i.id}`}
                .installed=${ true}
                tabIdx=${St$1(this.tabIdx)}
              >
              </wui-list-wallet>
            `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnector(e) {
      e.id === "walletConnect" ? X$3.isMobile() ? re$1.push("AllWallets") : re$1.push("ConnectingWalletConnect") : re$1.push("ConnectingExternal", { connector: e });
    }
  };
  Kt([
    c$3()
  ], Ze.prototype, "tabIdx", void 0);
  Kt([
    bt$1()
  ], Ze.prototype, "connectors", void 0);
  Ze = Kt([
    x$1("w3m-connect-announced-widget")
  ], Ze);
  var wt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ze$1 = class ze extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.loading = false, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e)), X$3.isTelegram() && X$3.isIos() && (this.loading = !Y$1.state.wcUri, this.unsubscribe.push(Y$1.subscribeKey("wcUri", (e) => this.loading = !e)));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const { customWallets: e } = T$2.state;
      if (!(e != null && e.length))
        return this.style.cssText = "display: none", null;
      const i = this.filterOutDuplicateWallets(e);
      return vA`<wui-flex flexDirection="column" gap="xs">
      ${i.map((n) => vA`
          <wui-list-wallet
            imageSrc=${St$1(Vu.getWalletImage(n))}
            name=${n.name ?? "Unknown"}
            @click=${() => this.onConnectWallet(n)}
            data-testid=${`wallet-selector-${n.id}`}
            tabIdx=${St$1(this.tabIdx)}
            ?loading=${this.loading}
          >
          </wui-list-wallet>
        `)}
    </wui-flex>`;
    }
    filterOutDuplicateWallets(e) {
      const i = q$1.getRecentWallets(), n = this.connectors.map((s) => {
        var l;
        return (l = s.info) == null ? void 0 : l.rdns;
      }).filter(Boolean), o = i.map((s) => s.rdns).filter(Boolean), t = n.concat(o);
      if (t.includes("io.metamask.mobile") && X$3.isMobile()) {
        const s = t.indexOf("io.metamask.mobile");
        t[s] = "io.metamask";
      }
      return e.filter((s) => !t.includes(String(s == null ? void 0 : s.rdns)));
    }
    onConnectWallet(e) {
      this.loading || re$1.push("ConnectingWalletConnect", { wallet: e });
    }
  };
  wt([
    c$3()
  ], ze$1.prototype, "tabIdx", void 0);
  wt([
    bt$1()
  ], ze$1.prototype, "connectors", void 0);
  wt([
    bt$1()
  ], ze$1.prototype, "loading", void 0);
  ze$1 = wt([
    x$1("w3m-connect-custom-widget")
  ], ze$1);
  var Gt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let et = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const n = this.connectors.filter((o) => o.type === "EXTERNAL").filter(Zn$1.showConnector).filter((o) => o.id !== z$3.CONNECTOR_ID.COINBASE_SDK);
      return n != null && n.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${n.map((o) => vA`
            <wui-list-wallet
              imageSrc=${St$1(Vu.getConnectorImage(o))}
              .installed=${ true}
              name=${o.name ?? "Unknown"}
              data-testid=${`wallet-selector-external-${o.id}`}
              @click=${() => this.onConnector(o)}
              tabIdx=${St$1(this.tabIdx)}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnector(e) {
      re$1.push("ConnectingExternal", { connector: e });
    }
  };
  Gt([
    c$3()
  ], et.prototype, "tabIdx", void 0);
  Gt([
    bt$1()
  ], et.prototype, "connectors", void 0);
  et = Gt([
    x$1("w3m-connect-external-widget")
  ], et);
  var Yt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let tt = class extends eo$1 {
    constructor() {
      super(...arguments), this.tabIdx = void 0, this.wallets = [];
    }
    render() {
      return this.wallets.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${this.wallets.map((e) => vA`
            <wui-list-wallet
              data-testid=${`wallet-selector-featured-${e.id}`}
              imageSrc=${St$1(Vu.getWalletImage(e))}
              name=${e.name ?? "Unknown"}
              @click=${() => this.onConnectWallet(e)}
              tabIdx=${St$1(this.tabIdx)}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnectWallet(e) {
      F$2.selectWalletConnector(e);
    }
  };
  Yt([
    c$3()
  ], tt.prototype, "tabIdx", void 0);
  Yt([
    c$3()
  ], tt.prototype, "wallets", void 0);
  tt = Yt([
    x$1("w3m-connect-featured-widget")
  ], tt);
  var Jt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let it = class extends eo$1 {
    constructor() {
      super(...arguments), this.tabIdx = void 0, this.connectors = [];
    }
    render() {
      const e = this.connectors.filter(Zn$1.showConnector);
      return e.length === 0 ? (this.style.cssText = "display: none", null) : vA`
      <wui-flex flexDirection="column" gap="xs">
        ${e.map((i) => vA`
            <wui-list-wallet
              imageSrc=${St$1(Vu.getConnectorImage(i))}
              .installed=${ true}
              name=${i.name ?? "Unknown"}
              tagVariant="success"
              tagLabel="installed"
              data-testid=${`wallet-selector-${i.id}`}
              @click=${() => this.onConnector(i)}
              tabIdx=${St$1(this.tabIdx)}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    `;
    }
    onConnector(e) {
      F$2.setActiveConnector(e), re$1.push("ConnectingExternal", { connector: e });
    }
  };
  Jt([
    c$3()
  ], it.prototype, "tabIdx", void 0);
  Jt([
    c$3()
  ], it.prototype, "connectors", void 0);
  it = Jt([
    x$1("w3m-connect-injected-widget")
  ], it);
  var Qt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let nt = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const e = this.connectors.filter((i) => i.type === "MULTI_CHAIN" && i.name !== "WalletConnect");
      return e != null && e.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${e.map((i) => vA`
            <wui-list-wallet
              imageSrc=${St$1(Vu.getConnectorImage(i))}
              .installed=${ true}
              name=${i.name ?? "Unknown"}
              tagVariant="shade"
              tagLabel="multichain"
              data-testid=${`wallet-selector-${i.id}`}
              @click=${() => this.onConnector(i)}
              tabIdx=${St$1(this.tabIdx)}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnector(e) {
      F$2.setActiveConnector(e), re$1.push("ConnectingMultiChain");
    }
  };
  Qt([
    c$3()
  ], nt.prototype, "tabIdx", void 0);
  Qt([
    bt$1()
  ], nt.prototype, "connectors", void 0);
  nt = Qt([
    x$1("w3m-connect-multi-chain-widget")
  ], nt);
  var bt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let De$1 = class De extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.loading = false, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e)), X$3.isTelegram() && X$3.isIos() && (this.loading = !Y$1.state.wcUri, this.unsubscribe.push(Y$1.subscribeKey("wcUri", (e) => this.loading = !e)));
    }
    render() {
      const i = q$1.getRecentWallets().filter((n) => !Wa.isExcluded(n)).filter((n) => !this.hasWalletConnector(n)).filter((n) => this.isWalletCompatibleWithCurrentChain(n));
      return i.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${i.map((n) => vA`
            <wui-list-wallet
              imageSrc=${St$1(Vu.getWalletImage(n))}
              name=${n.name ?? "Unknown"}
              @click=${() => this.onConnectWallet(n)}
              tagLabel="recent"
              tagVariant="shade"
              tabIdx=${St$1(this.tabIdx)}
              ?loading=${this.loading}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnectWallet(e) {
      this.loading || F$2.selectWalletConnector(e);
    }
    hasWalletConnector(e) {
      return this.connectors.some((i) => i.id === e.id || i.name === e.name);
    }
    isWalletCompatibleWithCurrentChain(e) {
      const i = m.state.activeChain;
      return i && e.chains ? e.chains.some((n) => {
        const o = n.split(":")[0];
        return i === o;
      }) : true;
    }
  };
  bt([
    c$3()
  ], De$1.prototype, "tabIdx", void 0);
  bt([
    bt$1()
  ], De$1.prototype, "connectors", void 0);
  bt([
    bt$1()
  ], De$1.prototype, "loading", void 0);
  De$1 = bt([
    x$1("w3m-connect-recent-widget")
  ], De$1);
  var mt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Ne$1 = class Ne extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.wallets = [], this.loading = false, X$3.isTelegram() && X$3.isIos() && (this.loading = !Y$1.state.wcUri, this.unsubscribe.push(Y$1.subscribeKey("wcUri", (e) => this.loading = !e)));
    }
    render() {
      const { connectors: e } = F$2.state, { customWallets: i, featuredWalletIds: n } = T$2.state, o = q$1.getRecentWallets(), t = e.find((_) => _.id === "walletConnect"), s = e.filter((_) => _.type === "INJECTED" || _.type === "ANNOUNCED" || _.type === "MULTI_CHAIN").filter((_) => _.name !== "Browser Wallet");
      if (!t)
        return null;
      if (n || i || !this.wallets.length)
        return this.style.cssText = "display: none", null;
      const l = s.length + o.length, h = Math.max(0, 2 - l), d = Wa.filterOutDuplicateWallets(this.wallets).slice(0, h);
      return d.length ? vA`
      <wui-flex flexDirection="column" gap="xs">
        ${d.map((_) => vA`
            <wui-list-wallet
              imageSrc=${St$1(Vu.getWalletImage(_))}
              name=${(_ == null ? void 0 : _.name) ?? "Unknown"}
              @click=${() => this.onConnectWallet(_)}
              tabIdx=${St$1(this.tabIdx)}
              ?loading=${this.loading}
            >
            </wui-list-wallet>
          `)}
      </wui-flex>
    ` : (this.style.cssText = "display: none", null);
    }
    onConnectWallet(e) {
      if (this.loading)
        return;
      const i = F$2.getConnector(e.id, e.rdns);
      i ? re$1.push("ConnectingExternal", { connector: i }) : re$1.push("ConnectingWalletConnect", { wallet: e });
    }
  };
  mt([
    c$3()
  ], Ne$1.prototype, "tabIdx", void 0);
  mt([
    c$3()
  ], Ne$1.prototype, "wallets", void 0);
  mt([
    bt$1()
  ], Ne$1.prototype, "loading", void 0);
  Ne$1 = mt([
    x$1("w3m-connect-recommended-widget")
  ], Ne$1);
  var vt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Me = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.connectorImages = Mt$2.state.connectorImages, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e), Mt$2.subscribeKey("connectorImages", (e) => this.connectorImages = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      if (X$3.isMobile())
        return this.style.cssText = "display: none", null;
      const e = this.connectors.find((n) => n.id === "walletConnect");
      if (!e)
        return this.style.cssText = "display: none", null;
      const i = e.imageUrl || this.connectorImages[(e == null ? void 0 : e.imageId) ?? ""];
      return vA`
      <wui-list-wallet
        imageSrc=${St$1(i)}
        name=${e.name ?? "Unknown"}
        @click=${() => this.onConnector(e)}
        tagLabel="qr code"
        tagVariant="main"
        tabIdx=${St$1(this.tabIdx)}
        data-testid="wallet-selector-walletconnect"
      >
      </wui-list-wallet>
    `;
    }
    onConnector(e) {
      F$2.setActiveConnector(e), re$1.push("ConnectingWalletConnect");
    }
  };
  vt([
    c$3()
  ], Me.prototype, "tabIdx", void 0);
  vt([
    bt$1()
  ], Me.prototype, "connectors", void 0);
  vt([
    bt$1()
  ], Me.prototype, "connectorImages", void 0);
  Me = vt([
    x$1("w3m-connect-walletconnect-widget")
  ], Me);
  const en = Lr`
  :host {
    margin-top: var(--wui-spacing-3xs);
  }
  wui-separator {
    margin: var(--wui-spacing-m) calc(var(--wui-spacing-m) * -1) var(--wui-spacing-xs)
      calc(var(--wui-spacing-m) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }
`;
  var Fe = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let be = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.tabIdx = void 0, this.connectors = F$2.state.connectors, this.recommended = K$3.state.recommended, this.featured = K$3.state.featured, this.unsubscribe.push(F$2.subscribeKey("connectors", (e) => this.connectors = e), K$3.subscribeKey("recommended", (e) => this.recommended = e), K$3.subscribeKey("featured", (e) => this.featured = e));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      return vA`
      <wui-flex flexDirection="column" gap="xs"> ${this.connectorListTemplate()} </wui-flex>
    `;
    }
    connectorListTemplate() {
      const { custom: e, recent: i, announced: n, injected: o, multiChain: t, recommended: a, featured: s, external: l } = Zn$1.getConnectorsByType(this.connectors, this.recommended, this.featured);
      return Zn$1.getConnectorTypeOrder({
        custom: e,
        recent: i,
        announced: n,
        injected: o,
        multiChain: t,
        recommended: a,
        featured: s,
        external: l
      }).map((d) => {
        switch (d) {
          case "injected":
            return vA`
            ${t.length ? vA`<w3m-connect-multi-chain-widget
                  tabIdx=${St$1(this.tabIdx)}
                ></w3m-connect-multi-chain-widget>` : null}
            ${n.length ? vA`<w3m-connect-announced-widget
                  tabIdx=${St$1(this.tabIdx)}
                ></w3m-connect-announced-widget>` : null}
            ${o.length ? vA`<w3m-connect-injected-widget
                  .connectors=${o}
                  tabIdx=${St$1(this.tabIdx)}
                ></w3m-connect-injected-widget>` : null}
          `;
          case "walletConnect":
            return vA`<w3m-connect-walletconnect-widget
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-walletconnect-widget>`;
          case "recent":
            return vA`<w3m-connect-recent-widget
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-recent-widget>`;
          case "featured":
            return vA`<w3m-connect-featured-widget
            .wallets=${s}
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-featured-widget>`;
          case "custom":
            return vA`<w3m-connect-custom-widget
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-custom-widget>`;
          case "external":
            return vA`<w3m-connect-external-widget
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-external-widget>`;
          case "recommended":
            return vA`<w3m-connect-recommended-widget
            .wallets=${a}
            tabIdx=${St$1(this.tabIdx)}
          ></w3m-connect-recommended-widget>`;
          default:
            return console.warn(`Unknown connector type: ${d}`), null;
        }
      });
    }
  };
  be.styles = en;
  Fe([
    c$3()
  ], be.prototype, "tabIdx", void 0);
  Fe([
    bt$1()
  ], be.prototype, "connectors", void 0);
  Fe([
    bt$1()
  ], be.prototype, "recommended", void 0);
  Fe([
    bt$1()
  ], be.prototype, "featured", void 0);
  be = Fe([
    x$1("w3m-connector-list")
  ], be);
  const tn = Lr`
  :host {
    display: inline-flex;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    padding: var(--wui-spacing-3xs);
    position: relative;
    height: 36px;
    min-height: 36px;
    overflow: hidden;
  }

  :host::before {
    content: '';
    position: absolute;
    pointer-events: none;
    top: 4px;
    left: 4px;
    display: block;
    width: var(--local-tab-width);
    height: 28px;
    border-radius: var(--wui-border-radius-3xl);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transform: translateX(calc(var(--local-tab) * var(--local-tab-width)));
    transition: transform var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color, opacity;
  }

  :host([data-type='flex'])::before {
    left: 3px;
    transform: translateX(calc((var(--local-tab) * 34px) + (var(--local-tab) * 4px)));
  }

  :host([data-type='flex']) {
    display: flex;
    padding: 0px 0px 0px 12px;
    gap: 4px;
  }

  :host([data-type='flex']) > button > wui-text {
    position: absolute;
    left: 18px;
    opacity: 0;
  }

  button[data-active='true'] > wui-icon,
  button[data-active='true'] > wui-text {
    color: var(--wui-color-fg-100);
  }

  button[data-active='false'] > wui-icon,
  button[data-active='false'] > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='true']:disabled,
  button[data-active='false']:disabled {
    background-color: transparent;
    opacity: 0.5;
    cursor: not-allowed;
  }

  button[data-active='true']:disabled > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='false']:disabled > wui-text {
    color: var(--wui-color-fg-300);
  }

  button > wui-icon,
  button > wui-text {
    pointer-events: none;
    transition: color var(--wui-e ase-out-power-1) var(--wui-duration-md);
    will-change: color;
  }

  button {
    width: var(--local-tab-width);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  :host([data-type='flex']) > button {
    width: 34px;
    position: relative;
    display: flex;
    justify-content: flex-start;
  }

  button:hover:enabled,
  button:active:enabled {
    background-color: transparent !important;
  }

  button:hover:enabled > wui-icon,
  button:active:enabled > wui-icon {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button:hover:enabled > wui-text,
  button:active:enabled > wui-text {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
  }
`;
  var fe = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ee = class extends eo$1 {
    constructor() {
      super(...arguments), this.tabs = [], this.onTabChange = () => null, this.buttons = [], this.disabled = false, this.localTabWidth = "100px", this.activeTab = 0, this.isDense = false;
    }
    render() {
      return this.isDense = this.tabs.length > 3, this.style.cssText = `
      --local-tab: ${this.activeTab};
      --local-tab-width: ${this.localTabWidth};
    `, this.dataset.type = this.isDense ? "flex" : "block", this.tabs.map((e, i) => {
        var o;
        const n = i === this.activeTab;
        return vA`
        <button
          ?disabled=${this.disabled}
          @click=${() => this.onTabClick(i)}
          data-active=${n}
          data-testid="tab-${(o = e.label) == null ? void 0 : o.toLowerCase()}"
        >
          ${this.iconTemplate(e)}
          <wui-text variant="small-600" color="inherit"> ${e.label} </wui-text>
        </button>
      `;
      });
    }
    firstUpdated() {
      this.shadowRoot && this.isDense && (this.buttons = [...this.shadowRoot.querySelectorAll("button")], setTimeout(() => {
        this.animateTabs(0, true);
      }, 0));
    }
    iconTemplate(e) {
      return e.icon ? vA`<wui-icon size="xs" color="inherit" name=${e.icon}></wui-icon>` : null;
    }
    onTabClick(e) {
      this.buttons && this.animateTabs(e, false), this.activeTab = e, this.onTabChange(e);
    }
    animateTabs(e, i) {
      const n = this.buttons[this.activeTab], o = this.buttons[e], t = n == null ? void 0 : n.querySelector("wui-text"), a = o == null ? void 0 : o.querySelector("wui-text"), s = o == null ? void 0 : o.getBoundingClientRect(), l = a == null ? void 0 : a.getBoundingClientRect();
      n && t && !i && e !== this.activeTab && (t.animate([{ opacity: 0 }], {
        duration: 50,
        easing: "ease",
        fill: "forwards"
      }), n.animate([{ width: "34px" }], {
        duration: 500,
        easing: "ease",
        fill: "forwards"
      })), o && s && l && a && (e !== this.activeTab || i) && (this.localTabWidth = `${Math.round(s.width + l.width) + 6}px`, o.animate([{ width: `${s.width + l.width}px` }], {
        duration: i ? 0 : 500,
        fill: "forwards",
        easing: "ease"
      }), a.animate([{ opacity: 1 }], {
        duration: i ? 0 : 125,
        delay: i ? 0 : 200,
        fill: "forwards",
        easing: "ease"
      }));
    }
  };
  ee.styles = [IA, AA, tn];
  fe([
    c$3({ type: Array })
  ], ee.prototype, "tabs", void 0);
  fe([
    c$3()
  ], ee.prototype, "onTabChange", void 0);
  fe([
    c$3({ type: Array })
  ], ee.prototype, "buttons", void 0);
  fe([
    c$3({ type: Boolean })
  ], ee.prototype, "disabled", void 0);
  fe([
    c$3()
  ], ee.prototype, "localTabWidth", void 0);
  fe([
    bt$1()
  ], ee.prototype, "activeTab", void 0);
  fe([
    bt$1()
  ], ee.prototype, "isDense", void 0);
  ee = fe([
    x$1("wui-tabs")
  ], ee);
  var Xt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ot = class extends eo$1 {
    constructor() {
      super(...arguments), this.platformTabs = [], this.unsubscribe = [], this.platforms = [], this.onSelectPlatfrom = void 0;
    }
    disconnectCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const e = this.generateTabs();
      return vA`
      <wui-flex justifyContent="center" .padding=${["0", "0", "l", "0"]}>
        <wui-tabs .tabs=${e} .onTabChange=${this.onTabChange.bind(this)}></wui-tabs>
      </wui-flex>
    `;
    }
    generateTabs() {
      const e = this.platforms.map((i) => i === "browser" ? { label: "Browser", icon: "extension", platform: "browser" } : i === "mobile" ? { label: "Mobile", icon: "mobile", platform: "mobile" } : i === "qrcode" ? { label: "Mobile", icon: "mobile", platform: "qrcode" } : i === "web" ? { label: "Webapp", icon: "browser", platform: "web" } : i === "desktop" ? { label: "Desktop", icon: "desktop", platform: "desktop" } : { label: "Browser", icon: "extension", platform: "unsupported" });
      return this.platformTabs = e.map(({ platform: i }) => i), e;
    }
    onTabChange(e) {
      var n;
      const i = this.platformTabs[e];
      i && ((n = this.onSelectPlatfrom) == null || n.call(this, i));
    }
  };
  Xt([
    c$3({ type: Array })
  ], ot.prototype, "platforms", void 0);
  Xt([
    c$3()
  ], ot.prototype, "onSelectPlatfrom", void 0);
  ot = Xt([
    x$1("w3m-connecting-header")
  ], ot);
  const nn = Lr`
  :host {
    width: var(--local-width);
    position: relative;
  }

  button {
    border: none;
    border-radius: var(--local-border-radius);
    width: var(--local-width);
    white-space: nowrap;
  }

  /* -- Sizes --------------------------------------------------- */
  button[data-size='md'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-l);
    height: 36px;
  }

  button[data-size='md'][data-icon-left='true'][data-icon-right='false'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-s);
  }

  button[data-size='md'][data-icon-right='true'][data-icon-left='false'] {
    padding: 8.2px var(--wui-spacing-s) 9px var(--wui-spacing-l);
  }

  button[data-size='lg'] {
    padding: var(--wui-spacing-m) var(--wui-spacing-2l);
    height: 48px;
  }

  /* -- Variants --------------------------------------------------------- */
  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='inverse'] {
    background-color: var(--wui-color-inverse-100);
    color: var(--wui-color-inverse-000);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='accent-error'] {
    background: var(--wui-color-error-glass-015);
    color: var(--wui-color-error-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-error-glass-010);
  }

  button[data-variant='accent-success'] {
    background: var(--wui-color-success-glass-015);
    color: var(--wui-color-success-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-success-glass-010);
  }

  button[data-variant='neutral'] {
    background: transparent;
    color: var(--wui-color-fg-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  /* -- Focus states --------------------------------------------------- */
  button[data-variant='main']:focus-visible:enabled {
    background-color: var(--wui-color-accent-090);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='inverse']:focus-visible:enabled {
    background-color: var(--wui-color-inverse-100);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent']:focus-visible:enabled {
    background-color: var(--wui-color-accent-glass-010);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent-error']:focus-visible:enabled {
    background: var(--wui-color-error-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-error-100),
      0 0 0 4px var(--wui-color-error-glass-020);
  }
  button[data-variant='accent-success']:focus-visible:enabled {
    background: var(--wui-color-success-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-success-100),
      0 0 0 4px var(--wui-color-success-glass-020);
  }
  button[data-variant='neutral']:focus-visible:enabled {
    background: var(--wui-color-gray-glass-005);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-gray-glass-002);
  }

  /* -- Hover & Active states ----------------------------------------------------------- */
  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='accent-error']:hover:enabled {
      background: var(--wui-color-error-glass-020);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-error']:active:enabled {
      background: var(--wui-color-error-glass-030);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-success']:hover:enabled {
      background: var(--wui-color-success-glass-020);
      color: var(--wui-color-success-100);
    }

    button[data-variant='accent-success']:active:enabled {
      background: var(--wui-color-success-glass-030);
      color: var(--wui-color-success-100);
    }

    button[data-variant='neutral']:hover:enabled {
      background: var(--wui-color-gray-glass-002);
    }

    button[data-variant='neutral']:active:enabled {
      background: var(--wui-color-gray-glass-005);
    }

    button[data-size='lg'][data-icon-left='true'][data-icon-right='false'] {
      padding-left: var(--wui-spacing-m);
    }

    button[data-size='lg'][data-icon-right='true'][data-icon-left='false'] {
      padding-right: var(--wui-spacing-m);
    }
  }

  /* -- Disabled state --------------------------------------------------- */
  button:disabled {
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    color: var(--wui-color-gray-glass-020);
    cursor: not-allowed;
  }

  button > wui-text {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  ::slotted(*) {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  wui-loading-spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    opacity: var(--local-opacity-000);
  }
`;
  var te = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  const ci = {
    main: "inverse-100",
    inverse: "inverse-000",
    accent: "accent-100",
    "accent-error": "error-100",
    "accent-success": "success-100",
    neutral: "fg-100",
    disabled: "gray-glass-020"
  }, on = {
    lg: "paragraph-600",
    md: "small-600"
  }, rn = {
    lg: "md",
    md: "md"
  };
  let q = class extends eo$1 {
    constructor() {
      super(...arguments), this.size = "lg", this.disabled = false, this.fullWidth = false, this.loading = false, this.variant = "main", this.hasIconLeft = false, this.hasIconRight = false, this.borderRadius = "m";
    }
    render() {
      this.style.cssText = `
    --local-width: ${this.fullWidth ? "100%" : "auto"};
    --local-opacity-100: ${this.loading ? 0 : 1};
    --local-opacity-000: ${this.loading ? 1 : 0};
    --local-border-radius: var(--wui-border-radius-${this.borderRadius});
    `;
      const e = this.textVariant ?? on[this.size];
      return vA`
      <button
        data-variant=${this.variant}
        data-icon-left=${this.hasIconLeft}
        data-icon-right=${this.hasIconRight}
        data-size=${this.size}
        ?disabled=${this.disabled}
      >
        ${this.loadingTemplate()}
        <slot name="iconLeft" @slotchange=${() => this.handleSlotLeftChange()}></slot>
        <wui-text variant=${e} color="inherit">
          <slot></slot>
        </wui-text>
        <slot name="iconRight" @slotchange=${() => this.handleSlotRightChange()}></slot>
      </button>
    `;
    }
    handleSlotLeftChange() {
      this.hasIconLeft = true;
    }
    handleSlotRightChange() {
      this.hasIconRight = true;
    }
    loadingTemplate() {
      if (this.loading) {
        const e = rn[this.size], i = this.disabled ? ci.disabled : ci[this.variant];
        return vA`<wui-loading-spinner color=${i} size=${e}></wui-loading-spinner>`;
      }
      return vA``;
    }
  };
  q.styles = [IA, AA, nn];
  te([
    c$3()
  ], q.prototype, "size", void 0);
  te([
    c$3({ type: Boolean })
  ], q.prototype, "disabled", void 0);
  te([
    c$3({ type: Boolean })
  ], q.prototype, "fullWidth", void 0);
  te([
    c$3({ type: Boolean })
  ], q.prototype, "loading", void 0);
  te([
    c$3()
  ], q.prototype, "variant", void 0);
  te([
    c$3({ type: Boolean })
  ], q.prototype, "hasIconLeft", void 0);
  te([
    c$3({ type: Boolean })
  ], q.prototype, "hasIconRight", void 0);
  te([
    c$3()
  ], q.prototype, "borderRadius", void 0);
  te([
    c$3()
  ], q.prototype, "textVariant", void 0);
  q = te([
    x$1("wui-button")
  ], q);
  const an = Lr`
  button {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
    border-radius: var(--wui-border-radius-3xs);
    background-color: transparent;
    color: var(--wui-color-accent-100);
  }

  button:disabled {
    background-color: transparent;
    color: var(--wui-color-gray-glass-015);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }
`;
  var yt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let $e$1 = class $e extends eo$1 {
    constructor() {
      super(...arguments), this.tabIdx = void 0, this.disabled = false, this.color = "inherit";
    }
    render() {
      return vA`
      <button ?disabled=${this.disabled} tabindex=${St$1(this.tabIdx)}>
        <slot name="iconLeft"></slot>
        <wui-text variant="small-600" color=${this.color}>
          <slot></slot>
        </wui-text>
        <slot name="iconRight"></slot>
      </button>
    `;
    }
  };
  $e$1.styles = [IA, AA, an];
  yt([
    c$3()
  ], $e$1.prototype, "tabIdx", void 0);
  yt([
    c$3({ type: Boolean })
  ], $e$1.prototype, "disabled", void 0);
  yt([
    c$3()
  ], $e$1.prototype, "color", void 0);
  $e$1 = yt([
    x$1("wui-link")
  ], $e$1);
  const sn = Lr`
  :host {
    display: block;
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  svg {
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  rect {
    fill: none;
    stroke: var(--wui-color-accent-100);
    stroke-width: 4px;
    stroke-linecap: round;
    animation: dash 1s linear infinite;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0px;
    }
  }
`;
  var Ci = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let rt = class extends eo$1 {
    constructor() {
      super(...arguments), this.radius = 36;
    }
    render() {
      return this.svgLoaderTemplate();
    }
    svgLoaderTemplate() {
      const e = this.radius > 50 ? 50 : this.radius, n = 36 - e, o = 116 + n, t = 245 + n, a = 360 + n * 1.75;
      return vA`
      <svg viewBox="0 0 110 110" width="110" height="110">
        <rect
          x="2"
          y="2"
          width="106"
          height="106"
          rx=${e}
          stroke-dasharray="${o} ${t}"
          stroke-dashoffset=${a}
        />
      </svg>
    `;
    }
  };
  rt.styles = [IA, sn];
  Ci([
    c$3({ type: Number })
  ], rt.prototype, "radius", void 0);
  rt = Ci([
    x$1("wui-loading-thumbnail")
  ], rt);
  const ln = Lr`
  button {
    border: none;
    border-radius: var(--wui-border-radius-3xl);
  }

  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='gray'] {
    background-color: transparent;
    color: var(--wui-color-fg-200);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='shade'] {
    background-color: transparent;
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-size='sm'] {
    height: 32px;
    padding: 0 var(--wui-spacing-s);
  }

  button[data-size='md'] {
    height: 40px;
    padding: 0 var(--wui-spacing-l);
  }

  button[data-size='sm'] > wui-image {
    width: 16px;
    height: 16px;
  }

  button[data-size='md'] > wui-image {
    width: 24px;
    height: 24px;
  }

  button[data-size='sm'] > wui-icon {
    width: 12px;
    height: 12px;
  }

  button[data-size='md'] > wui-icon {
    width: 14px;
    height: 14px;
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
    overflow: hidden;
  }

  button.disabled > wui-icon,
  button.disabled > wui-image {
    filter: grayscale(1);
  }

  button[data-variant='main'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-accent-090);
  }

  button[data-variant='shade'] > wui-image,
  button[data-variant='gray'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:focus-visible {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='shade']:focus-visible,
    button[data-variant='gray']:focus-visible,
    button[data-variant='shade']:hover,
    button[data-variant='gray']:hover {
      background-color: var(--wui-color-gray-glass-002);
    }

    button[data-variant='gray']:active,
    button[data-variant='shade']:active {
      background-color: var(--wui-color-gray-glass-005);
    }
  }

  button.disabled {
    color: var(--wui-color-gray-glass-020);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    pointer-events: none;
  }
`;
  var Ce = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ce = class extends eo$1 {
    constructor() {
      super(...arguments), this.variant = "accent", this.imageSrc = "", this.disabled = false, this.icon = "externalLink", this.size = "md", this.text = "";
    }
    render() {
      const e = this.size === "sm" ? "small-600" : "paragraph-600";
      return vA`
      <button
        class=${this.disabled ? "disabled" : ""}
        data-variant=${this.variant}
        data-size=${this.size}
      >
        ${this.imageSrc ? vA`<wui-image src=${this.imageSrc}></wui-image>` : null}
        <wui-text variant=${e} color="inherit"> ${this.text} </wui-text>
        <wui-icon name=${this.icon} color="inherit" size="inherit"></wui-icon>
      </button>
    `;
    }
  };
  ce.styles = [IA, AA, ln];
  Ce([
    c$3()
  ], ce.prototype, "variant", void 0);
  Ce([
    c$3()
  ], ce.prototype, "imageSrc", void 0);
  Ce([
    c$3({ type: Boolean })
  ], ce.prototype, "disabled", void 0);
  Ce([
    c$3()
  ], ce.prototype, "icon", void 0);
  Ce([
    c$3()
  ], ce.prototype, "size", void 0);
  Ce([
    c$3()
  ], ce.prototype, "text", void 0);
  ce = Ce([
    x$1("wui-chip-button")
  ], ce);
  const cn = Lr`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }
`;
  var xt = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Re$1 = class Re extends eo$1 {
    constructor() {
      super(...arguments), this.disabled = false, this.label = "", this.buttonLabel = "";
    }
    render() {
      return vA`
      <wui-flex
        justifyContent="space-between"
        alignItems="center"
        .padding=${["1xs", "2l", "1xs", "2l"]}
      >
        <wui-text variant="paragraph-500" color="fg-200">${this.label}</wui-text>
        <wui-chip-button size="sm" variant="shade" text=${this.buttonLabel} icon="chevronRight">
        </wui-chip-button>
      </wui-flex>
    `;
    }
  };
  Re$1.styles = [IA, AA, cn];
  xt([
    c$3({ type: Boolean })
  ], Re$1.prototype, "disabled", void 0);
  xt([
    c$3()
  ], Re$1.prototype, "label", void 0);
  xt([
    c$3()
  ], Re$1.prototype, "buttonLabel", void 0);
  Re$1 = xt([
    x$1("wui-cta-button")
  ], Re$1);
  const un = Lr`
  :host {
    display: block;
    padding: 0 var(--wui-spacing-xl) var(--wui-spacing-xl);
  }
`;
  var $i = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let at = class extends eo$1 {
    constructor() {
      super(...arguments), this.wallet = void 0;
    }
    render() {
      if (!this.wallet)
        return this.style.display = "none", null;
      const { name: e, app_store: i, play_store: n, chrome_store: o, homepage: t } = this.wallet, a = X$3.isMobile(), s = X$3.isIos(), l = X$3.isAndroid(), h = [i, n, t, o].filter(Boolean).length > 1, d = w.getTruncateString({
        string: e,
        charsStart: 12,
        charsEnd: 0,
        truncate: "end"
      });
      return h && !a ? vA`
        <wui-cta-button
          label=${`Don't have ${d}?`}
          buttonLabel="Get"
          @click=${() => re$1.push("Downloads", { wallet: this.wallet })}
        ></wui-cta-button>
      ` : !h && t ? vA`
        <wui-cta-button
          label=${`Don't have ${d}?`}
          buttonLabel="Get"
          @click=${this.onHomePage.bind(this)}
        ></wui-cta-button>
      ` : i && s ? vA`
        <wui-cta-button
          label=${`Don't have ${d}?`}
          buttonLabel="Get"
          @click=${this.onAppStore.bind(this)}
        ></wui-cta-button>
      ` : n && l ? vA`
        <wui-cta-button
          label=${`Don't have ${d}?`}
          buttonLabel="Get"
          @click=${this.onPlayStore.bind(this)}
        ></wui-cta-button>
      ` : (this.style.display = "none", null);
    }
    onAppStore() {
      var e;
      (e = this.wallet) != null && e.app_store && X$3.openHref(this.wallet.app_store, "_blank");
    }
    onPlayStore() {
      var e;
      (e = this.wallet) != null && e.play_store && X$3.openHref(this.wallet.play_store, "_blank");
    }
    onHomePage() {
      var e;
      (e = this.wallet) != null && e.homepage && X$3.openHref(this.wallet.homepage, "_blank");
    }
  };
  at.styles = [un];
  $i([
    c$3({ type: Object })
  ], at.prototype, "wallet", void 0);
  at = $i([
    x$1("w3m-mobile-download-links")
  ], at);
  const dn = Lr`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }

  wui-loading-thumbnail {
    position: absolute;
  }

  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition-property: opacity, transform;
    transition-duration: var(--wui-duration-lg);
    transition-timing-function: var(--wui-ease-out-power-2);
    will-change: opacity, transform;
  }

  wui-text[align='center'] {
    width: 100%;
    padding: 0px var(--wui-spacing-l);
  }

  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }

  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  [data-retry='false'] wui-link {
    display: none;
  }

  [data-retry='true'] wui-link {
    display: block;
    opacity: 1;
  }
`;
  var ie = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  class z extends eo$1 {
    constructor() {
      var e, i, n, o, t;
      super(), this.wallet = (e = re$1.state.data) == null ? void 0 : e.wallet, this.connector = (i = re$1.state.data) == null ? void 0 : i.connector, this.timeout = void 0, this.secondaryBtnIcon = "refresh", this.onConnect = void 0, this.onRender = void 0, this.onAutoConnect = void 0, this.isWalletConnect = true, this.unsubscribe = [], this.imageSrc = Vu.getWalletImage(this.wallet) ?? Vu.getConnectorImage(this.connector), this.name = ((n = this.wallet) == null ? void 0 : n.name) ?? ((o = this.connector) == null ? void 0 : o.name) ?? "Wallet", this.isRetrying = false, this.uri = Y$1.state.wcUri, this.error = Y$1.state.wcError, this.ready = false, this.showRetry = false, this.secondaryBtnLabel = "Try again", this.secondaryLabel = "Accept connection request in the wallet", this.isLoading = false, this.isMobile = false, this.onRetry = void 0, this.unsubscribe.push(Y$1.subscribeKey("wcUri", (a) => {
        var s;
        this.uri = a, this.isRetrying && this.onRetry && (this.isRetrying = false, (s = this.onConnect) == null || s.call(this));
      }), Y$1.subscribeKey("wcError", (a) => this.error = a)), (X$3.isTelegram() || X$3.isSafari()) && X$3.isIos() && Y$1.state.wcUri && ((t = this.onConnect) == null || t.call(this));
    }
    firstUpdated() {
      var e;
      (e = this.onAutoConnect) == null || e.call(this), this.showRetry = !this.onAutoConnect;
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e()), Y$1.setWcError(false), clearTimeout(this.timeout);
    }
    render() {
      var n;
      (n = this.onRender) == null || n.call(this), this.onShowRetry();
      const e = this.error ? "Connection can be declined if a previous request is still active" : this.secondaryLabel;
      let i = `Continue in ${this.name}`;
      return this.error && (i = "Connection declined"), vA`
      <wui-flex
        data-error=${St$1(this.error)}
        data-retry=${this.showRetry}
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-wallet-image size="lg" imageSrc=${St$1(this.imageSrc)}></wui-wallet-image>

          ${this.error ? null : this.loaderTemplate()}

          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            border
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>

        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text variant="paragraph-500" color=${this.error ? "error-100" : "fg-100"}>
            ${i}
          </wui-text>
          <wui-text align="center" variant="small-500" color="fg-200">${e}</wui-text>
        </wui-flex>

        ${this.secondaryBtnLabel ? vA`
              <wui-button
                variant="accent"
                size="md"
                ?disabled=${this.isRetrying || this.isLoading}
                @click=${this.onTryAgain.bind(this)}
                data-testid="w3m-connecting-widget-secondary-button"
              >
                <wui-icon color="inherit" slot="iconLeft" name=${this.secondaryBtnIcon}></wui-icon>
                ${this.secondaryBtnLabel}
              </wui-button>
            ` : null}
      </wui-flex>

      ${this.isWalletConnect ? vA`
            <wui-flex .padding=${["0", "xl", "xl", "xl"]} justifyContent="center">
              <wui-link @click=${this.onCopyUri} color="fg-200" data-testid="wui-link-copy">
                <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
                Copy link
              </wui-link>
            </wui-flex>
          ` : null}

      <w3m-mobile-download-links .wallet=${this.wallet}></w3m-mobile-download-links>
    `;
    }
    onShowRetry() {
      var e;
      if (this.error && !this.showRetry) {
        this.showRetry = true;
        const i = (e = this.shadowRoot) == null ? void 0 : e.querySelector("wui-button");
        i == null || i.animate([{ opacity: 0 }, { opacity: 1 }], {
          fill: "forwards",
          easing: "ease"
        });
      }
    }
    onTryAgain() {
      var e, i;
      Y$1.setWcError(false), this.onRetry ? (this.isRetrying = true, (e = this.onRetry) == null || e.call(this)) : (i = this.onConnect) == null || i.call(this);
    }
    loaderTemplate() {
      const e = wt$2.state.themeVariables["--w3m-border-radius-master"], i = e ? parseInt(e.replace("px", ""), 10) : 4;
      return vA`<wui-loading-thumbnail radius=${i * 9}></wui-loading-thumbnail>`;
    }
    onCopyUri() {
      try {
        this.uri && (X$3.copyToClopboard(this.uri), Bt$2.showSuccess("Link copied"));
      } catch {
        Bt$2.showError("Failed to copy");
      }
    }
  }
  z.styles = dn;
  ie([
    bt$1()
  ], z.prototype, "isRetrying", void 0);
  ie([
    bt$1()
  ], z.prototype, "uri", void 0);
  ie([
    bt$1()
  ], z.prototype, "error", void 0);
  ie([
    bt$1()
  ], z.prototype, "ready", void 0);
  ie([
    bt$1()
  ], z.prototype, "showRetry", void 0);
  ie([
    bt$1()
  ], z.prototype, "secondaryBtnLabel", void 0);
  ie([
    bt$1()
  ], z.prototype, "secondaryLabel", void 0);
  ie([
    bt$1()
  ], z.prototype, "isLoading", void 0);
  ie([
    c$3({ type: Boolean })
  ], z.prototype, "isMobile", void 0);
  ie([
    c$3()
  ], z.prototype, "onRetry", void 0);
  var hn = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ui = class extends z {
    constructor() {
      if (super(), !this.wallet)
        throw new Error("w3m-connecting-wc-browser: No wallet provided");
      this.onConnect = this.onConnectProxy.bind(this), this.onAutoConnect = this.onConnectProxy.bind(this), Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: this.wallet.name, platform: "browser" }
      });
    }
    async onConnectProxy() {
      var e;
      try {
        this.error = !1;
        const { connectors: i } = F$2.state, n = i.find((o) => {
          var t, a, s;
          return o.type === "ANNOUNCED" && ((t = o.info) == null ? void 0 : t.rdns) === ((a = this.wallet) == null ? void 0 : a.rdns) || o.type === "INJECTED" || o.name === ((s = this.wallet) == null ? void 0 : s.name);
        });
        if (n)
          await Y$1.connectExternal(n, n.chain);
        else
          throw new Error("w3m-connecting-wc-browser: No connector found");
        ze$3.close(), Pe$3.sendEvent({
          type: "track",
          event: "CONNECT_SUCCESS",
          properties: { method: "browser", name: ((e = this.wallet) == null ? void 0 : e.name) || "Unknown" }
        });
      } catch (i) {
        Pe$3.sendEvent({
          type: "track",
          event: "CONNECT_ERROR",
          properties: { message: (i == null ? void 0 : i.message) ?? "Unknown" }
        }), this.error = true;
      }
    }
  };
  ui = hn([
    x$1("w3m-connecting-wc-browser")
  ], ui);
  var pn = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let di = class extends z {
    constructor() {
      if (super(), !this.wallet)
        throw new Error("w3m-connecting-wc-desktop: No wallet provided");
      this.onConnect = this.onConnectProxy.bind(this), this.onRender = this.onRenderProxy.bind(this), Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: this.wallet.name, platform: "desktop" }
      });
    }
    onRenderProxy() {
      var e;
      !this.ready && this.uri && (this.ready = true, (e = this.onConnect) == null || e.call(this));
    }
    onConnectProxy() {
      var e;
      if ((e = this.wallet) != null && e.desktop_link && this.uri)
        try {
          this.error = !1;
          const { desktop_link: i, name: n } = this.wallet, { redirect: o, href: t } = X$3.formatNativeUrl(i, this.uri);
          Y$1.setWcLinking({ name: n, href: t }), Y$1.setRecentWallet(this.wallet), X$3.openHref(o, "_blank");
        } catch {
          this.error = true;
        }
    }
  };
  di = pn([
    x$1("w3m-connecting-wc-desktop")
  ], di);
  var Le$1 = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let me = class extends z {
    constructor() {
      if (super(), this.btnLabelTimeout = void 0, this.redirectDeeplink = void 0, this.redirectUniversalLink = void 0, this.target = void 0, this.preferUniversalLinks = T$2.state.experimental_preferUniversalLinks, this.isLoading = true, this.onConnect = () => {
        var e;
        if ((e = this.wallet) != null && e.mobile_link && this.uri)
          try {
            this.error = !1;
            const { mobile_link: i, link_mode: n, name: o } = this.wallet, { redirect: t, redirectUniversalLink: a, href: s } = X$3.formatNativeUrl(i, this.uri, n);
            this.redirectDeeplink = t, this.redirectUniversalLink = a, this.target = X$3.isIframe() ? "_top" : "_self", Y$1.setWcLinking({ name: o, href: s }), Y$1.setRecentWallet(this.wallet), this.preferUniversalLinks && this.redirectUniversalLink ? X$3.openHref(this.redirectUniversalLink, this.target) : X$3.openHref(this.redirectDeeplink, this.target);
          } catch (i) {
            Pe$3.sendEvent({
              type: "track",
              event: "CONNECT_PROXY_ERROR",
              properties: {
                message: i instanceof Error ? i.message : "Error parsing the deeplink",
                uri: this.uri,
                mobile_link: this.wallet.mobile_link,
                name: this.wallet.name
              }
            }), this.error = true;
          }
      }, !this.wallet)
        throw new Error("w3m-connecting-wc-mobile: No wallet provided");
      this.secondaryBtnLabel = "Open", this.secondaryLabel = Ee$3.CONNECT_LABELS.MOBILE, this.secondaryBtnIcon = "externalLink", this.onHandleURI(), this.unsubscribe.push(Y$1.subscribeKey("wcUri", () => {
        this.onHandleURI();
      })), Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: this.wallet.name, platform: "mobile" }
      });
    }
    disconnectedCallback() {
      super.disconnectedCallback(), clearTimeout(this.btnLabelTimeout);
    }
    onHandleURI() {
      var e;
      this.isLoading = !this.uri, !this.ready && this.uri && (this.ready = true, (e = this.onConnect) == null || e.call(this));
    }
    onTryAgain() {
      var e;
      Y$1.setWcError(false), (e = this.onConnect) == null || e.call(this);
    }
  };
  Le$1([
    bt$1()
  ], me.prototype, "redirectDeeplink", void 0);
  Le$1([
    bt$1()
  ], me.prototype, "redirectUniversalLink", void 0);
  Le$1([
    bt$1()
  ], me.prototype, "target", void 0);
  Le$1([
    bt$1()
  ], me.prototype, "preferUniversalLinks", void 0);
  Le$1([
    bt$1()
  ], me.prototype, "isLoading", void 0);
  me = Le$1([
    x$1("w3m-connecting-wc-mobile")
  ], me);
  var Ve = {}, fn = function() {
    return typeof Promise == "function" && Promise.prototype && Promise.prototype.then;
  }, Ri = {}, V$1 = {};
  let Zt;
  const gn = [
    0,
    // Not used
    26,
    44,
    70,
    100,
    134,
    172,
    196,
    242,
    292,
    346,
    404,
    466,
    532,
    581,
    655,
    733,
    815,
    901,
    991,
    1085,
    1156,
    1258,
    1364,
    1474,
    1588,
    1706,
    1828,
    1921,
    2051,
    2185,
    2323,
    2465,
    2611,
    2761,
    2876,
    3034,
    3196,
    3362,
    3532,
    3706
  ];
  V$1.getSymbolSize = function(e) {
    if (!e) throw new Error('"version" cannot be null or undefined');
    if (e < 1 || e > 40) throw new Error('"version" should be in range from 1 to 40');
    return e * 4 + 17;
  };
  V$1.getSymbolTotalCodewords = function(e) {
    return gn[e];
  };
  V$1.getBCHDigit = function(r) {
    let e = 0;
    for (; r !== 0; )
      e++, r >>>= 1;
    return e;
  };
  V$1.setToSJISFunction = function(e) {
    if (typeof e != "function")
      throw new Error('"toSJISFunc" is not a valid function.');
    Zt = e;
  };
  V$1.isKanjiModeEnabled = function() {
    return typeof Zt < "u";
  };
  V$1.toSJIS = function(e) {
    return Zt(e);
  };
  var Ct = {};
  (function(r) {
    r.L = { bit: 1 }, r.M = { bit: 0 }, r.Q = { bit: 3 }, r.H = { bit: 2 };
    function e(i) {
      if (typeof i != "string")
        throw new Error("Param is not a string");
      switch (i.toLowerCase()) {
        case "l":
        case "low":
          return r.L;
        case "m":
        case "medium":
          return r.M;
        case "q":
        case "quartile":
          return r.Q;
        case "h":
        case "high":
          return r.H;
        default:
          throw new Error("Unknown EC Level: " + i);
      }
    }
    r.isValid = function(n) {
      return n && typeof n.bit < "u" && n.bit >= 0 && n.bit < 4;
    }, r.from = function(n, o) {
      if (r.isValid(n))
        return n;
      try {
        return e(n);
      } catch {
        return o;
      }
    };
  })(Ct);
  function _i() {
    this.buffer = [], this.length = 0;
  }
  _i.prototype = {
    get: function(r) {
      const e = Math.floor(r / 8);
      return (this.buffer[e] >>> 7 - r % 8 & 1) === 1;
    },
    put: function(r, e) {
      for (let i = 0; i < e; i++)
        this.putBit((r >>> e - i - 1 & 1) === 1);
    },
    getLengthInBits: function() {
      return this.length;
    },
    putBit: function(r) {
      const e = Math.floor(this.length / 8);
      this.buffer.length <= e && this.buffer.push(0), r && (this.buffer[e] |= 128 >>> this.length % 8), this.length++;
    }
  };
  var wn = _i;
  function qe(r) {
    if (!r || r < 1)
      throw new Error("BitMatrix size must be defined and greater than 0");
    this.size = r, this.data = new Uint8Array(r * r), this.reservedBit = new Uint8Array(r * r);
  }
  qe.prototype.set = function(r, e, i, n) {
    const o = r * this.size + e;
    this.data[o] = i, n && (this.reservedBit[o] = true);
  };
  qe.prototype.get = function(r, e) {
    return this.data[r * this.size + e];
  };
  qe.prototype.xor = function(r, e, i) {
    this.data[r * this.size + e] ^= i;
  };
  qe.prototype.isReserved = function(r, e) {
    return this.reservedBit[r * this.size + e];
  };
  var bn = qe, Ii = {};
  (function(r) {
    const e = V$1.getSymbolSize;
    r.getRowColCoords = function(n) {
      if (n === 1) return [];
      const o = Math.floor(n / 7) + 2, t = e(n), a = t === 145 ? 26 : Math.ceil((t - 13) / (2 * o - 2)) * 2, s = [t - 7];
      for (let l = 1; l < o - 1; l++)
        s[l] = s[l - 1] - a;
      return s.push(6), s.reverse();
    }, r.getPositions = function(n) {
      const o = [], t = r.getRowColCoords(n), a = t.length;
      for (let s = 0; s < a; s++)
        for (let l = 0; l < a; l++)
          s === 0 && l === 0 || // top-left
          s === 0 && l === a - 1 || // bottom-left
          s === a - 1 && l === 0 || o.push([t[s], t[l]]);
      return o;
    };
  })(Ii);
  var Ei = {};
  const mn = V$1.getSymbolSize, hi = 7;
  Ei.getPositions = function(e) {
    const i = mn(e);
    return [
      // top-left
      [0, 0],
      // top-right
      [i - hi, 0],
      // bottom-left
      [0, i - hi]
    ];
  };
  var Wi = {};
  (function(r) {
    r.Patterns = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7
    };
    const e = {
      N1: 3,
      N2: 3,
      N3: 40,
      N4: 10
    };
    r.isValid = function(o) {
      return o != null && o !== "" && !isNaN(o) && o >= 0 && o <= 7;
    }, r.from = function(o) {
      return r.isValid(o) ? parseInt(o, 10) : void 0;
    }, r.getPenaltyN1 = function(o) {
      const t = o.size;
      let a = 0, s = 0, l = 0, h = null, d = null;
      for (let _ = 0; _ < t; _++) {
        s = l = 0, h = d = null;
        for (let x = 0; x < t; x++) {
          let m = o.get(_, x);
          m === h ? s++ : (s >= 5 && (a += e.N1 + (s - 5)), h = m, s = 1), m = o.get(x, _), m === d ? l++ : (l >= 5 && (a += e.N1 + (l - 5)), d = m, l = 1);
        }
        s >= 5 && (a += e.N1 + (s - 5)), l >= 5 && (a += e.N1 + (l - 5));
      }
      return a;
    }, r.getPenaltyN2 = function(o) {
      const t = o.size;
      let a = 0;
      for (let s = 0; s < t - 1; s++)
        for (let l = 0; l < t - 1; l++) {
          const h = o.get(s, l) + o.get(s, l + 1) + o.get(s + 1, l) + o.get(s + 1, l + 1);
          (h === 4 || h === 0) && a++;
        }
      return a * e.N2;
    }, r.getPenaltyN3 = function(o) {
      const t = o.size;
      let a = 0, s = 0, l = 0;
      for (let h = 0; h < t; h++) {
        s = l = 0;
        for (let d = 0; d < t; d++)
          s = s << 1 & 2047 | o.get(h, d), d >= 10 && (s === 1488 || s === 93) && a++, l = l << 1 & 2047 | o.get(d, h), d >= 10 && (l === 1488 || l === 93) && a++;
      }
      return a * e.N3;
    }, r.getPenaltyN4 = function(o) {
      let t = 0;
      const a = o.data.length;
      for (let l = 0; l < a; l++) t += o.data[l];
      return Math.abs(Math.ceil(t * 100 / a / 5) - 10) * e.N4;
    };
    function i(n, o, t) {
      switch (n) {
        case r.Patterns.PATTERN000:
          return (o + t) % 2 === 0;
        case r.Patterns.PATTERN001:
          return o % 2 === 0;
        case r.Patterns.PATTERN010:
          return t % 3 === 0;
        case r.Patterns.PATTERN011:
          return (o + t) % 3 === 0;
        case r.Patterns.PATTERN100:
          return (Math.floor(o / 2) + Math.floor(t / 3)) % 2 === 0;
        case r.Patterns.PATTERN101:
          return o * t % 2 + o * t % 3 === 0;
        case r.Patterns.PATTERN110:
          return (o * t % 2 + o * t % 3) % 2 === 0;
        case r.Patterns.PATTERN111:
          return (o * t % 3 + (o + t) % 2) % 2 === 0;
        default:
          throw new Error("bad maskPattern:" + n);
      }
    }
    r.applyMask = function(o, t) {
      const a = t.size;
      for (let s = 0; s < a; s++)
        for (let l = 0; l < a; l++)
          t.isReserved(l, s) || t.xor(l, s, i(o, l, s));
    }, r.getBestMask = function(o, t) {
      const a = Object.keys(r.Patterns).length;
      let s = 0, l = 1 / 0;
      for (let h = 0; h < a; h++) {
        t(h), r.applyMask(h, o);
        const d = r.getPenaltyN1(o) + r.getPenaltyN2(o) + r.getPenaltyN3(o) + r.getPenaltyN4(o);
        r.applyMask(h, o), d < l && (l = d, s = h);
      }
      return s;
    };
  })(Wi);
  var $t = {};
  const he = Ct, Ye = [
    // L  M  Q  H
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    1,
    2,
    2,
    4,
    1,
    2,
    4,
    4,
    2,
    4,
    4,
    4,
    2,
    4,
    6,
    5,
    2,
    4,
    6,
    6,
    2,
    5,
    8,
    8,
    4,
    5,
    8,
    8,
    4,
    5,
    8,
    11,
    4,
    8,
    10,
    11,
    4,
    9,
    12,
    16,
    4,
    9,
    16,
    16,
    6,
    10,
    12,
    18,
    6,
    10,
    17,
    16,
    6,
    11,
    16,
    19,
    6,
    13,
    18,
    21,
    7,
    14,
    21,
    25,
    8,
    16,
    20,
    25,
    8,
    17,
    23,
    25,
    9,
    17,
    23,
    34,
    9,
    18,
    25,
    30,
    10,
    20,
    27,
    32,
    12,
    21,
    29,
    35,
    12,
    23,
    34,
    37,
    12,
    25,
    34,
    40,
    13,
    26,
    35,
    42,
    14,
    28,
    38,
    45,
    15,
    29,
    40,
    48,
    16,
    31,
    43,
    51,
    17,
    33,
    45,
    54,
    18,
    35,
    48,
    57,
    19,
    37,
    51,
    60,
    19,
    38,
    53,
    63,
    20,
    40,
    56,
    66,
    21,
    43,
    59,
    70,
    22,
    45,
    62,
    74,
    24,
    47,
    65,
    77,
    25,
    49,
    68,
    81
  ], Je = [
    // L  M  Q  H
    7,
    10,
    13,
    17,
    10,
    16,
    22,
    28,
    15,
    26,
    36,
    44,
    20,
    36,
    52,
    64,
    26,
    48,
    72,
    88,
    36,
    64,
    96,
    112,
    40,
    72,
    108,
    130,
    48,
    88,
    132,
    156,
    60,
    110,
    160,
    192,
    72,
    130,
    192,
    224,
    80,
    150,
    224,
    264,
    96,
    176,
    260,
    308,
    104,
    198,
    288,
    352,
    120,
    216,
    320,
    384,
    132,
    240,
    360,
    432,
    144,
    280,
    408,
    480,
    168,
    308,
    448,
    532,
    180,
    338,
    504,
    588,
    196,
    364,
    546,
    650,
    224,
    416,
    600,
    700,
    224,
    442,
    644,
    750,
    252,
    476,
    690,
    816,
    270,
    504,
    750,
    900,
    300,
    560,
    810,
    960,
    312,
    588,
    870,
    1050,
    336,
    644,
    952,
    1110,
    360,
    700,
    1020,
    1200,
    390,
    728,
    1050,
    1260,
    420,
    784,
    1140,
    1350,
    450,
    812,
    1200,
    1440,
    480,
    868,
    1290,
    1530,
    510,
    924,
    1350,
    1620,
    540,
    980,
    1440,
    1710,
    570,
    1036,
    1530,
    1800,
    570,
    1064,
    1590,
    1890,
    600,
    1120,
    1680,
    1980,
    630,
    1204,
    1770,
    2100,
    660,
    1260,
    1860,
    2220,
    720,
    1316,
    1950,
    2310,
    750,
    1372,
    2040,
    2430
  ];
  $t.getBlocksCount = function(e, i) {
    switch (i) {
      case he.L:
        return Ye[(e - 1) * 4 + 0];
      case he.M:
        return Ye[(e - 1) * 4 + 1];
      case he.Q:
        return Ye[(e - 1) * 4 + 2];
      case he.H:
        return Ye[(e - 1) * 4 + 3];
      default:
        return;
    }
  };
  $t.getTotalCodewordsCount = function(e, i) {
    switch (i) {
      case he.L:
        return Je[(e - 1) * 4 + 0];
      case he.M:
        return Je[(e - 1) * 4 + 1];
      case he.Q:
        return Je[(e - 1) * 4 + 2];
      case he.H:
        return Je[(e - 1) * 4 + 3];
      default:
        return;
    }
  };
  var Si = {}, Rt = {};
  const je$1 = new Uint8Array(512), st = new Uint8Array(256);
  (function() {
    let e = 1;
    for (let i = 0; i < 255; i++)
      je$1[i] = e, st[e] = i, e <<= 1, e & 256 && (e ^= 285);
    for (let i = 255; i < 512; i++)
      je$1[i] = je$1[i - 255];
  })();
  Rt.log = function(e) {
    if (e < 1) throw new Error("log(" + e + ")");
    return st[e];
  };
  Rt.exp = function(e) {
    return je$1[e];
  };
  Rt.mul = function(e, i) {
    return e === 0 || i === 0 ? 0 : je$1[st[e] + st[i]];
  };
  (function(r) {
    const e = Rt;
    r.mul = function(n, o) {
      const t = new Uint8Array(n.length + o.length - 1);
      for (let a = 0; a < n.length; a++)
        for (let s = 0; s < o.length; s++)
          t[a + s] ^= e.mul(n[a], o[s]);
      return t;
    }, r.mod = function(n, o) {
      let t = new Uint8Array(n);
      for (; t.length - o.length >= 0; ) {
        const a = t[0];
        for (let l = 0; l < o.length; l++)
          t[l] ^= e.mul(o[l], a);
        let s = 0;
        for (; s < t.length && t[s] === 0; ) s++;
        t = t.slice(s);
      }
      return t;
    }, r.generateECPolynomial = function(n) {
      let o = new Uint8Array([1]);
      for (let t = 0; t < n; t++)
        o = r.mul(o, new Uint8Array([1, e.exp(t)]));
      return o;
    };
  })(Si);
  const Ti = Si;
  function ei(r) {
    this.genPoly = void 0, this.degree = r, this.degree && this.initialize(this.degree);
  }
  ei.prototype.initialize = function(e) {
    this.degree = e, this.genPoly = Ti.generateECPolynomial(this.degree);
  };
  ei.prototype.encode = function(e) {
    if (!this.genPoly)
      throw new Error("Encoder not initialized");
    const i = new Uint8Array(e.length + this.degree);
    i.set(e);
    const n = Ti.mod(i, this.genPoly), o = this.degree - n.length;
    if (o > 0) {
      const t = new Uint8Array(this.degree);
      return t.set(n, o), t;
    }
    return n;
  };
  var vn = ei, Pi = {}, ge = {}, ti = {};
  ti.isValid = function(e) {
    return !isNaN(e) && e >= 1 && e <= 40;
  };
  var ne$1 = {};
  const Li = "[0-9]+", yn = "[A-Z $%*+\\-./:]+";
  let Ue$1 = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
  Ue$1 = Ue$1.replace(/u/g, "\\u");
  const xn = "(?:(?![A-Z0-9 $%*+\\-./:]|" + Ue$1 + `)(?:.|[\r
]))+`;
  ne$1.KANJI = new RegExp(Ue$1, "g");
  ne$1.BYTE_KANJI = new RegExp("[^A-Z0-9 $%*+\\-./:]+", "g");
  ne$1.BYTE = new RegExp(xn, "g");
  ne$1.NUMERIC = new RegExp(Li, "g");
  ne$1.ALPHANUMERIC = new RegExp(yn, "g");
  const Cn = new RegExp("^" + Ue$1 + "$"), $n = new RegExp("^" + Li + "$"), Rn = new RegExp("^[A-Z0-9 $%*+\\-./:]+$");
  ne$1.testKanji = function(e) {
    return Cn.test(e);
  };
  ne$1.testNumeric = function(e) {
    return $n.test(e);
  };
  ne$1.testAlphanumeric = function(e) {
    return Rn.test(e);
  };
  (function(r) {
    const e = ti, i = ne$1;
    r.NUMERIC = {
      id: "Numeric",
      bit: 1,
      ccBits: [10, 12, 14]
    }, r.ALPHANUMERIC = {
      id: "Alphanumeric",
      bit: 2,
      ccBits: [9, 11, 13]
    }, r.BYTE = {
      id: "Byte",
      bit: 4,
      ccBits: [8, 16, 16]
    }, r.KANJI = {
      id: "Kanji",
      bit: 8,
      ccBits: [8, 10, 12]
    }, r.MIXED = {
      bit: -1
    }, r.getCharCountIndicator = function(t, a) {
      if (!t.ccBits) throw new Error("Invalid mode: " + t);
      if (!e.isValid(a))
        throw new Error("Invalid version: " + a);
      return a >= 1 && a < 10 ? t.ccBits[0] : a < 27 ? t.ccBits[1] : t.ccBits[2];
    }, r.getBestModeForData = function(t) {
      return i.testNumeric(t) ? r.NUMERIC : i.testAlphanumeric(t) ? r.ALPHANUMERIC : i.testKanji(t) ? r.KANJI : r.BYTE;
    }, r.toString = function(t) {
      if (t && t.id) return t.id;
      throw new Error("Invalid mode");
    }, r.isValid = function(t) {
      return t && t.bit && t.ccBits;
    };
    function n(o) {
      if (typeof o != "string")
        throw new Error("Param is not a string");
      switch (o.toLowerCase()) {
        case "numeric":
          return r.NUMERIC;
        case "alphanumeric":
          return r.ALPHANUMERIC;
        case "kanji":
          return r.KANJI;
        case "byte":
          return r.BYTE;
        default:
          throw new Error("Unknown mode: " + o);
      }
    }
    r.from = function(t, a) {
      if (r.isValid(t))
        return t;
      try {
        return n(t);
      } catch {
        return a;
      }
    };
  })(ge);
  (function(r) {
    const e = V$1, i = $t, n = Ct, o = ge, t = ti, a = 7973, s = e.getBCHDigit(a);
    function l(x, m, $) {
      for (let b = 1; b <= 40; b++)
        if (m <= r.getCapacity(b, $, x))
          return b;
    }
    function h(x, m) {
      return o.getCharCountIndicator(x, m) + 4;
    }
    function d(x, m) {
      let $ = 0;
      return x.forEach(function(b) {
        const R = h(b.mode, m);
        $ += R + b.getBitsLength();
      }), $;
    }
    function _(x, m) {
      for (let $ = 1; $ <= 40; $++)
        if (d(x, $) <= r.getCapacity($, m, o.MIXED))
          return $;
    }
    r.from = function(m, $) {
      return t.isValid(m) ? parseInt(m, 10) : $;
    }, r.getCapacity = function(m, $, b) {
      if (!t.isValid(m))
        throw new Error("Invalid QR Code version");
      typeof b > "u" && (b = o.BYTE);
      const R = e.getSymbolTotalCodewords(m), g = i.getTotalCodewordsCount(m, $), f = (R - g) * 8;
      if (b === o.MIXED) return f;
      const w = f - h(b, m);
      switch (b) {
        case o.NUMERIC:
          return Math.floor(w / 10 * 3);
        case o.ALPHANUMERIC:
          return Math.floor(w / 11 * 2);
        case o.KANJI:
          return Math.floor(w / 13);
        case o.BYTE:
        default:
          return Math.floor(w / 8);
      }
    }, r.getBestVersionForData = function(m, $) {
      let b;
      const R = n.from($, n.M);
      if (Array.isArray(m)) {
        if (m.length > 1)
          return _(m, R);
        if (m.length === 0)
          return 1;
        b = m[0];
      } else
        b = m;
      return l(b.mode, b.getLength(), R);
    }, r.getEncodedBits = function(m) {
      if (!t.isValid(m) || m < 7)
        throw new Error("Invalid QR Code version");
      let $ = m << 12;
      for (; e.getBCHDigit($) - s >= 0; )
        $ ^= a << e.getBCHDigit($) - s;
      return m << 12 | $;
    };
  })(Pi);
  var Bi = {};
  const zt = V$1, Oi = 1335, _n = 21522, pi = zt.getBCHDigit(Oi);
  Bi.getEncodedBits = function(e, i) {
    const n = e.bit << 3 | i;
    let o = n << 10;
    for (; zt.getBCHDigit(o) - pi >= 0; )
      o ^= Oi << zt.getBCHDigit(o) - pi;
    return (n << 10 | o) ^ _n;
  };
  var Ai = {};
  const In = ge;
  function _e$1(r) {
    this.mode = In.NUMERIC, this.data = r.toString();
  }
  _e$1.getBitsLength = function(e) {
    return 10 * Math.floor(e / 3) + (e % 3 ? e % 3 * 3 + 1 : 0);
  };
  _e$1.prototype.getLength = function() {
    return this.data.length;
  };
  _e$1.prototype.getBitsLength = function() {
    return _e$1.getBitsLength(this.data.length);
  };
  _e$1.prototype.write = function(e) {
    let i, n, o;
    for (i = 0; i + 3 <= this.data.length; i += 3)
      n = this.data.substr(i, 3), o = parseInt(n, 10), e.put(o, 10);
    const t = this.data.length - i;
    t > 0 && (n = this.data.substr(i), o = parseInt(n, 10), e.put(o, t * 3 + 1));
  };
  var En = _e$1;
  const Wn = ge, St = [
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    " ",
    "$",
    "%",
    "*",
    "+",
    "-",
    ".",
    "/",
    ":"
  ];
  function Ie$1(r) {
    this.mode = Wn.ALPHANUMERIC, this.data = r;
  }
  Ie$1.getBitsLength = function(e) {
    return 11 * Math.floor(e / 2) + 6 * (e % 2);
  };
  Ie$1.prototype.getLength = function() {
    return this.data.length;
  };
  Ie$1.prototype.getBitsLength = function() {
    return Ie$1.getBitsLength(this.data.length);
  };
  Ie$1.prototype.write = function(e) {
    let i;
    for (i = 0; i + 2 <= this.data.length; i += 2) {
      let n = St.indexOf(this.data[i]) * 45;
      n += St.indexOf(this.data[i + 1]), e.put(n, 11);
    }
    this.data.length % 2 && e.put(St.indexOf(this.data[i]), 6);
  };
  var Sn = Ie$1, Tn = function(e) {
    for (var i = [], n = e.length, o = 0; o < n; o++) {
      var t = e.charCodeAt(o);
      if (t >= 55296 && t <= 56319 && n > o + 1) {
        var a = e.charCodeAt(o + 1);
        a >= 56320 && a <= 57343 && (t = (t - 55296) * 1024 + a - 56320 + 65536, o += 1);
      }
      if (t < 128) {
        i.push(t);
        continue;
      }
      if (t < 2048) {
        i.push(t >> 6 | 192), i.push(t & 63 | 128);
        continue;
      }
      if (t < 55296 || t >= 57344 && t < 65536) {
        i.push(t >> 12 | 224), i.push(t >> 6 & 63 | 128), i.push(t & 63 | 128);
        continue;
      }
      if (t >= 65536 && t <= 1114111) {
        i.push(t >> 18 | 240), i.push(t >> 12 & 63 | 128), i.push(t >> 6 & 63 | 128), i.push(t & 63 | 128);
        continue;
      }
      i.push(239, 191, 189);
    }
    return new Uint8Array(i).buffer;
  };
  const Pn = Tn, Ln = ge;
  function Ee$1(r) {
    this.mode = Ln.BYTE, typeof r == "string" && (r = Pn(r)), this.data = new Uint8Array(r);
  }
  Ee$1.getBitsLength = function(e) {
    return e * 8;
  };
  Ee$1.prototype.getLength = function() {
    return this.data.length;
  };
  Ee$1.prototype.getBitsLength = function() {
    return Ee$1.getBitsLength(this.data.length);
  };
  Ee$1.prototype.write = function(r) {
    for (let e = 0, i = this.data.length; e < i; e++)
      r.put(this.data[e], 8);
  };
  var Bn = Ee$1;
  const On = ge, An = V$1;
  function We(r) {
    this.mode = On.KANJI, this.data = r;
  }
  We.getBitsLength = function(e) {
    return e * 13;
  };
  We.prototype.getLength = function() {
    return this.data.length;
  };
  We.prototype.getBitsLength = function() {
    return We.getBitsLength(this.data.length);
  };
  We.prototype.write = function(r) {
    let e;
    for (e = 0; e < this.data.length; e++) {
      let i = An.toSJIS(this.data[e]);
      if (i >= 33088 && i <= 40956)
        i -= 33088;
      else if (i >= 57408 && i <= 60351)
        i -= 49472;
      else
        throw new Error(
          "Invalid SJIS character: " + this.data[e] + `
Make sure your charset is UTF-8`
        );
      i = (i >>> 8 & 255) * 192 + (i & 255), r.put(i, 13);
    }
  };
  var jn = We, ji = { exports: {} };
  (function(r) {
    var e = {
      single_source_shortest_paths: function(i, n, o) {
        var t = {}, a = {};
        a[n] = 0;
        var s = e.PriorityQueue.make();
        s.push(n, 0);
        for (var l, h, d, _, x, m, $, b, R; !s.empty(); ) {
          l = s.pop(), h = l.value, _ = l.cost, x = i[h] || {};
          for (d in x)
            x.hasOwnProperty(d) && (m = x[d], $ = _ + m, b = a[d], R = typeof a[d] > "u", (R || b > $) && (a[d] = $, s.push(d, $), t[d] = h));
        }
        if (typeof o < "u" && typeof a[o] > "u") {
          var g = ["Could not find a path from ", n, " to ", o, "."].join("");
          throw new Error(g);
        }
        return t;
      },
      extract_shortest_path_from_predecessor_list: function(i, n) {
        for (var o = [], t = n; t; )
          o.push(t), i[t], t = i[t];
        return o.reverse(), o;
      },
      find_path: function(i, n, o) {
        var t = e.single_source_shortest_paths(i, n, o);
        return e.extract_shortest_path_from_predecessor_list(
          t,
          o
        );
      },
      /**
       * A very naive priority queue implementation.
       */
      PriorityQueue: {
        make: function(i) {
          var n = e.PriorityQueue, o = {}, t;
          i = i || {};
          for (t in n)
            n.hasOwnProperty(t) && (o[t] = n[t]);
          return o.queue = [], o.sorter = i.sorter || n.default_sorter, o;
        },
        default_sorter: function(i, n) {
          return i.cost - n.cost;
        },
        /**
         * Add a new item to the queue and ensure the highest priority element
         * is at the front of the queue.
         */
        push: function(i, n) {
          var o = { value: i, cost: n };
          this.queue.push(o), this.queue.sort(this.sorter);
        },
        /**
         * Return the highest priority element in the queue.
         */
        pop: function() {
          return this.queue.shift();
        },
        empty: function() {
          return this.queue.length === 0;
        }
      }
    };
    r.exports = e;
  })(ji);
  var kn = ji.exports;
  (function(r) {
    const e = ge, i = En, n = Sn, o = Bn, t = jn, a = ne$1, s = V$1, l = kn;
    function h(g) {
      return unescape(encodeURIComponent(g)).length;
    }
    function d(g, f, w) {
      const p = [];
      let W;
      for (; (W = g.exec(w)) !== null; )
        p.push({
          data: W[0],
          index: W.index,
          mode: f,
          length: W[0].length
        });
      return p;
    }
    function _(g) {
      const f = d(a.NUMERIC, e.NUMERIC, g), w = d(a.ALPHANUMERIC, e.ALPHANUMERIC, g);
      let p, W;
      return s.isKanjiModeEnabled() ? (p = d(a.BYTE, e.BYTE, g), W = d(a.KANJI, e.KANJI, g)) : (p = d(a.BYTE_KANJI, e.BYTE, g), W = []), f.concat(w, p, W).sort(function(j, G) {
        return j.index - G.index;
      }).map(function(j) {
        return {
          data: j.data,
          mode: j.mode,
          length: j.length
        };
      });
    }
    function x(g, f) {
      switch (f) {
        case e.NUMERIC:
          return i.getBitsLength(g);
        case e.ALPHANUMERIC:
          return n.getBitsLength(g);
        case e.KANJI:
          return t.getBitsLength(g);
        case e.BYTE:
          return o.getBitsLength(g);
      }
    }
    function m(g) {
      return g.reduce(function(f, w) {
        const p = f.length - 1 >= 0 ? f[f.length - 1] : null;
        return p && p.mode === w.mode ? (f[f.length - 1].data += w.data, f) : (f.push(w), f);
      }, []);
    }
    function $(g) {
      const f = [];
      for (let w = 0; w < g.length; w++) {
        const p = g[w];
        switch (p.mode) {
          case e.NUMERIC:
            f.push([
              p,
              { data: p.data, mode: e.ALPHANUMERIC, length: p.length },
              { data: p.data, mode: e.BYTE, length: p.length }
            ]);
            break;
          case e.ALPHANUMERIC:
            f.push([
              p,
              { data: p.data, mode: e.BYTE, length: p.length }
            ]);
            break;
          case e.KANJI:
            f.push([
              p,
              { data: p.data, mode: e.BYTE, length: h(p.data) }
            ]);
            break;
          case e.BYTE:
            f.push([
              { data: p.data, mode: e.BYTE, length: h(p.data) }
            ]);
        }
      }
      return f;
    }
    function b(g, f) {
      const w = {}, p = { start: {} };
      let W = ["start"];
      for (let B = 0; B < g.length; B++) {
        const j = g[B], G = [];
        for (let de = 0; de < j.length; de++) {
          const Z = j[de], Oe = "" + B + de;
          G.push(Oe), w[Oe] = { node: Z, lastCount: 0 }, p[Oe] = {};
          for (let Et = 0; Et < W.length; Et++) {
            const re = W[Et];
            w[re] && w[re].node.mode === Z.mode ? (p[re][Oe] = x(w[re].lastCount + Z.length, Z.mode) - x(w[re].lastCount, Z.mode), w[re].lastCount += Z.length) : (w[re] && (w[re].lastCount = Z.length), p[re][Oe] = x(Z.length, Z.mode) + 4 + e.getCharCountIndicator(Z.mode, f));
          }
        }
        W = G;
      }
      for (let B = 0; B < W.length; B++)
        p[W[B]].end = 0;
      return { map: p, table: w };
    }
    function R(g, f) {
      let w;
      const p = e.getBestModeForData(g);
      if (w = e.from(f, p), w !== e.BYTE && w.bit < p.bit)
        throw new Error('"' + g + '" cannot be encoded with mode ' + e.toString(w) + `.
 Suggested mode is: ` + e.toString(p));
      switch (w === e.KANJI && !s.isKanjiModeEnabled() && (w = e.BYTE), w) {
        case e.NUMERIC:
          return new i(g);
        case e.ALPHANUMERIC:
          return new n(g);
        case e.KANJI:
          return new t(g);
        case e.BYTE:
          return new o(g);
      }
    }
    r.fromArray = function(f) {
      return f.reduce(function(w, p) {
        return typeof p == "string" ? w.push(R(p, null)) : p.data && w.push(R(p.data, p.mode)), w;
      }, []);
    }, r.fromString = function(f, w) {
      const p = _(f, s.isKanjiModeEnabled()), W = $(p), B = b(W, w), j = l.find_path(B.map, "start", "end"), G = [];
      for (let de = 1; de < j.length - 1; de++)
        G.push(B.table[j[de]].node);
      return r.fromArray(m(G));
    }, r.rawSplit = function(f) {
      return r.fromArray(
        _(f, s.isKanjiModeEnabled())
      );
    };
  })(Ai);
  const _t = V$1, Tt = Ct, zn = wn, Dn = bn, Nn = Ii, Mn = Ei, Dt = Wi, Nt = $t, Un = vn, lt = Pi, Fn = Bi, Vn = ge, Pt = Ai;
  function qn(r, e) {
    const i = r.size, n = Mn.getPositions(e);
    for (let o = 0; o < n.length; o++) {
      const t = n[o][0], a = n[o][1];
      for (let s = -1; s <= 7; s++)
        if (!(t + s <= -1 || i <= t + s))
          for (let l = -1; l <= 7; l++)
            a + l <= -1 || i <= a + l || (s >= 0 && s <= 6 && (l === 0 || l === 6) || l >= 0 && l <= 6 && (s === 0 || s === 6) || s >= 2 && s <= 4 && l >= 2 && l <= 4 ? r.set(t + s, a + l, true, true) : r.set(t + s, a + l, false, true));
    }
  }
  function Hn(r) {
    const e = r.size;
    for (let i = 8; i < e - 8; i++) {
      const n = i % 2 === 0;
      r.set(i, 6, n, true), r.set(6, i, n, true);
    }
  }
  function Kn(r, e) {
    const i = Nn.getPositions(e);
    for (let n = 0; n < i.length; n++) {
      const o = i[n][0], t = i[n][1];
      for (let a = -2; a <= 2; a++)
        for (let s = -2; s <= 2; s++)
          a === -2 || a === 2 || s === -2 || s === 2 || a === 0 && s === 0 ? r.set(o + a, t + s, true, true) : r.set(o + a, t + s, false, true);
    }
  }
  function Gn(r, e) {
    const i = r.size, n = lt.getEncodedBits(e);
    let o, t, a;
    for (let s = 0; s < 18; s++)
      o = Math.floor(s / 3), t = s % 3 + i - 8 - 3, a = (n >> s & 1) === 1, r.set(o, t, a, true), r.set(t, o, a, true);
  }
  function Lt(r, e, i) {
    const n = r.size, o = Fn.getEncodedBits(e, i);
    let t, a;
    for (t = 0; t < 15; t++)
      a = (o >> t & 1) === 1, t < 6 ? r.set(t, 8, a, true) : t < 8 ? r.set(t + 1, 8, a, true) : r.set(n - 15 + t, 8, a, true), t < 8 ? r.set(8, n - t - 1, a, true) : t < 9 ? r.set(8, 15 - t - 1 + 1, a, true) : r.set(8, 15 - t - 1, a, true);
    r.set(n - 8, 8, 1, true);
  }
  function Yn(r, e) {
    const i = r.size;
    let n = -1, o = i - 1, t = 7, a = 0;
    for (let s = i - 1; s > 0; s -= 2)
      for (s === 6 && s--; ; ) {
        for (let l = 0; l < 2; l++)
          if (!r.isReserved(o, s - l)) {
            let h = false;
            a < e.length && (h = (e[a] >>> t & 1) === 1), r.set(o, s - l, h), t--, t === -1 && (a++, t = 7);
          }
        if (o += n, o < 0 || i <= o) {
          o -= n, n = -n;
          break;
        }
      }
  }
  function Jn(r, e, i) {
    const n = new zn();
    i.forEach(function(l) {
      n.put(l.mode.bit, 4), n.put(l.getLength(), Vn.getCharCountIndicator(l.mode, r)), l.write(n);
    });
    const o = _t.getSymbolTotalCodewords(r), t = Nt.getTotalCodewordsCount(r, e), a = (o - t) * 8;
    for (n.getLengthInBits() + 4 <= a && n.put(0, 4); n.getLengthInBits() % 8 !== 0; )
      n.putBit(0);
    const s = (a - n.getLengthInBits()) / 8;
    for (let l = 0; l < s; l++)
      n.put(l % 2 ? 17 : 236, 8);
    return Qn(n, r, e);
  }
  function Qn(r, e, i) {
    const n = _t.getSymbolTotalCodewords(e), o = Nt.getTotalCodewordsCount(e, i), t = n - o, a = Nt.getBlocksCount(e, i), s = n % a, l = a - s, h = Math.floor(n / a), d = Math.floor(t / a), _ = d + 1, x = h - d, m = new Un(x);
    let $ = 0;
    const b = new Array(a), R = new Array(a);
    let g = 0;
    const f = new Uint8Array(r.buffer);
    for (let j = 0; j < a; j++) {
      const G = j < l ? d : _;
      b[j] = f.slice($, $ + G), R[j] = m.encode(b[j]), $ += G, g = Math.max(g, G);
    }
    const w = new Uint8Array(n);
    let p = 0, W, B;
    for (W = 0; W < g; W++)
      for (B = 0; B < a; B++)
        W < b[B].length && (w[p++] = b[B][W]);
    for (W = 0; W < x; W++)
      for (B = 0; B < a; B++)
        w[p++] = R[B][W];
    return w;
  }
  function Xn(r, e, i, n) {
    let o;
    if (Array.isArray(r))
      o = Pt.fromArray(r);
    else if (typeof r == "string") {
      let h = e;
      if (!h) {
        const d = Pt.rawSplit(r);
        h = lt.getBestVersionForData(d, i);
      }
      o = Pt.fromString(r, h || 40);
    } else
      throw new Error("Invalid data");
    const t = lt.getBestVersionForData(o, i);
    if (!t)
      throw new Error("The amount of data is too big to be stored in a QR Code");
    if (!e)
      e = t;
    else if (e < t)
      throw new Error(
        `
The chosen QR Code version cannot contain this amount of data.
Minimum version required to store current data is: ` + t + `.
`
      );
    const a = Jn(e, i, o), s = _t.getSymbolSize(e), l = new Dn(s);
    return qn(l, e), Hn(l), Kn(l, e), Lt(l, i, 0), e >= 7 && Gn(l, e), Yn(l, a), isNaN(n) && (n = Dt.getBestMask(
      l,
      Lt.bind(null, l, i)
    )), Dt.applyMask(n, l), Lt(l, i, n), {
      modules: l,
      version: e,
      errorCorrectionLevel: i,
      maskPattern: n,
      segments: o
    };
  }
  Ri.create = function(e, i) {
    if (typeof e > "u" || e === "")
      throw new Error("No input text");
    let n = Tt.M, o, t;
    return typeof i < "u" && (n = Tt.from(i.errorCorrectionLevel, Tt.M), o = lt.from(i.version), t = Dt.from(i.maskPattern), i.toSJISFunc && _t.setToSJISFunction(i.toSJISFunc)), Xn(e, o, n, t);
  };
  var ki = {}, ii = {};
  (function(r) {
    function e(i) {
      if (typeof i == "number" && (i = i.toString()), typeof i != "string")
        throw new Error("Color should be defined as hex string");
      let n = i.slice().replace("#", "").split("");
      if (n.length < 3 || n.length === 5 || n.length > 8)
        throw new Error("Invalid hex color: " + i);
      (n.length === 3 || n.length === 4) && (n = Array.prototype.concat.apply([], n.map(function(t) {
        return [t, t];
      }))), n.length === 6 && n.push("F", "F");
      const o = parseInt(n.join(""), 16);
      return {
        r: o >> 24 & 255,
        g: o >> 16 & 255,
        b: o >> 8 & 255,
        a: o & 255,
        hex: "#" + n.slice(0, 6).join("")
      };
    }
    r.getOptions = function(n) {
      n || (n = {}), n.color || (n.color = {});
      const o = typeof n.margin > "u" || n.margin === null || n.margin < 0 ? 4 : n.margin, t = n.width && n.width >= 21 ? n.width : void 0, a = n.scale || 4;
      return {
        width: t,
        scale: t ? 4 : a,
        margin: o,
        color: {
          dark: e(n.color.dark || "#000000ff"),
          light: e(n.color.light || "#ffffffff")
        },
        type: n.type,
        rendererOpts: n.rendererOpts || {}
      };
    }, r.getScale = function(n, o) {
      return o.width && o.width >= n + o.margin * 2 ? o.width / (n + o.margin * 2) : o.scale;
    }, r.getImageWidth = function(n, o) {
      const t = r.getScale(n, o);
      return Math.floor((n + o.margin * 2) * t);
    }, r.qrToImageData = function(n, o, t) {
      const a = o.modules.size, s = o.modules.data, l = r.getScale(a, t), h = Math.floor((a + t.margin * 2) * l), d = t.margin * l, _ = [t.color.light, t.color.dark];
      for (let x = 0; x < h; x++)
        for (let m = 0; m < h; m++) {
          let $ = (x * h + m) * 4, b = t.color.light;
          if (x >= d && m >= d && x < h - d && m < h - d) {
            const R = Math.floor((x - d) / l), g = Math.floor((m - d) / l);
            b = _[s[R * a + g] ? 1 : 0];
          }
          n[$++] = b.r, n[$++] = b.g, n[$++] = b.b, n[$] = b.a;
        }
    };
  })(ii);
  (function(r) {
    const e = ii;
    function i(o, t, a) {
      o.clearRect(0, 0, t.width, t.height), t.style || (t.style = {}), t.height = a, t.width = a, t.style.height = a + "px", t.style.width = a + "px";
    }
    function n() {
      try {
        return document.createElement("canvas");
      } catch {
        throw new Error("You need to specify a canvas element");
      }
    }
    r.render = function(t, a, s) {
      let l = s, h = a;
      typeof l > "u" && (!a || !a.getContext) && (l = a, a = void 0), a || (h = n()), l = e.getOptions(l);
      const d = e.getImageWidth(t.modules.size, l), _ = h.getContext("2d"), x = _.createImageData(d, d);
      return e.qrToImageData(x.data, t, l), i(_, h, d), _.putImageData(x, 0, 0), h;
    }, r.renderToDataURL = function(t, a, s) {
      let l = s;
      typeof l > "u" && (!a || !a.getContext) && (l = a, a = void 0), l || (l = {});
      const h = r.render(t, a, l), d = l.type || "image/png", _ = l.rendererOpts || {};
      return h.toDataURL(d, _.quality);
    };
  })(ki);
  var zi = {};
  const Zn = ii;
  function fi(r, e) {
    const i = r.a / 255, n = e + '="' + r.hex + '"';
    return i < 1 ? n + " " + e + '-opacity="' + i.toFixed(2).slice(1) + '"' : n;
  }
  function Bt(r, e, i) {
    let n = r + e;
    return typeof i < "u" && (n += " " + i), n;
  }
  function eo(r, e, i) {
    let n = "", o = 0, t = false, a = 0;
    for (let s = 0; s < r.length; s++) {
      const l = Math.floor(s % e), h = Math.floor(s / e);
      !l && !t && (t = true), r[s] ? (a++, s > 0 && l > 0 && r[s - 1] || (n += t ? Bt("M", l + i, 0.5 + h + i) : Bt("m", o, 0), o = 0, t = false), l + 1 < e && r[s + 1] || (n += Bt("h", a), a = 0)) : o++;
    }
    return n;
  }
  zi.render = function(e, i, n) {
    const o = Zn.getOptions(i), t = e.modules.size, a = e.modules.data, s = t + o.margin * 2, l = o.color.light.a ? "<path " + fi(o.color.light, "fill") + ' d="M0 0h' + s + "v" + s + 'H0z"/>' : "", h = "<path " + fi(o.color.dark, "stroke") + ' d="' + eo(a, t, o.margin) + '"/>', d = 'viewBox="0 0 ' + s + " " + s + '"', x = '<svg xmlns="http://www.w3.org/2000/svg" ' + (o.width ? 'width="' + o.width + '" height="' + o.width + '" ' : "") + d + ' shape-rendering="crispEdges">' + l + h + `</svg>
`;
    return typeof n == "function" && n(null, x), x;
  };
  const to = fn, Mt = Ri, Di = ki, io = zi;
  function ni(r, e, i, n, o) {
    const t = [].slice.call(arguments, 1), a = t.length, s = typeof t[a - 1] == "function";
    if (!s && !to())
      throw new Error("Callback required as last argument");
    if (s) {
      if (a < 2)
        throw new Error("Too few arguments provided");
      a === 2 ? (o = i, i = e, e = n = void 0) : a === 3 && (e.getContext && typeof o > "u" ? (o = n, n = void 0) : (o = n, n = i, i = e, e = void 0));
    } else {
      if (a < 1)
        throw new Error("Too few arguments provided");
      return a === 1 ? (i = e, e = n = void 0) : a === 2 && !e.getContext && (n = i, i = e, e = void 0), new Promise(function(l, h) {
        try {
          const d = Mt.create(i, n);
          l(r(d, e, n));
        } catch (d) {
          h(d);
        }
      });
    }
    try {
      const l = Mt.create(i, n);
      o(null, r(l, e, n));
    } catch (l) {
      o(l);
    }
  }
  Ve.create = Mt.create;
  Ve.toCanvas = ni.bind(null, Di.render);
  Ve.toDataURL = ni.bind(null, Di.renderToDataURL);
  Ve.toString = ni.bind(null, function(r, e, i) {
    return io.render(r, i);
  });
  const no = 0.1, gi = 2.5, ae$1 = 7;
  function Ot(r, e, i) {
    return r === e ? false : (r - e < 0 ? e - r : r - e) <= i + no;
  }
  function oo(r, e) {
    const i = Array.prototype.slice.call(Ve.create(r, { errorCorrectionLevel: e }).modules.data, 0), n = Math.sqrt(i.length);
    return i.reduce((o, t, a) => (a % n === 0 ? o.push([t]) : o[o.length - 1].push(t)) && o, []);
  }
  const ro = {
    generate({ uri: r, size: e, logoSize: i, dotColor: n = "#141414" }) {
      const o = "transparent", a = [], s = oo(r, "Q"), l = e / s.length, h = [
        { x: 0, y: 0 },
        { x: 1, y: 0 },
        { x: 0, y: 1 }
      ];
      h.forEach(({ x: b, y: R }) => {
        const g = (s.length - ae$1) * l * b, f = (s.length - ae$1) * l * R, w = 0.45;
        for (let p = 0; p < h.length; p += 1) {
          const W = l * (ae$1 - p * 2);
          a.push(EA`
            <rect
              fill=${p === 2 ? n : o}
              width=${p === 0 ? W - 5 : W}
              rx= ${p === 0 ? (W - 5) * w : W * w}
              ry= ${p === 0 ? (W - 5) * w : W * w}
              stroke=${n}
              stroke-width=${p === 0 ? 5 : 0}
              height=${p === 0 ? W - 5 : W}
              x= ${p === 0 ? f + l * p + 5 / 2 : f + l * p}
              y= ${p === 0 ? g + l * p + 5 / 2 : g + l * p}
            />
          `);
        }
      });
      const d = Math.floor((i + 25) / l), _ = s.length / 2 - d / 2, x = s.length / 2 + d / 2 - 1, m = [];
      s.forEach((b, R) => {
        b.forEach((g, f) => {
          if (s[R][f] && !(R < ae$1 && f < ae$1 || R > s.length - (ae$1 + 1) && f < ae$1 || R < ae$1 && f > s.length - (ae$1 + 1)) && !(R > _ && R < x && f > _ && f < x)) {
            const w = R * l + l / 2, p = f * l + l / 2;
            m.push([w, p]);
          }
        });
      });
      const $ = {};
      return m.forEach(([b, R]) => {
        var g;
        $[b] ? (g = $[b]) == null || g.push(R) : $[b] = [R];
      }), Object.entries($).map(([b, R]) => {
        const g = R.filter((f) => R.every((w) => !Ot(f, w, l)));
        return [Number(b), g];
      }).forEach(([b, R]) => {
        R.forEach((g) => {
          a.push(EA`<circle cx=${b} cy=${g} fill=${n} r=${l / gi} />`);
        });
      }), Object.entries($).filter(([b, R]) => R.length > 1).map(([b, R]) => {
        const g = R.filter((f) => R.some((w) => Ot(f, w, l)));
        return [Number(b), g];
      }).map(([b, R]) => {
        R.sort((f, w) => f < w ? -1 : 1);
        const g = [];
        for (const f of R) {
          const w = g.find((p) => p.some((W) => Ot(f, W, l)));
          w ? w.push(f) : g.push([f]);
        }
        return [b, g.map((f) => [f[0], f[f.length - 1]])];
      }).forEach(([b, R]) => {
        R.forEach(([g, f]) => {
          a.push(EA`
              <line
                x1=${b}
                x2=${b}
                y1=${g}
                y2=${f}
                stroke=${n}
                stroke-width=${l / (gi / 2)}
                stroke-linecap="round"
              />
            `);
        });
      }), a;
    }
  }, ao = Lr`
  :host {
    position: relative;
    user-select: none;
    display: block;
    overflow: hidden;
    aspect-ratio: 1 / 1;
    width: var(--local-size);
  }

  :host([data-theme='dark']) {
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px);
    background-color: var(--wui-color-inverse-100);
    padding: var(--wui-spacing-l);
  }

  :host([data-theme='light']) {
    box-shadow: 0 0 0 1px var(--wui-color-bg-125);
    background-color: var(--wui-color-bg-125);
  }

  :host([data-clear='true']) > wui-icon {
    display: none;
  }

  svg:first-child,
  wui-image,
  wui-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
  }

  wui-image {
    width: 25%;
    height: 25%;
    border-radius: var(--wui-border-radius-xs);
  }

  wui-icon {
    width: 100%;
    height: 100%;
    color: var(--local-icon-color) !important;
    transform: translateY(-50%) translateX(-50%) scale(0.25);
  }
`;
  var ue$1 = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  const so = "#3396ff";
  let Q$1 = class Q extends eo$1 {
    constructor() {
      super(...arguments), this.uri = "", this.size = 0, this.theme = "dark", this.imageSrc = void 0, this.alt = void 0, this.arenaClear = void 0, this.farcaster = void 0;
    }
    render() {
      return this.dataset.theme = this.theme, this.dataset.clear = String(this.arenaClear), this.style.cssText = `
     --local-size: ${this.size}px;
     --local-icon-color: ${this.color ?? so}
    `, vA`${this.templateVisual()} ${this.templateSvg()}`;
    }
    templateSvg() {
      const e = this.theme === "light" ? this.size : this.size - 32;
      return EA`
      <svg height=${e} width=${e}>
        ${ro.generate({
      uri: this.uri,
      size: e,
      logoSize: this.arenaClear ? 0 : e / 4,
      dotColor: this.color
    })}
      </svg>
    `;
    }
    templateVisual() {
      return this.imageSrc ? vA`<wui-image src=${this.imageSrc} alt=${this.alt ?? "logo"}></wui-image>` : this.farcaster ? vA`<wui-icon
        class="farcaster"
        size="inherit"
        color="inherit"
        name="farcaster"
      ></wui-icon>` : vA`<wui-icon size="inherit" color="inherit" name="walletConnect"></wui-icon>`;
    }
  };
  Q$1.styles = [IA, ao];
  ue$1([
    c$3()
  ], Q$1.prototype, "uri", void 0);
  ue$1([
    c$3({ type: Number })
  ], Q$1.prototype, "size", void 0);
  ue$1([
    c$3()
  ], Q$1.prototype, "theme", void 0);
  ue$1([
    c$3()
  ], Q$1.prototype, "imageSrc", void 0);
  ue$1([
    c$3()
  ], Q$1.prototype, "alt", void 0);
  ue$1([
    c$3()
  ], Q$1.prototype, "color", void 0);
  ue$1([
    c$3({ type: Boolean })
  ], Q$1.prototype, "arenaClear", void 0);
  ue$1([
    c$3({ type: Boolean })
  ], Q$1.prototype, "farcaster", void 0);
  Q$1 = ue$1([
    x$1("wui-qr-code")
  ], Q$1);
  const lo = Lr`
  :host {
    display: block;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-200) 5%,
      var(--wui-color-bg-200) 48%,
      var(--wui-color-bg-300) 55%,
      var(--wui-color-bg-300) 60%,
      var(--wui-color-bg-300) calc(60% + 10px),
      var(--wui-color-bg-200) calc(60% + 12px),
      var(--wui-color-bg-200) 100%
    );
    background-size: 250%;
    animation: shimmer 3s linear infinite reverse;
  }

  :host([variant='light']) {
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-150) 5%,
      var(--wui-color-bg-150) 48%,
      var(--wui-color-bg-200) 55%,
      var(--wui-color-bg-200) 60%,
      var(--wui-color-bg-200) calc(60% + 10px),
      var(--wui-color-bg-150) calc(60% + 12px),
      var(--wui-color-bg-150) 100%
    );
    background-size: 250%;
  }

  @keyframes shimmer {
    from {
      background-position: -250% 0;
    }
    to {
      background-position: 250% 0;
    }
  }
`;
  var He = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ve = class extends eo$1 {
    constructor() {
      super(...arguments), this.width = "", this.height = "", this.borderRadius = "m", this.variant = "default";
    }
    render() {
      return this.style.cssText = `
      width: ${this.width};
      height: ${this.height};
      border-radius: ${`clamp(0px,var(--wui-border-radius-${this.borderRadius}), 40px)`};
    `, vA`<slot></slot>`;
    }
  };
  ve.styles = [lo];
  He([
    c$3()
  ], ve.prototype, "width", void 0);
  He([
    c$3()
  ], ve.prototype, "height", void 0);
  He([
    c$3()
  ], ve.prototype, "borderRadius", void 0);
  He([
    c$3()
  ], ve.prototype, "variant", void 0);
  ve = He([
    x$1("wui-shimmer")
  ], ve);
  const co = "https://reown.com", uo = Lr`
  .reown-logo {
    height: var(--wui-spacing-xxl);
  }

  a {
    text-decoration: none;
    cursor: pointer;
  }

  a:hover {
    opacity: 0.9;
  }
`;
  var ho = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Ut = class extends eo$1 {
    render() {
      return vA`
      <a
        data-testid="ux-branding-reown"
        href=${co}
        rel="noreferrer"
        target="_blank"
        style="text-decoration: none;"
      >
        <wui-flex
          justifyContent="center"
          alignItems="center"
          gap="xs"
          .padding=${["0", "0", "l", "0"]}
        >
          <wui-text variant="small-500" color="fg-100"> UX by </wui-text>
          <wui-icon name="reown" size="xxxl" class="reown-logo"></wui-icon>
        </wui-flex>
      </a>
    `;
    }
  };
  Ut.styles = [IA, AA, uo];
  Ut = ho([
    x$1("wui-ux-by-reown")
  ], Ut);
  const po = Lr`
  @keyframes fadein {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  wui-shimmer {
    width: 100%;
    aspect-ratio: 1 / 1;
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px) !important;
  }

  wui-qr-code {
    opacity: 0;
    animation-duration: 200ms;
    animation-timing-function: ease;
    animation-name: fadein;
    animation-fill-mode: forwards;
  }
`;
  var fo = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Ft = class extends z {
    constructor() {
      var e;
      super(), this.forceUpdate = () => {
        this.requestUpdate();
      }, window.addEventListener("resize", this.forceUpdate), Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: ((e = this.wallet) == null ? void 0 : e.name) ?? "WalletConnect", platform: "qrcode" }
      });
    }
    disconnectedCallback() {
      var e;
      super.disconnectedCallback(), (e = this.unsubscribe) == null || e.forEach((i) => i()), window.removeEventListener("resize", this.forceUpdate);
    }
    render() {
      return this.onRenderProxy(), vA`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["0", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-shimmer borderRadius="l" width="100%"> ${this.qrCodeTemplate()} </wui-shimmer>

        <wui-text variant="paragraph-500" color="fg-100">
          Scan this QR Code with your phone
        </wui-text>
        ${this.copyTemplate()}
      </wui-flex>
      <w3m-mobile-download-links .wallet=${this.wallet}></w3m-mobile-download-links>
    `;
    }
    onRenderProxy() {
      !this.ready && this.uri && (this.timeout = setTimeout(() => {
        this.ready = true;
      }, 200));
    }
    qrCodeTemplate() {
      if (!this.uri || !this.ready)
        return null;
      const e = this.getBoundingClientRect().width - 40, i = this.wallet ? this.wallet.name : void 0;
      return Y$1.setWcLinking(void 0), Y$1.setRecentWallet(this.wallet), vA` <wui-qr-code
      size=${e}
      theme=${wt$2.state.themeMode}
      uri=${this.uri}
      imageSrc=${St$1(Vu.getWalletImage(this.wallet))}
      color=${St$1(wt$2.state.themeVariables["--w3m-qr-color"])}
      alt=${St$1(i)}
      data-testid="wui-qr-code"
    ></wui-qr-code>`;
    }
    copyTemplate() {
      const e = !this.uri || !this.ready;
      return vA`<wui-link
      .disabled=${e}
      @click=${this.onCopyUri}
      color="fg-200"
      data-testid="copy-wc2-uri"
    >
      <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
      Copy link
    </wui-link>`;
    }
  };
  Ft.styles = po;
  Ft = fo([
    x$1("w3m-connecting-wc-qrcode")
  ], Ft);
  var go = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let wi = class extends eo$1 {
    constructor() {
      var e;
      if (super(), this.wallet = (e = re$1.state.data) == null ? void 0 : e.wallet, !this.wallet)
        throw new Error("w3m-connecting-wc-unsupported: No wallet provided");
      Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: this.wallet.name, platform: "browser" }
      });
    }
    render() {
      return vA`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-wallet-image
          size="lg"
          imageSrc=${St$1(Vu.getWalletImage(this.wallet))}
        ></wui-wallet-image>

        <wui-text variant="paragraph-500" color="fg-100">Not Detected</wui-text>
      </wui-flex>

      <w3m-mobile-download-links .wallet=${this.wallet}></w3m-mobile-download-links>
    `;
    }
  };
  wi = go([
    x$1("w3m-connecting-wc-unsupported")
  ], wi);
  var Ni = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Vt = class extends z {
    constructor() {
      if (super(), this.isLoading = true, !this.wallet)
        throw new Error("w3m-connecting-wc-web: No wallet provided");
      this.onConnect = this.onConnectProxy.bind(this), this.secondaryBtnLabel = "Open", this.secondaryLabel = Ee$3.CONNECT_LABELS.MOBILE, this.secondaryBtnIcon = "externalLink", this.updateLoadingState(), this.unsubscribe.push(Y$1.subscribeKey("wcUri", () => {
        this.updateLoadingState();
      })), Pe$3.sendEvent({
        type: "track",
        event: "SELECT_WALLET",
        properties: { name: this.wallet.name, platform: "web" }
      });
    }
    updateLoadingState() {
      this.isLoading = !this.uri;
    }
    onConnectProxy() {
      var e;
      if ((e = this.wallet) != null && e.webapp_link && this.uri)
        try {
          this.error = !1;
          const { webapp_link: i, name: n } = this.wallet, { redirect: o, href: t } = X$3.formatUniversalUrl(i, this.uri);
          Y$1.setWcLinking({ name: n, href: t }), Y$1.setRecentWallet(this.wallet), X$3.openHref(o, "_blank");
        } catch {
          this.error = true;
        }
    }
  };
  Ni([
    bt$1()
  ], Vt.prototype, "isLoading", void 0);
  Vt = Ni([
    x$1("w3m-connecting-wc-web")
  ], Vt);
  var Ke = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Se = class extends eo$1 {
    constructor() {
      var e;
      super(), this.wallet = (e = re$1.state.data) == null ? void 0 : e.wallet, this.unsubscribe = [], this.platform = void 0, this.platforms = [], this.isSiwxEnabled = !!T$2.state.siwx, this.remoteFeatures = T$2.state.remoteFeatures, this.determinePlatforms(), this.initializeConnection(), this.unsubscribe.push(T$2.subscribeKey("remoteFeatures", (i) => this.remoteFeatures = i));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      return vA`
      ${this.headerTemplate()}
      <div>${this.platformTemplate()}</div>
      ${this.reownBrandingTemplate()}
    `;
    }
    reownBrandingTemplate() {
      var e;
      return (e = this.remoteFeatures) != null && e.reownBranding ? vA`<wui-ux-by-reown></wui-ux-by-reown>` : null;
    }
    async initializeConnection(e = false) {
      if (!(this.platform === "browser" || T$2.state.manualWCControl && !e))
        try {
          const { wcPairingExpiry: i, status: n } = Y$1.state;
          (e || T$2.state.enableEmbedded || X$3.isPairingExpired(i) || n === "connecting") && (await Y$1.connectWalletConnect(), this.isSiwxEnabled || ze$3.close());
        } catch (i) {
          Pe$3.sendEvent({
            type: "track",
            event: "CONNECT_ERROR",
            properties: { message: (i == null ? void 0 : i.message) ?? "Unknown" }
          }), Y$1.setWcError(true), Bt$2.showError(i.message ?? "Connection error"), Y$1.resetWcConnection(), re$1.goBack();
        }
    }
    determinePlatforms() {
      if (!this.wallet) {
        this.platforms.push("qrcode"), this.platform = "qrcode";
        return;
      }
      if (this.platform)
        return;
      const { mobile_link: e, desktop_link: i, webapp_link: n, injected: o, rdns: t } = this.wallet, a = o == null ? void 0 : o.map(({ injected_id: $ }) => $).filter(Boolean), s = [...t ? [t] : a ?? []], l = T$2.state.isUniversalProvider ? false : s.length, h = e, d = n, _ = Y$1.checkInstalled(s), x = l && _, m$1 = i && !X$3.isMobile();
      x && !m.state.noAdapters && this.platforms.push("browser"), h && this.platforms.push(X$3.isMobile() ? "mobile" : "qrcode"), d && this.platforms.push("web"), m$1 && this.platforms.push("desktop"), !x && l && !m.state.noAdapters && this.platforms.push("unsupported"), this.platform = this.platforms[0];
    }
    platformTemplate() {
      switch (this.platform) {
        case "browser":
          return vA`<w3m-connecting-wc-browser></w3m-connecting-wc-browser>`;
        case "web":
          return vA`<w3m-connecting-wc-web></w3m-connecting-wc-web>`;
        case "desktop":
          return vA`
          <w3m-connecting-wc-desktop .onRetry=${() => this.initializeConnection(true)}>
          </w3m-connecting-wc-desktop>
        `;
        case "mobile":
          return vA`
          <w3m-connecting-wc-mobile isMobile .onRetry=${() => this.initializeConnection(true)}>
          </w3m-connecting-wc-mobile>
        `;
        case "qrcode":
          return vA`<w3m-connecting-wc-qrcode></w3m-connecting-wc-qrcode>`;
        default:
          return vA`<w3m-connecting-wc-unsupported></w3m-connecting-wc-unsupported>`;
      }
    }
    headerTemplate() {
      return this.platforms.length > 1 ? vA`
      <w3m-connecting-header
        .platforms=${this.platforms}
        .onSelectPlatfrom=${this.onSelectPlatform.bind(this)}
      >
      </w3m-connecting-header>
    ` : null;
    }
    async onSelectPlatform(e) {
      var n;
      const i = (n = this.shadowRoot) == null ? void 0 : n.querySelector("div");
      i && (await i.animate([{ opacity: 1 }, { opacity: 0 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }).finished, this.platform = e, i.animate([{ opacity: 0 }, { opacity: 1 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }));
    }
  };
  Ke([
    bt$1()
  ], Se.prototype, "platform", void 0);
  Ke([
    bt$1()
  ], Se.prototype, "platforms", void 0);
  Ke([
    bt$1()
  ], Se.prototype, "isSiwxEnabled", void 0);
  Ke([
    bt$1()
  ], Se.prototype, "remoteFeatures", void 0);
  Se = Ke([
    x$1("w3m-connecting-wc-view")
  ], Se);
  var Mi = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let qt = class extends eo$1 {
    constructor() {
      super(...arguments), this.isMobile = X$3.isMobile();
    }
    render() {
      if (this.isMobile) {
        const { featured: e, recommended: i } = K$3.state, { customWallets: n } = T$2.state, o = q$1.getRecentWallets(), t = e.length || i.length || (n == null ? void 0 : n.length) || o.length;
        return vA`<wui-flex
        flexDirection="column"
        gap="xs"
        .margin=${["3xs", "s", "s", "s"]}
      >
        ${t ? vA`<w3m-connector-list></w3m-connector-list>` : null}
        <w3m-all-wallets-widget></w3m-all-wallets-widget>
      </wui-flex>`;
      }
      return vA`<wui-flex flexDirection="column" .padding=${["0", "0", "l", "0"]}>
      <w3m-connecting-wc-view></w3m-connecting-wc-view>
      <wui-flex flexDirection="column" .padding=${["0", "m", "0", "m"]}>
        <w3m-all-wallets-widget></w3m-all-wallets-widget> </wui-flex
    ></wui-flex>`;
    }
  };
  Mi([
    bt$1()
  ], qt.prototype, "isMobile", void 0);
  qt = Mi([
    x$1("w3m-connecting-wc-basic-view")
  ], qt);
  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  const oi = () => new wo();
  class wo {
  }
  const At = /* @__PURE__ */ new WeakMap(), ri = H$1(class extends at$1 {
    render(r) {
      return We$2;
    }
    update(r, [e]) {
      var n;
      const i = e !== this.G;
      return i && this.G !== void 0 && this.rt(void 0), (i || this.lt !== this.ct) && (this.G = e, this.ht = (n = r.options) == null ? void 0 : n.host, this.rt(this.ct = r.element)), We$2;
    }
    rt(r) {
      if (this.isConnected || (r = void 0), typeof this.G == "function") {
        const e = this.ht ?? globalThis;
        let i = At.get(e);
        i === void 0 && (i = /* @__PURE__ */ new WeakMap(), At.set(e, i)), i.get(this.G) !== void 0 && this.G.call(this.ht, void 0), i.set(this.G, r), r !== void 0 && this.G.call(this.ht, r);
      } else this.G.value = r;
    }
    get lt() {
      var r, e;
      return typeof this.G == "function" ? (r = At.get(this.ht ?? globalThis)) == null ? void 0 : r.get(this.G) : (e = this.G) == null ? void 0 : e.value;
    }
    disconnected() {
      this.lt === this.ct && this.rt(void 0);
    }
    reconnected() {
      this.rt(this.ct);
    }
  }), bo = Lr`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  label {
    position: relative;
    display: inline-block;
    width: 32px;
    height: 22px;
  }

  input {
    width: 0;
    height: 0;
    opacity: 0;
  }

  span {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--wui-color-blue-100);
    border-width: 1px;
    border-style: solid;
    border-color: var(--wui-color-gray-glass-002);
    border-radius: 999px;
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color;
  }

  span:before {
    position: absolute;
    content: '';
    height: 16px;
    width: 16px;
    left: 3px;
    top: 2px;
    background-color: var(--wui-color-inverse-100);
    transition: transform var(--wui-ease-inout-power-1) var(--wui-duration-lg);
    will-change: transform;
    border-radius: 50%;
  }

  input:checked + span {
    border-color: var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-blue-100);
  }

  input:not(:checked) + span {
    background-color: var(--wui-color-gray-glass-010);
  }

  input:checked + span:before {
    transform: translateX(calc(100% - 7px));
  }
`;
  var Ui = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ct = class extends eo$1 {
    constructor() {
      super(...arguments), this.inputElementRef = oi(), this.checked = void 0;
    }
    render() {
      return vA`
      <label>
        <input
          ${ri(this.inputElementRef)}
          type="checkbox"
          ?checked=${St$1(this.checked)}
          @change=${this.dispatchChangeEvent.bind(this)}
        />
        <span></span>
      </label>
    `;
    }
    dispatchChangeEvent() {
      var e;
      this.dispatchEvent(new CustomEvent("switchChange", {
        detail: (e = this.inputElementRef.value) == null ? void 0 : e.checked,
        bubbles: true,
        composed: true
      }));
    }
  };
  ct.styles = [IA, AA, NA, bo];
  Ui([
    c$3({ type: Boolean })
  ], ct.prototype, "checked", void 0);
  ct = Ui([
    x$1("wui-switch")
  ], ct);
  const mo = Lr`
  :host {
    height: 100%;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: var(--wui-spacing-1xs);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
    cursor: pointer;
  }

  wui-switch {
    pointer-events: none;
  }
`;
  var Fi = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ut = class extends eo$1 {
    constructor() {
      super(...arguments), this.checked = void 0;
    }
    render() {
      return vA`
      <button>
        <wui-icon size="xl" name="walletConnectBrown"></wui-icon>
        <wui-switch ?checked=${St$1(this.checked)}></wui-switch>
      </button>
    `;
    }
  };
  ut.styles = [IA, AA, mo];
  Fi([
    c$3({ type: Boolean })
  ], ut.prototype, "checked", void 0);
  ut = Fi([
    x$1("wui-certified-switch")
  ], ut);
  const vo = Lr`
  button {
    background-color: var(--wui-color-fg-300);
    border-radius: var(--wui-border-radius-4xs);
    width: 16px;
    height: 16px;
  }

  button:disabled {
    background-color: var(--wui-color-bg-300);
  }

  wui-icon {
    color: var(--wui-color-bg-200) !important;
  }

  button:focus-visible {
    background-color: var(--wui-color-fg-250);
    border: 1px solid var(--wui-color-accent-100);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-fg-250);
    }

    button:active:enabled {
      background-color: var(--wui-color-fg-225);
    }
  }
`;
  var Vi = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let dt = class extends eo$1 {
    constructor() {
      super(...arguments), this.icon = "copy";
    }
    render() {
      return vA`
      <button>
        <wui-icon color="inherit" size="xxs" name=${this.icon}></wui-icon>
      </button>
    `;
    }
  };
  dt.styles = [IA, AA, vo];
  Vi([
    c$3()
  ], dt.prototype, "icon", void 0);
  dt = Vi([
    x$1("wui-input-element")
  ], dt);
  const yo = Lr`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
    color: var(--wui-color-fg-275);
  }

  input {
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
    color: var(--wui-color-fg-100);
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      box-shadow var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color, box-shadow;
    caret-color: var(--wui-color-accent-100);
  }

  input:disabled {
    cursor: not-allowed;
    border: 1px solid var(--wui-color-gray-glass-010);
  }

  input:disabled::placeholder,
  input:disabled + wui-icon {
    color: var(--wui-color-fg-300);
  }

  input::placeholder {
    color: var(--wui-color-fg-275);
  }

  input:focus:enabled {
    background-color: var(--wui-color-gray-glass-005);
    -webkit-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  input:hover:enabled {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px var(--wui-spacing-s);
  }

  wui-icon + .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px 36px;
  }

  wui-icon[data-input='sm'] {
    left: var(--wui-spacing-s);
  }

  .wui-size-md {
    padding: 15px var(--wui-spacing-m) var(--wui-spacing-l) var(--wui-spacing-m);
  }

  wui-icon + .wui-size-md,
  wui-loading-spinner + .wui-size-md {
    padding: 10.5px var(--wui-spacing-3xl) 10.5px var(--wui-spacing-3xl);
  }

  wui-icon[data-input='md'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-lg {
    padding: var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-l);
    letter-spacing: var(--wui-letter-spacing-medium-title);
    font-size: var(--wui-font-size-medium-title);
    font-weight: var(--wui-font-weight-light);
    line-height: 130%;
    color: var(--wui-color-fg-100);
    height: 64px;
  }

  .wui-padding-right-xs {
    padding-right: var(--wui-spacing-xs);
  }

  .wui-padding-right-s {
    padding-right: var(--wui-spacing-s);
  }

  .wui-padding-right-m {
    padding-right: var(--wui-spacing-m);
  }

  .wui-padding-right-l {
    padding-right: var(--wui-spacing-l);
  }

  .wui-padding-right-xl {
    padding-right: var(--wui-spacing-xl);
  }

  .wui-padding-right-2xl {
    padding-right: var(--wui-spacing-2xl);
  }

  .wui-padding-right-3xl {
    padding-right: var(--wui-spacing-3xl);
  }

  .wui-padding-right-4xl {
    padding-right: var(--wui-spacing-4xl);
  }

  .wui-padding-right-5xl {
    padding-right: var(--wui-spacing-5xl);
  }

  wui-icon + .wui-size-lg,
  wui-loading-spinner + .wui-size-lg {
    padding-left: 50px;
  }

  wui-icon[data-input='lg'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-m) 17.25px var(--wui-spacing-m);
  }
  wui-icon + .wui-size-mdl,
  wui-loading-spinner + .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-3xl) 17.25px 40px;
  }
  wui-icon[data-input='mdl'] {
    left: var(--wui-spacing-m);
  }

  input:placeholder-shown ~ ::slotted(wui-input-element),
  input:placeholder-shown ~ ::slotted(wui-icon) {
    opacity: 0;
    pointer-events: none;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  ::slotted(wui-input-element),
  ::slotted(wui-icon) {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  ::slotted(wui-input-element) {
    right: var(--wui-spacing-m);
  }

  ::slotted(wui-icon) {
    right: 0px;
  }
`;
  var oe = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let H = class extends eo$1 {
    constructor() {
      super(...arguments), this.inputElementRef = oi(), this.size = "md", this.disabled = false, this.placeholder = "", this.type = "text", this.value = "";
    }
    render() {
      const e = `wui-padding-right-${this.inputRightPadding}`, n = {
        [`wui-size-${this.size}`]: true,
        [e]: !!this.inputRightPadding
      };
      return vA`${this.templateIcon()}
      <input
        data-testid="wui-input-text"
        ${ri(this.inputElementRef)}
        class=${dt$1(n)}
        type=${this.type}
        enterkeyhint=${St$1(this.enterKeyHint)}
        ?disabled=${this.disabled}
        placeholder=${this.placeholder}
        @input=${this.dispatchInputChangeEvent.bind(this)}
        .value=${this.value || ""}
        tabindex=${St$1(this.tabIdx)}
      />
      <slot></slot>`;
    }
    templateIcon() {
      return this.icon ? vA`<wui-icon
        data-input=${this.size}
        size=${this.size}
        color="inherit"
        name=${this.icon}
      ></wui-icon>` : null;
    }
    dispatchInputChangeEvent() {
      var e;
      this.dispatchEvent(new CustomEvent("inputChange", {
        detail: (e = this.inputElementRef.value) == null ? void 0 : e.value,
        bubbles: true,
        composed: true
      }));
    }
  };
  H.styles = [IA, AA, yo];
  oe([
    c$3()
  ], H.prototype, "size", void 0);
  oe([
    c$3()
  ], H.prototype, "icon", void 0);
  oe([
    c$3({ type: Boolean })
  ], H.prototype, "disabled", void 0);
  oe([
    c$3()
  ], H.prototype, "placeholder", void 0);
  oe([
    c$3()
  ], H.prototype, "type", void 0);
  oe([
    c$3()
  ], H.prototype, "keyHint", void 0);
  oe([
    c$3()
  ], H.prototype, "value", void 0);
  oe([
    c$3()
  ], H.prototype, "inputRightPadding", void 0);
  oe([
    c$3()
  ], H.prototype, "tabIdx", void 0);
  H = oe([
    x$1("wui-input-text")
  ], H);
  const xo = Lr`
  :host {
    position: relative;
    display: inline-block;
    width: 100%;
  }
`;
  var Co = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Ht = class extends eo$1 {
    constructor() {
      super(...arguments), this.inputComponentRef = oi();
    }
    render() {
      return vA`
      <wui-input-text
        ${ri(this.inputComponentRef)}
        placeholder="Search wallet"
        icon="search"
        type="search"
        enterKeyHint="search"
        size="sm"
      >
        <wui-input-element @click=${this.clearValue} icon="close"></wui-input-element>
      </wui-input-text>
    `;
    }
    clearValue() {
      const e = this.inputComponentRef.value, i = e == null ? void 0 : e.inputElementRef.value;
      i && (i.value = "", i.focus(), i.dispatchEvent(new Event("input")));
    }
  };
  Ht.styles = [IA, xo];
  Ht = Co([
    x$1("wui-search-bar")
  ], Ht);
  const $o = EA`<svg  viewBox="0 0 48 54" fill="none">
  <path
    d="M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z"
  />
</svg>`, Ro = Lr`
  :host {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 104px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xs) 10px;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
    position: relative;
  }

  wui-shimmer[data-type='network'] {
    border: none;
    -webkit-clip-path: var(--wui-path-network);
    clip-path: var(--wui-path-network);
  }

  svg {
    position: absolute;
    width: 48px;
    height: 54px;
    z-index: 1;
  }

  svg > path {
    stroke: var(--wui-color-gray-glass-010);
    stroke-width: 1px;
  }

  @media (max-width: 350px) {
    :host {
      width: 100%;
    }
  }
`;
  var qi = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ht = class extends eo$1 {
    constructor() {
      super(...arguments), this.type = "wallet";
    }
    render() {
      return vA`
      ${this.shimmerTemplate()}
      <wui-shimmer width="56px" height="20px" borderRadius="xs"></wui-shimmer>
    `;
    }
    shimmerTemplate() {
      return this.type === "network" ? vA` <wui-shimmer
          data-type=${this.type}
          width="48px"
          height="54px"
          borderRadius="xs"
        ></wui-shimmer>
        ${$o}` : vA`<wui-shimmer width="56px" height="56px" borderRadius="xs"></wui-shimmer>`;
    }
  };
  ht.styles = [IA, AA, Ro];
  qi([
    c$3()
  ], ht.prototype, "type", void 0);
  ht = qi([
    x$1("wui-card-select-loader")
  ], ht);
  const _o = Lr`
  :host {
    display: grid;
    width: inherit;
    height: inherit;
  }
`;
  var K = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let N = class extends eo$1 {
    render() {
      return this.style.cssText = `
      grid-template-rows: ${this.gridTemplateRows};
      grid-template-columns: ${this.gridTemplateColumns};
      justify-items: ${this.justifyItems};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      align-content: ${this.alignContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && w.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && w.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && w.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && w.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && w.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && w.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && w.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && w.getSpacingStyles(this.margin, 3)};
    `, vA`<slot></slot>`;
    }
  };
  N.styles = [IA, _o];
  K([
    c$3()
  ], N.prototype, "gridTemplateRows", void 0);
  K([
    c$3()
  ], N.prototype, "gridTemplateColumns", void 0);
  K([
    c$3()
  ], N.prototype, "justifyItems", void 0);
  K([
    c$3()
  ], N.prototype, "alignItems", void 0);
  K([
    c$3()
  ], N.prototype, "justifyContent", void 0);
  K([
    c$3()
  ], N.prototype, "alignContent", void 0);
  K([
    c$3()
  ], N.prototype, "columnGap", void 0);
  K([
    c$3()
  ], N.prototype, "rowGap", void 0);
  K([
    c$3()
  ], N.prototype, "gap", void 0);
  K([
    c$3()
  ], N.prototype, "padding", void 0);
  K([
    c$3()
  ], N.prototype, "margin", void 0);
  N = K([
    x$1("wui-grid")
  ], N);
  const Io = Lr`
  button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: 104px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-s) var(--wui-spacing-0);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
    transition:
      color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color, color, border-radius;
    outline: none;
    border: none;
  }

  button > wui-flex > wui-text {
    color: var(--wui-color-fg-100);
    max-width: 86px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    justify-content: center;
  }

  button > wui-flex > wui-text.certified {
    max-width: 66px;
  }

  button:hover:enabled {
    background-color: var(--wui-color-gray-glass-005);
  }

  button:disabled > wui-flex > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  [data-selected='true'] {
    background-color: var(--wui-color-accent-glass-020);
  }

  @media (hover: hover) and (pointer: fine) {
    [data-selected='true']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }
  }

  [data-selected='true']:active:enabled {
    background-color: var(--wui-color-accent-glass-010);
  }

  @media (max-width: 350px) {
    button {
      width: 100%;
    }
  }
`;
  var Ge = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let ye = class extends eo$1 {
    constructor() {
      super(), this.observer = new IntersectionObserver(() => {
      }), this.visible = false, this.imageSrc = void 0, this.imageLoading = false, this.wallet = void 0, this.observer = new IntersectionObserver((e) => {
        e.forEach((i) => {
          i.isIntersecting ? (this.visible = true, this.fetchImageSrc()) : this.visible = false;
        });
      }, { threshold: 0.01 });
    }
    firstUpdated() {
      this.observer.observe(this);
    }
    disconnectedCallback() {
      this.observer.disconnect();
    }
    render() {
      var i, n;
      const e = ((i = this.wallet) == null ? void 0 : i.badge_type) === "certified";
      return vA`
      <button>
        ${this.imageTemplate()}
        <wui-flex flexDirection="row" alignItems="center" justifyContent="center" gap="3xs">
          <wui-text
            variant="tiny-500"
            color="inherit"
            class=${St$1(e ? "certified" : void 0)}
            >${(n = this.wallet) == null ? void 0 : n.name}</wui-text
          >
          ${e ? vA`<wui-icon size="sm" name="walletConnectBrown"></wui-icon>` : null}
        </wui-flex>
      </button>
    `;
    }
    imageTemplate() {
      var e, i;
      return !this.visible && !this.imageSrc || this.imageLoading ? this.shimmerTemplate() : vA`
      <wui-wallet-image
        size="md"
        imageSrc=${St$1(this.imageSrc)}
        name=${(e = this.wallet) == null ? void 0 : e.name}
        .installed=${(i = this.wallet) == null ? void 0 : i.installed}
        badgeSize="sm"
      >
      </wui-wallet-image>
    `;
    }
    shimmerTemplate() {
      return vA`<wui-shimmer width="56px" height="56px" borderRadius="xs"></wui-shimmer>`;
    }
    async fetchImageSrc() {
      this.wallet && (this.imageSrc = Vu.getWalletImage(this.wallet), !this.imageSrc && (this.imageLoading = true, this.imageSrc = await Vu.fetchWalletImage(this.wallet.image_id), this.imageLoading = false));
    }
  };
  ye.styles = Io;
  Ge([
    bt$1()
  ], ye.prototype, "visible", void 0);
  Ge([
    bt$1()
  ], ye.prototype, "imageSrc", void 0);
  Ge([
    bt$1()
  ], ye.prototype, "imageLoading", void 0);
  Ge([
    c$3()
  ], ye.prototype, "wallet", void 0);
  ye = Ge([
    x$1("w3m-all-wallets-list-item")
  ], ye);
  const Eo = Lr`
  wui-grid {
    max-height: clamp(360px, 400px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
    grid-auto-rows: min-content;
    grid-template-columns: repeat(auto-fill, 104px);
  }

  @media (max-width: 350px) {
    wui-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  wui-grid[data-scroll='false'] {
    overflow: hidden;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-loading-spinner {
    padding-top: var(--wui-spacing-l);
    padding-bottom: var(--wui-spacing-l);
    justify-content: center;
    grid-column: 1 / span 4;
  }
`;
  var Be$1 = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  const bi = "local-paginator";
  let pe$1 = class pe extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.paginationObserver = void 0, this.loading = !K$3.state.wallets.length, this.wallets = K$3.state.wallets, this.recommended = K$3.state.recommended, this.featured = K$3.state.featured, this.filteredWallets = K$3.state.filteredWallets, this.unsubscribe.push(K$3.subscribeKey("wallets", (e) => this.wallets = e), K$3.subscribeKey("recommended", (e) => this.recommended = e), K$3.subscribeKey("featured", (e) => this.featured = e), K$3.subscribeKey("filteredWallets", (e) => this.filteredWallets = e));
    }
    firstUpdated() {
      this.initialFetch(), this.createPaginationObserver();
    }
    disconnectedCallback() {
      var e;
      this.unsubscribe.forEach((i) => i()), (e = this.paginationObserver) == null || e.disconnect();
    }
    render() {
      return vA`
      <wui-grid
        data-scroll=${!this.loading}
        .padding=${["0", "s", "s", "s"]}
        columnGap="xxs"
        rowGap="l"
        justifyContent="space-between"
      >
        ${this.loading ? this.shimmerTemplate(16) : this.walletsTemplate()}
        ${this.paginationLoaderTemplate()}
      </wui-grid>
    `;
    }
    async initialFetch() {
      var i;
      this.loading = true;
      const e = (i = this.shadowRoot) == null ? void 0 : i.querySelector("wui-grid");
      e && (await K$3.fetchWalletsByPage({ page: 1 }), await e.animate([{ opacity: 1 }, { opacity: 0 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }).finished, this.loading = false, e.animate([{ opacity: 0 }, { opacity: 1 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }));
    }
    shimmerTemplate(e, i) {
      return [...Array(e)].map(() => vA`
        <wui-card-select-loader type="wallet" id=${St$1(i)}></wui-card-select-loader>
      `);
    }
    walletsTemplate() {
      var n;
      const e = ((n = this.filteredWallets) == null ? void 0 : n.length) > 0 ? X$3.uniqueBy([...this.featured, ...this.recommended, ...this.filteredWallets], "id") : X$3.uniqueBy([...this.featured, ...this.recommended, ...this.wallets], "id");
      return Wa.markWalletsAsInstalled(e).map((o) => vA`
        <w3m-all-wallets-list-item
          @click=${() => this.onConnectWallet(o)}
          .wallet=${o}
        ></w3m-all-wallets-list-item>
      `);
    }
    paginationLoaderTemplate() {
      const { wallets: e, recommended: i, featured: n, count: o } = K$3.state, t = window.innerWidth < 352 ? 3 : 4, a = e.length + i.length;
      let l = Math.ceil(a / t) * t - a + t;
      return l -= e.length ? n.length % t : 0, o === 0 && n.length > 0 ? null : o === 0 || [...n, ...e, ...i].length < o ? this.shimmerTemplate(l, bi) : null;
    }
    createPaginationObserver() {
      var i;
      const e = (i = this.shadowRoot) == null ? void 0 : i.querySelector(`#${bi}`);
      e && (this.paginationObserver = new IntersectionObserver(([n]) => {
        if (n != null && n.isIntersecting && !this.loading) {
          const { page: o, count: t, wallets: a } = K$3.state;
          a.length < t && K$3.fetchWalletsByPage({ page: o + 1 });
        }
      }), this.paginationObserver.observe(e));
    }
    onConnectWallet(e) {
      F$2.selectWalletConnector(e);
    }
  };
  pe$1.styles = Eo;
  Be$1([
    bt$1()
  ], pe$1.prototype, "loading", void 0);
  Be$1([
    bt$1()
  ], pe$1.prototype, "wallets", void 0);
  Be$1([
    bt$1()
  ], pe$1.prototype, "recommended", void 0);
  Be$1([
    bt$1()
  ], pe$1.prototype, "featured", void 0);
  Be$1([
    bt$1()
  ], pe$1.prototype, "filteredWallets", void 0);
  pe$1 = Be$1([
    x$1("w3m-all-wallets-list")
  ], pe$1);
  const Wo = Lr`
  wui-grid,
  wui-loading-spinner,
  wui-flex {
    height: 360px;
  }

  wui-grid {
    overflow: scroll;
    scrollbar-width: none;
    grid-auto-rows: min-content;
    grid-template-columns: repeat(auto-fill, 104px);
  }

  wui-grid[data-scroll='false'] {
    overflow: hidden;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-loading-spinner {
    justify-content: center;
    align-items: center;
  }

  @media (max-width: 350px) {
    wui-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
`;
  var It = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let Te$1 = class Te extends eo$1 {
    constructor() {
      super(...arguments), this.prevQuery = "", this.prevBadge = void 0, this.loading = true, this.query = "";
    }
    render() {
      return this.onSearch(), this.loading ? vA`<wui-loading-spinner color="accent-100"></wui-loading-spinner>` : this.walletsTemplate();
    }
    async onSearch() {
      (this.query.trim() !== this.prevQuery.trim() || this.badge !== this.prevBadge) && (this.prevQuery = this.query, this.prevBadge = this.badge, this.loading = true, await K$3.searchWallet({ search: this.query, badge: this.badge }), this.loading = false);
    }
    walletsTemplate() {
      const { search: e } = K$3.state, i = Wa.markWalletsAsInstalled(e);
      return e.length ? vA`
      <wui-grid
        data-testid="wallet-list"
        .padding=${["0", "s", "s", "s"]}
        rowGap="l"
        columnGap="xs"
        justifyContent="space-between"
      >
        ${i.map((n) => vA`
            <w3m-all-wallets-list-item
              @click=${() => this.onConnectWallet(n)}
              .wallet=${n}
              data-testid="wallet-search-item-${n.id}"
            ></w3m-all-wallets-list-item>
          `)}
      </wui-grid>
    ` : vA`
        <wui-flex
          data-testid="no-wallet-found"
          justifyContent="center"
          alignItems="center"
          gap="s"
          flexDirection="column"
        >
          <wui-icon-box
            size="lg"
            iconColor="fg-200"
            backgroundColor="fg-300"
            icon="wallet"
            background="transparent"
          ></wui-icon-box>
          <wui-text data-testid="no-wallet-found-text" color="fg-200" variant="paragraph-500">
            No Wallet found
          </wui-text>
        </wui-flex>
      `;
    }
    onConnectWallet(e) {
      F$2.selectWalletConnector(e);
    }
  };
  Te$1.styles = Wo;
  It([
    bt$1()
  ], Te$1.prototype, "loading", void 0);
  It([
    c$3()
  ], Te$1.prototype, "query", void 0);
  It([
    c$3()
  ], Te$1.prototype, "badge", void 0);
  Te$1 = It([
    x$1("w3m-all-wallets-search")
  ], Te$1);
  var ai = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let pt = class extends eo$1 {
    constructor() {
      super(...arguments), this.search = "", this.onDebouncedSearch = X$3.debounce((e) => {
        this.search = e;
      });
    }
    render() {
      const e = this.search.length >= 2;
      return vA`
      <wui-flex .padding=${["0", "s", "s", "s"]} gap="xs">
        <wui-search-bar @inputChange=${this.onInputChange.bind(this)}></wui-search-bar>
        <wui-certified-switch
          ?checked=${this.badge}
          @click=${this.onClick.bind(this)}
          data-testid="wui-certified-switch"
        ></wui-certified-switch>
        ${this.qrButtonTemplate()}
      </wui-flex>
      ${e || this.badge ? vA`<w3m-all-wallets-search
            query=${this.search}
            badge=${St$1(this.badge)}
          ></w3m-all-wallets-search>` : vA`<w3m-all-wallets-list badge=${St$1(this.badge)}></w3m-all-wallets-list>`}
    `;
    }
    onInputChange(e) {
      this.onDebouncedSearch(e.detail);
    }
    onClick() {
      if (this.badge === "certified") {
        this.badge = void 0;
        return;
      }
      this.badge = "certified", Bt$2.showSvg("Only WalletConnect certified", {
        icon: "walletConnectBrown",
        iconColor: "accent-100"
      });
    }
    qrButtonTemplate() {
      return X$3.isMobile() ? vA`
        <wui-icon-box
          size="lg"
          iconSize="xl"
          iconColor="accent-100"
          backgroundColor="accent-100"
          icon="qrCode"
          background="transparent"
          border
          borderColor="wui-accent-glass-010"
          @click=${this.onWalletConnectQr.bind(this)}
        ></wui-icon-box>
      ` : null;
    }
    onWalletConnectQr() {
      re$1.push("ConnectingWalletConnect");
    }
  };
  ai([
    bt$1()
  ], pt.prototype, "search", void 0);
  ai([
    bt$1()
  ], pt.prototype, "badge", void 0);
  pt = ai([
    x$1("w3m-all-wallets-view")
  ], pt);
  const So = Lr`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 11px 18px 11px var(--wui-spacing-s);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
    transition:
      color var(--wui-ease-out-power-1) var(--wui-duration-md),
      background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: color, background-color;
  }

  button[data-iconvariant='square'],
  button[data-iconvariant='square-blue'] {
    padding: 6px 18px 6px 9px;
  }

  button > wui-flex {
    flex: 1;
  }

  button > wui-image {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-3xl);
  }

  button > wui-icon {
    width: 36px;
    height: 36px;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  button > wui-icon-box[data-variant='blue'] {
    box-shadow: 0 0 0 2px var(--wui-color-accent-glass-005);
  }

  button > wui-icon-box[data-variant='overlay'] {
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  button > wui-icon-box[data-variant='square-blue'] {
    border-radius: var(--wui-border-radius-3xs);
    position: relative;
    border: none;
    width: 36px;
    height: 36px;
  }

  button > wui-icon-box[data-variant='square-blue']::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-accent-glass-010);
    pointer-events: none;
  }

  button > wui-icon:last-child {
    width: 14px;
    height: 14px;
  }

  button:disabled {
    color: var(--wui-color-gray-glass-020);
  }

  button[data-loading='true'] > wui-icon {
    opacity: 0;
  }

  wui-loading-spinner {
    position: absolute;
    right: 18px;
    top: 50%;
    transform: translateY(-50%);
  }
`;
  var X$1 = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let F = class extends eo$1 {
    constructor() {
      super(...arguments), this.tabIdx = void 0, this.variant = "icon", this.disabled = false, this.imageSrc = void 0, this.alt = void 0, this.chevron = false, this.loading = false;
    }
    render() {
      return vA`
      <button
        ?disabled=${this.loading ? true : !!this.disabled}
        data-loading=${this.loading}
        data-iconvariant=${St$1(this.iconVariant)}
        tabindex=${St$1(this.tabIdx)}
      >
        ${this.loadingTemplate()} ${this.visualTemplate()}
        <wui-flex gap="3xs">
          <slot></slot>
        </wui-flex>
        ${this.chevronTemplate()}
      </button>
    `;
    }
    visualTemplate() {
      if (this.variant === "image" && this.imageSrc)
        return vA`<wui-image src=${this.imageSrc} alt=${this.alt ?? "list item"}></wui-image>`;
      if (this.iconVariant === "square" && this.icon && this.variant === "icon")
        return vA`<wui-icon name=${this.icon}></wui-icon>`;
      if (this.variant === "icon" && this.icon && this.iconVariant) {
        const e = ["blue", "square-blue"].includes(this.iconVariant) ? "accent-100" : "fg-200", i = this.iconVariant === "square-blue" ? "mdl" : "md", n = this.iconSize ? this.iconSize : i;
        return vA`
        <wui-icon-box
          data-variant=${this.iconVariant}
          icon=${this.icon}
          iconSize=${n}
          background="transparent"
          iconColor=${e}
          backgroundColor=${e}
          size=${i}
        ></wui-icon-box>
      `;
      }
      return null;
    }
    loadingTemplate() {
      return this.loading ? vA`<wui-loading-spinner
        data-testid="wui-list-item-loading-spinner"
        color="fg-300"
      ></wui-loading-spinner>` : vA``;
    }
    chevronTemplate() {
      return this.chevron ? vA`<wui-icon size="inherit" color="fg-200" name="chevronRight"></wui-icon>` : null;
    }
  };
  F.styles = [IA, AA, So];
  X$1([
    c$3()
  ], F.prototype, "icon", void 0);
  X$1([
    c$3()
  ], F.prototype, "iconSize", void 0);
  X$1([
    c$3()
  ], F.prototype, "tabIdx", void 0);
  X$1([
    c$3()
  ], F.prototype, "variant", void 0);
  X$1([
    c$3()
  ], F.prototype, "iconVariant", void 0);
  X$1([
    c$3({ type: Boolean })
  ], F.prototype, "disabled", void 0);
  X$1([
    c$3()
  ], F.prototype, "imageSrc", void 0);
  X$1([
    c$3()
  ], F.prototype, "alt", void 0);
  X$1([
    c$3({ type: Boolean })
  ], F.prototype, "chevron", void 0);
  X$1([
    c$3({ type: Boolean })
  ], F.prototype, "loading", void 0);
  F = X$1([
    x$1("wui-list-item")
  ], F);
  var To = function(r, e, i, n) {
    var o = arguments.length, t = o < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, i) : n, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") t = Reflect.decorate(r, e, i, n);
    else for (var s = r.length - 1; s >= 0; s--) (a = r[s]) && (t = (o < 3 ? a(t) : o > 3 ? a(e, i, t) : a(e, i)) || t);
    return o > 3 && t && Object.defineProperty(e, i, t), t;
  };
  let mi = class extends eo$1 {
    constructor() {
      var e;
      super(...arguments), this.wallet = (e = re$1.state.data) == null ? void 0 : e.wallet;
    }
    render() {
      if (!this.wallet)
        throw new Error("w3m-downloads-view");
      return vA`
      <wui-flex gap="xs" flexDirection="column" .padding=${["s", "s", "l", "s"]}>
        ${this.chromeTemplate()} ${this.iosTemplate()} ${this.androidTemplate()}
        ${this.homepageTemplate()}
      </wui-flex>
    `;
    }
    chromeTemplate() {
      var e;
      return (e = this.wallet) != null && e.chrome_store ? vA`<wui-list-item
      variant="icon"
      icon="chromeStore"
      iconVariant="square"
      @click=${this.onChromeStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">Chrome Extension</wui-text>
    </wui-list-item>` : null;
    }
    iosTemplate() {
      var e;
      return (e = this.wallet) != null && e.app_store ? vA`<wui-list-item
      variant="icon"
      icon="appStore"
      iconVariant="square"
      @click=${this.onAppStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">iOS App</wui-text>
    </wui-list-item>` : null;
    }
    androidTemplate() {
      var e;
      return (e = this.wallet) != null && e.play_store ? vA`<wui-list-item
      variant="icon"
      icon="playStore"
      iconVariant="square"
      @click=${this.onPlayStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">Android App</wui-text>
    </wui-list-item>` : null;
    }
    homepageTemplate() {
      var e;
      return (e = this.wallet) != null && e.homepage ? vA`
      <wui-list-item
        variant="icon"
        icon="browser"
        iconVariant="square-blue"
        @click=${this.onHomePage.bind(this)}
        chevron
      >
        <wui-text variant="paragraph-500" color="fg-100">Website</wui-text>
      </wui-list-item>
    ` : null;
    }
    onChromeStore() {
      var e;
      (e = this.wallet) != null && e.chrome_store && X$3.openHref(this.wallet.chrome_store, "_blank");
    }
    onAppStore() {
      var e;
      (e = this.wallet) != null && e.app_store && X$3.openHref(this.wallet.app_store, "_blank");
    }
    onPlayStore() {
      var e;
      (e = this.wallet) != null && e.play_store && X$3.openHref(this.wallet.play_store, "_blank");
    }
    onHomePage() {
      var e;
      (e = this.wallet) != null && e.homepage && X$3.openHref(this.wallet.homepage, "_blank");
    }
  };
  mi = To([
    x$1("w3m-downloads-view")
  ], mi);

  var basicOoDKhpA = /*#__PURE__*/Object.freeze({
    __proto__: null,
    get W3mAllWalletsView () { return pt; },
    get W3mConnectingWcBasicView () { return qt; },
    get W3mDownloadsView () { return mi; }
  });

  const p = _e$3({
    message: "",
    open: false,
    triggerRect: {
      width: 0,
      height: 0,
      top: 0,
      left: 0
    },
    variant: "shade"
  }), Re = {
    state: p,
    subscribe(s) {
      return Qe$1(p, () => s(p));
    },
    subscribeKey(s, e) {
      return et$2(p, s, e);
    },
    showTooltip({ message: s, triggerRect: e, variant: t }) {
      p.open = true, p.message = s, p.triggerRect = e, p.variant = t;
    },
    hide() {
      p.open = false, p.message = "", p.triggerRect = {
        width: 0,
        height: 0,
        top: 0,
        left: 0
      };
    }
  }, O = At$1(Re), de = {
    isUnsupportedChainView() {
      return re$1.state.view === "UnsupportedChain" || re$1.state.view === "SwitchNetwork" && re$1.state.history.includes("UnsupportedChain");
    },
    async safeClose() {
      if (this.isUnsupportedChainView()) {
        ze$3.shake();
        return;
      }
      if (await Oi$1.isSIWXCloseDisabled()) {
        ze$3.shake();
        return;
      }
      ze$3.close();
    }
  }, $e = Lr`
  :host {
    display: block;
    border-radius: clamp(0px, var(--wui-border-radius-l), 44px);
    box-shadow: 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-modal-bg);
    overflow: hidden;
  }

  :host([data-embedded='true']) {
    box-shadow:
      0 0 0 1px var(--wui-color-gray-glass-005),
      0px 4px 12px 4px var(--w3m-card-embedded-shadow-color);
  }
`;
  var Ae = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o === null ? o = Object.getOwnPropertyDescriptor(e, t) : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let J = class extends eo$1 {
    render() {
      return vA`<slot></slot>`;
    }
  };
  J.styles = [IA, $e];
  J = Ae([
    x$1("wui-card")
  ], J);
  const Te = Lr`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-dark-glass-100);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-325);
    box-shadow: 0px 0px 16px 0px rgba(0, 0, 0, 0.25);
  }

  wui-flex {
    width: 100%;
  }

  wui-text {
    word-break: break-word;
    flex: 1;
  }

  .close {
    cursor: pointer;
  }

  .icon-box {
    height: 40px;
    width: 40px;
    border-radius: var(--wui-border-radius-3xs);
    background-color: var(--local-icon-bg-value);
  }
`;
  var _ = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let W = class extends eo$1 {
    constructor() {
      super(...arguments), this.message = "", this.backgroundColor = "accent-100", this.iconColor = "accent-100", this.icon = "info";
    }
    render() {
      return this.style.cssText = `
      --local-icon-bg-value: var(--wui-color-${this.backgroundColor});
   `, vA`
      <wui-flex flexDirection="row" justifyContent="space-between" alignItems="center">
        <wui-flex columnGap="xs" flexDirection="row" alignItems="center">
          <wui-flex
            flexDirection="row"
            alignItems="center"
            justifyContent="center"
            class="icon-box"
          >
            <wui-icon color=${this.iconColor} size="md" name=${this.icon}></wui-icon>
          </wui-flex>
          <wui-text variant="small-500" color="bg-350" data-testid="wui-alertbar-text"
            >${this.message}</wui-text
          >
        </wui-flex>
        <wui-icon
          class="close"
          color="bg-350"
          size="sm"
          name="close"
          @click=${this.onClose}
        ></wui-icon>
      </wui-flex>
    `;
    }
    onClose() {
      Fs.close();
    }
  };
  W.styles = [IA, Te];
  _([
    c$3()
  ], W.prototype, "message", void 0);
  _([
    c$3()
  ], W.prototype, "backgroundColor", void 0);
  _([
    c$3()
  ], W.prototype, "iconColor", void 0);
  _([
    c$3()
  ], W.prototype, "icon", void 0);
  W = _([
    x$1("wui-alertbar")
  ], W);
  const Oe = Lr`
  :host {
    display: block;
    position: absolute;
    top: var(--wui-spacing-s);
    left: var(--wui-spacing-l);
    right: var(--wui-spacing-l);
    opacity: 0;
    pointer-events: none;
  }
`;
  var we = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  const Ne = {
    info: {
      backgroundColor: "fg-350",
      iconColor: "fg-325",
      icon: "info"
    },
    success: {
      backgroundColor: "success-glass-reown-020",
      iconColor: "success-125",
      icon: "checkmark"
    },
    warning: {
      backgroundColor: "warning-glass-reown-020",
      iconColor: "warning-100",
      icon: "warningCircle"
    },
    error: {
      backgroundColor: "error-glass-reown-020",
      iconColor: "error-125",
      icon: "exclamationTriangle"
    }
  };
  let M = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.open = Fs.state.open, this.onOpen(true), this.unsubscribe.push(Fs.subscribeKey("open", (e) => {
        this.open = e, this.onOpen(false);
      }));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      const { message: e, variant: t } = Fs.state, o = Ne[t];
      return vA`
      <wui-alertbar
        message=${e}
        backgroundColor=${o == null ? void 0 : o.backgroundColor}
        iconColor=${o == null ? void 0 : o.iconColor}
        icon=${o == null ? void 0 : o.icon}
      ></wui-alertbar>
    `;
    }
    onOpen(e) {
      this.open ? (this.animate([
        { opacity: 0, transform: "scale(0.85)" },
        { opacity: 1, transform: "scale(1)" }
      ], {
        duration: 150,
        fill: "forwards",
        easing: "ease"
      }), this.style.cssText = "pointer-events: auto") : e || (this.animate([
        { opacity: 1, transform: "scale(1)" },
        { opacity: 0, transform: "scale(0.85)" }
      ], {
        duration: 150,
        fill: "forwards",
        easing: "ease"
      }), this.style.cssText = "pointer-events: none");
    }
  };
  M.styles = Oe;
  we([
    bt$1()
  ], M.prototype, "open", void 0);
  M = we([
    x$1("w3m-alertbar")
  ], M);
  const Ee = Lr`
  button {
    border-radius: var(--local-border-radius);
    color: var(--wui-color-fg-100);
    padding: var(--local-padding);
  }

  @media (max-width: 700px) {
    button {
      padding: var(--wui-spacing-s);
    }
  }

  button > wui-icon {
    pointer-events: none;
  }

  button:disabled > wui-icon {
    color: var(--wui-color-bg-300) !important;
  }

  button:disabled {
    background-color: transparent;
  }
`;
  var B = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let R = class extends eo$1 {
    constructor() {
      super(...arguments), this.size = "md", this.disabled = false, this.icon = "copy", this.iconColor = "inherit";
    }
    render() {
      const e = this.size === "lg" ? "--wui-border-radius-xs" : "--wui-border-radius-xxs", t = this.size === "lg" ? "--wui-spacing-1xs" : "--wui-spacing-2xs";
      return this.style.cssText = `
    --local-border-radius: var(${e});
    --local-padding: var(${t});
`, vA`
      <button ?disabled=${this.disabled}>
        <wui-icon color=${this.iconColor} size=${this.size} name=${this.icon}></wui-icon>
      </button>
    `;
    }
  };
  R.styles = [IA, AA, NA, Ee];
  B([
    c$3()
  ], R.prototype, "size", void 0);
  B([
    c$3({ type: Boolean })
  ], R.prototype, "disabled", void 0);
  B([
    c$3()
  ], R.prototype, "icon", void 0);
  B([
    c$3()
  ], R.prototype, "iconColor", void 0);
  R = B([
    x$1("wui-icon-link")
  ], R);
  const Ie = Lr`
  button {
    display: block;
    display: flex;
    align-items: center;
    padding: var(--wui-spacing-xxs);
    gap: var(--wui-spacing-xxs);
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-md);
    border-radius: var(--wui-border-radius-xxs);
  }

  wui-image {
    border-radius: 100%;
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  wui-icon-box {
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  button:active {
    background-color: var(--wui-color-gray-glass-005);
  }
`;
  var ue = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let V = class extends eo$1 {
    constructor() {
      super(...arguments), this.imageSrc = "";
    }
    render() {
      return vA`<button>
      ${this.imageTemplate()}
      <wui-icon size="xs" color="fg-200" name="chevronBottom"></wui-icon>
    </button>`;
    }
    imageTemplate() {
      return this.imageSrc ? vA`<wui-image src=${this.imageSrc} alt="select visual"></wui-image>` : vA`<wui-icon-box
      size="xxs"
      iconColor="fg-200"
      backgroundColor="fg-100"
      background="opaque"
      icon="networkPlaceholder"
    ></wui-icon-box>`;
    }
  };
  V.styles = [IA, AA, NA, Ie];
  ue([
    c$3()
  ], V.prototype, "imageSrc", void 0);
  V = ue([
    x$1("wui-select")
  ], V);
  const Pe = Lr`
  :host {
    height: 64px;
  }

  wui-text {
    text-transform: capitalize;
  }

  wui-flex.w3m-header-title {
    transform: translateY(0);
    opacity: 1;
  }

  wui-flex.w3m-header-title[view-direction='prev'] {
    animation:
      slide-down-out 120ms forwards var(--wui-ease-out-power-2),
      slide-down-in 120ms forwards var(--wui-ease-out-power-2);
    animation-delay: 0ms, 200ms;
  }

  wui-flex.w3m-header-title[view-direction='next'] {
    animation:
      slide-up-out 120ms forwards var(--wui-ease-out-power-2),
      slide-up-in 120ms forwards var(--wui-ease-out-power-2);
    animation-delay: 0ms, 200ms;
  }

  wui-icon-link[data-hidden='true'] {
    opacity: 0 !important;
    pointer-events: none;
  }

  @keyframes slide-up-out {
    from {
      transform: translateY(0px);
      opacity: 1;
    }
    to {
      transform: translateY(3px);
      opacity: 0;
    }
  }

  @keyframes slide-up-in {
    from {
      transform: translateY(-3px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes slide-down-out {
    from {
      transform: translateY(0px);
      opacity: 1;
    }
    to {
      transform: translateY(-3px);
      opacity: 0;
    }
  }

  @keyframes slide-down-in {
    from {
      transform: translateY(3px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
`;
  var y = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  const _e = ["SmartSessionList"];
  function G() {
    var r, c, N, k, j, L, U;
    const s = (c = (r = re$1.state.data) == null ? void 0 : r.connector) == null ? void 0 : c.name, e = (k = (N = re$1.state.data) == null ? void 0 : N.wallet) == null ? void 0 : k.name, t = (L = (j = re$1.state.data) == null ? void 0 : j.network) == null ? void 0 : L.name, o = e ?? s, n = F$2.getConnectors();
    return {
      Connect: `Connect ${n.length === 1 && ((U = n[0]) == null ? void 0 : U.id) === "w3m-email" ? "Email" : ""} Wallet`,
      Create: "Create Wallet",
      ChooseAccountName: void 0,
      Account: void 0,
      AccountSettings: void 0,
      AllWallets: "All Wallets",
      ApproveTransaction: "Approve Transaction",
      BuyInProgress: "Buy",
      ConnectingExternal: o ?? "Connect Wallet",
      ConnectingWalletConnect: o ?? "WalletConnect",
      ConnectingWalletConnectBasic: "WalletConnect",
      ConnectingSiwe: "Sign In",
      Convert: "Convert",
      ConvertSelectToken: "Select token",
      ConvertPreview: "Preview convert",
      Downloads: o ? `Get ${o}` : "Downloads",
      EmailLogin: "Email Login",
      EmailVerifyOtp: "Confirm Email",
      EmailVerifyDevice: "Register Device",
      GetWallet: "Get a wallet",
      Networks: "Choose Network",
      OnRampProviders: "Choose Provider",
      OnRampActivity: "Activity",
      OnRampTokenSelect: "Select Token",
      OnRampFiatSelect: "Select Currency",
      Pay: "How you pay",
      Profile: void 0,
      SwitchNetwork: t ?? "Switch Network",
      SwitchAddress: "Switch Address",
      Transactions: "Activity",
      UnsupportedChain: "Switch Network",
      UpgradeEmailWallet: "Upgrade your Wallet",
      UpdateEmailWallet: "Edit Email",
      UpdateEmailPrimaryOtp: "Confirm Current Email",
      UpdateEmailSecondaryOtp: "Confirm New Email",
      WhatIsABuy: "What is Buy?",
      RegisterAccountName: "Choose name",
      RegisterAccountNameSuccess: "",
      WalletReceive: "Receive",
      WalletCompatibleNetworks: "Compatible Networks",
      Swap: "Swap",
      SwapSelectToken: "Select token",
      SwapPreview: "Preview swap",
      WalletSend: "Send",
      WalletSendPreview: "Review send",
      WalletSendSelectToken: "Select Token",
      WhatIsANetwork: "What is a network?",
      WhatIsAWallet: "What is a wallet?",
      ConnectWallets: "Connect wallet",
      ConnectSocials: "All socials",
      ConnectingSocial: W$2.state.socialProvider ? W$2.state.socialProvider : "Connect Social",
      ConnectingMultiChain: "Select chain",
      ConnectingFarcaster: "Farcaster",
      SwitchActiveChain: "Switch chain",
      SmartSessionCreated: void 0,
      SmartSessionList: "Smart Sessions",
      SIWXSignMessage: "Sign In",
      PayLoading: "Payment in progress"
    };
  }
  let h$1 = class h extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.heading = G()[re$1.state.view], this.network = m.state.activeCaipNetwork, this.networkImage = Vu.getNetworkImage(this.network), this.showBack = false, this.prevHistoryLength = 1, this.view = re$1.state.view, this.viewDirection = "", this.headerText = G()[re$1.state.view], this.unsubscribe.push(Mt$2.subscribeNetworkImages(() => {
        this.networkImage = Vu.getNetworkImage(this.network);
      }), re$1.subscribeKey("view", (e) => {
        setTimeout(() => {
          this.view = e, this.headerText = G()[e];
        }, yI.ANIMATION_DURATIONS.HeaderText), this.onViewChange(), this.onHistoryChange();
      }), m.subscribeKey("activeCaipNetwork", (e) => {
        this.network = e, this.networkImage = Vu.getNetworkImage(this.network);
      }));
    }
    disconnectCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      return vA`
      <wui-flex .padding=${this.getPadding()} justifyContent="space-between" alignItems="center">
        ${this.leftHeaderTemplate()} ${this.titleTemplate()} ${this.rightHeaderTemplate()}
      </wui-flex>
    `;
    }
    onWalletHelp() {
      Pe$3.sendEvent({ type: "track", event: "CLICK_WALLET_HELP" }), re$1.push("WhatIsAWallet");
    }
    async onClose() {
      await de.safeClose();
    }
    rightHeaderTemplate() {
      var t, o, n;
      const e = (n = (o = (t = T$2) == null ? void 0 : t.state) == null ? void 0 : o.features) == null ? void 0 : n.smartSessions;
      return re$1.state.view !== "Account" || !e ? this.closeButtonTemplate() : vA`<wui-flex>
      <wui-icon-link
        icon="clock"
        @click=${() => re$1.push("SmartSessionList")}
        data-testid="w3m-header-smart-sessions"
      ></wui-icon-link>
      ${this.closeButtonTemplate()}
    </wui-flex> `;
    }
    closeButtonTemplate() {
      return vA`
      <wui-icon-link
        icon="close"
        @click=${this.onClose.bind(this)}
        data-testid="w3m-header-close"
      ></wui-icon-link>
    `;
    }
    titleTemplate() {
      const e = _e.includes(this.view);
      return vA`
      <wui-flex
        view-direction="${this.viewDirection}"
        class="w3m-header-title"
        alignItems="center"
        gap="xs"
      >
        <wui-text variant="paragraph-700" color="fg-100" data-testid="w3m-header-text"
          >${this.headerText}</wui-text
        >
        ${e ? vA`<wui-tag variant="main">Beta</wui-tag>` : null}
      </wui-flex>
    `;
    }
    leftHeaderTemplate() {
      var k;
      const { view: e } = re$1.state, t = e === "Connect", o = T$2.state.enableEmbedded, n = e === "ApproveTransaction", i = e === "ConnectingSiwe", r = e === "Account", c = T$2.state.enableNetworkSwitch, N = n || i || t && o;
      return r && c ? vA`<wui-select
        id="dynamic"
        data-testid="w3m-account-select-network"
        active-network=${St$1((k = this.network) == null ? void 0 : k.name)}
        @click=${this.onNetworks.bind(this)}
        imageSrc=${St$1(this.networkImage)}
      ></wui-select>` : this.showBack && !N ? vA`<wui-icon-link
        data-testid="header-back"
        id="dynamic"
        icon="chevronLeft"
        @click=${this.onGoBack.bind(this)}
      ></wui-icon-link>` : vA`<wui-icon-link
      data-hidden=${!t}
      id="dynamic"
      icon="helpCircle"
      @click=${this.onWalletHelp.bind(this)}
    ></wui-icon-link>`;
    }
    onNetworks() {
      this.isAllowedNetworkSwitch() && (Pe$3.sendEvent({ type: "track", event: "CLICK_NETWORKS" }), re$1.push("Networks"));
    }
    isAllowedNetworkSwitch() {
      const e = m.getAllRequestedCaipNetworks(), t = e ? e.length > 1 : false, o = e == null ? void 0 : e.find(({ id: n }) => {
        var i;
        return n === ((i = this.network) == null ? void 0 : i.id);
      });
      return t || !o;
    }
    getPadding() {
      return this.heading ? ["l", "2l", "l", "2l"] : ["0", "2l", "0", "2l"];
    }
    onViewChange() {
      const { history: e } = re$1.state;
      let t = yI.VIEW_DIRECTION.Next;
      e.length < this.prevHistoryLength && (t = yI.VIEW_DIRECTION.Prev), this.prevHistoryLength = e.length, this.viewDirection = t;
    }
    async onHistoryChange() {
      var o;
      const { history: e } = re$1.state, t = (o = this.shadowRoot) == null ? void 0 : o.querySelector("#dynamic");
      e.length > 1 && !this.showBack && t ? (await t.animate([{ opacity: 1 }, { opacity: 0 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }).finished, this.showBack = true, t.animate([{ opacity: 0 }, { opacity: 1 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      })) : e.length <= 1 && this.showBack && t && (await t.animate([{ opacity: 1 }, { opacity: 0 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }).finished, this.showBack = false, t.animate([{ opacity: 0 }, { opacity: 1 }], {
        duration: 200,
        fill: "forwards",
        easing: "ease"
      }));
    }
    onGoBack() {
      re$1.goBack();
    }
  };
  h$1.styles = Pe;
  y([
    bt$1()
  ], h$1.prototype, "heading", void 0);
  y([
    bt$1()
  ], h$1.prototype, "network", void 0);
  y([
    bt$1()
  ], h$1.prototype, "networkImage", void 0);
  y([
    bt$1()
  ], h$1.prototype, "showBack", void 0);
  y([
    bt$1()
  ], h$1.prototype, "prevHistoryLength", void 0);
  y([
    bt$1()
  ], h$1.prototype, "view", void 0);
  y([
    bt$1()
  ], h$1.prototype, "viewDirection", void 0);
  y([
    bt$1()
  ], h$1.prototype, "headerText", void 0);
  h$1 = y([
    x$1("w3m-header")
  ], h$1);
  const Be = Lr`
  :host {
    display: flex;
    column-gap: var(--wui-spacing-s);
    align-items: center;
    padding: var(--wui-spacing-xs) var(--wui-spacing-m) var(--wui-spacing-xs) var(--wui-spacing-xs);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-005);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-175);
    box-shadow:
      0px 14px 64px -4px rgba(0, 0, 0, 0.15),
      0px 8px 22px -6px rgba(0, 0, 0, 0.15);

    max-width: 300px;
  }

  :host wui-loading-spinner {
    margin-left: var(--wui-spacing-3xs);
  }
`;
  var A = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let b = class extends eo$1 {
    constructor() {
      super(...arguments), this.backgroundColor = "accent-100", this.iconColor = "accent-100", this.icon = "checkmark", this.message = "", this.loading = false, this.iconType = "default";
    }
    render() {
      return vA`
      ${this.templateIcon()}
      <wui-text variant="paragraph-500" color="fg-100" data-testid="wui-snackbar-message"
        >${this.message}</wui-text
      >
    `;
    }
    templateIcon() {
      return this.loading ? vA`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>` : this.iconType === "default" ? vA`<wui-icon size="xl" color=${this.iconColor} name=${this.icon}></wui-icon>` : vA`<wui-icon-box
      size="sm"
      iconSize="xs"
      iconColor=${this.iconColor}
      backgroundColor=${this.backgroundColor}
      icon=${this.icon}
      background="opaque"
    ></wui-icon-box>`;
    }
  };
  b.styles = [IA, Be];
  A([
    c$3()
  ], b.prototype, "backgroundColor", void 0);
  A([
    c$3()
  ], b.prototype, "iconColor", void 0);
  A([
    c$3()
  ], b.prototype, "icon", void 0);
  A([
    c$3()
  ], b.prototype, "message", void 0);
  A([
    c$3()
  ], b.prototype, "loading", void 0);
  A([
    c$3()
  ], b.prototype, "iconType", void 0);
  b = A([
    x$1("wui-snackbar")
  ], b);
  const De = Lr`
  :host {
    display: block;
    position: absolute;
    opacity: 0;
    pointer-events: none;
    top: 11px;
    left: 50%;
    width: max-content;
  }
`;
  var pe = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  const je = {
    loading: void 0,
    success: {
      backgroundColor: "success-100",
      iconColor: "success-100",
      icon: "checkmark"
    },
    error: {
      backgroundColor: "error-100",
      iconColor: "error-100",
      icon: "close"
    }
  };
  let X = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.timeout = void 0, this.open = Bt$2.state.open, this.unsubscribe.push(Bt$2.subscribeKey("open", (e) => {
        this.open = e, this.onOpen();
      }));
    }
    disconnectedCallback() {
      clearTimeout(this.timeout), this.unsubscribe.forEach((e) => e());
    }
    render() {
      const { message: e, variant: t, svg: o } = Bt$2.state, n = je[t], { icon: i, iconColor: r } = o ?? n ?? {};
      return vA`
      <wui-snackbar
        message=${e}
        backgroundColor=${n == null ? void 0 : n.backgroundColor}
        iconColor=${r}
        icon=${i}
        .loading=${t === "loading"}
      ></wui-snackbar>
    `;
    }
    onOpen() {
      clearTimeout(this.timeout), this.open ? (this.animate([
        { opacity: 0, transform: "translateX(-50%) scale(0.85)" },
        { opacity: 1, transform: "translateX(-50%) scale(1)" }
      ], {
        duration: 150,
        fill: "forwards",
        easing: "ease"
      }), this.timeout && clearTimeout(this.timeout), Bt$2.state.autoClose && (this.timeout = setTimeout(() => Bt$2.hide(), 2500))) : this.animate([
        { opacity: 1, transform: "translateX(-50%) scale(1)" },
        { opacity: 0, transform: "translateX(-50%) scale(0.85)" }
      ], {
        duration: 150,
        fill: "forwards",
        easing: "ease"
      });
    }
  };
  X.styles = De;
  pe([
    bt$1()
  ], X.prototype, "open", void 0);
  X = pe([
    x$1("w3m-snackbar")
  ], X);
  const Le = Lr`
  :host {
    pointer-events: none;
  }

  :host > wui-flex {
    display: var(--w3m-tooltip-display);
    opacity: var(--w3m-tooltip-opacity);
    padding: 9px var(--wui-spacing-s) 10px var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);
    color: var(--wui-color-bg-100);
    position: fixed;
    top: var(--w3m-tooltip-top);
    left: var(--w3m-tooltip-left);
    transform: translate(calc(-50% + var(--w3m-tooltip-parent-width)), calc(-100% - 8px));
    max-width: calc(var(--w3m-modal-width) - var(--wui-spacing-xl));
    transition: opacity 0.2s var(--wui-ease-out-power-2);
    will-change: opacity;
  }

  :host([data-variant='shade']) > wui-flex {
    background-color: var(--wui-color-bg-150);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  :host([data-variant='shade']) > wui-flex > wui-text {
    color: var(--wui-color-fg-150);
  }

  :host([data-variant='fill']) > wui-flex {
    background-color: var(--wui-color-fg-100);
    border: none;
  }

  wui-icon {
    position: absolute;
    width: 12px !important;
    height: 4px !important;
    color: var(--wui-color-bg-150);
  }

  wui-icon[data-placement='top'] {
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 95%);
  }

  wui-icon[data-placement='bottom'] {
    top: 0;
    left: 50%;
    transform: translate(-50%, -95%) rotate(180deg);
  }

  wui-icon[data-placement='right'] {
    top: 50%;
    left: 0;
    transform: translate(-65%, -50%) rotate(90deg);
  }

  wui-icon[data-placement='left'] {
    top: 50%;
    right: 0%;
    transform: translate(65%, -50%) rotate(270deg);
  }
`;
  var D = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let $ = class extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.open = O.state.open, this.message = O.state.message, this.triggerRect = O.state.triggerRect, this.variant = O.state.variant, this.unsubscribe.push(O.subscribe((e) => {
        this.open = e.open, this.message = e.message, this.triggerRect = e.triggerRect, this.variant = e.variant;
      }));
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e());
    }
    render() {
      this.dataset.variant = this.variant;
      const e = this.triggerRect.top, t = this.triggerRect.left;
      return this.style.cssText = `
    --w3m-tooltip-top: ${e}px;
    --w3m-tooltip-left: ${t}px;
    --w3m-tooltip-parent-width: ${this.triggerRect.width / 2}px;
    --w3m-tooltip-display: ${this.open ? "flex" : "none"};
    --w3m-tooltip-opacity: ${this.open ? 1 : 0};
    `, vA`<wui-flex>
      <wui-icon data-placement="top" color="fg-100" size="inherit" name="cursor"></wui-icon>
      <wui-text color="inherit" variant="small-500">${this.message}</wui-text>
    </wui-flex>`;
    }
  };
  $.styles = [Le];
  D([
    bt$1()
  ], $.prototype, "open", void 0);
  D([
    bt$1()
  ], $.prototype, "message", void 0);
  D([
    bt$1()
  ], $.prototype, "triggerRect", void 0);
  D([
    bt$1()
  ], $.prototype, "variant", void 0);
  $ = D([
    x$1("w3m-tooltip"),
    x$1("w3m-tooltip")
  ], $);
  const Ue = Lr`
  :host {
    --prev-height: 0px;
    --new-height: 0px;
    display: block;
  }

  div.w3m-router-container {
    transform: translateY(0);
    opacity: 1;
  }

  div.w3m-router-container[view-direction='prev'] {
    animation:
      slide-left-out 150ms forwards ease,
      slide-left-in 150ms forwards ease;
    animation-delay: 0ms, 200ms;
  }

  div.w3m-router-container[view-direction='next'] {
    animation:
      slide-right-out 150ms forwards ease,
      slide-right-in 150ms forwards ease;
    animation-delay: 0ms, 200ms;
  }

  @keyframes slide-left-out {
    from {
      transform: translateX(0px);
      opacity: 1;
    }
    to {
      transform: translateX(10px);
      opacity: 0;
    }
  }

  @keyframes slide-left-in {
    from {
      transform: translateX(-10px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slide-right-out {
    from {
      transform: translateX(0px);
      opacity: 1;
    }
    to {
      transform: translateX(-10px);
      opacity: 0;
    }
  }

  @keyframes slide-right-in {
    from {
      transform: translateX(10px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
`;
  var Q = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  let I = class extends eo$1 {
    constructor() {
      super(), this.resizeObserver = void 0, this.prevHeight = "0px", this.prevHistoryLength = 1, this.unsubscribe = [], this.view = re$1.state.view, this.viewDirection = "", this.unsubscribe.push(re$1.subscribeKey("view", (e) => this.onViewChange(e)));
    }
    firstUpdated() {
      var e;
      this.resizeObserver = new ResizeObserver(([t]) => {
        const o = `${t == null ? void 0 : t.contentRect.height}px`;
        this.prevHeight !== "0px" && (this.style.setProperty("--prev-height", this.prevHeight), this.style.setProperty("--new-height", o), this.style.animation = "w3m-view-height 150ms forwards ease", this.style.height = "auto"), setTimeout(() => {
          this.prevHeight = o, this.style.animation = "unset";
        }, yI.ANIMATION_DURATIONS.ModalHeight);
      }), (e = this.resizeObserver) == null || e.observe(this.getWrapper());
    }
    disconnectedCallback() {
      var e;
      (e = this.resizeObserver) == null || e.unobserve(this.getWrapper()), this.unsubscribe.forEach((t) => t());
    }
    render() {
      return vA`<div class="w3m-router-container" view-direction="${this.viewDirection}">
      ${this.viewTemplate()}
    </div>`;
    }
    viewTemplate() {
      switch (this.view) {
        case "AccountSettings":
          return vA`<w3m-account-settings-view></w3m-account-settings-view>`;
        case "Account":
          return vA`<w3m-account-view></w3m-account-view>`;
        case "AllWallets":
          return vA`<w3m-all-wallets-view></w3m-all-wallets-view>`;
        case "ApproveTransaction":
          return vA`<w3m-approve-transaction-view></w3m-approve-transaction-view>`;
        case "BuyInProgress":
          return vA`<w3m-buy-in-progress-view></w3m-buy-in-progress-view>`;
        case "ChooseAccountName":
          return vA`<w3m-choose-account-name-view></w3m-choose-account-name-view>`;
        case "Connect":
          return vA`<w3m-connect-view></w3m-connect-view>`;
        case "Create":
          return vA`<w3m-connect-view walletGuide="explore"></w3m-connect-view>`;
        case "ConnectingWalletConnect":
          return vA`<w3m-connecting-wc-view></w3m-connecting-wc-view>`;
        case "ConnectingWalletConnectBasic":
          return vA`<w3m-connecting-wc-basic-view></w3m-connecting-wc-basic-view>`;
        case "ConnectingExternal":
          return vA`<w3m-connecting-external-view></w3m-connecting-external-view>`;
        case "ConnectingSiwe":
          return vA`<w3m-connecting-siwe-view></w3m-connecting-siwe-view>`;
        case "ConnectWallets":
          return vA`<w3m-connect-wallets-view></w3m-connect-wallets-view>`;
        case "ConnectSocials":
          return vA`<w3m-connect-socials-view></w3m-connect-socials-view>`;
        case "ConnectingSocial":
          return vA`<w3m-connecting-social-view></w3m-connecting-social-view>`;
        case "Downloads":
          return vA`<w3m-downloads-view></w3m-downloads-view>`;
        case "EmailLogin":
          return vA`<w3m-email-login-view></w3m-email-login-view>`;
        case "EmailVerifyOtp":
          return vA`<w3m-email-verify-otp-view></w3m-email-verify-otp-view>`;
        case "EmailVerifyDevice":
          return vA`<w3m-email-verify-device-view></w3m-email-verify-device-view>`;
        case "GetWallet":
          return vA`<w3m-get-wallet-view></w3m-get-wallet-view>`;
        case "Networks":
          return vA`<w3m-networks-view></w3m-networks-view>`;
        case "SwitchNetwork":
          return vA`<w3m-network-switch-view></w3m-network-switch-view>`;
        case "Profile":
          return vA`<w3m-profile-view></w3m-profile-view>`;
        case "SwitchAddress":
          return vA`<w3m-switch-address-view></w3m-switch-address-view>`;
        case "Transactions":
          return vA`<w3m-transactions-view></w3m-transactions-view>`;
        case "OnRampProviders":
          return vA`<w3m-onramp-providers-view></w3m-onramp-providers-view>`;
        case "OnRampActivity":
          return vA`<w3m-onramp-activity-view></w3m-onramp-activity-view>`;
        case "OnRampTokenSelect":
          return vA`<w3m-onramp-token-select-view></w3m-onramp-token-select-view>`;
        case "OnRampFiatSelect":
          return vA`<w3m-onramp-fiat-select-view></w3m-onramp-fiat-select-view>`;
        case "UpgradeEmailWallet":
          return vA`<w3m-upgrade-wallet-view></w3m-upgrade-wallet-view>`;
        case "UpdateEmailWallet":
          return vA`<w3m-update-email-wallet-view></w3m-update-email-wallet-view>`;
        case "UpdateEmailPrimaryOtp":
          return vA`<w3m-update-email-primary-otp-view></w3m-update-email-primary-otp-view>`;
        case "UpdateEmailSecondaryOtp":
          return vA`<w3m-update-email-secondary-otp-view></w3m-update-email-secondary-otp-view>`;
        case "UnsupportedChain":
          return vA`<w3m-unsupported-chain-view></w3m-unsupported-chain-view>`;
        case "Swap":
          return vA`<w3m-swap-view></w3m-swap-view>`;
        case "SwapSelectToken":
          return vA`<w3m-swap-select-token-view></w3m-swap-select-token-view>`;
        case "SwapPreview":
          return vA`<w3m-swap-preview-view></w3m-swap-preview-view>`;
        case "WalletSend":
          return vA`<w3m-wallet-send-view></w3m-wallet-send-view>`;
        case "WalletSendSelectToken":
          return vA`<w3m-wallet-send-select-token-view></w3m-wallet-send-select-token-view>`;
        case "WalletSendPreview":
          return vA`<w3m-wallet-send-preview-view></w3m-wallet-send-preview-view>`;
        case "WhatIsABuy":
          return vA`<w3m-what-is-a-buy-view></w3m-what-is-a-buy-view>`;
        case "WalletReceive":
          return vA`<w3m-wallet-receive-view></w3m-wallet-receive-view>`;
        case "WalletCompatibleNetworks":
          return vA`<w3m-wallet-compatible-networks-view></w3m-wallet-compatible-networks-view>`;
        case "WhatIsAWallet":
          return vA`<w3m-what-is-a-wallet-view></w3m-what-is-a-wallet-view>`;
        case "ConnectingMultiChain":
          return vA`<w3m-connecting-multi-chain-view></w3m-connecting-multi-chain-view>`;
        case "WhatIsANetwork":
          return vA`<w3m-what-is-a-network-view></w3m-what-is-a-network-view>`;
        case "ConnectingFarcaster":
          return vA`<w3m-connecting-farcaster-view></w3m-connecting-farcaster-view>`;
        case "SwitchActiveChain":
          return vA`<w3m-switch-active-chain-view></w3m-switch-active-chain-view>`;
        case "RegisterAccountName":
          return vA`<w3m-register-account-name-view></w3m-register-account-name-view>`;
        case "RegisterAccountNameSuccess":
          return vA`<w3m-register-account-name-success-view></w3m-register-account-name-success-view>`;
        case "SmartSessionCreated":
          return vA`<w3m-smart-session-created-view></w3m-smart-session-created-view>`;
        case "SmartSessionList":
          return vA`<w3m-smart-session-list-view></w3m-smart-session-list-view>`;
        case "SIWXSignMessage":
          return vA`<w3m-siwx-sign-message-view></w3m-siwx-sign-message-view>`;
        case "Pay":
          return vA`<w3m-pay-view></w3m-pay-view>`;
        case "PayLoading":
          return vA`<w3m-pay-loading-view></w3m-pay-loading-view>`;
        default:
          return vA`<w3m-connect-view></w3m-connect-view>`;
      }
    }
    onViewChange(e) {
      O.hide();
      let t = yI.VIEW_DIRECTION.Next;
      const { history: o } = re$1.state;
      o.length < this.prevHistoryLength && (t = yI.VIEW_DIRECTION.Prev), this.prevHistoryLength = o.length, this.viewDirection = t, setTimeout(() => {
        this.view = e;
      }, yI.ANIMATION_DURATIONS.ViewTransition);
    }
    getWrapper() {
      var e;
      return (e = this.shadowRoot) == null ? void 0 : e.querySelector("div");
    }
  };
  I.styles = Ue;
  Q([
    bt$1()
  ], I.prototype, "view", void 0);
  Q([
    bt$1()
  ], I.prototype, "viewDirection", void 0);
  I = Q([
    x$1("w3m-router")
  ], I);
  const ze = Lr`
  :host {
    z-index: var(--w3m-z-index);
    display: block;
    backface-visibility: hidden;
    will-change: opacity;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    opacity: 0;
    background-color: var(--wui-cover);
    transition: opacity 0.2s var(--wui-ease-out-power-2);
    will-change: opacity;
  }

  :host(.open) {
    opacity: 1;
  }

  :host(.appkit-modal) {
    position: relative;
    pointer-events: unset;
    background: none;
    width: 100%;
    opacity: 1;
  }

  wui-card {
    max-width: var(--w3m-modal-width);
    width: 100%;
    position: relative;
    animation: zoom-in 0.2s var(--wui-ease-out-power-2);
    animation-fill-mode: backwards;
    outline: none;
    transition:
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius, background-color;
  }

  :host(.appkit-modal) wui-card {
    max-width: 400px;
  }

  wui-card[shake='true'] {
    animation:
      zoom-in 0.2s var(--wui-ease-out-power-2),
      w3m-shake 0.5s var(--wui-ease-out-power-2);
  }

  wui-flex {
    overflow-x: hidden;
    overflow-y: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
  }

  @media (max-height: 700px) and (min-width: 431px) {
    wui-flex {
      align-items: flex-start;
    }

    wui-card {
      margin: var(--wui-spacing-xxl) 0px;
    }
  }

  @media (max-width: 430px) {
    wui-flex {
      align-items: flex-end;
    }

    wui-card {
      max-width: 100%;
      border-bottom-left-radius: var(--local-border-bottom-mobile-radius);
      border-bottom-right-radius: var(--local-border-bottom-mobile-radius);
      border-bottom: none;
      animation: slide-in 0.2s var(--wui-ease-out-power-2);
    }

    wui-card[shake='true'] {
      animation:
        slide-in 0.2s var(--wui-ease-out-power-2),
        w3m-shake 0.5s var(--wui-ease-out-power-2);
    }
  }

  @keyframes zoom-in {
    0% {
      transform: scale(0.95) translateY(0);
    }
    100% {
      transform: scale(1) translateY(0);
    }
  }

  @keyframes slide-in {
    0% {
      transform: scale(1) translateY(50px);
    }
    100% {
      transform: scale(1) translateY(0);
    }
  }

  @keyframes w3m-shake {
    0% {
      transform: scale(1) rotate(0deg);
    }
    20% {
      transform: scale(1) rotate(-1deg);
    }
    40% {
      transform: scale(1) rotate(1.5deg);
    }
    60% {
      transform: scale(1) rotate(-1.5deg);
    }
    80% {
      transform: scale(1) rotate(1deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
    }
  }

  @keyframes w3m-view-height {
    from {
      height: var(--prev-height);
    }
    to {
      height: var(--new-height);
    }
  }
`;
  var C$1 = function(s, e, t, o) {
    var n = arguments.length, i = n < 3 ? e : o, r;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(s, e, t, o);
    else for (var c = s.length - 1; c >= 0; c--) (r = s[c]) && (i = (n < 3 ? r(i) : n > 3 ? r(e, t, i) : r(e, t)) || i);
    return n > 3 && i && Object.defineProperty(e, t, i), i;
  };
  const ae = "scroll-lock";
  class x extends eo$1 {
    constructor() {
      super(), this.unsubscribe = [], this.abortController = void 0, this.hasPrefetched = false, this.enableEmbedded = T$2.state.enableEmbedded, this.open = ze$3.state.open, this.caipAddress = m.state.activeCaipAddress, this.caipNetwork = m.state.activeCaipNetwork, this.shake = ze$3.state.shake, this.filterByNamespace = F$2.state.filterByNamespace, this.initializeTheming(), K$3.prefetchAnalyticsConfig(), this.unsubscribe.push(ze$3.subscribeKey("open", (e) => e ? this.onOpen() : this.onClose()), ze$3.subscribeKey("shake", (e) => this.shake = e), m.subscribeKey("activeCaipNetwork", (e) => this.onNewNetwork(e)), m.subscribeKey("activeCaipAddress", (e) => this.onNewAddress(e)), T$2.subscribeKey("enableEmbedded", (e) => this.enableEmbedded = e), F$2.subscribeKey("filterByNamespace", (e) => {
        var t;
        this.filterByNamespace !== e && !((t = m.getAccountData(e)) != null && t.caipAddress) && (K$3.fetchRecommendedWallets(), this.filterByNamespace = e);
      }));
    }
    firstUpdated() {
      if (this.caipAddress) {
        if (this.enableEmbedded) {
          ze$3.close(), this.prefetch();
          return;
        }
        this.onNewAddress(this.caipAddress);
      }
      this.open && this.onOpen(), this.enableEmbedded && this.prefetch();
    }
    disconnectedCallback() {
      this.unsubscribe.forEach((e) => e()), this.onRemoveKeyboardListener();
    }
    render() {
      return this.style.cssText = `
      --local-border-bottom-mobile-radius: ${this.enableEmbedded ? "clamp(0px, var(--wui-border-radius-l), 44px)" : "0px"};
    `, this.enableEmbedded ? vA`${this.contentTemplate()}
        <w3m-tooltip></w3m-tooltip> ` : this.open ? vA`
          <wui-flex @click=${this.onOverlayClick.bind(this)} data-testid="w3m-modal-overlay">
            ${this.contentTemplate()}
          </wui-flex>
          <w3m-tooltip></w3m-tooltip>
        ` : null;
    }
    contentTemplate() {
      return vA` <wui-card
      shake="${this.shake}"
      data-embedded="${St$1(this.enableEmbedded)}"
      role="alertdialog"
      aria-modal="true"
      tabindex="0"
      data-testid="w3m-modal-card"
    >
      <w3m-header></w3m-header>
      <w3m-router></w3m-router>
      <w3m-snackbar></w3m-snackbar>
      <w3m-alertbar></w3m-alertbar>
    </wui-card>`;
    }
    async onOverlayClick(e) {
      e.target === e.currentTarget && await this.handleClose();
    }
    async handleClose() {
      await de.safeClose();
    }
    initializeTheming() {
      const { themeVariables: e, themeMode: t } = wt$2.state, o = w.getColorTheme(t);
      CA(e, o);
    }
    onClose() {
      this.open = false, this.classList.remove("open"), this.onScrollUnlock(), Bt$2.hide(), this.onRemoveKeyboardListener();
    }
    onOpen() {
      this.open = true, this.classList.add("open"), this.onScrollLock(), this.onAddKeyboardListener();
    }
    onScrollLock() {
      const e = document.createElement("style");
      e.dataset.w3m = ae, e.textContent = `
      body {
        touch-action: none;
        overflow: hidden;
        overscroll-behavior: contain;
      }
      w3m-modal {
        pointer-events: auto;
      }
    `, document.head.appendChild(e);
    }
    onScrollUnlock() {
      const e = document.head.querySelector(`style[data-w3m="${ae}"]`);
      e && e.remove();
    }
    onAddKeyboardListener() {
      var t;
      this.abortController = new AbortController();
      const e = (t = this.shadowRoot) == null ? void 0 : t.querySelector("wui-card");
      e == null || e.focus(), window.addEventListener("keydown", (o) => {
        if (o.key === "Escape")
          this.handleClose();
        else if (o.key === "Tab") {
          const { tagName: n } = o.target;
          n && !n.includes("W3M-") && !n.includes("WUI-") && (e == null || e.focus());
        }
      }, this.abortController);
    }
    onRemoveKeyboardListener() {
      var e;
      (e = this.abortController) == null || e.abort(), this.abortController = void 0;
    }
    async onNewAddress(e) {
      const t = m.state.isSwitchingNamespace, o = X$3.getPlainAddress(e);
      !o && !t ? ze$3.close() : t && o && re$1.goBack(), await Oi$1.initializeIfEnabled(), this.caipAddress = e, m.setIsSwitchingNamespace(false);
    }
    onNewNetwork(e) {
      var Z, ee, te;
      const t = this.caipNetwork, o = (Z = t == null ? void 0 : t.caipNetworkId) == null ? void 0 : Z.toString(), n = t == null ? void 0 : t.chainNamespace, i = (ee = e == null ? void 0 : e.caipNetworkId) == null ? void 0 : ee.toString(), r = e == null ? void 0 : e.chainNamespace, c = o !== i, k = c && !(n !== r), j = (t == null ? void 0 : t.name) === z$3.UNSUPPORTED_NETWORK_NAME, L = re$1.state.view === "ConnectingExternal", U = !((te = m.getAccountData(e == null ? void 0 : e.chainNamespace)) != null && te.caipAddress), me = re$1.state.view === "UnsupportedChain", he = ze$3.state.open;
      let z = false;
      he && !L && (U ? c && (z = true) : (me || k && !j) && (z = true)), z && re$1.state.view !== "SIWXSignMessage" && re$1.goBack(), this.caipNetwork = e;
    }
    prefetch() {
      this.hasPrefetched || (K$3.prefetch(), K$3.fetchWalletsByPage({ page: 1 }), this.hasPrefetched = true);
    }
  }
  x.styles = ze;
  C$1([
    c$3({ type: Boolean })
  ], x.prototype, "enableEmbedded", void 0);
  C$1([
    bt$1()
  ], x.prototype, "open", void 0);
  C$1([
    bt$1()
  ], x.prototype, "caipAddress", void 0);
  C$1([
    bt$1()
  ], x.prototype, "caipNetwork", void 0);
  C$1([
    bt$1()
  ], x.prototype, "shake", void 0);
  C$1([
    bt$1()
  ], x.prototype, "filterByNamespace", void 0);
  let ne = class extends x {
  };
  ne = C$1([
    x$1("w3m-modal")
  ], ne);
  let se = class extends x {
  };
  se = C$1([
    x$1("appkit-modal")
  ], se);

  var w3mModalZgSRIMCD = /*#__PURE__*/Object.freeze({
    __proto__: null,
    get AppKitModal () { return se; },
    get W3mModal () { return ne; },
    W3mModalBase: x
  });

  const o$k = EA`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M7.0023 0.875C7.48571 0.875 7.8776 1.26675 7.8776 1.75V6.125H12.2541C12.7375 6.125 13.1294 6.51675 13.1294 7C13.1294 7.48325 12.7375 7.875 12.2541 7.875H7.8776V12.25C7.8776 12.7332 7.48571 13.125 7.0023 13.125C6.51889 13.125 6.12701 12.7332 6.12701 12.25V7.875H1.75054C1.26713 7.875 0.875244 7.48325 0.875244 7C0.875244 6.51675 1.26713 6.125 1.75054 6.125H6.12701V1.75C6.12701 1.26675 6.51889 0.875 7.0023 0.875Z"
    fill="#667dff"
  /></svg
>`;

  var addCaGj1Avh = /*#__PURE__*/Object.freeze({
    __proto__: null,
    addSvg: o$k
  });

  const o$j = EA`<svg fill="none" viewBox="0 0 24 24">
  <path
    style="fill: var(--wui-color-accent-100);"
    d="M10.2 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM10.2 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0Z"
  />
</svg>`;

  var allWalletsCuHPigW6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    allWalletsSvg: o$j
  });

  const e$i = EA`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10.5 2.42908C6.31875 2.42908 2.92859 5.81989 2.92859 10.0034C2.92859 14.1869 6.31875 17.5777 10.5 17.5777C14.6813 17.5777 18.0714 14.1869 18.0714 10.0034C18.0714 5.81989 14.6813 2.42908 10.5 2.42908ZM0.928589 10.0034C0.928589 4.71596 5.21355 0.429077 10.5 0.429077C15.7865 0.429077 20.0714 4.71596 20.0714 10.0034C20.0714 15.2908 15.7865 19.5777 10.5 19.5777C5.21355 19.5777 0.928589 15.2908 0.928589 10.0034ZM10.5 5.75003C11.0523 5.75003 11.5 6.19774 11.5 6.75003L11.5 10.8343L12.7929 9.54137C13.1834 9.15085 13.8166 9.15085 14.2071 9.54137C14.5976 9.9319 14.5976 10.5651 14.2071 10.9556L11.2071 13.9556C10.8166 14.3461 10.1834 14.3461 9.79291 13.9556L6.79291 10.9556C6.40239 10.5651 6.40239 9.9319 6.79291 9.54137C7.18343 9.15085 7.8166 9.15085 8.20712 9.54137L9.50002 10.8343L9.50002 6.75003C9.50002 6.19774 9.94773 5.75003 10.5 5.75003Z"
    clip-rule="evenodd"
  /></svg
>`;

  var arrowBottomCircleCYY8uLvQ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    arrowBottomCircleSvg: e$i
  });

  const e$h = EA`
<svg width="36" height="36">
  <path
    d="M28.724 0H7.271A7.269 7.269 0 0 0 0 7.272v21.46A7.268 7.268 0 0 0 7.271 36H28.73A7.272 7.272 0 0 0 36 28.728V7.272A7.275 7.275 0 0 0 28.724 0Z"
    fill="url(#a)"
  />
  <path
    d="m17.845 8.271.729-1.26a1.64 1.64 0 1 1 2.843 1.638l-7.023 12.159h5.08c1.646 0 2.569 1.935 1.853 3.276H6.434a1.632 1.632 0 0 1-1.638-1.638c0-.909.73-1.638 1.638-1.638h4.176l5.345-9.265-1.67-2.898a1.642 1.642 0 0 1 2.844-1.638l.716 1.264Zm-6.317 17.5-1.575 2.732a1.64 1.64 0 1 1-2.844-1.638l1.17-2.025c1.323-.41 2.398-.095 3.249.931Zm13.56-4.954h4.262c.909 0 1.638.729 1.638 1.638 0 .909-.73 1.638-1.638 1.638h-2.367l1.597 2.772c.45.788.185 1.782-.602 2.241a1.642 1.642 0 0 1-2.241-.603c-2.69-4.666-4.711-8.159-6.052-10.485-1.372-2.367-.391-4.743.576-5.549 1.075 1.846 2.682 4.631 4.828 8.348Z"
    fill="#fff"
  />
  <defs>
    <linearGradient id="a" x1="18" y1="0" x2="18" y2="36" gradientUnits="userSpaceOnUse">
      <stop stop-color="#18BFFB" />
      <stop offset="1" stop-color="#2072F3" />
    </linearGradient>
  </defs>
</svg>`;

  var appStoreDUxNW7lI = /*#__PURE__*/Object.freeze({
    __proto__: null,
    appStoreSvg: e$h
  });

  const f$1 = EA`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#000" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M28.77 23.3c-.69 1.99-2.75 5.52-4.87 5.56-1.4.03-1.86-.84-3.46-.84-1.61 0-2.12.81-3.45.86-2.25.1-5.72-5.1-5.72-9.62 0-4.15 2.9-6.2 5.42-6.25 1.36-.02 2.64.92 3.47.92.83 0 2.38-1.13 4.02-.97.68.03 2.6.28 3.84 2.08-3.27 2.14-2.76 6.61.75 8.25ZM24.2 7.88c-2.47.1-4.49 2.69-4.2 4.84 2.28.17 4.47-2.39 4.2-4.84Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

  var appleCINi0cqP = /*#__PURE__*/Object.freeze({
    __proto__: null,
    appleSvg: f$1
  });

  const e$g = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 1.99a1 1 0 0 1 1 1v7.58l2.46-2.46a1 1 0 0 1 1.41 1.42L7.7 13.69a1 1 0 0 1-1.41 0L2.12 9.53A1 1 0 0 1 3.54 8.1L6 10.57V3a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var arrowBottomDHaJQncA = /*#__PURE__*/Object.freeze({
    __proto__: null,
    arrowBottomSvg: e$g
  });

  const o$i = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13 7.99a1 1 0 0 1-1 1H4.4l2.46 2.46a1 1 0 1 1-1.41 1.41L1.29 8.7a1 1 0 0 1 0-1.41L5.46 3.1a1 1 0 0 1 1.41 1.42L4.41 6.99H12a1 1 0 0 1 1 1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var arrowLeftDiMGVWlz = /*#__PURE__*/Object.freeze({
    __proto__: null,
    arrowLeftSvg: o$i
  });

  const e$f = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1 7.99a1 1 0 0 1 1-1h7.58L7.12 4.53A1 1 0 1 1 8.54 3.1l4.16 4.17a1 1 0 0 1 0 1.41l-4.16 4.17a1 1 0 1 1-1.42-1.41l2.46-2.46H2a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var arrowRightDBISky9Z = /*#__PURE__*/Object.freeze({
    __proto__: null,
    arrowRightSvg: e$f
  });

  const e$e = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 13.99a1 1 0 0 1-1-1V5.4L3.54 7.86a1 1 0 0 1-1.42-1.41L6.3 2.28a1 1 0 0 1 1.41 0l4.17 4.17a1 1 0 1 1-1.41 1.41L8 5.4v7.59a1 1 0 0 1-1 1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var arrowTopBTvq4WQ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    arrowTopSvg: e$e
  });

  const o$h = EA`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M5.61391 1.57124C5.85142 1.42873 6.14813 1.42873 6.38564 1.57124L11.0793 4.38749C11.9179 4.89067 11.5612 6.17864 10.5832 6.17864H9.96398V10.0358H10.2854C10.6996 10.0358 11.0354 10.3716 11.0354 10.7858C11.0354 11.2 10.6996 11.5358 10.2854 11.5358H1.71416C1.29995 11.5358 0.964172 11.2 0.964172 10.7858C0.964172 10.3716 1.29995 10.0358 1.71416 10.0358H2.03558L2.03558 6.17864H1.41637C0.438389 6.17864 0.0816547 4.89066 0.920263 4.38749L5.61391 1.57124ZM3.53554 6.17864V10.0358H5.24979V6.17864H3.53554ZM6.74976 6.17864V10.0358H8.46401V6.17864H6.74976ZM8.64913 4.67864H3.35043L5.99978 3.089L8.64913 4.67864Z"
    fill="currentColor"
  /></svg
>`;

  var bankIWmwNGaE = /*#__PURE__*/Object.freeze({
    __proto__: null,
    bankSvg: o$h
  });

  const a$2 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4 6.4a1 1 0 0 1-.46.89 6.98 6.98 0 0 0 .38 6.18A7 7 0 0 0 16.46 7.3a1 1 0 0 1-.47-.92 7 7 0 0 0-12 .03Zm-2.02-.5a9 9 0 1 1 16.03 8.2A9 9 0 0 1 1.98 5.9Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.03 8.63c-1.46-.3-2.72-.75-3.6-1.35l-.02-.01-.14-.11a1 1 0 0 1 1.2-1.6l.1.08c.6.4 1.52.74 2.69 1 .16-.99.39-1.88.67-2.65.3-.79.68-1.5 1.15-2.02A2.58 2.58 0 0 1 9.99 1c.8 0 1.45.44 1.92.97.47.52.84 1.23 1.14 2.02.29.77.52 1.66.68 2.64a8 8 0 0 0 2.7-1l.26-.18h.48a1 1 0 0 1 .12 2c-.86.51-2.01.91-3.34 1.18a22.24 22.24 0 0 1-.03 3.19c1.45.29 2.7.73 3.58 1.31a1 1 0 0 1-1.1 1.68c-.6-.4-1.56-.76-2.75-1-.15.8-.36 1.55-.6 2.2-.3.79-.67 1.5-1.14 2.02-.47.53-1.12.97-1.92.97-.8 0-1.45-.44-1.91-.97a6.51 6.51 0 0 1-1.15-2.02c-.24-.65-.44-1.4-.6-2.2-1.18.24-2.13.6-2.73.99a1 1 0 1 1-1.1-1.67c.88-.58 2.12-1.03 3.57-1.31a22.03 22.03 0 0 1-.04-3.2Zm2.2-1.7c.15-.86.34-1.61.58-2.24.24-.65.51-1.12.76-1.4.25-.28.4-.29.42-.29.03 0 .17.01.42.3.25.27.52.74.77 1.4.23.62.43 1.37.57 2.22a19.96 19.96 0 0 1-3.52 0Zm-.18 4.6a20.1 20.1 0 0 1-.03-2.62 21.95 21.95 0 0 0 3.94 0 20.4 20.4 0 0 1-.03 2.63 21.97 21.97 0 0 0-3.88 0Zm.27 2c.13.66.3 1.26.49 1.78.24.65.51 1.12.76 1.4.25.28.4.29.42.29.03 0 .17-.01.42-.3.25-.27.52-.74.77-1.4.19-.5.36-1.1.49-1.78a20.03 20.03 0 0 0-3.35 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var browserBOTrnQ0L = /*#__PURE__*/Object.freeze({
    __proto__: null,
    browserSvg: a$2
  });

  const l$c = EA`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M4.16072 2C4.17367 2 4.18665 2 4.19968 2L7.83857 2C8.36772 1.99998 8.82398 1.99996 9.19518 2.04018C9.5895 2.0829 9.97577 2.17811 10.3221 2.42971C10.5131 2.56849 10.6811 2.73647 10.8198 2.92749C11.0714 3.27379 11.1666 3.66007 11.2094 4.0544C11.2496 4.42561 11.2496 4.88188 11.2495 5.41105V7.58896C11.2496 8.11812 11.2496 8.57439 11.2094 8.94561C11.1666 9.33994 11.0714 9.72621 10.8198 10.0725C10.6811 10.2635 10.5131 10.4315 10.3221 10.5703C9.97577 10.8219 9.5895 10.9171 9.19518 10.9598C8.82398 11 8.36772 11 7.83856 11H4.16073C3.63157 11 3.17531 11 2.80411 10.9598C2.40979 10.9171 2.02352 10.8219 1.67722 10.5703C1.48621 10.4315 1.31824 10.2635 1.17946 10.0725C0.927858 9.72621 0.832652 9.33994 0.78993 8.94561C0.749713 8.5744 0.749733 8.11813 0.749757 7.58896L0.749758 5.45C0.749758 5.43697 0.749758 5.42399 0.749757 5.41104C0.749733 4.88188 0.749713 4.42561 0.78993 4.0544C0.832652 3.66007 0.927858 3.27379 1.17946 2.92749C1.31824 2.73647 1.48621 2.56849 1.67722 2.42971C2.02352 2.17811 2.40979 2.0829 2.80411 2.04018C3.17531 1.99996 3.63157 1.99998 4.16072 2ZM2.96567 3.53145C2.69897 3.56034 2.60687 3.60837 2.55888 3.64324C2.49521 3.6895 2.43922 3.74549 2.39296 3.80916C2.35809 3.85715 2.31007 3.94926 2.28117 4.21597C2.26629 4.35335 2.25844 4.51311 2.25431 4.70832H9.74498C9.74085 4.51311 9.733 4.35335 9.71812 4.21597C9.68922 3.94926 9.6412 3.85715 9.60633 3.80916C9.56007 3.74549 9.50408 3.6895 9.44041 3.64324C9.39242 3.60837 9.30031 3.56034 9.03362 3.53145C8.75288 3.50103 8.37876 3.5 7.79961 3.5H4.19968C3.62053 3.5 3.24641 3.50103 2.96567 3.53145ZM9.74956 6.20832H2.24973V7.55C2.24973 8.12917 2.25076 8.5033 2.28117 8.78404C2.31007 9.05074 2.35809 9.14285 2.39296 9.19084C2.43922 9.25451 2.49521 9.31051 2.55888 9.35677C2.60687 9.39163 2.69897 9.43966 2.96567 9.46856C3.24641 9.49897 3.62053 9.5 4.19968 9.5H7.79961C8.37876 9.5 8.75288 9.49897 9.03362 9.46856C9.30032 9.43966 9.39242 9.39163 9.44041 9.35677C9.50408 9.31051 9.56007 9.25451 9.60633 9.19084C9.6412 9.14285 9.68922 9.05075 9.71812 8.78404C9.74854 8.5033 9.74956 8.12917 9.74956 7.55V6.20832ZM6.74963 8C6.74963 7.58579 7.08541 7.25 7.49961 7.25H8.2496C8.6638 7.25 8.99958 7.58579 8.99958 8C8.99958 8.41422 8.6638 8.75 8.2496 8.75H7.49961C7.08541 8.75 6.74963 8.41422 6.74963 8Z"
    fill="currentColor"
  /></svg
>`;

  var cardCfZMN3Y8 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    cardSvg: l$c
  });

  const o$g = EA`<svg
  width="28"
  height="28"
  viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M25.5297 4.92733C26.1221 5.4242 26.1996 6.30724 25.7027 6.89966L12.2836 22.8997C12.0316 23.2001 11.6652 23.3811 11.2735 23.3986C10.8817 23.4161 10.5006 23.2686 10.2228 22.9919L2.38218 15.1815C1.83439 14.6358 1.83268 13.7494 2.37835 13.2016C2.92403 12.6538 3.81046 12.6521 4.35825 13.1978L11.1183 19.9317L23.5573 5.10036C24.0542 4.50794 24.9372 4.43047 25.5297 4.92733Z"
    fill="currentColor"/>
</svg>
`;

  var checkmarkDB8C7Ds8 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    checkmarkSvg: o$g
  });

  const o$f = EA`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M12.9576 2.23383C13.3807 2.58873 13.4361 3.21947 13.0812 3.64263L6.37159 11.6426C6.19161 11.8572 5.92989 11.9865 5.65009 11.999C5.3703 12.0115 5.09808 11.9062 4.89965 11.7085L0.979321 7.80331C0.588042 7.41354 0.586817 6.78038 0.976585 6.3891C1.36635 5.99782 1.99952 5.99659 2.3908 6.38636L5.53928 9.52268L11.5488 2.35742C11.9037 1.93426 12.5344 1.87893 12.9576 2.23383Z"
    clip-rule="evenodd"
  />
</svg>`;

  var checkmarkBoldCRAUp3DQ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    checkmarkBoldSvg: o$f
  });

  const e$d = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1.46 4.96a1 1 0 0 1 1.41 0L8 10.09l5.13-5.13a1 1 0 1 1 1.41 1.41l-5.83 5.84a1 1 0 0 1-1.42 0L1.46 6.37a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

  var chevronBottomCucFU2me = /*#__PURE__*/Object.freeze({
    __proto__: null,
    chevronBottomSvg: e$d
  });

  const o$e = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M11.04 1.46a1 1 0 0 1 0 1.41L5.91 8l5.13 5.13a1 1 0 1 1-1.41 1.41L3.79 8.71a1 1 0 0 1 0-1.42l5.84-5.83a1 1 0 0 1 1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var chevronLeftDVxH3cWd = /*#__PURE__*/Object.freeze({
    __proto__: null,
    chevronLeftSvg: o$e
  });

  const o$d = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.96 14.54a1 1 0 0 1 0-1.41L10.09 8 4.96 2.87a1 1 0 0 1 1.41-1.41l5.84 5.83a1 1 0 0 1 0 1.42l-5.84 5.83a1 1 0 0 1-1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var chevronRightDbHcSXWv = /*#__PURE__*/Object.freeze({
    __proto__: null,
    chevronRightSvg: o$d
  });

  const e$c = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.54 11.04a1 1 0 0 1-1.41 0L8 5.92l-5.13 5.12a1 1 0 1 1-1.41-1.41l5.83-5.84a1 1 0 0 1 1.42 0l5.83 5.84a1 1 0 0 1 0 1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

  var chevronTopQzcpSyQR = /*#__PURE__*/Object.freeze({
    __proto__: null,
    chevronTopSvg: e$c
  });

  const o$c = EA`<svg width="36" height="36" fill="none">
  <path
    fill="#fff"
    fill-opacity=".05"
    d="M0 14.94c0-5.55 0-8.326 1.182-10.4a9 9 0 0 1 3.359-3.358C6.614 0 9.389 0 14.94 0h6.12c5.55 0 8.326 0 10.4 1.182a9 9 0 0 1 3.358 3.359C36 6.614 36 9.389 36 14.94v6.12c0 5.55 0 8.326-1.182 10.4a9 9 0 0 1-3.359 3.358C29.386 36 26.611 36 21.06 36h-6.12c-5.55 0-8.326 0-10.4-1.182a9 9 0 0 1-3.358-3.359C0 29.386 0 26.611 0 21.06v-6.12Z"
  />
  <path
    stroke="#fff"
    stroke-opacity=".05"
    d="M14.94.5h6.12c2.785 0 4.84 0 6.46.146 1.612.144 2.743.43 3.691.97a8.5 8.5 0 0 1 3.172 3.173c.541.948.826 2.08.971 3.692.145 1.62.146 3.675.146 6.459v6.12c0 2.785 0 4.84-.146 6.46-.145 1.612-.43 2.743-.97 3.691a8.5 8.5 0 0 1-3.173 3.172c-.948.541-2.08.826-3.692.971-1.62.145-3.674.146-6.459.146h-6.12c-2.784 0-4.84 0-6.46-.146-1.612-.145-2.743-.43-3.691-.97a8.5 8.5 0 0 1-3.172-3.173c-.541-.948-.827-2.08-.971-3.692C.5 25.9.5 23.845.5 21.06v-6.12c0-2.784 0-4.84.146-6.46.144-1.612.43-2.743.97-3.691A8.5 8.5 0 0 1 4.79 1.617C5.737 1.076 6.869.79 8.48.646 10.1.5 12.156.5 14.94.5Z"
  />
  <path
    fill="url(#a)"
    d="M17.998 10.8h12.469a14.397 14.397 0 0 0-24.938.001l6.234 10.798.006-.001a7.19 7.19 0 0 1 6.23-10.799Z"
  />
  <path
    fill="url(#b)"
    d="m24.237 21.598-6.234 10.798A14.397 14.397 0 0 0 30.47 10.798H18.002l-.002.006a7.191 7.191 0 0 1 6.237 10.794Z"
  />
  <path
    fill="url(#c)"
    d="M11.765 21.601 5.531 10.803A14.396 14.396 0 0 0 18.001 32.4l6.235-10.798-.004-.004a7.19 7.19 0 0 1-12.466.004Z"
  />
  <path fill="#fff" d="M18 25.2a7.2 7.2 0 1 0 0-14.4 7.2 7.2 0 0 0 0 14.4Z" />
  <path fill="#1A73E8" d="M18 23.7a5.7 5.7 0 1 0 0-11.4 5.7 5.7 0 0 0 0 11.4Z" />
  <defs>
    <linearGradient
      id="a"
      x1="6.294"
      x2="41.1"
      y1="5.995"
      y2="5.995"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#D93025" />
      <stop offset="1" stop-color="#EA4335" />
    </linearGradient>
    <linearGradient
      id="b"
      x1="20.953"
      x2="37.194"
      y1="32.143"
      y2="2.701"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#FCC934" />
      <stop offset="1" stop-color="#FBBC04" />
    </linearGradient>
    <linearGradient
      id="c"
      x1="25.873"
      x2="9.632"
      y1="31.2"
      y2="1.759"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#1E8E3E" />
      <stop offset="1" stop-color="#34A853" />
    </linearGradient>
  </defs>
</svg>`;

  var chromeStoreDkbZSigc = /*#__PURE__*/Object.freeze({
    __proto__: null,
    chromeStoreSvg: o$c
  });

  const l$b = EA`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path 
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M7.00235 2C4.24 2 2.00067 4.23858 2.00067 7C2.00067 9.76142 4.24 12 7.00235 12C9.7647 12 12.004 9.76142 12.004 7C12.004 4.23858 9.7647 2 7.00235 2ZM0 7C0 3.13401 3.13506 0 7.00235 0C10.8696 0 14.0047 3.13401 14.0047 7C14.0047 10.866 10.8696 14 7.00235 14C3.13506 14 0 10.866 0 7ZM7.00235 3C7.55482 3 8.00269 3.44771 8.00269 4V6.58579L9.85327 8.43575C10.2439 8.82627 10.2439 9.45944 9.85327 9.84996C9.46262 10.2405 8.82924 10.2405 8.43858 9.84996L6.29501 7.70711C6.10741 7.51957 6.00201 7.26522 6.00201 7V4C6.00201 3.44771 6.44988 3 7.00235 3Z" 
    fill="currentColor"
  />
</svg>`;

  var clockIgad78ae = /*#__PURE__*/Object.freeze({
    __proto__: null,
    clockSvg: l$b
  });

  const o$b = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M2.54 2.54a1 1 0 0 1 1.42 0L8 6.6l4.04-4.05a1 1 0 1 1 1.42 1.42L9.4 8l4.05 4.04a1 1 0 0 1-1.42 1.42L8 9.4l-4.04 4.05a1 1 0 0 1-1.42-1.42L6.6 8 2.54 3.96a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`;

  var closeBMUvrXfi = /*#__PURE__*/Object.freeze({
    __proto__: null,
    closeSvg: o$b
  });

  const e$b = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm10.66-2.65a1 1 0 0 1 .23 1.06L9.83 9.24a1 1 0 0 1-.59.58l-2.83 1.06A1 1 0 0 1 5.13 9.6l1.06-2.82a1 1 0 0 1 .58-.59L9.6 5.12a1 1 0 0 1 1.06.23ZM7.9 7.89l-.13.35.35-.13.12-.35-.34.13Z"
    clip-rule="evenodd"
  />
</svg>`;

  var compassCIuQZhE = /*#__PURE__*/Object.freeze({
    __proto__: null,
    compassSvg: e$b
  });

  const o$a = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 3a7 7 0 0 0-6.85 8.44l8.29-8.3C10.97 3.06 10.49 3 10 3Zm3.49.93-9.56 9.56c.32.55.71 1.06 1.16 1.5L15 5.1a7.03 7.03 0 0 0-1.5-1.16Zm2.7 2.8-9.46 9.46a7 7 0 0 0 9.46-9.46ZM1.99 5.9A9 9 0 1 1 18 14.09 9 9 0 0 1 1.98 5.91Z"
    clip-rule="evenodd"
  />
</svg>`;

  var coinPlaceholderCZvvVE15 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    coinPlaceholderSvg: o$a
  });

  const o$9 = EA`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="16"
  height="16"
  viewBox="0 0 16 16"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M9.21498 1.28565H10.5944C11.1458 1.28562 11.6246 1.2856 12.0182 1.32093C12.4353 1.35836 12.853 1.44155 13.2486 1.66724C13.7005 1.92498 14.0749 2.29935 14.3326 2.75122C14.5583 3.14689 14.6415 3.56456 14.6789 3.9817C14.7143 4.37531 14.7142 4.85403 14.7142 5.40545V6.78489C14.7142 7.33631 14.7143 7.81503 14.6789 8.20865C14.6415 8.62578 14.5583 9.04345 14.3326 9.43912C14.0749 9.89099 13.7005 10.2654 13.2486 10.5231C12.853 10.7488 12.4353 10.832 12.0182 10.8694C11.7003 10.8979 11.3269 10.9034 10.9045 10.9045C10.9034 11.3269 10.8979 11.7003 10.8694 12.0182C10.832 12.4353 10.7488 12.853 10.5231 13.2486C10.2654 13.7005 9.89099 14.0749 9.43912 14.3326C9.04345 14.5583 8.62578 14.6415 8.20865 14.6789C7.81503 14.7143 7.33631 14.7142 6.78489 14.7142H5.40545C4.85403 14.7142 4.37531 14.7143 3.9817 14.6789C3.56456 14.6415 3.14689 14.5583 2.75122 14.3326C2.29935 14.0749 1.92498 13.7005 1.66724 13.2486C1.44155 12.853 1.35836 12.4353 1.32093 12.0182C1.2856 11.6246 1.28562 11.1458 1.28565 10.5944V9.21498C1.28562 8.66356 1.2856 8.18484 1.32093 7.79122C1.35836 7.37409 1.44155 6.95642 1.66724 6.56074C1.92498 6.10887 2.29935 5.73451 2.75122 5.47677C3.14689 5.25108 3.56456 5.16789 3.9817 5.13045C4.2996 5.10192 4.67301 5.09645 5.09541 5.09541C5.09645 4.67302 5.10192 4.2996 5.13045 3.9817C5.16789 3.56456 5.25108 3.14689 5.47676 2.75122C5.73451 2.29935 6.10887 1.92498 6.56074 1.66724C6.95642 1.44155 7.37409 1.35836 7.79122 1.32093C8.18484 1.2856 8.66356 1.28562 9.21498 1.28565ZM5.09541 7.09552C4.68397 7.09667 4.39263 7.10161 4.16046 7.12245C3.88053 7.14757 3.78516 7.18949 3.74214 7.21403C3.60139 7.29431 3.48478 7.41091 3.4045 7.55166C3.37997 7.59468 3.33804 7.69005 3.31292 7.96999C3.28659 8.26345 3.28565 8.65147 3.28565 9.25708V10.5523C3.28565 11.1579 3.28659 11.5459 3.31292 11.8394C3.33804 12.1193 3.37997 12.2147 3.4045 12.2577C3.48478 12.3985 3.60139 12.5151 3.74214 12.5954C3.78516 12.6199 3.88053 12.6618 4.16046 12.6869C4.45393 12.7133 4.84195 12.7142 5.44755 12.7142H6.74279C7.3484 12.7142 7.73641 12.7133 8.02988 12.6869C8.30981 12.6618 8.40518 12.6199 8.44821 12.5954C8.58895 12.5151 8.70556 12.3985 8.78584 12.2577C8.81038 12.2147 8.8523 12.1193 8.87742 11.8394C8.89825 11.6072 8.90319 11.3159 8.90435 10.9045C8.48219 10.9034 8.10898 10.8979 7.79122 10.8694C7.37409 10.832 6.95641 10.7488 6.56074 10.5231C6.10887 10.2654 5.73451 9.89099 5.47676 9.43912C5.25108 9.04345 5.16789 8.62578 5.13045 8.20865C5.10194 7.89089 5.09645 7.51767 5.09541 7.09552ZM7.96999 3.31292C7.69005 3.33804 7.59468 3.37997 7.55166 3.4045C7.41091 3.48478 7.29431 3.60139 7.21403 3.74214C7.18949 3.78516 7.14757 3.88053 7.12245 4.16046C7.09611 4.45393 7.09517 4.84195 7.09517 5.44755V6.74279C7.09517 7.3484 7.09611 7.73641 7.12245 8.02988C7.14757 8.30981 7.18949 8.40518 7.21403 8.4482C7.29431 8.58895 7.41091 8.70556 7.55166 8.78584C7.59468 8.81038 7.69005 8.8523 7.96999 8.87742C8.26345 8.90376 8.65147 8.9047 9.25708 8.9047H10.5523C11.1579 8.9047 11.5459 8.90376 11.8394 8.87742C12.1193 8.8523 12.2147 8.81038 12.2577 8.78584C12.3985 8.70556 12.5151 8.58895 12.5954 8.4482C12.6199 8.40518 12.6618 8.30981 12.6869 8.02988C12.7133 7.73641 12.7142 7.3484 12.7142 6.74279V5.44755C12.7142 4.84195 12.7133 4.45393 12.6869 4.16046C12.6618 3.88053 12.6199 3.78516 12.5954 3.74214C12.5151 3.60139 12.3985 3.48478 12.2577 3.4045C12.2147 3.37997 12.1193 3.33804 11.8394 3.31292C11.5459 3.28659 11.1579 3.28565 10.5523 3.28565H9.25708C8.65147 3.28565 8.26345 3.28659 7.96999 3.31292Z"
    fill="#788181"
  /></svg
>`;

  var copyMcoqmSgz = /*#__PURE__*/Object.freeze({
    __proto__: null,
    copySvg: o$9
  });

  const l$a = EA` <svg fill="none" viewBox="0 0 13 4">
  <path fill="currentColor" d="M.5 0h12L8.9 3.13a3.76 3.76 0 0 1-4.8 0L.5 0Z" />
</svg>`;

  var cursorC_Wbsod3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    cursorSvg: l$a
  });

  const l$9 = EA`<svg fill="none" viewBox="0 0 14 6">
  <path style="fill: var(--wui-color-bg-150);" d="M0 1h14L9.21 5.12a3.31 3.31 0 0 1-4.49 0L0 1Z" />
  <path
    style="stroke: var(--wui-color-inverse-100);"
    stroke-opacity=".05"
    d="M1.33 1.5h11.32L8.88 4.75l-.01.01a2.81 2.81 0 0 1-3.8 0l-.02-.01L1.33 1.5Z"
  />
  <path
    style="fill: var(--wui-color-bg-150);"
    d="M1.25.71h11.5L9.21 3.88a3.31 3.31 0 0 1-4.49 0L1.25.71Z"
  />
</svg> `;

  var cursorTransparentBIW1XI_n = /*#__PURE__*/Object.freeze({
    __proto__: null,
    cursorTransparentSvg: l$9
  });

  const l$8 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13.66 2H6.34c-1.07 0-1.96 0-2.68.08-.74.08-1.42.25-2.01.68a4 4 0 0 0-.89.89c-.43.6-.6 1.27-.68 2.01C0 6.38 0 7.26 0 8.34v.89c0 1.07 0 1.96.08 2.68.08.74.25 1.42.68 2.01a4 4 0 0 0 .89.89c.6.43 1.27.6 2.01.68a27 27 0 0 0 2.68.08h7.32a27 27 0 0 0 2.68-.08 4.03 4.03 0 0 0 2.01-.68 4 4 0 0 0 .89-.89c.43-.6.6-1.27.68-2.01.08-.72.08-1.6.08-2.68v-.89c0-1.07 0-1.96-.08-2.68a4.04 4.04 0 0 0-.68-2.01 4 4 0 0 0-.89-.89c-.6-.43-1.27-.6-2.01-.68C15.62 2 14.74 2 13.66 2ZM2.82 4.38c.2-.14.48-.25 1.06-.31C4.48 4 5.25 4 6.4 4h7.2c1.15 0 1.93 0 2.52.07.58.06.86.17 1.06.31a2 2 0 0 1 .44.44c.14.2.25.48.31 1.06.07.6.07 1.37.07 2.52v.77c0 1.15 0 1.93-.07 2.52-.06.58-.17.86-.31 1.06a2 2 0 0 1-.44.44c-.2.14-.48.25-1.06.32-.6.06-1.37.06-2.52.06H6.4c-1.15 0-1.93 0-2.52-.06-.58-.07-.86-.18-1.06-.32a2 2 0 0 1-.44-.44c-.14-.2-.25-.48-.31-1.06C2 11.1 2 10.32 2 9.17V8.4c0-1.15 0-1.93.07-2.52.06-.58.17-.86.31-1.06a2 2 0 0 1 .44-.44Z"
    clip-rule="evenodd"
  />
  <path fill="currentColor" d="M6.14 17.57a1 1 0 1 0 0 2h7.72a1 1 0 1 0 0-2H6.14Z" />
</svg>`;

  var desktopDraveGi6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    desktopSvg: l$8
  });

  const e$a = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.07 1h.57a1 1 0 0 1 0 2h-.52c-.98 0-1.64 0-2.14.06-.48.05-.7.14-.84.24-.13.1-.25.22-.34.35-.1.14-.2.35-.25.83-.05.5-.05 1.16-.05 2.15v2.74c0 .99 0 1.65.05 2.15.05.48.14.7.25.83.1.14.2.25.34.35.14.1.36.2.84.25.5.05 1.16.05 2.14.05h.52a1 1 0 0 1 0 2h-.57c-.92 0-1.69 0-2.3-.07a3.6 3.6 0 0 1-1.8-.61c-.3-.22-.57-.49-.8-.8a3.6 3.6 0 0 1-.6-1.79C.5 11.11.5 10.35.5 9.43V6.58c0-.92 0-1.7.06-2.31a3.6 3.6 0 0 1 .62-1.8c.22-.3.48-.57.79-.79a3.6 3.6 0 0 1 1.8-.61C4.37 1 5.14 1 6.06 1ZM9.5 3a1 1 0 0 1 1.42 0l4.28 4.3a1 1 0 0 1 0 1.4L10.93 13a1 1 0 0 1-1.42-1.42L12.1 9H6.8a1 1 0 1 1 0-2h5.3L9.51 4.42a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

  var disconnectDTzBpFgW = /*#__PURE__*/Object.freeze({
    __proto__: null,
    disconnectSvg: e$a
  });

  const i$1 = EA`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5865F2" />
      <path
        fill="#fff"
        fill-rule="evenodd"
        d="M25.71 28.15C30.25 28 32 25.02 32 25.02c0-6.61-2.96-11.98-2.96-11.98-2.96-2.22-5.77-2.15-5.77-2.15l-.29.32c3.5 1.07 5.12 2.61 5.12 2.61a16.75 16.75 0 0 0-10.34-1.93l-.35.04a15.43 15.43 0 0 0-5.88 1.9s1.71-1.63 5.4-2.7l-.2-.24s-2.81-.07-5.77 2.15c0 0-2.96 5.37-2.96 11.98 0 0 1.73 2.98 6.27 3.13l1.37-1.7c-2.6-.79-3.6-2.43-3.6-2.43l.58.35.09.06.08.04.02.01.08.05a17.25 17.25 0 0 0 4.52 1.58 14.4 14.4 0 0 0 8.3-.86c.72-.27 1.52-.66 2.37-1.21 0 0-1.03 1.68-3.72 2.44.61.78 1.35 1.67 1.35 1.67Zm-9.55-9.6c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28.01-1.25-.93-2.28-2.1-2.28Zm7.5 0c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28 0-1.25-.93-2.28-2.1-2.28Z"
        clip-rule="evenodd"
      />
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
  </defs>
</svg>`;

  var discordBg7Jz2BT = /*#__PURE__*/Object.freeze({
    __proto__: null,
    discordSvg: i$1
  });

  const v$3 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M4.25 7a.63.63 0 0 0-.63.63v3.97c0 .28-.2.51-.47.54l-.75.07a.93.93 0 0 1-.9-.47A7.51 7.51 0 0 1 5.54.92a7.5 7.5 0 0 1 9.54 4.62c.12.35.06.72-.16 1-.74.97-1.68 1.78-2.6 2.44V4.44a.64.64 0 0 0-.63-.64h-1.06c-.35 0-.63.3-.63.64v5.5c0 .23-.12.42-.32.5l-.52.23V6.05c0-.36-.3-.64-.64-.64H7.45c-.35 0-.64.3-.64.64v4.97c0 .25-.17.46-.4.52a5.8 5.8 0 0 0-.45.11v-4c0-.36-.3-.65-.64-.65H4.25ZM14.07 12.4A7.49 7.49 0 0 1 3.6 14.08c4.09-.58 9.14-2.5 11.87-6.6v.03a7.56 7.56 0 0 1-1.41 4.91Z"
  />
</svg>`;

  var etherscanDLFt0i72 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    etherscanSvg: v$3
  });

  const e$9 = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.71 2.99a.57.57 0 0 0-.57.57 1 1 0 0 1-1 1c-.58 0-.96 0-1.24.03-.27.03-.37.07-.42.1a.97.97 0 0 0-.36.35c-.04.08-.09.21-.11.67a2.57 2.57 0 0 1 0 5.13c.02.45.07.6.11.66.09.15.21.28.36.36.07.04.21.1.67.12a2.57 2.57 0 0 1 5.12 0c.46-.03.6-.08.67-.12a.97.97 0 0 0 .36-.36c.03-.04.07-.14.1-.41.02-.29.03-.66.03-1.24a1 1 0 0 1 1-1 .57.57 0 0 0 0-1.15 1 1 0 0 1-1-1c0-.58 0-.95-.03-1.24a1.04 1.04 0 0 0-.1-.42.97.97 0 0 0-.36-.36 1.04 1.04 0 0 0-.42-.1c-.28-.02-.65-.02-1.24-.02a1 1 0 0 1-1-1 .57.57 0 0 0-.57-.57ZM5.15 13.98a1 1 0 0 0 .99-1v-.78a.57.57 0 0 1 1.14 0v.78a1 1 0 0 0 .99 1H8.36a66.26 66.26 0 0 0 .73 0 3.78 3.78 0 0 0 1.84-.38c.46-.26.85-.64 1.1-1.1.23-.4.32-.8.36-1.22.02-.2.03-.4.03-.63a2.57 2.57 0 0 0 0-4.75c0-.23-.01-.44-.03-.63a2.96 2.96 0 0 0-.35-1.22 2.97 2.97 0 0 0-1.1-1.1c-.4-.22-.8-.31-1.22-.35a8.7 8.7 0 0 0-.64-.04 2.57 2.57 0 0 0-4.74 0c-.23 0-.44.02-.63.04-.42.04-.83.13-1.22.35-.46.26-.84.64-1.1 1.1-.33.57-.37 1.2-.39 1.84a21.39 21.39 0 0 0 0 .72v.1a1 1 0 0 0 1 .99h.78a.57.57 0 0 1 0 1.15h-.77a1 1 0 0 0-1 .98v.1a63.87 63.87 0 0 0 0 .73c0 .64.05 1.27.38 1.83.26.47.64.85 1.1 1.11.56.32 1.2.37 1.84.38a20.93 20.93 0 0 0 .72 0h.1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var extensionI75LXaIu = /*#__PURE__*/Object.freeze({
    __proto__: null,
    extensionSvg: e$9
  });

  const o$8 = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.74 3.99a1 1 0 0 1 1-1H11a1 1 0 0 1 1 1v6.26a1 1 0 0 1-2 0V6.4l-6.3 6.3a1 1 0 0 1-1.4-1.42l6.29-6.3H4.74a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var externalLinkBEl40fnM = /*#__PURE__*/Object.freeze({
    __proto__: null,
    externalLinkSvg: o$8
  });

  const f = EA`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1877F2" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M26 12.38h-2.89c-.92 0-1.61.38-1.61 1.34v1.66H26l-.36 4.5H21.5v12H17v-12h-3v-4.5h3V12.5c0-3.03 1.6-4.62 5.2-4.62H26v4.5Z"
        />
      </g>
    </g>
    <path
      fill="#1877F2"
      d="M40 20a20 20 0 1 0-23.13 19.76V25.78H11.8V20h5.07v-4.4c0-5.02 3-7.79 7.56-7.79 2.19 0 4.48.4 4.48.4v4.91h-2.53c-2.48 0-3.25 1.55-3.25 3.13V20h5.54l-.88 5.78h-4.66v13.98A20 20 0 0 0 40 20Z"
    />
    <path
      fill="#fff"
      d="m27.79 25.78.88-5.78h-5.55v-3.75c0-1.58.78-3.13 3.26-3.13h2.53V8.2s-2.3-.39-4.48-.39c-4.57 0-7.55 2.77-7.55 7.78V20H11.8v5.78h5.07v13.98a20.15 20.15 0 0 0 6.25 0V25.78h4.67Z"
    />
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

  var facebookBvG7NUxx = /*#__PURE__*/Object.freeze({
    __proto__: null,
    facebookSvg: f
  });

  const a$1 = EA`<svg style="border-radius: 9999px; overflow: hidden;"  fill="none" viewBox="0 0 1000 1000">
  <rect width="1000" height="1000" rx="9999" ry="9999" fill="#855DCD"/>
  <path fill="#855DCD" d="M0 0h1000v1000H0V0Z" />
  <path
    fill="#fff"
    d="M320 248h354v504h-51.96V521.13h-.5c-5.76-63.8-59.31-113.81-124.54-113.81s-118.78 50-124.53 113.81h-.5V752H320V248Z"
  />
  <path
    fill="#fff"
    d="m225 320 21.16 71.46h17.9v289.09a16.29 16.29 0 0 0-16.28 16.24v19.49h-3.25a16.3 16.3 0 0 0-16.28 16.24V752h182.26v-19.48a16.22 16.22 0 0 0-16.28-16.24h-3.25v-19.5a16.22 16.22 0 0 0-16.28-16.23h-19.52V320H225Zm400.3 360.55a16.3 16.3 0 0 0-15.04 10.02 16.2 16.2 0 0 0-1.24 6.22v19.49h-3.25a16.29 16.29 0 0 0-16.27 16.24V752h182.24v-19.48a16.23 16.23 0 0 0-16.27-16.24h-3.25v-19.5a16.2 16.2 0 0 0-10.04-15 16.3 16.3 0 0 0-6.23-1.23v-289.1h17.9L775 320H644.82v360.55H625.3Z"
  />
</svg>`;

  var farcasterC4MQRz9l = /*#__PURE__*/Object.freeze({
    __proto__: null,
    farcasterSvg: a$1
  });

  const l$7 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 3a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1Zm2.63 5.25a1 1 0 0 1 1-1h8.75a1 1 0 1 1 0 2H3.63a1 1 0 0 1-1-1Zm2.62 5.25a1 1 0 0 1 1-1h3.5a1 1 0 0 1 0 2h-3.5a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var filtersBk9_JF9W = /*#__PURE__*/Object.freeze({
    __proto__: null,
    filtersSvg: l$7
  });

  const c$2 = EA`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1B1F23" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M8 19.89a12 12 0 1 1 15.8 11.38c-.6.12-.8-.26-.8-.57v-3.3c0-1.12-.4-1.85-.82-2.22 2.67-.3 5.48-1.31 5.48-5.92 0-1.31-.47-2.38-1.24-3.22.13-.3.54-1.52-.12-3.18 0 0-1-.32-3.3 1.23a11.54 11.54 0 0 0-6 0c-2.3-1.55-3.3-1.23-3.3-1.23a4.32 4.32 0 0 0-.12 3.18 4.64 4.64 0 0 0-1.24 3.22c0 4.6 2.8 5.63 5.47 5.93-.34.3-.65.83-.76 1.6-.69.31-2.42.84-3.5-1 0 0-.63-1.15-1.83-1.23 0 0-1.18-.02-.09.73 0 0 .8.37 1.34 1.76 0 0 .7 2.14 4.03 1.41v2.24c0 .31-.2.68-.8.57A12 12 0 0 1 8 19.9Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

  var githubWEn1R4a5 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    githubSvg: c$2
  });

  const o$7 = EA`<svg fill="none" viewBox="0 0 40 40">
  <path
    fill="#4285F4"
    d="M32.74 20.3c0-.93-.08-1.81-.24-2.66H20.26v5.03h7a6 6 0 0 1-2.62 3.91v3.28h4.22c2.46-2.27 3.88-5.6 3.88-9.56Z"
  />
  <path
    fill="#34A853"
    d="M20.26 33a12.4 12.4 0 0 0 8.6-3.14l-4.22-3.28a7.74 7.74 0 0 1-4.38 1.26 7.76 7.76 0 0 1-7.28-5.36H8.65v3.36A12.99 12.99 0 0 0 20.26 33Z"
  />
  <path
    fill="#FBBC05"
    d="M12.98 22.47a7.79 7.79 0 0 1 0-4.94v-3.36H8.65a12.84 12.84 0 0 0 0 11.66l3.37-2.63.96-.73Z"
  />
  <path
    fill="#EA4335"
    d="M20.26 12.18a7.1 7.1 0 0 1 4.98 1.93l3.72-3.72A12.47 12.47 0 0 0 20.26 7c-5.08 0-9.47 2.92-11.6 7.17l4.32 3.36a7.76 7.76 0 0 1 7.28-5.35Z"
  />
</svg>`;

  var googleKesXJBpA = /*#__PURE__*/Object.freeze({
    __proto__: null,
    googleSvg: o$7
  });

  const o$6 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M8.51 5.66a.83.83 0 0 0-.57-.2.83.83 0 0 0-.52.28.8.8 0 0 0-.25.52 1 1 0 0 1-2 0c0-.75.34-1.43.81-1.91a2.75 2.75 0 0 1 4.78 1.92c0 1.24-.8 1.86-1.25 2.2l-.04.03c-.47.36-.5.43-.5.65a1 1 0 1 1-2 0c0-1.25.8-1.86 1.24-2.2l.04-.04c.47-.36.5-.43.5-.65 0-.3-.1-.49-.24-.6ZM9.12 11.87a1.13 1.13 0 1 1-2.25 0 1.13 1.13 0 0 1 2.25 0Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"
    clip-rule="evenodd"
  />
</svg>`;

  var helpCircleCd76os_Z = /*#__PURE__*/Object.freeze({
    __proto__: null,
    helpCircleSvg: o$6
  });

  const l$6 = EA`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path d="M4.98926 3.73932C4.2989 3.73932 3.73926 4.29896 3.73926 4.98932C3.73926 5.67968 4.2989 6.23932 4.98926 6.23932C5.67962 6.23932 6.23926 5.67968 6.23926 4.98932C6.23926 4.29896 5.67962 3.73932 4.98926 3.73932Z" fill="currentColor"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.60497 0.500001H6.39504C5.41068 0.499977 4.59185 0.499958 3.93178 0.571471C3.24075 0.64634 2.60613 0.809093 2.04581 1.21619C1.72745 1.44749 1.44749 1.72745 1.21619 2.04581C0.809093 2.60613 0.64634 3.24075 0.571471 3.93178C0.499958 4.59185 0.499977 5.41065 0.500001 6.39501V7.57815C0.499998 8.37476 0.499995 9.05726 0.534869 9.62725C0.570123 10.2034 0.644114 10.7419 0.828442 11.2302C0.925651 11.4877 1.05235 11.7287 1.21619 11.9542C1.44749 12.2726 1.72745 12.5525 2.04581 12.7838C2.60613 13.1909 3.24075 13.3537 3.93178 13.4285C4.59185 13.5001 5.41066 13.5 6.39503 13.5H7.60496C8.58933 13.5 9.40815 13.5001 10.0682 13.4285C10.7593 13.3537 11.3939 13.1909 11.9542 12.7838C12.2726 12.5525 12.5525 12.2726 12.7838 11.9542C13.1909 11.3939 13.3537 10.7593 13.4285 10.0682C13.5 9.40816 13.5 8.58935 13.5 7.60497V6.39505C13.5 5.41068 13.5 4.59185 13.4285 3.93178C13.3537 3.24075 13.1909 2.60613 12.7838 2.04581C12.5525 1.72745 12.2726 1.44749 11.9542 1.21619C11.3939 0.809093 10.7593 0.64634 10.0682 0.571471C9.40816 0.499958 8.58933 0.499977 7.60497 0.500001ZM3.22138 2.83422C3.38394 2.71612 3.62634 2.61627 4.14721 2.55984C4.68679 2.50138 5.39655 2.5 6.45 2.5H7.55C8.60345 2.5 9.31322 2.50138 9.8528 2.55984C10.3737 2.61627 10.6161 2.71612 10.7786 2.83422C10.9272 2.94216 11.0578 3.07281 11.1658 3.22138C11.2839 3.38394 11.3837 3.62634 11.4402 4.14721C11.4986 4.68679 11.5 5.39655 11.5 6.45V6.49703C10.9674 6.11617 10.386 5.84936 9.74213 5.81948C8.40536 5.75745 7.3556 6.73051 6.40509 7.84229C6.33236 7.92737 6.27406 7.98735 6.22971 8.02911L6.1919 8.00514L6.17483 7.99427C6.09523 7.94353 5.98115 7.87083 5.85596 7.80302C5.56887 7.64752 5.18012 7.4921 4.68105 7.4921C4.66697 7.4921 4.6529 7.49239 4.63884 7.49299C3.79163 7.52878 3.09922 8.1106 2.62901 8.55472C2.58751 8.59392 2.54594 8.6339 2.50435 8.6745C2.50011 8.34653 2.5 7.97569 2.5 7.55V6.45C2.5 5.39655 2.50138 4.68679 2.55984 4.14721C2.61627 3.62634 2.71612 3.38394 2.83422 3.22138C2.94216 3.07281 3.07281 2.94216 3.22138 2.83422ZM10.3703 8.14825C10.6798 8.37526 11.043 8.71839 11.4832 9.20889C11.4744 9.44992 11.4608 9.662 11.4402 9.8528C11.3837 10.3737 11.2839 10.6161 11.1658 10.7786C11.0578 10.9272 10.9272 11.0578 10.7786 11.1658C10.6161 11.2839 10.3737 11.3837 9.8528 11.4402C9.31322 11.4986 8.60345 11.5 7.55 11.5H6.45C5.39655 11.5 4.68679 11.4986 4.14721 11.4402C3.62634 11.3837 3.38394 11.2839 3.22138 11.1658C3.15484 11.1174 3.0919 11.0645 3.03298 11.0075C3.10126 10.9356 3.16806 10.8649 3.23317 10.7959L3.29772 10.7276C3.55763 10.4525 3.78639 10.2126 4.00232 10.0087C4.22016 9.80294 4.39412 9.66364 4.53524 9.57742C4.63352 9.51738 4.69022 9.49897 4.71275 9.49345C4.76387 9.49804 4.81803 9.51537 4.90343 9.56162C4.96409 9.59447 5.02355 9.63225 5.11802 9.69238L5.12363 9.69595C5.20522 9.74789 5.32771 9.82587 5.46078 9.89278C5.76529 10.0459 6.21427 10.186 6.74977 10.0158C7.21485 9.86796 7.59367 9.52979 7.92525 9.14195C8.91377 7.98571 9.38267 7.80495 9.64941 7.81733C9.7858 7.82366 10.0101 7.884 10.3703 8.14825Z" fill="currentColor"/>
</svg>`;

  var imageCOR7JVH1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    imageSvg: l$6
  });

  const v$2 = EA`<svg
 xmlns="http://www.w3.org/2000/svg"
 width="28"
 height="28"
 viewBox="0 0 28 28"
 fill="none">
  <path
    fill="#949E9E"
    fill-rule="evenodd"
    d="M7.974 2.975h12.052c1.248 0 2.296 0 3.143.092.89.096 1.723.307 2.461.844a4.9 4.9 0 0 1 1.084 1.084c.537.738.748 1.57.844 2.461.092.847.092 1.895.092 3.143v6.802c0 1.248 0 2.296-.092 3.143-.096.89-.307 1.723-.844 2.461a4.9 4.9 0 0 1-1.084 1.084c-.738.537-1.57.748-2.461.844-.847.092-1.895.092-3.143.092H7.974c-1.247 0-2.296 0-3.143-.092-.89-.096-1.723-.307-2.461-.844a4.901 4.901 0 0 1-1.084-1.084c-.537-.738-.748-1.571-.844-2.461C.35 19.697.35 18.649.35 17.4v-6.802c0-1.248 0-2.296.092-3.143.096-.89.307-1.723.844-2.461A4.9 4.9 0 0 1 2.37 3.91c.738-.537 1.571-.748 2.461-.844.847-.092 1.895-.092 3.143-.092ZM5.133 5.85c-.652.071-.936.194-1.117.326a2.1 2.1 0 0 0-.465.465c-.132.181-.255.465-.325 1.117-.074.678-.076 1.573-.076 2.917v6.65c0 1.344.002 2.239.076 2.917.07.652.193.936.325 1.117a2.1 2.1 0 0 0 .465.465c.181.132.465.255 1.117.326.678.073 1.574.075 2.917.075h11.9c1.344 0 2.239-.002 2.917-.075.652-.071.936-.194 1.117-.326.179-.13.335-.286.465-.465.132-.181.255-.465.326-1.117.073-.678.075-1.573.075-2.917v-6.65c0-1.344-.002-2.239-.075-2.917-.071-.652-.194-.936-.326-1.117a2.1 2.1 0 0 0-.465-.465c-.181-.132-.465-.255-1.117-.326-.678-.073-1.573-.075-2.917-.075H8.05c-1.343 0-2.239.002-2.917.075Zm.467 7.275a3.15 3.15 0 1 1 6.3 0 3.15 3.15 0 0 1-6.3 0Zm8.75-1.75a1.4 1.4 0 0 1 1.4-1.4h3.5a1.4 1.4 0 0 1 0 2.8h-3.5a1.4 1.4 0 0 1-1.4-1.4Zm0 5.25a1.4 1.4 0 0 1 1.4-1.4H21a1.4 1.4 0 1 1 0 2.8h-5.25a1.4 1.4 0 0 1-1.4-1.4Z"
    clip-rule="evenodd"/>
</svg>`;

  var idDSZbkLQ_ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    idSvg: v$2
  });

  const e$8 = EA`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    d="M6 10.49a1 1 0 1 0 2 0v-2a1 1 0 0 0-2 0v2ZM7 4.49a1 1 0 1 0 0 2 1 1 0 0 0 0-2Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 14.99a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm5-7a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var infoCircleCVzqyShK = /*#__PURE__*/Object.freeze({
    __proto__: null,
    infoCircleSvg: e$8
  });

  const e$7 = EA`<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.00177 1.78569C3.8179 1.78569 2.85819 2.74508 2.85819 3.92855C2.85819 4.52287 3.09928 5.05956 3.49077 5.4485L3.5005 5.45817C3.64381 5.60054 3.76515 5.72108 3.85631 5.81845C3.93747 5.90512 4.05255 6.03218 4.12889 6.1805C4.16999 6.26034 4.19 6.30843 4.21768 6.39385C4.22145 6.40546 4.22499 6.41703 4.22833 6.42855H5.77521C5.77854 6.41703 5.78208 6.40547 5.78585 6.39385C5.81353 6.30843 5.83354 6.26034 5.87464 6.1805C5.95098 6.03218 6.06606 5.90512 6.14722 5.81845C6.23839 5.72108 6.35973 5.60053 6.50304 5.45816L6.51276 5.4485C6.90425 5.05956 7.14534 4.52287 7.14534 3.92855C7.14534 2.74508 6.18563 1.78569 5.00177 1.78569ZM5.71629 7.85712H4.28724C4.28724 8.21403 4.28876 8.40985 4.30703 8.54571C4.30727 8.54748 4.30751 8.54921 4.30774 8.55091C4.30944 8.55115 4.31118 8.55138 4.31295 8.55162C4.44884 8.56989 4.64474 8.5714 5.00177 8.5714C5.3588 8.5714 5.55469 8.56989 5.69059 8.55162C5.69236 8.55138 5.69409 8.55115 5.69579 8.55091C5.69603 8.54921 5.69627 8.54748 5.6965 8.54571C5.71477 8.40985 5.71629 8.21403 5.71629 7.85712ZM2.85819 7.14283C2.85819 6.9948 2.85796 6.91114 2.8548 6.85032C2.85461 6.84656 2.85441 6.84309 2.85421 6.83988C2.84393 6.8282 2.83047 6.81334 2.81301 6.79469C2.74172 6.71856 2.63908 6.61643 2.48342 6.46178C1.83307 5.81566 1.42914 4.91859 1.42914 3.92855C1.42914 1.9561 3.02866 0.357117 5.00177 0.357117C6.97487 0.357117 8.57439 1.9561 8.57439 3.92855C8.57439 4.91859 8.17047 5.81566 7.52012 6.46178C7.36445 6.61643 7.26182 6.71856 7.19053 6.79469C7.17306 6.81334 7.1596 6.8282 7.14932 6.83988C7.14912 6.84309 7.14892 6.84656 7.14873 6.85032C7.14557 6.91114 7.14534 6.9948 7.14534 7.14283V7.85712C7.14534 7.87009 7.14535 7.88304 7.14535 7.89598C7.14541 8.19889 7.14547 8.49326 7.11281 8.73606C7.076 9.00978 6.98631 9.32212 6.72678 9.58156C6.46726 9.841 6.15481 9.93065 5.881 9.96745C5.63813 10.0001 5.34365 10 5.04064 9.99998C5.0277 9.99998 5.01474 9.99998 5.00177 9.99998C4.98879 9.99998 4.97583 9.99998 4.96289 9.99998C4.65988 10 4.36541 10.0001 4.12253 9.96745C3.84872 9.93065 3.53628 9.841 3.27675 9.58156C3.01722 9.32212 2.92753 9.00978 2.89072 8.73606C2.85807 8.49326 2.85812 8.19889 2.85818 7.89598C2.85819 7.88304 2.85819 7.87008 2.85819 7.85712V7.14283ZM7.1243 6.86977C7.12366 6.87069 7.1233 6.87116 7.12327 6.87119C7.12323 6.87123 7.12356 6.87076 7.1243 6.86977ZM2.88027 6.8712C2.88025 6.87119 2.87988 6.8707 2.87921 6.86975C2.87995 6.87072 2.88028 6.8712 2.88027 6.8712Z" fill="#949E9E"/>
</svg>`;

  var lightbulbCtH1FH_0 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    lightbulbSvg: e$7
  });

  const e$6 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.83 1.34h6.34c.68 0 1.26 0 1.73.04.5.05.97.15 1.42.4.52.3.95.72 1.24 1.24.26.45.35.92.4 1.42.04.47.04 1.05.04 1.73v3.71c0 .69 0 1.26-.04 1.74-.05.5-.14.97-.4 1.41-.3.52-.72.95-1.24 1.25-.45.25-.92.35-1.42.4-.47.03-1.05.03-1.73.03H4.83c-.68 0-1.26 0-1.73-.04-.5-.04-.97-.14-1.42-.4-.52-.29-.95-.72-1.24-1.24a3.39 3.39 0 0 1-.4-1.41A20.9 20.9 0 0 1 0 9.88v-3.7c0-.7 0-1.27.04-1.74.05-.5.14-.97.4-1.42.3-.52.72-.95 1.24-1.24.45-.25.92-.35 1.42-.4.47-.04 1.05-.04 1.73-.04ZM3.28 3.38c-.36.03-.51.08-.6.14-.21.11-.39.29-.5.5a.8.8 0 0 0-.08.19l5.16 3.44c.45.3 1.03.3 1.48 0L13.9 4.2a.79.79 0 0 0-.08-.2c-.11-.2-.29-.38-.5-.5-.09-.05-.24-.1-.6-.13-.37-.04-.86-.04-1.6-.04H4.88c-.73 0-1.22 0-1.6.04ZM14 6.54 9.85 9.31a3.33 3.33 0 0 1-3.7 0L2 6.54v3.3c0 .74 0 1.22.03 1.6.04.36.1.5.15.6.11.2.29.38.5.5.09.05.24.1.6.14.37.03.86.03 1.6.03h6.25c.73 0 1.22 0 1.6-.03.35-.03.5-.09.6-.14.2-.12.38-.3.5-.5.05-.1.1-.24.14-.6.03-.38.03-.86.03-1.6v-3.3Z"
    clip-rule="evenodd"
  />
</svg>`;

  var mailBPAnLdGG = /*#__PURE__*/Object.freeze({
    __proto__: null,
    mailSvg: e$6
  });

  const e$5 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path fill="currentColor" d="M10.81 5.81a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z" />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3 4.75A4.75 4.75 0 0 1 7.75 0h4.5A4.75 4.75 0 0 1 17 4.75v10.5A4.75 4.75 0 0 1 12.25 20h-4.5A4.75 4.75 0 0 1 3 15.25V4.75ZM7.75 2A2.75 2.75 0 0 0 5 4.75v10.5A2.75 2.75 0 0 0 7.75 18h4.5A2.75 2.75 0 0 0 15 15.25V4.75A2.75 2.75 0 0 0 12.25 2h-4.5Z"
    clip-rule="evenodd"
  />
</svg>`;

  var mobileCfCUshdA = /*#__PURE__*/Object.freeze({
    __proto__: null,
    mobileSvg: e$5
  });

  const a = EA`<svg fill="none" viewBox="0 0 41 40">
  <path
    style="fill: var(--wui-color-fg-100);"
    fill-opacity=".05"
    d="M.6 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z"
  />
  <path
    fill="#949E9E"
    d="M15.6 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM23.1 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM28.1 22.81a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"
  />
</svg>`;

  var moreCDVHVyF4 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    moreSvg: a
  });

  const e$4 = EA`<svg fill="none" viewBox="0 0 22 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M16.32 13.62a3.14 3.14 0 1 1-.99 1.72l-1.6-.93a3.83 3.83 0 0 1-3.71 1 3.66 3.66 0 0 1-1.74-1l-1.6.94a3.14 3.14 0 1 1-1-1.73l1.6-.94a3.7 3.7 0 0 1 0-2 3.81 3.81 0 0 1 1.8-2.33c.29-.17.6-.3.92-.38V6.1a3.14 3.14 0 1 1 2 0l-.01.02v1.85H12a3.82 3.82 0 0 1 2.33 1.8 3.7 3.7 0 0 1 .39 2.91l1.6.93ZM2.6 16.54a1.14 1.14 0 0 0 1.98-1.14 1.14 1.14 0 0 0-1.98 1.14ZM11 2.01a1.14 1.14 0 1 0 0 2.28 1.14 1.14 0 0 0 0-2.28Zm1.68 10.45c.08-.19.14-.38.16-.58v-.05l.02-.13v-.13a1.92 1.92 0 0 0-.24-.8l-.11-.15a1.89 1.89 0 0 0-.74-.6 1.86 1.86 0 0 0-.77-.17h-.19a1.97 1.97 0 0 0-.89.34 1.98 1.98 0 0 0-.61.74 1.99 1.99 0 0 0-.16.9v.05a1.87 1.87 0 0 0 .24.74l.1.15c.12.16.26.3.42.42l.16.1.13.07.04.02a1.84 1.84 0 0 0 .76.17h.17a2 2 0 0 0 .91-.35 1.78 1.78 0 0 0 .52-.58l.03-.05a.84.84 0 0 0 .05-.11Zm5.15 4.5a1.14 1.14 0 0 0 1.14-1.97 1.13 1.13 0 0 0-1.55.41c-.32.55-.13 1.25.41 1.56Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.63 9.43a1.5 1.5 0 1 0 1.5-2.6 1.5 1.5 0 0 0-1.5 2.6Zm.32-1.55a.5.5 0 0 1 .68-.19.5.5 0 0 1 .18.68.5.5 0 0 1-.68.19.5.5 0 0 1-.18-.68ZM17.94 8.88a1.5 1.5 0 1 1-2.6-1.5 1.5 1.5 0 1 1 2.6 1.5ZM16.9 7.69a.5.5 0 0 0-.68.19.5.5 0 0 0 .18.68.5.5 0 0 0 .68-.19.5.5 0 0 0-.18-.68ZM9.75 17.75a1.5 1.5 0 1 1 2.6 1.5 1.5 1.5 0 1 1-2.6-1.5Zm1.05 1.18a.5.5 0 0 0 .68-.18.5.5 0 0 0-.18-.68.5.5 0 0 0-.68.18.5.5 0 0 0 .18.68Z"
    clip-rule="evenodd"
  />
</svg>`;

  var networkPlaceholderLwSaNTv6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    networkPlaceholderSvg: e$4
  });

  const l$5 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.13 1h1.71c1.46 0 2.63 0 3.56.1.97.1 1.8.33 2.53.85a5 5 0 0 1 1.1 1.11c.53.73.75 1.56.86 2.53.1.93.1 2.1.1 3.55v1.72c0 1.45 0 2.62-.1 3.55-.1.97-.33 1.8-.86 2.53a5 5 0 0 1-1.1 1.1c-.73.53-1.56.75-2.53.86-.93.1-2.1.1-3.55.1H9.13c-1.45 0-2.62 0-3.56-.1-.96-.1-1.8-.33-2.52-.85a5 5 0 0 1-1.1-1.11 5.05 5.05 0 0 1-.86-2.53c-.1-.93-.1-2.1-.1-3.55V9.14c0-1.45 0-2.62.1-3.55.1-.97.33-1.8.85-2.53a5 5 0 0 1 1.1-1.1 5.05 5.05 0 0 1 2.53-.86C6.51 1 7.67 1 9.13 1ZM5.79 3.09a3.1 3.1 0 0 0-1.57.48 3 3 0 0 0-.66.67c-.24.32-.4.77-.48 1.56-.1.82-.1 1.88-.1 3.4v1.6c0 1.15 0 2.04.05 2.76l.41-.42c.5-.5.93-.92 1.32-1.24.41-.33.86-.6 1.43-.7a3 3 0 0 1 .94 0c.35.06.66.2.95.37a17.11 17.11 0 0 0 .8.45c.1-.08.2-.2.41-.4l.04-.03a27 27 0 0 1 1.95-1.84 4.03 4.03 0 0 1 1.91-.94 4 4 0 0 1 1.25 0c.73.11 1.33.46 1.91.94l.64.55V9.2c0-1.52 0-2.58-.1-3.4a3.1 3.1 0 0 0-.48-1.56 3 3 0 0 0-.66-.67 3.1 3.1 0 0 0-1.56-.48C13.37 3 12.3 3 10.79 3h-1.6c-1.52 0-2.59 0-3.4.09Zm11.18 10-.04-.05a26.24 26.24 0 0 0-1.83-1.74c-.45-.36-.73-.48-.97-.52a2 2 0 0 0-.63 0c-.24.04-.51.16-.97.52-.46.38-1.01.93-1.83 1.74l-.02.02c-.17.18-.34.34-.49.47a2.04 2.04 0 0 1-1.08.5 1.97 1.97 0 0 1-1.25-.27l-.79-.46-.02-.02a.65.65 0 0 0-.24-.1 1 1 0 0 0-.31 0c-.08.02-.21.06-.49.28-.3.24-.65.59-1.2 1.14l-.56.56-.65.66a3 3 0 0 0 .62.6c.33.24.77.4 1.57.49.81.09 1.88.09 3.4.09h1.6c1.52 0 2.58 0 3.4-.09a3.1 3.1 0 0 0 1.56-.48 3 3 0 0 0 .66-.67c.24-.32.4-.77.49-1.56l.07-1.12Zm-8.02-1.03ZM4.99 7a2 2 0 1 1 4 0 2 2 0 0 1-4 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var nftPlaceholderBi0FWn9b = /*#__PURE__*/Object.freeze({
    __proto__: null,
    nftPlaceholderSvg: l$5
  });

  const l$4 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 0a1 1 0 0 1 1 1v5.38a1 1 0 0 1-2 0V1a1 1 0 0 1 1-1ZM5.26 2.6a1 1 0 0 1-.28 1.39 5.46 5.46 0 1 0 6.04 0 1 1 0 1 1 1.1-1.67 7.46 7.46 0 1 1-8.25 0 1 1 0 0 1 1.4.28Z"
    clip-rule="evenodd"
  />
</svg>`;

  var offBhx2zlO8 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    offSvg: l$4
  });

  const t$3 = EA` <svg
  width="36"
  height="36"
  fill="none"
>
  <path
    d="M0 8a8 8 0 0 1 8-8h20a8 8 0 0 1 8 8v20a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V8Z"
    fill="#fff"
    fill-opacity=".05"
  />
  <path
    d="m18.262 17.513-8.944 9.49v.01a2.417 2.417 0 0 0 3.56 1.452l.026-.017 10.061-5.803-4.703-5.132Z"
    fill="#EA4335"
  />
  <path
    d="m27.307 15.9-.008-.008-4.342-2.52-4.896 4.36 4.913 4.912 4.325-2.494a2.42 2.42 0 0 0 .008-4.25Z"
    fill="#FBBC04"
  />
  <path
    d="M9.318 8.997c-.05.202-.084.403-.084.622V26.39c0 .218.025.42.084.621l9.246-9.247-9.246-8.768Z"
    fill="#4285F4"
  />
  <path
    d="m18.33 18 4.627-4.628-10.053-5.828a2.427 2.427 0 0 0-3.586 1.444L18.329 18Z"
    fill="#34A853"
  />
  <path
    d="M8 .5h20A7.5 7.5 0 0 1 35.5 8v20a7.5 7.5 0 0 1-7.5 7.5H8A7.5 7.5 0 0 1 .5 28V8A7.5 7.5 0 0 1 8 .5Z"
    stroke="#fff"
    stroke-opacity=".05"
  />
</svg>`;

  var playStoreBVj6Q_u1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    playStoreSvg: t$3
  });

  const o$5 = EA`<svg
  width="13"
  height="12"
  viewBox="0 0 13 12"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M0.794373 5.99982C0.794373 5.52643 1.17812 5.14268 1.6515 5.14268H5.643V1.15109C5.643 0.677701 6.02675 0.293946 6.50012 0.293945C6.9735 0.293946 7.35725 0.677701 7.35725 1.15109V5.14268H11.3488C11.8221 5.14268 12.2059 5.52643 12.2059 5.99982C12.2059 6.47321 11.8221 6.85696 11.3488 6.85696H7.35725V10.8486C7.35725 11.3219 6.9735 11.7057 6.50012 11.7057C6.02675 11.7057 5.643 11.3219 5.643 10.8486V6.85696H1.6515C1.17812 6.85696 0.794373 6.47321 0.794373 5.99982Z"
  /></svg
>`;

  var plusBIkeS2Sc = /*#__PURE__*/Object.freeze({
    __proto__: null,
    plusSvg: o$5
  });

  const s = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M3 6a3 3 0 0 1 3-3h1a1 1 0 1 0 0-2H6a5 5 0 0 0-5 5v1a1 1 0 0 0 2 0V6ZM13 1a1 1 0 1 0 0 2h1a3 3 0 0 1 3 3v1a1 1 0 1 0 2 0V6a5 5 0 0 0-5-5h-1ZM3 13a1 1 0 1 0-2 0v1a5 5 0 0 0 5 5h1a1 1 0 1 0 0-2H6a3 3 0 0 1-3-3v-1ZM19 13a1 1 0 1 0-2 0v1a3 3 0 0 1-3 3h-1a1 1 0 1 0 0 2h1.01a5 5 0 0 0 5-5v-1ZM5.3 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05A1.5 1.5 0 0 0 9.2 8.14c.06-.2.06-.43.06-.89s0-.7-.06-.89A1.5 1.5 0 0 0 8.14 5.3c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM10.8 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM5.26 12.75c0-.46 0-.7.05-.89a1.5 1.5 0 0 1 1.06-1.06c.19-.05.42-.05.89-.05.46 0 .7 0 .88.05.52.14.93.54 1.06 1.06.06.2.06.43.06.89s0 .7-.06.89a1.5 1.5 0 0 1-1.06 1.06c-.19.05-.42.05-.88.05-.47 0-.7 0-.9-.05a1.5 1.5 0 0 1-1.05-1.06c-.05-.2-.05-.43-.05-.89ZM10.8 11.86c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06Z"
  />
</svg>`;

  var qrCodeWN32VaEB = /*#__PURE__*/Object.freeze({
    __proto__: null,
    qrCodeIcon: s
  });

  const o$4 = EA`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    d="M8.8071 0.292893C9.19763 0.683417 9.19763 1.31658 8.8071 1.70711L6.91421 3.6H11.8404C14.3368 3.6 16.5533 5.1975 17.3427 7.56588L17.4487 7.88377C17.6233 8.40772 17.3402 8.97404 16.8162 9.14868C16.2923 9.32333 15.726 9.04017 15.5513 8.51623L15.4453 8.19834C14.9281 6.64664 13.476 5.6 11.8404 5.6H6.91421L8.8071 7.49289C9.19763 7.88342 9.19763 8.51658 8.8071 8.90711C8.41658 9.29763 7.78341 9.29763 7.39289 8.90711L3.79289 5.30711C3.40236 4.91658 3.40236 4.28342 3.79289 3.89289L7.39289 0.292893C7.78341 -0.0976311 8.41658 -0.0976311 8.8071 0.292893ZM4.18377 10.8513C4.70771 10.6767 5.27403 10.9598 5.44868 11.4838L5.55464 11.8017C6.07188 13.3534 7.52401 14.4 9.15964 14.4L14.0858 14.4L12.1929 12.5071C11.8024 12.1166 11.8024 11.4834 12.1929 11.0929C12.5834 10.7024 13.2166 10.7024 13.6071 11.0929L17.2071 14.6929C17.5976 15.0834 17.5976 15.7166 17.2071 16.1071L13.6071 19.7071C13.2166 20.0976 12.5834 20.0976 12.1929 19.7071C11.8024 19.3166 11.8024 18.6834 12.1929 18.2929L14.0858 16.4L9.15964 16.4C6.66314 16.4 4.44674 14.8025 3.65728 12.4341L3.55131 12.1162C3.37667 11.5923 3.65983 11.026 4.18377 10.8513Z"
  /></svg
>`;

  var recycleHorizontalBJAhJ4Cq = /*#__PURE__*/Object.freeze({
    __proto__: null,
    recycleHorizontalSvg: o$4
  });

  const o$3 = EA`<svg fill="none" viewBox="0 0 14 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.94 1.04a1 1 0 0 1 .7 1.23l-.48 1.68a5.85 5.85 0 0 1 8.53 4.32 5.86 5.86 0 0 1-11.4 2.56 1 1 0 0 1 1.9-.57 3.86 3.86 0 1 0 1.83-4.5l1.87.53a1 1 0 0 1-.55 1.92l-4.1-1.15a1 1 0 0 1-.69-1.23l1.16-4.1a1 1 0 0 1 1.23-.7Z"
    clip-rule="evenodd"
  />
</svg>`;

  var refresh1plIvE5_ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    refreshSvg: o$3
  });

  const o$2 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.36 4.21a5.14 5.14 0 1 0 0 10.29 5.14 5.14 0 0 0 0-10.29ZM1.64 9.36a7.71 7.71 0 1 1 14 4.47l2.52 2.5a1.29 1.29 0 1 1-1.82 1.83l-2.51-2.51A7.71 7.71 0 0 1 1.65 9.36Z"
    clip-rule="evenodd"
  />
</svg>`;

  var searchCIeuN_Yn = /*#__PURE__*/Object.freeze({
    __proto__: null,
    searchSvg: o$2
  });

  const l$3 = EA`<svg fill="none" viewBox="0 0 21 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.3808 4.34812C13.72 4.47798 12.8501 4.7587 11.5748 5.17296L9.00869 6.00646C6.90631 6.68935 5.40679 7.17779 4.38121 7.63178C3.87166 7.85734 3.5351 8.05091 3.32022 8.22035C3.11183 8.38466 3.07011 8.48486 3.05969 8.51817C2.98058 8.77103 2.98009 9.04195 3.05831 9.29509C3.06861 9.32844 3.10998 9.42878 3.31777 9.59384C3.53205 9.76404 3.86792 9.95881 4.37667 10.1862C5.29287 10.5957 6.58844 11.0341 8.35529 11.6164L10.8876 8.59854C11.2426 8.17547 11.8733 8.12028 12.2964 8.47528C12.7195 8.83029 12.7746 9.46104 12.4196 9.88412L9.88738 12.9019C10.7676 14.5408 11.4244 15.7406 11.9867 16.5718C12.299 17.0333 12.5491 17.3303 12.7539 17.5117C12.9526 17.6877 13.0586 17.711 13.0932 17.7154C13.3561 17.7484 13.6228 17.7009 13.8581 17.5791C13.8891 17.563 13.9805 17.5046 14.1061 17.2708C14.2357 17.0298 14.3679 16.6647 14.5015 16.1237C14.7705 15.0349 14.9912 13.4733 15.2986 11.2843L15.6738 8.61249C15.8603 7.28456 15.9857 6.37917 15.9989 5.7059C16.012 5.03702 15.9047 4.8056 15.8145 4.69183C15.7044 4.55297 15.5673 4.43792 15.4114 4.35365C15.2837 4.28459 15.0372 4.2191 14.3808 4.34812ZM7.99373 13.603C6.11919 12.9864 4.6304 12.4902 3.5606 12.0121C2.98683 11.7557 2.4778 11.4808 2.07383 11.1599C1.66337 10.8339 1.31312 10.4217 1.14744 9.88551C0.949667 9.24541 0.950886 8.56035 1.15094 7.92096C1.31852 7.38534 1.67024 6.97442 2.08185 6.64985C2.48697 6.33041 2.99697 6.05734 3.57166 5.80295C4.70309 5.3021 6.30179 4.78283 8.32903 4.12437L11.0196 3.25042C12.2166 2.86159 13.2017 2.54158 13.9951 2.38566C14.8065 2.22618 15.6202 2.19289 16.3627 2.59437C16.7568 2.80747 17.1035 3.09839 17.3818 3.4495C17.9062 4.111 18.0147 4.91815 17.9985 5.74496C17.9827 6.55332 17.8386 7.57903 17.6636 8.82534L17.2701 11.6268C16.9737 13.7376 16.7399 15.4022 16.4432 16.6034C16.2924 17.2135 16.1121 17.7632 15.8678 18.2176C15.6197 18.6794 15.2761 19.0971 14.7777 19.3551C14.1827 19.6632 13.5083 19.7833 12.8436 19.6997C12.2867 19.6297 11.82 19.3563 11.4277 19.0087C11.0415 18.6666 10.6824 18.213 10.3302 17.6925C9.67361 16.722 8.92648 15.342 7.99373 13.603Z"
    clip-rule="evenodd"
  />
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
  ></svg></svg
>`;

  var sendBLUrKkuS = /*#__PURE__*/Object.freeze({
    __proto__: null,
    sendSvg: l$3
  });

  const o$1 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.76.3a1 1 0 0 1 0 1.4L4.07 4.4h9a1 1 0 1 1 0 2h-9l2.69 2.68a1 1 0 1 1-1.42 1.42L.95 6.09a1 1 0 0 1 0-1.4l4.4-4.4a1 1 0 0 1 1.4 0Zm6.49 9.21a1 1 0 0 1 1.41 0l4.39 4.4a1 1 0 0 1 0 1.4l-4.39 4.4a1 1 0 0 1-1.41-1.42l2.68-2.68h-9a1 1 0 0 1 0-2h9l-2.68-2.68a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`;

  var swapHorizontalDUkiMgZh = /*#__PURE__*/Object.freeze({
    __proto__: null,
    swapHorizontalSvg: o$1
  });

  const e$3 = EA`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M13.7306 3.24213C14.0725 3.58384 14.0725 4.13786 13.7306 4.47957L10.7418 7.46737C10.4 7.80908 9.84581 7.80908 9.50399 7.46737C9.16216 7.12567 9.16216 6.57165 9.50399 6.22994L10.9986 4.73585H5.34082C4.85741 4.73585 4.46553 4.3441 4.46553 3.86085C4.46553 3.3776 4.85741 2.98585 5.34082 2.98585L10.9986 2.98585L9.50399 1.49177C9.16216 1.15006 9.16216 0.596037 9.50399 0.254328C9.84581 -0.0873803 10.4 -0.0873803 10.7418 0.254328L13.7306 3.24213ZM9.52515 10.1352C9.52515 10.6185 9.13327 11.0102 8.64986 11.0102L2.9921 11.0102L4.48669 12.5043C4.82852 12.846 4.82852 13.4001 4.48669 13.7418C4.14487 14.0835 3.59066 14.0835 3.24884 13.7418L0.26003 10.754C0.0958806 10.5899 0.0036621 10.3673 0.00366211 10.1352C0.00366212 9.90318 0.0958806 9.68062 0.26003 9.51652L3.24884 6.52872C3.59066 6.18701 4.14487 6.18701 4.48669 6.52872C4.82851 6.87043 4.82851 7.42445 4.48669 7.76616L2.9921 9.26024L8.64986 9.26024C9.13327 9.26024 9.52515 9.65199 9.52515 10.1352Z"
    fill="currentColor"
  />
</svg>

`;

  var swapHorizontalMediumCixUKq6d = /*#__PURE__*/Object.freeze({
    __proto__: null,
    swapHorizontalMediumSvg: e$3
  });

  const e$2 = EA`<svg width="10" height="10" viewBox="0 0 10 10">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.77986 0.566631C4.0589 0.845577 4.0589 1.29784 3.77986 1.57678L3.08261 2.2738H6.34184C6.73647 2.2738 7.05637 2.5936 7.05637 2.98808C7.05637 3.38257 6.73647 3.70237 6.34184 3.70237H3.08261L3.77986 4.39938C4.0589 4.67833 4.0589 5.13059 3.77986 5.40954C3.50082 5.68848 3.04841 5.68848 2.76937 5.40954L0.852346 3.49316C0.573306 3.21421 0.573306 2.76195 0.852346 2.48301L2.76937 0.566631C3.04841 0.287685 3.50082 0.287685 3.77986 0.566631ZM6.22 4.59102C6.49904 4.31208 6.95145 4.31208 7.23049 4.59102L9.14751 6.5074C9.42655 6.78634 9.42655 7.23861 9.14751 7.51755L7.23049 9.43393C6.95145 9.71287 6.49904 9.71287 6.22 9.43393C5.94096 9.15498 5.94096 8.70272 6.22 8.42377L6.91725 7.72676L3.65802 7.72676C3.26339 7.72676 2.94349 7.40696 2.94349 7.01247C2.94349 6.61798 3.26339 6.29819 3.65802 6.29819L6.91725 6.29819L6.22 5.60117C5.94096 5.32223 5.94096 4.86997 6.22 4.59102Z"
    clip-rule="evenodd"
  />
</svg>`;

  var swapHorizontalBold4YH5E2SP = /*#__PURE__*/Object.freeze({
    __proto__: null,
    swapHorizontalBoldSvg: e$2
  });

  const L$1 = EA`<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
  <path 
    fill="currentColor"
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M8.3071 0.292893C8.69763 0.683417 8.69763 1.31658 8.3071 1.70711L6.41421 3.6H11.3404C13.8368 3.6 16.0533 5.1975 16.8427 7.56588L16.9487 7.88377C17.1233 8.40772 16.8402 8.97404 16.3162 9.14868C15.7923 9.32333 15.226 9.04017 15.0513 8.51623L14.9453 8.19834C14.4281 6.64664 12.976 5.6 11.3404 5.6H6.41421L8.3071 7.49289C8.69763 7.88342 8.69763 8.51658 8.3071 8.90711C7.91658 9.29763 7.28341 9.29763 6.89289 8.90711L3.29289 5.30711C2.90236 4.91658 2.90236 4.28342 3.29289 3.89289L6.89289 0.292893C7.28341 -0.0976311 7.91658 -0.0976311 8.3071 0.292893ZM3.68377 10.8513C4.20771 10.6767 4.77403 10.9598 4.94868 11.4838L5.05464 11.8017C5.57188 13.3534 7.024 14.4 8.65964 14.4L13.5858 14.4L11.6929 12.5071C11.3024 12.1166 11.3024 11.4834 11.6929 11.0929C12.0834 10.7024 12.7166 10.7024 13.1071 11.0929L16.7071 14.6929C17.0976 15.0834 17.0976 15.7166 16.7071 16.1071L13.1071 19.7071C12.7166 20.0976 12.0834 20.0976 11.6929 19.7071C11.3024 19.3166 11.3024 18.6834 11.6929 18.2929L13.5858 16.4L8.65964 16.4C6.16314 16.4 3.94674 14.8025 3.15728 12.4341L3.05131 12.1162C2.87667 11.5923 3.15983 11.026 3.68377 10.8513Z" 
  />
</svg>`;

  var swapHorizontalRoundedBoldDhRzd1B0 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    swapHorizontalRoundedBoldSvg: L$1
  });

  const e$1 = EA`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.48 2.18a1 1 0 0 1 1.41 0l2.68 2.68a1 1 0 1 1-1.41 1.42l-.98-.98v4.56a1 1 0 0 1-2 0V5.3l-.97.98A1 1 0 0 1 .79 4.86l2.69-2.68Zm6.34 2.93a1 1 0 0 1 1 1v4.56l.97-.98a1 1 0 1 1 1.42 1.42l-2.69 2.68a1 1 0 0 1-1.41 0l-2.68-2.68a1 1 0 0 1 1.41-1.42l.98.98V6.1a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

  var swapVerticalDM9haKK_ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    swapVerticalSvg: e$1
  });

  const l$2 = EA`<svg width="32" height="32" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
  <g clip-path="url(#a)">
    <path fill="url(#b)" d="M0 0h32v32H0z"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.034 15.252c4.975-2.167 8.293-3.596 9.953-4.287 4.74-1.971 5.725-2.314 6.366-2.325.142-.002.457.033.662.198.172.14.22.33.243.463.022.132.05.435.028.671-.257 2.7-1.368 9.248-1.933 12.27-.24 1.28-.71 1.708-1.167 1.75-.99.091-1.743-.655-2.703-1.284-1.502-.985-2.351-1.598-3.81-2.558-1.684-1.11-.592-1.721.368-2.718.252-.261 4.619-4.233 4.703-4.594.01-.045.02-.213-.08-.301-.1-.09-.246-.059-.353-.035-.15.034-2.55 1.62-7.198 4.758-.682.468-1.298.696-1.851.684-.61-.013-1.782-.344-2.653-.628-1.069-.347-1.918-.53-1.845-1.12.039-.308.462-.623 1.27-.944Z" fill="#fff"/>
  </g>
  <path d="M.5 16C.5 7.44 7.44.5 16 .5 24.56.5 31.5 7.44 31.5 16c0 8.56-6.94 15.5-15.5 15.5C7.44 31.5.5 24.56.5 16Z" stroke="#141414" stroke-opacity=".05"/>
  <defs>
    <linearGradient id="b" x1="1600" y1="0" x2="1600" y2="3176.27" gradientUnits="userSpaceOnUse">
      <stop stop-color="#2AABEE"/>
      <stop offset="1" stop-color="#229ED9"/>
    </linearGradient>
    <clipPath id="a">
      <path d="M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z" fill="#fff"/>
    </clipPath>
  </defs>
</svg>`;

  var telegramDNXWEDv1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    telegramSvg: l$2
  });

  const l$1 = EA`<svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M7 3.71875C6.0335 3.71875 5.25 2.93525 5.25 1.96875C5.25 1.00225 6.0335 0.21875 7 0.21875C7.9665 0.21875 8.75 1.00225 8.75 1.96875C8.75 2.93525 7.9665 3.71875 7 3.71875Z" fill="#949E9E"/>
  <path d="M7 8.96875C6.0335 8.96875 5.25 8.18525 5.25 7.21875C5.25 6.25225 6.0335 5.46875 7 5.46875C7.9665 5.46875 8.75 6.25225 8.75 7.21875C8.75 8.18525 7.9665 8.96875 7 8.96875Z" fill="#949E9E"/>
  <path d="M5.25 12.4688C5.25 13.4352 6.0335 14.2187 7 14.2187C7.9665 14.2187 8.75 13.4352 8.75 12.4688C8.75 11.5023 7.9665 10.7188 7 10.7188C6.0335 10.7188 5.25 11.5023 5.25 12.4688Z" fill="#949E9E"/>
</svg>`;

  var threeDotsISBP0YTM = /*#__PURE__*/Object.freeze({
    __proto__: null,
    threeDotsSvg: l$1
  });

  const i = EA`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5A3E85" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M18.22 25.7 20 23.91h3.34l2.1-2.1v-6.68H15.4v8.78h2.82v1.77Zm3.87-8.16h1.25v3.66H22.1v-3.66Zm-3.34 0H20v3.66h-1.25v-3.66ZM20 7.9a12 12 0 1 0 0 24 12 12 0 0 0 0-24Zm6.69 14.56-3.66 3.66h-2.72l-1.77 1.78h-1.88V26.1H13.3v-9.82l.94-2.4H26.7v8.56Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

  var twitchNbuckBBr = /*#__PURE__*/Object.freeze({
    __proto__: null,
    twitchSvg: i
  });

  const h = EA`<svg fill="none" viewBox="0 0 41 40">
  <g clip-path="url(#a)">
    <path fill="#000" d="M.8 0h40v40H.8z" />
    <path
      fill="#fff"
      d="m22.63 18.46 7.14-8.3h-1.69l-6.2 7.2-4.96-7.2H11.2l7.5 10.9-7.5 8.71h1.7l6.55-7.61 5.23 7.61h5.72l-7.77-11.31Zm-9.13-7.03h2.6l11.98 17.13h-2.6L13.5 11.43Z"
    />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M.8 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z" /></clipPath>
  </defs>
</svg>`;

  var xDZCRo3OL = /*#__PURE__*/Object.freeze({
    __proto__: null,
    xSvg: h
  });

  const c$1 = EA`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="m14.36 4.74.01.42c0 4.34-3.3 9.34-9.34 9.34A9.3 9.3 0 0 1 0 13.03a6.6 6.6 0 0 0 4.86-1.36 3.29 3.29 0 0 1-3.07-2.28c.5.1 1 .07 1.48-.06A3.28 3.28 0 0 1 .64 6.11v-.04c.46.26.97.4 1.49.41A3.29 3.29 0 0 1 1.11 2.1a9.32 9.32 0 0 0 6.77 3.43 3.28 3.28 0 0 1 5.6-3 6.59 6.59 0 0 0 2.08-.8 3.3 3.3 0 0 1-1.45 1.82A6.53 6.53 0 0 0 16 3.04c-.44.66-1 1.23-1.64 1.7Z"
  />
</svg>`;

  var twitterIconSC_tDwJD = /*#__PURE__*/Object.freeze({
    __proto__: null,
    twitterIconSvg: c$1
  });

  const c = EA`<svg fill="none" viewBox="0 0 28 28">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M18.1 4.76c-.42-.73-1.33-1.01-2.09-.66l-1.42.66c-.37.18-.8.18-1.18 0l-1.4-.65a1.63 1.63 0 0 0-2.1.66l-.84 1.45c-.2.34-.53.59-.92.67l-1.7.35c-.83.17-1.39.94-1.3 1.78l.19 1.56c.04.39-.08.78-.33 1.07l-1.12 1.3c-.52.6-.52 1.5 0 2.11L5 16.38c.25.3.37.68.33 1.06l-.18 1.57c-.1.83.46 1.6 1.28 1.78l1.7.35c.4.08.73.32.93.66l.84 1.43a1.63 1.63 0 0 0 2.09.66l1.41-.66c.37-.17.8-.17 1.18 0l1.43.67c.76.35 1.66.07 2.08-.65l.86-1.45c.2-.34.54-.58.92-.66l1.68-.35A1.63 1.63 0 0 0 22.84 19l-.18-1.57a1.4 1.4 0 0 1 .33-1.06l1.12-1.32c.52-.6.52-1.5 0-2.11l-1.12-1.3a1.4 1.4 0 0 1-.33-1.07l.18-1.57c.1-.83-.46-1.6-1.28-1.77l-1.68-.35a1.4 1.4 0 0 1-.92-.66l-.86-1.47Zm-3.27-3.2a4.43 4.43 0 0 1 5.69 1.78l.54.93 1.07.22a4.43 4.43 0 0 1 3.5 4.84l-.11.96.7.83a4.43 4.43 0 0 1 .02 5.76l-.72.85.1.96a4.43 4.43 0 0 1-3.5 4.84l-1.06.22-.54.92a4.43 4.43 0 0 1-5.68 1.77l-.84-.4-.82.39a4.43 4.43 0 0 1-5.7-1.79l-.51-.89-1.09-.22a4.43 4.43 0 0 1-3.5-4.84l.1-.96-.72-.85a4.43 4.43 0 0 1 .01-5.76l.71-.83-.1-.95a4.43 4.43 0 0 1 3.5-4.84l1.08-.23.53-.9a4.43 4.43 0 0 1 5.7-1.8l.81.38.83-.39ZM18.2 9.4c.65.42.84 1.28.42 1.93l-4.4 6.87a1.4 1.4 0 0 1-2.26.14L9.5 15.39a1.4 1.4 0 0 1 2.15-1.8l1.23 1.48 3.38-5.26a1.4 1.4 0 0 1 1.93-.42Z"
    clip-rule="evenodd"
  />
</svg>`;

  var verifyCNVnt4Ql = /*#__PURE__*/Object.freeze({
    __proto__: null,
    verifySvg: c
  });

  const o = EA`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="m4.1 12.43-.45-.78-.93-.2a1.65 1.65 0 0 1-1.31-1.8l.1-.86-.61-.71a1.65 1.65 0 0 1 0-2.16l.6-.7-.09-.85c-.1-.86.47-1.64 1.3-1.81l.94-.2.45-.78A1.65 1.65 0 0 1 6.23.9l.77.36.78-.36c.77-.36 1.69-.07 2.12.66l.47.8.91.2c.84.17 1.4.95 1.31 1.8l-.1.86.6.7c.54.62.54 1.54.01 2.16l-.6.71.09.86c.1.85-.47 1.63-1.3 1.8l-.92.2-.47.79a1.65 1.65 0 0 1-2.12.66L7 12.74l-.77.36c-.78.35-1.7.07-2.13-.67Zm5.74-6.9a1 1 0 1 0-1.68-1.07L6.32 7.3l-.55-.66a1 1 0 0 0-1.54 1.28l1.43 1.71a1 1 0 0 0 1.61-.1l2.57-4Z"
    clip-rule="evenodd"
  />
</svg>`;

  var verifyFilledCc1gquGa = /*#__PURE__*/Object.freeze({
    __proto__: null,
    verifyFilledSvg: o
  });

  const v$1 = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 5.5c0-1.8 1.46-3.25 3.25-3.25H14.5c1.8 0 3.25 1.46 3.25 3.25v.28A3.25 3.25 0 0 1 20 8.88v2.24c0 1.45-.94 2.68-2.25 3.1v.28c0 1.8-1.46 3.25-3.25 3.25H3.25A3.25 3.25 0 0 1 0 14.5v-9Zm15.75 8.88h-2.38a4.38 4.38 0 0 1 0-8.76h2.38V5.5c0-.69-.56-1.25-1.25-1.25H3.25C2.56 4.25 2 4.81 2 5.5v9c0 .69.56 1.25 1.25 1.25H14.5c.69 0 1.25-.56 1.25-1.25v-.13Zm-2.38-6.76a2.37 2.37 0 1 0 0 4.75h3.38c.69 0 1.25-.55 1.25-1.24V8.87c0-.69-.56-1.24-1.25-1.24h-3.38Z"
    clip-rule="evenodd"
  />
</svg>`;

  var walletByuNiC1g = /*#__PURE__*/Object.freeze({
    __proto__: null,
    walletSvg: v$1
  });

  const t$2 = EA`<svg fill="none" viewBox="0 0 96 67">
  <path
    fill="currentColor"
    d="M25.32 18.8a32.56 32.56 0 0 1 45.36 0l1.5 1.47c.63.62.63 1.61 0 2.22l-5.15 5.05c-.31.3-.82.3-1.14 0l-2.07-2.03a22.71 22.71 0 0 0-31.64 0l-2.22 2.18c-.31.3-.82.3-1.14 0l-5.15-5.05a1.55 1.55 0 0 1 0-2.22l1.65-1.62Zm56.02 10.44 4.59 4.5c.63.6.63 1.6 0 2.21l-20.7 20.26c-.62.61-1.63.61-2.26 0L48.28 41.83a.4.4 0 0 0-.56 0L33.03 56.21c-.63.61-1.64.61-2.27 0L10.07 35.95a1.55 1.55 0 0 1 0-2.22l4.59-4.5a1.63 1.63 0 0 1 2.27 0L31.6 43.63a.4.4 0 0 0 .57 0l14.69-14.38a1.63 1.63 0 0 1 2.26 0l14.69 14.38a.4.4 0 0 0 .57 0l14.68-14.38a1.63 1.63 0 0 1 2.27 0Z"
  />
  <path
    stroke="#000"
    stroke-opacity=".1"
    d="M25.67 19.15a32.06 32.06 0 0 1 44.66 0l1.5 1.48c.43.42.43 1.09 0 1.5l-5.15 5.05a.31.31 0 0 1-.44 0l-2.07-2.03a23.21 23.21 0 0 0-32.34 0l-2.22 2.18a.31.31 0 0 1-.44 0l-5.15-5.05a1.05 1.05 0 0 1 0-1.5l1.65-1.63ZM81 29.6l4.6 4.5c.42.41.42 1.09 0 1.5l-20.7 20.26c-.43.43-1.14.43-1.57 0L48.63 41.47a.9.9 0 0 0-1.26 0L32.68 55.85c-.43.43-1.14.43-1.57 0L10.42 35.6a1.05 1.05 0 0 1 0-1.5l4.59-4.5a1.13 1.13 0 0 1 1.57 0l14.68 14.38a.9.9 0 0 0 1.27 0l-.35-.35.35.35L47.22 29.6a1.13 1.13 0 0 1 1.56 0l14.7 14.38a.9.9 0 0 0 1.26 0L79.42 29.6a1.13 1.13 0 0 1 1.57 0Z"
  />
</svg>`, C = EA`
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_22274_4692)">
<path d="M0 6.64C0 4.17295 0 2.93942 0.525474 2.01817C0.880399 1.39592 1.39592 0.880399 2.01817 0.525474C2.93942 0 4.17295 0 6.64 0H9.36C11.8271 0 13.0606 0 13.9818 0.525474C14.6041 0.880399 15.1196 1.39592 15.4745 2.01817C16 2.93942 16 4.17295 16 6.64V9.36C16 11.8271 16 13.0606 15.4745 13.9818C15.1196 14.6041 14.6041 15.1196 13.9818 15.4745C13.0606 16 11.8271 16 9.36 16H6.64C4.17295 16 2.93942 16 2.01817 15.4745C1.39592 15.1196 0.880399 14.6041 0.525474 13.9818C0 13.0606 0 11.8271 0 9.36V6.64Z" fill="#C7B994"/>
<path d="M4.49038 5.76609C6.42869 3.86833 9.5713 3.86833 11.5096 5.76609L11.7429 5.99449C11.8398 6.08938 11.8398 6.24323 11.7429 6.33811L10.9449 7.11942C10.8964 7.16686 10.8179 7.16686 10.7694 7.11942L10.4484 6.80512C9.09617 5.48119 6.90381 5.48119 5.5516 6.80512L5.20782 7.14171C5.15936 7.18915 5.08079 7.18915 5.03234 7.14171L4.23434 6.3604C4.13742 6.26552 4.13742 6.11167 4.23434 6.01678L4.49038 5.76609ZM13.1599 7.38192L13.8702 8.07729C13.9671 8.17217 13.9671 8.32602 13.8702 8.4209L10.6677 11.5564C10.5708 11.6513 10.4137 11.6513 10.3168 11.5564L8.04388 9.33105C8.01965 9.30733 7.98037 9.30733 7.95614 9.33105L5.6833 11.5564C5.58638 11.6513 5.42925 11.6513 5.33234 11.5564L2.12982 8.42087C2.0329 8.32598 2.0329 8.17213 2.12982 8.07724L2.84004 7.38188C2.93695 7.28699 3.09408 7.28699 3.191 7.38188L5.46392 9.60726C5.48815 9.63098 5.52743 9.63098 5.55166 9.60726L7.82447 7.38188C7.92138 7.28699 8.07851 7.28699 8.17543 7.38187L10.4484 9.60726C10.4726 9.63098 10.5119 9.63098 10.5361 9.60726L12.809 7.38192C12.9059 7.28703 13.063 7.28703 13.1599 7.38192Z" fill="#202020"/>
</g>
<defs>
<clipPath id="clip0_22274_4692">
<path d="M0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z" fill="white"/>
</clipPath>
</defs>
</svg>
`, L = EA`
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="11" cy="11" r="11" transform="matrix(-1 0 0 1 23 1)" fill="#202020"/>
<circle cx="11" cy="11" r="11.5" transform="matrix(-1 0 0 1 23 1)" stroke="#C7B994" stroke-opacity="0.7"/>
<path d="M15.4523 11.0686L16.7472 9.78167C13.8205 6.87297 10.1838 6.87297 7.25708 9.78167L8.55201 11.0686C10.7779 8.85645 13.2279 8.85645 15.4538 11.0686H15.4523Z" fill="#C7B994"/>
<path d="M15.0199 14.067L12 11.0656L8.98 14.067L5.96004 11.0656L4.66663 12.3511L8.98 16.6393L12 13.638L15.0199 16.6393L19.3333 12.3511L18.0399 11.0656L15.0199 14.067Z" fill="#C7B994"/>
</svg>
`;

  var walletconnect25mm2C_2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    walletConnectBrownSvg: L,
    walletConnectLightBrownSvg: C,
    walletConnectSvg: t$2
  });

  const v = EA`
  <svg fill="none" viewBox="0 0 48 44">
    <path
      style="fill: var(--wui-color-bg-300);"
      d="M4.56 8.64c-1.23 1.68-1.23 4.08-1.23 8.88v8.96c0 4.8 0 7.2 1.23 8.88.39.55.87 1.02 1.41 1.42C7.65 38 10.05 38 14.85 38h14.3c4.8 0 7.2 0 8.88-1.22a6.4 6.4 0 0 0 1.41-1.42c.83-1.14 1.1-2.6 1.19-4.92a6.4 6.4 0 0 0 5.16-4.65c.21-.81.21-1.8.21-3.79 0-1.98 0-2.98-.22-3.79a6.4 6.4 0 0 0-5.15-4.65c-.1-2.32-.36-3.78-1.19-4.92a6.4 6.4 0 0 0-1.41-1.42C36.35 6 33.95 6 29.15 6h-14.3c-4.8 0-7.2 0-8.88 1.22a6.4 6.4 0 0 0-1.41 1.42Z"
    />
    <path
      style="fill: var(--wui-color-fg-200);"
      fill-rule="evenodd"
      d="M2.27 11.33a6.4 6.4 0 0 1 6.4-6.4h26.66a6.4 6.4 0 0 1 6.4 6.4v1.7a6.4 6.4 0 0 1 5.34 6.3v5.34a6.4 6.4 0 0 1-5.34 6.3v1.7a6.4 6.4 0 0 1-6.4 6.4H8.67a6.4 6.4 0 0 1-6.4-6.4V11.33ZM39.6 31.07h-6.93a9.07 9.07 0 1 1 0-18.14h6.93v-1.6a4.27 4.27 0 0 0-4.27-4.26H8.67a4.27 4.27 0 0 0-4.27 4.26v21.34a4.27 4.27 0 0 0 4.27 4.26h26.66a4.27 4.27 0 0 0 4.27-4.26v-1.6Zm-6.93-16a6.93 6.93 0 0 0 0 13.86h8a4.27 4.27 0 0 0 4.26-4.26v-5.34a4.27 4.27 0 0 0-4.26-4.26h-8Z"
      clip-rule="evenodd"
    />
  </svg>
`;

  var walletPlaceholderBT1piwN1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    walletPlaceholderSvg: v
  });

  const e = EA`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M11 6.67a1 1 0 1 0-2 0v2.66a1 1 0 0 0 2 0V6.67ZM10 14.5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 1a9 9 0 1 0 0 18 9 9 0 0 0 0-18Zm-7 9a7 7 0 1 1 14 0 7 7 0 0 1-14 0Z"
    clip-rule="evenodd"
  />
</svg>`;

  var warningCircleB02Ol9D6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    warningCircleSvg: e
  });

  const t$1 = EA`<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.125 6.875C9.125 6.57833 9.21298 6.28832 9.3778 6.04165C9.54262 5.79497 9.77689 5.60271 10.051 5.48918C10.3251 5.37565 10.6267 5.34594 10.9176 5.40382C11.2086 5.4617 11.4759 5.60456 11.6857 5.81434C11.8954 6.02412 12.0383 6.29139 12.0962 6.58236C12.1541 6.87334 12.1244 7.17494 12.0108 7.44903C11.8973 7.72311 11.705 7.95738 11.4584 8.1222C11.2117 8.28703 10.9217 8.375 10.625 8.375C10.2272 8.375 9.84565 8.21696 9.56434 7.93566C9.28304 7.65436 9.125 7.27282 9.125 6.875ZM21.125 11C21.125 13.0025 20.5312 14.9601 19.4186 16.6251C18.3061 18.2902 16.7248 19.5879 14.8747 20.3543C13.0246 21.1206 10.9888 21.3211 9.02471 20.9305C7.06066 20.5398 5.25656 19.5755 3.84055 18.1595C2.42454 16.7435 1.46023 14.9393 1.06955 12.9753C0.678878 11.0112 0.879387 8.97543 1.64572 7.12533C2.41206 5.27523 3.70981 3.69392 5.37486 2.58137C7.0399 1.46882 8.99747 0.875 11 0.875C13.6844 0.877978 16.258 1.94567 18.1562 3.84383C20.0543 5.74199 21.122 8.3156 21.125 11ZM18.875 11C18.875 9.44247 18.4131 7.91992 17.5478 6.62488C16.6825 5.32985 15.4526 4.32049 14.0136 3.72445C12.5747 3.12841 10.9913 2.97246 9.46367 3.27632C7.93607 3.58017 6.53288 4.3302 5.43154 5.43153C4.3302 6.53287 3.58018 7.93606 3.27632 9.46366C2.97246 10.9913 3.12841 12.5747 3.72445 14.0136C4.32049 15.4526 5.32985 16.6825 6.62489 17.5478C7.91993 18.4131 9.44248 18.875 11 18.875C13.0879 18.8728 15.0896 18.0424 16.566 16.566C18.0424 15.0896 18.8728 13.0879 18.875 11ZM12.125 14.4387V11.375C12.125 10.8777 11.9275 10.4008 11.5758 10.0492C11.2242 9.69754 10.7473 9.5 10.25 9.5C9.98433 9.4996 9.72708 9.59325 9.52383 9.76435C9.32058 9.93544 9.18444 10.173 9.13952 10.4348C9.09461 10.6967 9.14381 10.966 9.27843 11.195C9.41304 11.4241 9.62438 11.5981 9.875 11.6863V14.75C9.875 15.2473 10.0725 15.7242 10.4242 16.0758C10.7758 16.4275 11.2527 16.625 11.75 16.625C12.0157 16.6254 12.2729 16.5318 12.4762 16.3607C12.6794 16.1896 12.8156 15.952 12.8605 15.6902C12.9054 15.4283 12.8562 15.159 12.7216 14.93C12.587 14.7009 12.3756 14.5269 12.125 14.4387Z" fill="currentColor"/>
</svg>`;

  var infoRTHItMt_ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    infoSvg: t$1
  });

  const t = EA`<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0162 11.6312L9.55059 2.13937C9.39228 1.86862 9.16584 1.64405 8.8938 1.48798C8.62176 1.33192 8.3136 1.2498 7.99997 1.2498C7.68634 1.2498 7.37817 1.33192 7.10613 1.48798C6.83409 1.64405 6.60765 1.86862 6.44934 2.13937L0.983716 11.6312C0.830104 11.894 0.749146 12.1928 0.749146 12.4972C0.749146 12.8015 0.830104 13.1004 0.983716 13.3631C1.14027 13.6352 1.3664 13.8608 1.63889 14.0166C1.91139 14.1725 2.22044 14.253 2.53434 14.25H13.4656C13.7793 14.2528 14.0881 14.1721 14.3603 14.0163C14.6326 13.8604 14.8585 13.635 15.015 13.3631C15.1688 13.1005 15.2499 12.8017 15.2502 12.4973C15.2504 12.193 15.1696 11.8941 15.0162 11.6312ZM13.7162 12.6125C13.6908 12.6558 13.6541 12.6914 13.6101 12.7157C13.5661 12.7399 13.5164 12.7517 13.4662 12.75H2.53434C2.48415 12.7517 2.43442 12.7399 2.39042 12.7157C2.34641 12.6914 2.30976 12.6558 2.28434 12.6125C2.26278 12.5774 2.25137 12.5371 2.25137 12.4959C2.25137 12.4548 2.26278 12.4144 2.28434 12.3794L7.74997 2.88749C7.77703 2.84583 7.81408 2.8116 7.85774 2.7879C7.9014 2.7642 7.95029 2.75178 7.99997 2.75178C8.04964 2.75178 8.09854 2.7642 8.1422 2.7879C8.18586 2.8116 8.2229 2.84583 8.24997 2.88749L13.715 12.3794C13.7367 12.4143 13.7483 12.4546 13.7486 12.4958C13.7488 12.5369 13.7376 12.5773 13.7162 12.6125ZM7.24997 8.49999V6.49999C7.24997 6.30108 7.32898 6.11031 7.46964 5.96966C7.61029 5.82901 7.80105 5.74999 7.99997 5.74999C8.19888 5.74999 8.38964 5.82901 8.5303 5.96966C8.67095 6.11031 8.74997 6.30108 8.74997 6.49999V8.49999C8.74997 8.6989 8.67095 8.88967 8.5303 9.03032C8.38964 9.17097 8.19888 9.24999 7.99997 9.24999C7.80105 9.24999 7.61029 9.17097 7.46964 9.03032C7.32898 8.88967 7.24997 8.6989 7.24997 8.49999ZM8.99997 11C8.99997 11.1978 8.94132 11.3911 8.83144 11.5556C8.72155 11.72 8.56538 11.8482 8.38265 11.9239C8.19992 11.9996 7.99886 12.0194 7.80488 11.9808C7.6109 11.9422 7.43271 11.847 7.29286 11.7071C7.15301 11.5672 7.05777 11.3891 7.01918 11.1951C6.9806 11.0011 7.0004 10.8 7.07609 10.6173C7.15177 10.4346 7.27995 10.2784 7.4444 10.1685C7.60885 10.0586 7.80219 9.99999 7.99997 9.99999C8.26518 9.99999 8.51954 10.1053 8.70707 10.2929C8.89461 10.4804 8.99997 10.7348 8.99997 11Z" fill="currentColor"/>
</svg>
`;

  var exclamationTriangleBnHqAHG = /*#__PURE__*/Object.freeze({
    __proto__: null,
    exclamationTriangleSvg: t
  });

  const l = EA`<svg width="60" height="16" viewBox="0 0 60 16" fill="none"">
  <path d="M9.3335 4.66667C9.3335 2.08934 11.4229 0 14.0002 0H20.6669C23.2442 0 25.3335 2.08934 25.3335 4.66667V11.3333C25.3335 13.9106 23.2442 16 20.6669 16H14.0002C11.4229 16 9.3335 13.9106 9.3335 11.3333V4.66667Z" fill="#363636"/>
  <path d="M15.6055 11.0003L17.9448 4.66699H18.6316L16.2923 11.0003H15.6055Z" fill="#F6F6F6"/>
  <path d="M0 4.33333C0 1.9401 1.9401 0 4.33333 0C6.72657 0 8.66669 1.9401 8.66669 4.33333V11.6667C8.66669 14.0599 6.72657 16 4.33333 16C1.9401 16 0 14.0599 0 11.6667V4.33333Z" fill="#363636"/>
  <path d="M3.9165 9.99934V9.16602H4.74983V9.99934H3.9165Z" fill="#F6F6F6"/>
  <path d="M26 8C26 3.58172 29.3517 0 33.4863 0H52.5137C56.6483 0 60 3.58172 60 8C60 12.4183 56.6483 16 52.5137 16H33.4863C29.3517 16 26 12.4183 26 8Z" fill="#363636"/>
  <path d="M49.3687 9.95834V6.26232H50.0213V6.81966C50.256 6.40899 50.7326 6.16699 51.2606 6.16699C52.0599 6.16699 52.6173 6.67299 52.6173 7.65566V9.95834H51.972V7.69234C51.972 7.04696 51.6053 6.70966 51.07 6.70966C50.4906 6.70966 50.0213 7.17168 50.0213 7.82433V9.95834H49.3687Z" fill="#F6F6F6"/>
  <path d="M45.2538 9.95773L44.5718 6.26172H45.1877L45.6717 9.31242L46.3098 7.30306H46.9184L47.5491 9.29041L48.0404 6.26172H48.6564L47.9744 9.95773H47.2411L46.6178 8.03641L45.9871 9.95773H45.2538Z" fill="#F6F6F6"/>
  <path d="M42.3709 10.0536C41.2489 10.0536 40.5889 9.21765 40.5889 8.1103C40.5889 7.01035 41.2489 6.16699 42.3709 6.16699C43.4929 6.16699 44.1529 7.01035 44.1529 8.1103C44.1529 9.21765 43.4929 10.0536 42.3709 10.0536ZM42.3709 9.51096C43.1775 9.51096 43.4856 8.82164 43.4856 8.10296C43.4856 7.39163 43.1775 6.70966 42.3709 6.70966C41.5642 6.70966 41.2562 7.39163 41.2562 8.10296C41.2562 8.82164 41.5642 9.51096 42.3709 9.51096Z" fill="#F6F6F6"/>
  <path d="M38.2805 10.0536C37.1952 10.0536 36.5132 9.22499 36.5132 8.1103C36.5132 7.00302 37.1952 6.16699 38.2805 6.16699C39.1972 6.16699 40.0038 6.68766 39.9159 8.27896H37.1805C37.2319 8.96103 37.5472 9.5183 38.2805 9.5183C38.7718 9.5183 39.0945 9.21765 39.2045 8.87299H39.8499C39.7472 9.48903 39.1679 10.0536 38.2805 10.0536ZM37.1952 7.78765H39.2852C39.2338 7.04696 38.8892 6.70232 38.2805 6.70232C37.6132 6.70232 37.2832 7.18635 37.1952 7.78765Z" fill="#F6F6F6"/>
  <path d="M33.3828 9.95773V6.26172H34.0501V6.88506C34.2848 6.47439 34.6882 6.26172 35.1061 6.26172H35.9935V6.88506H35.0548C34.4682 6.88506 34.0501 7.26638 34.0501 8.00706V9.95773H33.3828Z" fill="#F6F6F6"/>
</svg>`;

  var reownLogoZY_GtD2i = /*#__PURE__*/Object.freeze({
    __proto__: null,
    reownSvg: l
  });

  exports.ArenaAppStoreSdk = DO;

}));
